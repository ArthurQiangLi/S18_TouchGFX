
STM32G071RB_NUCLEO_AZ2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00013798  080000bc  080000bc  000010bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002964  08013854  08013854  00014854  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000001e  080161b8  080161b8  000171b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 TextFlashSection 0000000e  080161d8  080161d8  000171d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000002  080161e6  080161e6  000171e6  2**0
                  ALLOC
  6 .ARM          00000000  080161e8  080161e8  0009f1cc  2**0
                  CONTENTS
  7 .preinit_array 00000000  080161e8  080161e8  0009f1cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  080161e8  080161e8  000171e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000004  08016204  08016204  00017204  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000080  20000000  08016208  00018000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00003868  20000080  08016288  00018080  2**2
                  ALLOC
 12 ._user_heap_stack 00000a00  200038e8  08016288  000188e8  2**0
                  ALLOC
 13 .ARM.attributes 0000002c  00000000  00000000  0009f1cc  2**0
                  CONTENTS, READONLY
 14 ExtFlashSection 00085864  90000000  90000000  00019000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 FontFlashSection 00000968  90085864  90085864  0009e864  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_info   000b5d72  00000000  00000000  0009f1f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 00015071  00000000  00000000  00154f6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_loclists 00012166  00000000  00000000  00169fdb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002838  00000000  00000000  0017c148  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00003049  00000000  00000000  0017e980  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00022470  00000000  00000000  001819c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   000411c2  00000000  00000000  001a3e39  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    000c12c9  00000000  00000000  001e4ffb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  002a62c4  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00006b6c  00000000  00000000  002a6388  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_line_str 00000098  00000000  00000000  002acef4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	@ (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	@ (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	@ (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000080 	.word	0x20000080
 80000dc:	00000000 	.word	0x00000000
 80000e0:	0801383c 	.word	0x0801383c

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	@ (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	@ (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	@ (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			@ (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000084 	.word	0x20000084
 8000100:	0801383c 	.word	0x0801383c

08000104 <strlen>:
 8000104:	2300      	movs	r3, #0
 8000106:	5cc2      	ldrb	r2, [r0, r3]
 8000108:	3301      	adds	r3, #1
 800010a:	2a00      	cmp	r2, #0
 800010c:	d1fb      	bne.n	8000106 <strlen+0x2>
 800010e:	1e58      	subs	r0, r3, #1
 8000110:	4770      	bx	lr
	...

08000114 <__gnu_thumb1_case_sqi>:
 8000114:	b402      	push	{r1}
 8000116:	4671      	mov	r1, lr
 8000118:	0849      	lsrs	r1, r1, #1
 800011a:	0049      	lsls	r1, r1, #1
 800011c:	5609      	ldrsb	r1, [r1, r0]
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	448e      	add	lr, r1
 8000122:	bc02      	pop	{r1}
 8000124:	4770      	bx	lr
 8000126:	46c0      	nop			@ (mov r8, r8)

08000128 <__gnu_thumb1_case_uqi>:
 8000128:	b402      	push	{r1}
 800012a:	4671      	mov	r1, lr
 800012c:	0849      	lsrs	r1, r1, #1
 800012e:	0049      	lsls	r1, r1, #1
 8000130:	5c09      	ldrb	r1, [r1, r0]
 8000132:	0049      	lsls	r1, r1, #1
 8000134:	448e      	add	lr, r1
 8000136:	bc02      	pop	{r1}
 8000138:	4770      	bx	lr
 800013a:	46c0      	nop			@ (mov r8, r8)

0800013c <__gnu_thumb1_case_shi>:
 800013c:	b403      	push	{r0, r1}
 800013e:	4671      	mov	r1, lr
 8000140:	0849      	lsrs	r1, r1, #1
 8000142:	0040      	lsls	r0, r0, #1
 8000144:	0049      	lsls	r1, r1, #1
 8000146:	5e09      	ldrsh	r1, [r1, r0]
 8000148:	0049      	lsls	r1, r1, #1
 800014a:	448e      	add	lr, r1
 800014c:	bc03      	pop	{r0, r1}
 800014e:	4770      	bx	lr

08000150 <__gnu_thumb1_case_uhi>:
 8000150:	b403      	push	{r0, r1}
 8000152:	4671      	mov	r1, lr
 8000154:	0849      	lsrs	r1, r1, #1
 8000156:	0040      	lsls	r0, r0, #1
 8000158:	0049      	lsls	r1, r1, #1
 800015a:	5a09      	ldrh	r1, [r1, r0]
 800015c:	0049      	lsls	r1, r1, #1
 800015e:	448e      	add	lr, r1
 8000160:	bc03      	pop	{r0, r1}
 8000162:	4770      	bx	lr

08000164 <__udivsi3>:
 8000164:	2200      	movs	r2, #0
 8000166:	0843      	lsrs	r3, r0, #1
 8000168:	428b      	cmp	r3, r1
 800016a:	d374      	bcc.n	8000256 <__udivsi3+0xf2>
 800016c:	0903      	lsrs	r3, r0, #4
 800016e:	428b      	cmp	r3, r1
 8000170:	d35f      	bcc.n	8000232 <__udivsi3+0xce>
 8000172:	0a03      	lsrs	r3, r0, #8
 8000174:	428b      	cmp	r3, r1
 8000176:	d344      	bcc.n	8000202 <__udivsi3+0x9e>
 8000178:	0b03      	lsrs	r3, r0, #12
 800017a:	428b      	cmp	r3, r1
 800017c:	d328      	bcc.n	80001d0 <__udivsi3+0x6c>
 800017e:	0c03      	lsrs	r3, r0, #16
 8000180:	428b      	cmp	r3, r1
 8000182:	d30d      	bcc.n	80001a0 <__udivsi3+0x3c>
 8000184:	22ff      	movs	r2, #255	@ 0xff
 8000186:	0209      	lsls	r1, r1, #8
 8000188:	ba12      	rev	r2, r2
 800018a:	0c03      	lsrs	r3, r0, #16
 800018c:	428b      	cmp	r3, r1
 800018e:	d302      	bcc.n	8000196 <__udivsi3+0x32>
 8000190:	1212      	asrs	r2, r2, #8
 8000192:	0209      	lsls	r1, r1, #8
 8000194:	d065      	beq.n	8000262 <__udivsi3+0xfe>
 8000196:	0b03      	lsrs	r3, r0, #12
 8000198:	428b      	cmp	r3, r1
 800019a:	d319      	bcc.n	80001d0 <__udivsi3+0x6c>
 800019c:	e000      	b.n	80001a0 <__udivsi3+0x3c>
 800019e:	0a09      	lsrs	r1, r1, #8
 80001a0:	0bc3      	lsrs	r3, r0, #15
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x46>
 80001a6:	03cb      	lsls	r3, r1, #15
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0b83      	lsrs	r3, r0, #14
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x52>
 80001b2:	038b      	lsls	r3, r1, #14
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0b43      	lsrs	r3, r0, #13
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x5e>
 80001be:	034b      	lsls	r3, r1, #13
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0b03      	lsrs	r3, r0, #12
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x6a>
 80001ca:	030b      	lsls	r3, r1, #12
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0ac3      	lsrs	r3, r0, #11
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x76>
 80001d6:	02cb      	lsls	r3, r1, #11
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	0a83      	lsrs	r3, r0, #10
 80001de:	428b      	cmp	r3, r1
 80001e0:	d301      	bcc.n	80001e6 <__udivsi3+0x82>
 80001e2:	028b      	lsls	r3, r1, #10
 80001e4:	1ac0      	subs	r0, r0, r3
 80001e6:	4152      	adcs	r2, r2
 80001e8:	0a43      	lsrs	r3, r0, #9
 80001ea:	428b      	cmp	r3, r1
 80001ec:	d301      	bcc.n	80001f2 <__udivsi3+0x8e>
 80001ee:	024b      	lsls	r3, r1, #9
 80001f0:	1ac0      	subs	r0, r0, r3
 80001f2:	4152      	adcs	r2, r2
 80001f4:	0a03      	lsrs	r3, r0, #8
 80001f6:	428b      	cmp	r3, r1
 80001f8:	d301      	bcc.n	80001fe <__udivsi3+0x9a>
 80001fa:	020b      	lsls	r3, r1, #8
 80001fc:	1ac0      	subs	r0, r0, r3
 80001fe:	4152      	adcs	r2, r2
 8000200:	d2cd      	bcs.n	800019e <__udivsi3+0x3a>
 8000202:	09c3      	lsrs	r3, r0, #7
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xa8>
 8000208:	01cb      	lsls	r3, r1, #7
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	0983      	lsrs	r3, r0, #6
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xb4>
 8000214:	018b      	lsls	r3, r1, #6
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0943      	lsrs	r3, r0, #5
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xc0>
 8000220:	014b      	lsls	r3, r1, #5
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0903      	lsrs	r3, r0, #4
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xcc>
 800022c:	010b      	lsls	r3, r1, #4
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	08c3      	lsrs	r3, r0, #3
 8000234:	428b      	cmp	r3, r1
 8000236:	d301      	bcc.n	800023c <__udivsi3+0xd8>
 8000238:	00cb      	lsls	r3, r1, #3
 800023a:	1ac0      	subs	r0, r0, r3
 800023c:	4152      	adcs	r2, r2
 800023e:	0883      	lsrs	r3, r0, #2
 8000240:	428b      	cmp	r3, r1
 8000242:	d301      	bcc.n	8000248 <__udivsi3+0xe4>
 8000244:	008b      	lsls	r3, r1, #2
 8000246:	1ac0      	subs	r0, r0, r3
 8000248:	4152      	adcs	r2, r2
 800024a:	0843      	lsrs	r3, r0, #1
 800024c:	428b      	cmp	r3, r1
 800024e:	d301      	bcc.n	8000254 <__udivsi3+0xf0>
 8000250:	004b      	lsls	r3, r1, #1
 8000252:	1ac0      	subs	r0, r0, r3
 8000254:	4152      	adcs	r2, r2
 8000256:	1a41      	subs	r1, r0, r1
 8000258:	d200      	bcs.n	800025c <__udivsi3+0xf8>
 800025a:	4601      	mov	r1, r0
 800025c:	4152      	adcs	r2, r2
 800025e:	4610      	mov	r0, r2
 8000260:	4770      	bx	lr
 8000262:	e7ff      	b.n	8000264 <__udivsi3+0x100>
 8000264:	b501      	push	{r0, lr}
 8000266:	2000      	movs	r0, #0
 8000268:	f000 f8f0 	bl	800044c <__aeabi_idiv0>
 800026c:	bd02      	pop	{r1, pc}
 800026e:	46c0      	nop			@ (mov r8, r8)

08000270 <__aeabi_uidivmod>:
 8000270:	2900      	cmp	r1, #0
 8000272:	d0f7      	beq.n	8000264 <__udivsi3+0x100>
 8000274:	e776      	b.n	8000164 <__udivsi3>
 8000276:	4770      	bx	lr

08000278 <__divsi3>:
 8000278:	4603      	mov	r3, r0
 800027a:	430b      	orrs	r3, r1
 800027c:	d47f      	bmi.n	800037e <__divsi3+0x106>
 800027e:	2200      	movs	r2, #0
 8000280:	0843      	lsrs	r3, r0, #1
 8000282:	428b      	cmp	r3, r1
 8000284:	d374      	bcc.n	8000370 <__divsi3+0xf8>
 8000286:	0903      	lsrs	r3, r0, #4
 8000288:	428b      	cmp	r3, r1
 800028a:	d35f      	bcc.n	800034c <__divsi3+0xd4>
 800028c:	0a03      	lsrs	r3, r0, #8
 800028e:	428b      	cmp	r3, r1
 8000290:	d344      	bcc.n	800031c <__divsi3+0xa4>
 8000292:	0b03      	lsrs	r3, r0, #12
 8000294:	428b      	cmp	r3, r1
 8000296:	d328      	bcc.n	80002ea <__divsi3+0x72>
 8000298:	0c03      	lsrs	r3, r0, #16
 800029a:	428b      	cmp	r3, r1
 800029c:	d30d      	bcc.n	80002ba <__divsi3+0x42>
 800029e:	22ff      	movs	r2, #255	@ 0xff
 80002a0:	0209      	lsls	r1, r1, #8
 80002a2:	ba12      	rev	r2, r2
 80002a4:	0c03      	lsrs	r3, r0, #16
 80002a6:	428b      	cmp	r3, r1
 80002a8:	d302      	bcc.n	80002b0 <__divsi3+0x38>
 80002aa:	1212      	asrs	r2, r2, #8
 80002ac:	0209      	lsls	r1, r1, #8
 80002ae:	d065      	beq.n	800037c <__divsi3+0x104>
 80002b0:	0b03      	lsrs	r3, r0, #12
 80002b2:	428b      	cmp	r3, r1
 80002b4:	d319      	bcc.n	80002ea <__divsi3+0x72>
 80002b6:	e000      	b.n	80002ba <__divsi3+0x42>
 80002b8:	0a09      	lsrs	r1, r1, #8
 80002ba:	0bc3      	lsrs	r3, r0, #15
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x4c>
 80002c0:	03cb      	lsls	r3, r1, #15
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0b83      	lsrs	r3, r0, #14
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x58>
 80002cc:	038b      	lsls	r3, r1, #14
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0b43      	lsrs	r3, r0, #13
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x64>
 80002d8:	034b      	lsls	r3, r1, #13
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0b03      	lsrs	r3, r0, #12
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x70>
 80002e4:	030b      	lsls	r3, r1, #12
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0ac3      	lsrs	r3, r0, #11
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0x7c>
 80002f0:	02cb      	lsls	r3, r1, #11
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	0a83      	lsrs	r3, r0, #10
 80002f8:	428b      	cmp	r3, r1
 80002fa:	d301      	bcc.n	8000300 <__divsi3+0x88>
 80002fc:	028b      	lsls	r3, r1, #10
 80002fe:	1ac0      	subs	r0, r0, r3
 8000300:	4152      	adcs	r2, r2
 8000302:	0a43      	lsrs	r3, r0, #9
 8000304:	428b      	cmp	r3, r1
 8000306:	d301      	bcc.n	800030c <__divsi3+0x94>
 8000308:	024b      	lsls	r3, r1, #9
 800030a:	1ac0      	subs	r0, r0, r3
 800030c:	4152      	adcs	r2, r2
 800030e:	0a03      	lsrs	r3, r0, #8
 8000310:	428b      	cmp	r3, r1
 8000312:	d301      	bcc.n	8000318 <__divsi3+0xa0>
 8000314:	020b      	lsls	r3, r1, #8
 8000316:	1ac0      	subs	r0, r0, r3
 8000318:	4152      	adcs	r2, r2
 800031a:	d2cd      	bcs.n	80002b8 <__divsi3+0x40>
 800031c:	09c3      	lsrs	r3, r0, #7
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xae>
 8000322:	01cb      	lsls	r3, r1, #7
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	0983      	lsrs	r3, r0, #6
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xba>
 800032e:	018b      	lsls	r3, r1, #6
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0943      	lsrs	r3, r0, #5
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xc6>
 800033a:	014b      	lsls	r3, r1, #5
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0903      	lsrs	r3, r0, #4
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xd2>
 8000346:	010b      	lsls	r3, r1, #4
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	08c3      	lsrs	r3, r0, #3
 800034e:	428b      	cmp	r3, r1
 8000350:	d301      	bcc.n	8000356 <__divsi3+0xde>
 8000352:	00cb      	lsls	r3, r1, #3
 8000354:	1ac0      	subs	r0, r0, r3
 8000356:	4152      	adcs	r2, r2
 8000358:	0883      	lsrs	r3, r0, #2
 800035a:	428b      	cmp	r3, r1
 800035c:	d301      	bcc.n	8000362 <__divsi3+0xea>
 800035e:	008b      	lsls	r3, r1, #2
 8000360:	1ac0      	subs	r0, r0, r3
 8000362:	4152      	adcs	r2, r2
 8000364:	0843      	lsrs	r3, r0, #1
 8000366:	428b      	cmp	r3, r1
 8000368:	d301      	bcc.n	800036e <__divsi3+0xf6>
 800036a:	004b      	lsls	r3, r1, #1
 800036c:	1ac0      	subs	r0, r0, r3
 800036e:	4152      	adcs	r2, r2
 8000370:	1a41      	subs	r1, r0, r1
 8000372:	d200      	bcs.n	8000376 <__divsi3+0xfe>
 8000374:	4601      	mov	r1, r0
 8000376:	4152      	adcs	r2, r2
 8000378:	4610      	mov	r0, r2
 800037a:	4770      	bx	lr
 800037c:	e05d      	b.n	800043a <__divsi3+0x1c2>
 800037e:	0fca      	lsrs	r2, r1, #31
 8000380:	d000      	beq.n	8000384 <__divsi3+0x10c>
 8000382:	4249      	negs	r1, r1
 8000384:	1003      	asrs	r3, r0, #32
 8000386:	d300      	bcc.n	800038a <__divsi3+0x112>
 8000388:	4240      	negs	r0, r0
 800038a:	4053      	eors	r3, r2
 800038c:	2200      	movs	r2, #0
 800038e:	469c      	mov	ip, r3
 8000390:	0903      	lsrs	r3, r0, #4
 8000392:	428b      	cmp	r3, r1
 8000394:	d32d      	bcc.n	80003f2 <__divsi3+0x17a>
 8000396:	0a03      	lsrs	r3, r0, #8
 8000398:	428b      	cmp	r3, r1
 800039a:	d312      	bcc.n	80003c2 <__divsi3+0x14a>
 800039c:	22fc      	movs	r2, #252	@ 0xfc
 800039e:	0189      	lsls	r1, r1, #6
 80003a0:	ba12      	rev	r2, r2
 80003a2:	0a03      	lsrs	r3, r0, #8
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d30c      	bcc.n	80003c2 <__divsi3+0x14a>
 80003a8:	0189      	lsls	r1, r1, #6
 80003aa:	1192      	asrs	r2, r2, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d308      	bcc.n	80003c2 <__divsi3+0x14a>
 80003b0:	0189      	lsls	r1, r1, #6
 80003b2:	1192      	asrs	r2, r2, #6
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d304      	bcc.n	80003c2 <__divsi3+0x14a>
 80003b8:	0189      	lsls	r1, r1, #6
 80003ba:	d03a      	beq.n	8000432 <__divsi3+0x1ba>
 80003bc:	1192      	asrs	r2, r2, #6
 80003be:	e000      	b.n	80003c2 <__divsi3+0x14a>
 80003c0:	0989      	lsrs	r1, r1, #6
 80003c2:	09c3      	lsrs	r3, r0, #7
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x154>
 80003c8:	01cb      	lsls	r3, r1, #7
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	0983      	lsrs	r3, r0, #6
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x160>
 80003d4:	018b      	lsls	r3, r1, #6
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0943      	lsrs	r3, r0, #5
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x16c>
 80003e0:	014b      	lsls	r3, r1, #5
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	0903      	lsrs	r3, r0, #4
 80003e8:	428b      	cmp	r3, r1
 80003ea:	d301      	bcc.n	80003f0 <__divsi3+0x178>
 80003ec:	010b      	lsls	r3, r1, #4
 80003ee:	1ac0      	subs	r0, r0, r3
 80003f0:	4152      	adcs	r2, r2
 80003f2:	08c3      	lsrs	r3, r0, #3
 80003f4:	428b      	cmp	r3, r1
 80003f6:	d301      	bcc.n	80003fc <__divsi3+0x184>
 80003f8:	00cb      	lsls	r3, r1, #3
 80003fa:	1ac0      	subs	r0, r0, r3
 80003fc:	4152      	adcs	r2, r2
 80003fe:	0883      	lsrs	r3, r0, #2
 8000400:	428b      	cmp	r3, r1
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x190>
 8000404:	008b      	lsls	r3, r1, #2
 8000406:	1ac0      	subs	r0, r0, r3
 8000408:	4152      	adcs	r2, r2
 800040a:	d2d9      	bcs.n	80003c0 <__divsi3+0x148>
 800040c:	0843      	lsrs	r3, r0, #1
 800040e:	428b      	cmp	r3, r1
 8000410:	d301      	bcc.n	8000416 <__divsi3+0x19e>
 8000412:	004b      	lsls	r3, r1, #1
 8000414:	1ac0      	subs	r0, r0, r3
 8000416:	4152      	adcs	r2, r2
 8000418:	1a41      	subs	r1, r0, r1
 800041a:	d200      	bcs.n	800041e <__divsi3+0x1a6>
 800041c:	4601      	mov	r1, r0
 800041e:	4663      	mov	r3, ip
 8000420:	4152      	adcs	r2, r2
 8000422:	105b      	asrs	r3, r3, #1
 8000424:	4610      	mov	r0, r2
 8000426:	d301      	bcc.n	800042c <__divsi3+0x1b4>
 8000428:	4240      	negs	r0, r0
 800042a:	2b00      	cmp	r3, #0
 800042c:	d500      	bpl.n	8000430 <__divsi3+0x1b8>
 800042e:	4249      	negs	r1, r1
 8000430:	4770      	bx	lr
 8000432:	4663      	mov	r3, ip
 8000434:	105b      	asrs	r3, r3, #1
 8000436:	d300      	bcc.n	800043a <__divsi3+0x1c2>
 8000438:	4240      	negs	r0, r0
 800043a:	b501      	push	{r0, lr}
 800043c:	2000      	movs	r0, #0
 800043e:	f000 f805 	bl	800044c <__aeabi_idiv0>
 8000442:	bd02      	pop	{r1, pc}

08000444 <__aeabi_idivmod>:
 8000444:	2900      	cmp	r1, #0
 8000446:	d0f8      	beq.n	800043a <__divsi3+0x1c2>
 8000448:	e716      	b.n	8000278 <__divsi3>
 800044a:	4770      	bx	lr

0800044c <__aeabi_idiv0>:
 800044c:	4770      	bx	lr
 800044e:	46c0      	nop			@ (mov r8, r8)

08000450 <__aeabi_cfrcmple>:
 8000450:	4684      	mov	ip, r0
 8000452:	0008      	movs	r0, r1
 8000454:	4661      	mov	r1, ip
 8000456:	e7ff      	b.n	8000458 <__aeabi_cfcmpeq>

08000458 <__aeabi_cfcmpeq>:
 8000458:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800045a:	f000 fb55 	bl	8000b08 <__lesf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	d401      	bmi.n	8000466 <__aeabi_cfcmpeq+0xe>
 8000462:	2100      	movs	r1, #0
 8000464:	42c8      	cmn	r0, r1
 8000466:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000468 <__aeabi_fcmpeq>:
 8000468:	b510      	push	{r4, lr}
 800046a:	f000 fad5 	bl	8000a18 <__eqsf2>
 800046e:	4240      	negs	r0, r0
 8000470:	3001      	adds	r0, #1
 8000472:	bd10      	pop	{r4, pc}

08000474 <__aeabi_fcmplt>:
 8000474:	b510      	push	{r4, lr}
 8000476:	f000 fb47 	bl	8000b08 <__lesf2>
 800047a:	2800      	cmp	r0, #0
 800047c:	db01      	blt.n	8000482 <__aeabi_fcmplt+0xe>
 800047e:	2000      	movs	r0, #0
 8000480:	bd10      	pop	{r4, pc}
 8000482:	2001      	movs	r0, #1
 8000484:	bd10      	pop	{r4, pc}
 8000486:	46c0      	nop			@ (mov r8, r8)

08000488 <__aeabi_fcmple>:
 8000488:	b510      	push	{r4, lr}
 800048a:	f000 fb3d 	bl	8000b08 <__lesf2>
 800048e:	2800      	cmp	r0, #0
 8000490:	dd01      	ble.n	8000496 <__aeabi_fcmple+0xe>
 8000492:	2000      	movs	r0, #0
 8000494:	bd10      	pop	{r4, pc}
 8000496:	2001      	movs	r0, #1
 8000498:	bd10      	pop	{r4, pc}
 800049a:	46c0      	nop			@ (mov r8, r8)

0800049c <__aeabi_fcmpgt>:
 800049c:	b510      	push	{r4, lr}
 800049e:	f000 fae3 	bl	8000a68 <__gesf2>
 80004a2:	2800      	cmp	r0, #0
 80004a4:	dc01      	bgt.n	80004aa <__aeabi_fcmpgt+0xe>
 80004a6:	2000      	movs	r0, #0
 80004a8:	bd10      	pop	{r4, pc}
 80004aa:	2001      	movs	r0, #1
 80004ac:	bd10      	pop	{r4, pc}
 80004ae:	46c0      	nop			@ (mov r8, r8)

080004b0 <__aeabi_fcmpge>:
 80004b0:	b510      	push	{r4, lr}
 80004b2:	f000 fad9 	bl	8000a68 <__gesf2>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	da01      	bge.n	80004be <__aeabi_fcmpge+0xe>
 80004ba:	2000      	movs	r0, #0
 80004bc:	bd10      	pop	{r4, pc}
 80004be:	2001      	movs	r0, #1
 80004c0:	bd10      	pop	{r4, pc}
 80004c2:	46c0      	nop			@ (mov r8, r8)

080004c4 <__aeabi_fadd>:
 80004c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004c6:	46ce      	mov	lr, r9
 80004c8:	4647      	mov	r7, r8
 80004ca:	0243      	lsls	r3, r0, #9
 80004cc:	0a5a      	lsrs	r2, r3, #9
 80004ce:	024e      	lsls	r6, r1, #9
 80004d0:	0045      	lsls	r5, r0, #1
 80004d2:	0fc4      	lsrs	r4, r0, #31
 80004d4:	0048      	lsls	r0, r1, #1
 80004d6:	4691      	mov	r9, r2
 80004d8:	0e2d      	lsrs	r5, r5, #24
 80004da:	0a72      	lsrs	r2, r6, #9
 80004dc:	0e00      	lsrs	r0, r0, #24
 80004de:	4694      	mov	ip, r2
 80004e0:	b580      	push	{r7, lr}
 80004e2:	099b      	lsrs	r3, r3, #6
 80004e4:	0fc9      	lsrs	r1, r1, #31
 80004e6:	09b6      	lsrs	r6, r6, #6
 80004e8:	1a2a      	subs	r2, r5, r0
 80004ea:	428c      	cmp	r4, r1
 80004ec:	d021      	beq.n	8000532 <__aeabi_fadd+0x6e>
 80004ee:	2a00      	cmp	r2, #0
 80004f0:	dd0d      	ble.n	800050e <__aeabi_fadd+0x4a>
 80004f2:	2800      	cmp	r0, #0
 80004f4:	d12d      	bne.n	8000552 <__aeabi_fadd+0x8e>
 80004f6:	2e00      	cmp	r6, #0
 80004f8:	d100      	bne.n	80004fc <__aeabi_fadd+0x38>
 80004fa:	e08d      	b.n	8000618 <__aeabi_fadd+0x154>
 80004fc:	1e51      	subs	r1, r2, #1
 80004fe:	2a01      	cmp	r2, #1
 8000500:	d100      	bne.n	8000504 <__aeabi_fadd+0x40>
 8000502:	e11d      	b.n	8000740 <__aeabi_fadd+0x27c>
 8000504:	2aff      	cmp	r2, #255	@ 0xff
 8000506:	d100      	bne.n	800050a <__aeabi_fadd+0x46>
 8000508:	e0ab      	b.n	8000662 <__aeabi_fadd+0x19e>
 800050a:	000a      	movs	r2, r1
 800050c:	e027      	b.n	800055e <__aeabi_fadd+0x9a>
 800050e:	2a00      	cmp	r2, #0
 8000510:	d04d      	beq.n	80005ae <__aeabi_fadd+0xea>
 8000512:	1b42      	subs	r2, r0, r5
 8000514:	2d00      	cmp	r5, #0
 8000516:	d000      	beq.n	800051a <__aeabi_fadd+0x56>
 8000518:	e0cc      	b.n	80006b4 <__aeabi_fadd+0x1f0>
 800051a:	2b00      	cmp	r3, #0
 800051c:	d100      	bne.n	8000520 <__aeabi_fadd+0x5c>
 800051e:	e079      	b.n	8000614 <__aeabi_fadd+0x150>
 8000520:	1e54      	subs	r4, r2, #1
 8000522:	2a01      	cmp	r2, #1
 8000524:	d100      	bne.n	8000528 <__aeabi_fadd+0x64>
 8000526:	e128      	b.n	800077a <__aeabi_fadd+0x2b6>
 8000528:	2aff      	cmp	r2, #255	@ 0xff
 800052a:	d100      	bne.n	800052e <__aeabi_fadd+0x6a>
 800052c:	e097      	b.n	800065e <__aeabi_fadd+0x19a>
 800052e:	0022      	movs	r2, r4
 8000530:	e0c5      	b.n	80006be <__aeabi_fadd+0x1fa>
 8000532:	2a00      	cmp	r2, #0
 8000534:	dc00      	bgt.n	8000538 <__aeabi_fadd+0x74>
 8000536:	e096      	b.n	8000666 <__aeabi_fadd+0x1a2>
 8000538:	2800      	cmp	r0, #0
 800053a:	d04f      	beq.n	80005dc <__aeabi_fadd+0x118>
 800053c:	2dff      	cmp	r5, #255	@ 0xff
 800053e:	d100      	bne.n	8000542 <__aeabi_fadd+0x7e>
 8000540:	e08f      	b.n	8000662 <__aeabi_fadd+0x19e>
 8000542:	2180      	movs	r1, #128	@ 0x80
 8000544:	04c9      	lsls	r1, r1, #19
 8000546:	430e      	orrs	r6, r1
 8000548:	2a1b      	cmp	r2, #27
 800054a:	dd51      	ble.n	80005f0 <__aeabi_fadd+0x12c>
 800054c:	002a      	movs	r2, r5
 800054e:	3301      	adds	r3, #1
 8000550:	e018      	b.n	8000584 <__aeabi_fadd+0xc0>
 8000552:	2dff      	cmp	r5, #255	@ 0xff
 8000554:	d100      	bne.n	8000558 <__aeabi_fadd+0x94>
 8000556:	e084      	b.n	8000662 <__aeabi_fadd+0x19e>
 8000558:	2180      	movs	r1, #128	@ 0x80
 800055a:	04c9      	lsls	r1, r1, #19
 800055c:	430e      	orrs	r6, r1
 800055e:	2101      	movs	r1, #1
 8000560:	2a1b      	cmp	r2, #27
 8000562:	dc08      	bgt.n	8000576 <__aeabi_fadd+0xb2>
 8000564:	0031      	movs	r1, r6
 8000566:	2020      	movs	r0, #32
 8000568:	40d1      	lsrs	r1, r2
 800056a:	1a82      	subs	r2, r0, r2
 800056c:	4096      	lsls	r6, r2
 800056e:	0032      	movs	r2, r6
 8000570:	1e50      	subs	r0, r2, #1
 8000572:	4182      	sbcs	r2, r0
 8000574:	4311      	orrs	r1, r2
 8000576:	1a5b      	subs	r3, r3, r1
 8000578:	015a      	lsls	r2, r3, #5
 800057a:	d459      	bmi.n	8000630 <__aeabi_fadd+0x16c>
 800057c:	2107      	movs	r1, #7
 800057e:	002a      	movs	r2, r5
 8000580:	4019      	ands	r1, r3
 8000582:	d049      	beq.n	8000618 <__aeabi_fadd+0x154>
 8000584:	210f      	movs	r1, #15
 8000586:	4019      	ands	r1, r3
 8000588:	2904      	cmp	r1, #4
 800058a:	d000      	beq.n	800058e <__aeabi_fadd+0xca>
 800058c:	3304      	adds	r3, #4
 800058e:	0159      	lsls	r1, r3, #5
 8000590:	d542      	bpl.n	8000618 <__aeabi_fadd+0x154>
 8000592:	1c50      	adds	r0, r2, #1
 8000594:	2afe      	cmp	r2, #254	@ 0xfe
 8000596:	d03a      	beq.n	800060e <__aeabi_fadd+0x14a>
 8000598:	019b      	lsls	r3, r3, #6
 800059a:	b2c0      	uxtb	r0, r0
 800059c:	0a5b      	lsrs	r3, r3, #9
 800059e:	05c0      	lsls	r0, r0, #23
 80005a0:	4318      	orrs	r0, r3
 80005a2:	07e4      	lsls	r4, r4, #31
 80005a4:	4320      	orrs	r0, r4
 80005a6:	bcc0      	pop	{r6, r7}
 80005a8:	46b9      	mov	r9, r7
 80005aa:	46b0      	mov	r8, r6
 80005ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005ae:	20fe      	movs	r0, #254	@ 0xfe
 80005b0:	4680      	mov	r8, r0
 80005b2:	1c6f      	adds	r7, r5, #1
 80005b4:	0038      	movs	r0, r7
 80005b6:	4647      	mov	r7, r8
 80005b8:	4207      	tst	r7, r0
 80005ba:	d000      	beq.n	80005be <__aeabi_fadd+0xfa>
 80005bc:	e08e      	b.n	80006dc <__aeabi_fadd+0x218>
 80005be:	2d00      	cmp	r5, #0
 80005c0:	d000      	beq.n	80005c4 <__aeabi_fadd+0x100>
 80005c2:	e0b4      	b.n	800072e <__aeabi_fadd+0x26a>
 80005c4:	2b00      	cmp	r3, #0
 80005c6:	d100      	bne.n	80005ca <__aeabi_fadd+0x106>
 80005c8:	e0db      	b.n	8000782 <__aeabi_fadd+0x2be>
 80005ca:	2e00      	cmp	r6, #0
 80005cc:	d06c      	beq.n	80006a8 <__aeabi_fadd+0x1e4>
 80005ce:	1b98      	subs	r0, r3, r6
 80005d0:	0145      	lsls	r5, r0, #5
 80005d2:	d400      	bmi.n	80005d6 <__aeabi_fadd+0x112>
 80005d4:	e0f7      	b.n	80007c6 <__aeabi_fadd+0x302>
 80005d6:	000c      	movs	r4, r1
 80005d8:	1af3      	subs	r3, r6, r3
 80005da:	e03d      	b.n	8000658 <__aeabi_fadd+0x194>
 80005dc:	2e00      	cmp	r6, #0
 80005de:	d01b      	beq.n	8000618 <__aeabi_fadd+0x154>
 80005e0:	1e51      	subs	r1, r2, #1
 80005e2:	2a01      	cmp	r2, #1
 80005e4:	d100      	bne.n	80005e8 <__aeabi_fadd+0x124>
 80005e6:	e082      	b.n	80006ee <__aeabi_fadd+0x22a>
 80005e8:	2aff      	cmp	r2, #255	@ 0xff
 80005ea:	d03a      	beq.n	8000662 <__aeabi_fadd+0x19e>
 80005ec:	000a      	movs	r2, r1
 80005ee:	e7ab      	b.n	8000548 <__aeabi_fadd+0x84>
 80005f0:	0031      	movs	r1, r6
 80005f2:	2020      	movs	r0, #32
 80005f4:	40d1      	lsrs	r1, r2
 80005f6:	1a82      	subs	r2, r0, r2
 80005f8:	4096      	lsls	r6, r2
 80005fa:	0032      	movs	r2, r6
 80005fc:	1e50      	subs	r0, r2, #1
 80005fe:	4182      	sbcs	r2, r0
 8000600:	430a      	orrs	r2, r1
 8000602:	189b      	adds	r3, r3, r2
 8000604:	015a      	lsls	r2, r3, #5
 8000606:	d5b9      	bpl.n	800057c <__aeabi_fadd+0xb8>
 8000608:	1c6a      	adds	r2, r5, #1
 800060a:	2dfe      	cmp	r5, #254	@ 0xfe
 800060c:	d175      	bne.n	80006fa <__aeabi_fadd+0x236>
 800060e:	20ff      	movs	r0, #255	@ 0xff
 8000610:	2300      	movs	r3, #0
 8000612:	e7c4      	b.n	800059e <__aeabi_fadd+0xda>
 8000614:	000c      	movs	r4, r1
 8000616:	0033      	movs	r3, r6
 8000618:	08db      	lsrs	r3, r3, #3
 800061a:	2aff      	cmp	r2, #255	@ 0xff
 800061c:	d146      	bne.n	80006ac <__aeabi_fadd+0x1e8>
 800061e:	2b00      	cmp	r3, #0
 8000620:	d0f5      	beq.n	800060e <__aeabi_fadd+0x14a>
 8000622:	2280      	movs	r2, #128	@ 0x80
 8000624:	03d2      	lsls	r2, r2, #15
 8000626:	4313      	orrs	r3, r2
 8000628:	025b      	lsls	r3, r3, #9
 800062a:	20ff      	movs	r0, #255	@ 0xff
 800062c:	0a5b      	lsrs	r3, r3, #9
 800062e:	e7b6      	b.n	800059e <__aeabi_fadd+0xda>
 8000630:	019f      	lsls	r7, r3, #6
 8000632:	09bf      	lsrs	r7, r7, #6
 8000634:	0038      	movs	r0, r7
 8000636:	f000 fe45 	bl	80012c4 <__clzsi2>
 800063a:	3805      	subs	r0, #5
 800063c:	4087      	lsls	r7, r0
 800063e:	4285      	cmp	r5, r0
 8000640:	dc24      	bgt.n	800068c <__aeabi_fadd+0x1c8>
 8000642:	003b      	movs	r3, r7
 8000644:	2120      	movs	r1, #32
 8000646:	1b42      	subs	r2, r0, r5
 8000648:	3201      	adds	r2, #1
 800064a:	40d3      	lsrs	r3, r2
 800064c:	1a8a      	subs	r2, r1, r2
 800064e:	4097      	lsls	r7, r2
 8000650:	1e7a      	subs	r2, r7, #1
 8000652:	4197      	sbcs	r7, r2
 8000654:	2200      	movs	r2, #0
 8000656:	433b      	orrs	r3, r7
 8000658:	0759      	lsls	r1, r3, #29
 800065a:	d193      	bne.n	8000584 <__aeabi_fadd+0xc0>
 800065c:	e797      	b.n	800058e <__aeabi_fadd+0xca>
 800065e:	000c      	movs	r4, r1
 8000660:	0033      	movs	r3, r6
 8000662:	08db      	lsrs	r3, r3, #3
 8000664:	e7db      	b.n	800061e <__aeabi_fadd+0x15a>
 8000666:	2a00      	cmp	r2, #0
 8000668:	d014      	beq.n	8000694 <__aeabi_fadd+0x1d0>
 800066a:	1b42      	subs	r2, r0, r5
 800066c:	2d00      	cmp	r5, #0
 800066e:	d14b      	bne.n	8000708 <__aeabi_fadd+0x244>
 8000670:	2b00      	cmp	r3, #0
 8000672:	d0d0      	beq.n	8000616 <__aeabi_fadd+0x152>
 8000674:	1e51      	subs	r1, r2, #1
 8000676:	2a01      	cmp	r2, #1
 8000678:	d100      	bne.n	800067c <__aeabi_fadd+0x1b8>
 800067a:	e09e      	b.n	80007ba <__aeabi_fadd+0x2f6>
 800067c:	2aff      	cmp	r2, #255	@ 0xff
 800067e:	d0ef      	beq.n	8000660 <__aeabi_fadd+0x19c>
 8000680:	000a      	movs	r2, r1
 8000682:	2a1b      	cmp	r2, #27
 8000684:	dd5f      	ble.n	8000746 <__aeabi_fadd+0x282>
 8000686:	0002      	movs	r2, r0
 8000688:	1c73      	adds	r3, r6, #1
 800068a:	e77b      	b.n	8000584 <__aeabi_fadd+0xc0>
 800068c:	4b50      	ldr	r3, [pc, #320]	@ (80007d0 <__aeabi_fadd+0x30c>)
 800068e:	1a2a      	subs	r2, r5, r0
 8000690:	403b      	ands	r3, r7
 8000692:	e7e1      	b.n	8000658 <__aeabi_fadd+0x194>
 8000694:	21fe      	movs	r1, #254	@ 0xfe
 8000696:	1c6a      	adds	r2, r5, #1
 8000698:	4211      	tst	r1, r2
 800069a:	d13b      	bne.n	8000714 <__aeabi_fadd+0x250>
 800069c:	2d00      	cmp	r5, #0
 800069e:	d15d      	bne.n	800075c <__aeabi_fadd+0x298>
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	d07f      	beq.n	80007a4 <__aeabi_fadd+0x2e0>
 80006a4:	2e00      	cmp	r6, #0
 80006a6:	d17f      	bne.n	80007a8 <__aeabi_fadd+0x2e4>
 80006a8:	2200      	movs	r2, #0
 80006aa:	08db      	lsrs	r3, r3, #3
 80006ac:	025b      	lsls	r3, r3, #9
 80006ae:	0a5b      	lsrs	r3, r3, #9
 80006b0:	b2d0      	uxtb	r0, r2
 80006b2:	e774      	b.n	800059e <__aeabi_fadd+0xda>
 80006b4:	28ff      	cmp	r0, #255	@ 0xff
 80006b6:	d0d2      	beq.n	800065e <__aeabi_fadd+0x19a>
 80006b8:	2480      	movs	r4, #128	@ 0x80
 80006ba:	04e4      	lsls	r4, r4, #19
 80006bc:	4323      	orrs	r3, r4
 80006be:	2401      	movs	r4, #1
 80006c0:	2a1b      	cmp	r2, #27
 80006c2:	dc07      	bgt.n	80006d4 <__aeabi_fadd+0x210>
 80006c4:	001c      	movs	r4, r3
 80006c6:	2520      	movs	r5, #32
 80006c8:	40d4      	lsrs	r4, r2
 80006ca:	1aaa      	subs	r2, r5, r2
 80006cc:	4093      	lsls	r3, r2
 80006ce:	1e5a      	subs	r2, r3, #1
 80006d0:	4193      	sbcs	r3, r2
 80006d2:	431c      	orrs	r4, r3
 80006d4:	1b33      	subs	r3, r6, r4
 80006d6:	0005      	movs	r5, r0
 80006d8:	000c      	movs	r4, r1
 80006da:	e74d      	b.n	8000578 <__aeabi_fadd+0xb4>
 80006dc:	1b9f      	subs	r7, r3, r6
 80006de:	017a      	lsls	r2, r7, #5
 80006e0:	d422      	bmi.n	8000728 <__aeabi_fadd+0x264>
 80006e2:	2f00      	cmp	r7, #0
 80006e4:	d1a6      	bne.n	8000634 <__aeabi_fadd+0x170>
 80006e6:	2400      	movs	r4, #0
 80006e8:	2000      	movs	r0, #0
 80006ea:	2300      	movs	r3, #0
 80006ec:	e757      	b.n	800059e <__aeabi_fadd+0xda>
 80006ee:	199b      	adds	r3, r3, r6
 80006f0:	2501      	movs	r5, #1
 80006f2:	3201      	adds	r2, #1
 80006f4:	0159      	lsls	r1, r3, #5
 80006f6:	d400      	bmi.n	80006fa <__aeabi_fadd+0x236>
 80006f8:	e740      	b.n	800057c <__aeabi_fadd+0xb8>
 80006fa:	2101      	movs	r1, #1
 80006fc:	4835      	ldr	r0, [pc, #212]	@ (80007d4 <__aeabi_fadd+0x310>)
 80006fe:	4019      	ands	r1, r3
 8000700:	085b      	lsrs	r3, r3, #1
 8000702:	4003      	ands	r3, r0
 8000704:	430b      	orrs	r3, r1
 8000706:	e7a7      	b.n	8000658 <__aeabi_fadd+0x194>
 8000708:	28ff      	cmp	r0, #255	@ 0xff
 800070a:	d0a9      	beq.n	8000660 <__aeabi_fadd+0x19c>
 800070c:	2180      	movs	r1, #128	@ 0x80
 800070e:	04c9      	lsls	r1, r1, #19
 8000710:	430b      	orrs	r3, r1
 8000712:	e7b6      	b.n	8000682 <__aeabi_fadd+0x1be>
 8000714:	2aff      	cmp	r2, #255	@ 0xff
 8000716:	d100      	bne.n	800071a <__aeabi_fadd+0x256>
 8000718:	e779      	b.n	800060e <__aeabi_fadd+0x14a>
 800071a:	199b      	adds	r3, r3, r6
 800071c:	085b      	lsrs	r3, r3, #1
 800071e:	0759      	lsls	r1, r3, #29
 8000720:	d000      	beq.n	8000724 <__aeabi_fadd+0x260>
 8000722:	e72f      	b.n	8000584 <__aeabi_fadd+0xc0>
 8000724:	08db      	lsrs	r3, r3, #3
 8000726:	e7c1      	b.n	80006ac <__aeabi_fadd+0x1e8>
 8000728:	000c      	movs	r4, r1
 800072a:	1af7      	subs	r7, r6, r3
 800072c:	e782      	b.n	8000634 <__aeabi_fadd+0x170>
 800072e:	2b00      	cmp	r3, #0
 8000730:	d12c      	bne.n	800078c <__aeabi_fadd+0x2c8>
 8000732:	2e00      	cmp	r6, #0
 8000734:	d193      	bne.n	800065e <__aeabi_fadd+0x19a>
 8000736:	2380      	movs	r3, #128	@ 0x80
 8000738:	2400      	movs	r4, #0
 800073a:	20ff      	movs	r0, #255	@ 0xff
 800073c:	03db      	lsls	r3, r3, #15
 800073e:	e72e      	b.n	800059e <__aeabi_fadd+0xda>
 8000740:	2501      	movs	r5, #1
 8000742:	1b9b      	subs	r3, r3, r6
 8000744:	e718      	b.n	8000578 <__aeabi_fadd+0xb4>
 8000746:	0019      	movs	r1, r3
 8000748:	2520      	movs	r5, #32
 800074a:	40d1      	lsrs	r1, r2
 800074c:	1aaa      	subs	r2, r5, r2
 800074e:	4093      	lsls	r3, r2
 8000750:	1e5a      	subs	r2, r3, #1
 8000752:	4193      	sbcs	r3, r2
 8000754:	430b      	orrs	r3, r1
 8000756:	0005      	movs	r5, r0
 8000758:	199b      	adds	r3, r3, r6
 800075a:	e753      	b.n	8000604 <__aeabi_fadd+0x140>
 800075c:	2b00      	cmp	r3, #0
 800075e:	d100      	bne.n	8000762 <__aeabi_fadd+0x29e>
 8000760:	e77e      	b.n	8000660 <__aeabi_fadd+0x19c>
 8000762:	2e00      	cmp	r6, #0
 8000764:	d100      	bne.n	8000768 <__aeabi_fadd+0x2a4>
 8000766:	e77c      	b.n	8000662 <__aeabi_fadd+0x19e>
 8000768:	2280      	movs	r2, #128	@ 0x80
 800076a:	03d2      	lsls	r2, r2, #15
 800076c:	4591      	cmp	r9, r2
 800076e:	d302      	bcc.n	8000776 <__aeabi_fadd+0x2b2>
 8000770:	4594      	cmp	ip, r2
 8000772:	d200      	bcs.n	8000776 <__aeabi_fadd+0x2b2>
 8000774:	0033      	movs	r3, r6
 8000776:	08db      	lsrs	r3, r3, #3
 8000778:	e753      	b.n	8000622 <__aeabi_fadd+0x15e>
 800077a:	000c      	movs	r4, r1
 800077c:	1af3      	subs	r3, r6, r3
 800077e:	3501      	adds	r5, #1
 8000780:	e6fa      	b.n	8000578 <__aeabi_fadd+0xb4>
 8000782:	2e00      	cmp	r6, #0
 8000784:	d0af      	beq.n	80006e6 <__aeabi_fadd+0x222>
 8000786:	000c      	movs	r4, r1
 8000788:	0033      	movs	r3, r6
 800078a:	e78d      	b.n	80006a8 <__aeabi_fadd+0x1e4>
 800078c:	2e00      	cmp	r6, #0
 800078e:	d100      	bne.n	8000792 <__aeabi_fadd+0x2ce>
 8000790:	e767      	b.n	8000662 <__aeabi_fadd+0x19e>
 8000792:	2280      	movs	r2, #128	@ 0x80
 8000794:	03d2      	lsls	r2, r2, #15
 8000796:	4591      	cmp	r9, r2
 8000798:	d3ed      	bcc.n	8000776 <__aeabi_fadd+0x2b2>
 800079a:	4594      	cmp	ip, r2
 800079c:	d2eb      	bcs.n	8000776 <__aeabi_fadd+0x2b2>
 800079e:	000c      	movs	r4, r1
 80007a0:	0033      	movs	r3, r6
 80007a2:	e7e8      	b.n	8000776 <__aeabi_fadd+0x2b2>
 80007a4:	0033      	movs	r3, r6
 80007a6:	e77f      	b.n	80006a8 <__aeabi_fadd+0x1e4>
 80007a8:	199b      	adds	r3, r3, r6
 80007aa:	2200      	movs	r2, #0
 80007ac:	0159      	lsls	r1, r3, #5
 80007ae:	d5b9      	bpl.n	8000724 <__aeabi_fadd+0x260>
 80007b0:	4a07      	ldr	r2, [pc, #28]	@ (80007d0 <__aeabi_fadd+0x30c>)
 80007b2:	4013      	ands	r3, r2
 80007b4:	08db      	lsrs	r3, r3, #3
 80007b6:	2201      	movs	r2, #1
 80007b8:	e778      	b.n	80006ac <__aeabi_fadd+0x1e8>
 80007ba:	199b      	adds	r3, r3, r6
 80007bc:	3201      	adds	r2, #1
 80007be:	3501      	adds	r5, #1
 80007c0:	0159      	lsls	r1, r3, #5
 80007c2:	d49a      	bmi.n	80006fa <__aeabi_fadd+0x236>
 80007c4:	e6da      	b.n	800057c <__aeabi_fadd+0xb8>
 80007c6:	1e03      	subs	r3, r0, #0
 80007c8:	d08d      	beq.n	80006e6 <__aeabi_fadd+0x222>
 80007ca:	08db      	lsrs	r3, r3, #3
 80007cc:	e76e      	b.n	80006ac <__aeabi_fadd+0x1e8>
 80007ce:	46c0      	nop			@ (mov r8, r8)
 80007d0:	fbffffff 	.word	0xfbffffff
 80007d4:	7dffffff 	.word	0x7dffffff

080007d8 <__aeabi_fdiv>:
 80007d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007da:	464f      	mov	r7, r9
 80007dc:	4646      	mov	r6, r8
 80007de:	46d6      	mov	lr, sl
 80007e0:	0244      	lsls	r4, r0, #9
 80007e2:	b5c0      	push	{r6, r7, lr}
 80007e4:	0047      	lsls	r7, r0, #1
 80007e6:	1c0e      	adds	r6, r1, #0
 80007e8:	0a64      	lsrs	r4, r4, #9
 80007ea:	0e3f      	lsrs	r7, r7, #24
 80007ec:	0fc5      	lsrs	r5, r0, #31
 80007ee:	2f00      	cmp	r7, #0
 80007f0:	d03c      	beq.n	800086c <__aeabi_fdiv+0x94>
 80007f2:	2fff      	cmp	r7, #255	@ 0xff
 80007f4:	d042      	beq.n	800087c <__aeabi_fdiv+0xa4>
 80007f6:	2300      	movs	r3, #0
 80007f8:	2280      	movs	r2, #128	@ 0x80
 80007fa:	4699      	mov	r9, r3
 80007fc:	469a      	mov	sl, r3
 80007fe:	00e4      	lsls	r4, r4, #3
 8000800:	04d2      	lsls	r2, r2, #19
 8000802:	4314      	orrs	r4, r2
 8000804:	3f7f      	subs	r7, #127	@ 0x7f
 8000806:	0273      	lsls	r3, r6, #9
 8000808:	0a5b      	lsrs	r3, r3, #9
 800080a:	4698      	mov	r8, r3
 800080c:	0073      	lsls	r3, r6, #1
 800080e:	0e1b      	lsrs	r3, r3, #24
 8000810:	0ff6      	lsrs	r6, r6, #31
 8000812:	2b00      	cmp	r3, #0
 8000814:	d01b      	beq.n	800084e <__aeabi_fdiv+0x76>
 8000816:	2bff      	cmp	r3, #255	@ 0xff
 8000818:	d013      	beq.n	8000842 <__aeabi_fdiv+0x6a>
 800081a:	4642      	mov	r2, r8
 800081c:	2180      	movs	r1, #128	@ 0x80
 800081e:	00d2      	lsls	r2, r2, #3
 8000820:	04c9      	lsls	r1, r1, #19
 8000822:	4311      	orrs	r1, r2
 8000824:	4688      	mov	r8, r1
 8000826:	2000      	movs	r0, #0
 8000828:	3b7f      	subs	r3, #127	@ 0x7f
 800082a:	0029      	movs	r1, r5
 800082c:	1aff      	subs	r7, r7, r3
 800082e:	464b      	mov	r3, r9
 8000830:	4071      	eors	r1, r6
 8000832:	b2c9      	uxtb	r1, r1
 8000834:	2b0f      	cmp	r3, #15
 8000836:	d900      	bls.n	800083a <__aeabi_fdiv+0x62>
 8000838:	e0b5      	b.n	80009a6 <__aeabi_fdiv+0x1ce>
 800083a:	4a74      	ldr	r2, [pc, #464]	@ (8000a0c <__aeabi_fdiv+0x234>)
 800083c:	009b      	lsls	r3, r3, #2
 800083e:	58d3      	ldr	r3, [r2, r3]
 8000840:	469f      	mov	pc, r3
 8000842:	4643      	mov	r3, r8
 8000844:	2b00      	cmp	r3, #0
 8000846:	d13f      	bne.n	80008c8 <__aeabi_fdiv+0xf0>
 8000848:	3fff      	subs	r7, #255	@ 0xff
 800084a:	3302      	adds	r3, #2
 800084c:	e003      	b.n	8000856 <__aeabi_fdiv+0x7e>
 800084e:	4643      	mov	r3, r8
 8000850:	2b00      	cmp	r3, #0
 8000852:	d12d      	bne.n	80008b0 <__aeabi_fdiv+0xd8>
 8000854:	2301      	movs	r3, #1
 8000856:	0029      	movs	r1, r5
 8000858:	464a      	mov	r2, r9
 800085a:	4071      	eors	r1, r6
 800085c:	b2c9      	uxtb	r1, r1
 800085e:	431a      	orrs	r2, r3
 8000860:	2a0e      	cmp	r2, #14
 8000862:	d838      	bhi.n	80008d6 <__aeabi_fdiv+0xfe>
 8000864:	486a      	ldr	r0, [pc, #424]	@ (8000a10 <__aeabi_fdiv+0x238>)
 8000866:	0092      	lsls	r2, r2, #2
 8000868:	5882      	ldr	r2, [r0, r2]
 800086a:	4697      	mov	pc, r2
 800086c:	2c00      	cmp	r4, #0
 800086e:	d113      	bne.n	8000898 <__aeabi_fdiv+0xc0>
 8000870:	2304      	movs	r3, #4
 8000872:	4699      	mov	r9, r3
 8000874:	3b03      	subs	r3, #3
 8000876:	2700      	movs	r7, #0
 8000878:	469a      	mov	sl, r3
 800087a:	e7c4      	b.n	8000806 <__aeabi_fdiv+0x2e>
 800087c:	2c00      	cmp	r4, #0
 800087e:	d105      	bne.n	800088c <__aeabi_fdiv+0xb4>
 8000880:	2308      	movs	r3, #8
 8000882:	4699      	mov	r9, r3
 8000884:	3b06      	subs	r3, #6
 8000886:	27ff      	movs	r7, #255	@ 0xff
 8000888:	469a      	mov	sl, r3
 800088a:	e7bc      	b.n	8000806 <__aeabi_fdiv+0x2e>
 800088c:	230c      	movs	r3, #12
 800088e:	4699      	mov	r9, r3
 8000890:	3b09      	subs	r3, #9
 8000892:	27ff      	movs	r7, #255	@ 0xff
 8000894:	469a      	mov	sl, r3
 8000896:	e7b6      	b.n	8000806 <__aeabi_fdiv+0x2e>
 8000898:	0020      	movs	r0, r4
 800089a:	f000 fd13 	bl	80012c4 <__clzsi2>
 800089e:	2776      	movs	r7, #118	@ 0x76
 80008a0:	1f43      	subs	r3, r0, #5
 80008a2:	409c      	lsls	r4, r3
 80008a4:	2300      	movs	r3, #0
 80008a6:	427f      	negs	r7, r7
 80008a8:	4699      	mov	r9, r3
 80008aa:	469a      	mov	sl, r3
 80008ac:	1a3f      	subs	r7, r7, r0
 80008ae:	e7aa      	b.n	8000806 <__aeabi_fdiv+0x2e>
 80008b0:	4640      	mov	r0, r8
 80008b2:	f000 fd07 	bl	80012c4 <__clzsi2>
 80008b6:	4642      	mov	r2, r8
 80008b8:	1f43      	subs	r3, r0, #5
 80008ba:	409a      	lsls	r2, r3
 80008bc:	2376      	movs	r3, #118	@ 0x76
 80008be:	425b      	negs	r3, r3
 80008c0:	1a1b      	subs	r3, r3, r0
 80008c2:	4690      	mov	r8, r2
 80008c4:	2000      	movs	r0, #0
 80008c6:	e7b0      	b.n	800082a <__aeabi_fdiv+0x52>
 80008c8:	2303      	movs	r3, #3
 80008ca:	464a      	mov	r2, r9
 80008cc:	431a      	orrs	r2, r3
 80008ce:	4691      	mov	r9, r2
 80008d0:	2003      	movs	r0, #3
 80008d2:	33fc      	adds	r3, #252	@ 0xfc
 80008d4:	e7a9      	b.n	800082a <__aeabi_fdiv+0x52>
 80008d6:	000d      	movs	r5, r1
 80008d8:	20ff      	movs	r0, #255	@ 0xff
 80008da:	2200      	movs	r2, #0
 80008dc:	05c0      	lsls	r0, r0, #23
 80008de:	07ed      	lsls	r5, r5, #31
 80008e0:	4310      	orrs	r0, r2
 80008e2:	4328      	orrs	r0, r5
 80008e4:	bce0      	pop	{r5, r6, r7}
 80008e6:	46ba      	mov	sl, r7
 80008e8:	46b1      	mov	r9, r6
 80008ea:	46a8      	mov	r8, r5
 80008ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008ee:	000d      	movs	r5, r1
 80008f0:	2000      	movs	r0, #0
 80008f2:	2200      	movs	r2, #0
 80008f4:	e7f2      	b.n	80008dc <__aeabi_fdiv+0x104>
 80008f6:	4653      	mov	r3, sl
 80008f8:	2b02      	cmp	r3, #2
 80008fa:	d0ed      	beq.n	80008d8 <__aeabi_fdiv+0x100>
 80008fc:	2b03      	cmp	r3, #3
 80008fe:	d033      	beq.n	8000968 <__aeabi_fdiv+0x190>
 8000900:	46a0      	mov	r8, r4
 8000902:	2b01      	cmp	r3, #1
 8000904:	d105      	bne.n	8000912 <__aeabi_fdiv+0x13a>
 8000906:	2000      	movs	r0, #0
 8000908:	2200      	movs	r2, #0
 800090a:	e7e7      	b.n	80008dc <__aeabi_fdiv+0x104>
 800090c:	0035      	movs	r5, r6
 800090e:	2803      	cmp	r0, #3
 8000910:	d07a      	beq.n	8000a08 <__aeabi_fdiv+0x230>
 8000912:	003b      	movs	r3, r7
 8000914:	337f      	adds	r3, #127	@ 0x7f
 8000916:	2b00      	cmp	r3, #0
 8000918:	dd2d      	ble.n	8000976 <__aeabi_fdiv+0x19e>
 800091a:	4642      	mov	r2, r8
 800091c:	0752      	lsls	r2, r2, #29
 800091e:	d007      	beq.n	8000930 <__aeabi_fdiv+0x158>
 8000920:	220f      	movs	r2, #15
 8000922:	4641      	mov	r1, r8
 8000924:	400a      	ands	r2, r1
 8000926:	2a04      	cmp	r2, #4
 8000928:	d002      	beq.n	8000930 <__aeabi_fdiv+0x158>
 800092a:	2204      	movs	r2, #4
 800092c:	4694      	mov	ip, r2
 800092e:	44e0      	add	r8, ip
 8000930:	4642      	mov	r2, r8
 8000932:	0112      	lsls	r2, r2, #4
 8000934:	d505      	bpl.n	8000942 <__aeabi_fdiv+0x16a>
 8000936:	4642      	mov	r2, r8
 8000938:	4b36      	ldr	r3, [pc, #216]	@ (8000a14 <__aeabi_fdiv+0x23c>)
 800093a:	401a      	ands	r2, r3
 800093c:	003b      	movs	r3, r7
 800093e:	4690      	mov	r8, r2
 8000940:	3380      	adds	r3, #128	@ 0x80
 8000942:	2bfe      	cmp	r3, #254	@ 0xfe
 8000944:	dcc8      	bgt.n	80008d8 <__aeabi_fdiv+0x100>
 8000946:	4642      	mov	r2, r8
 8000948:	0192      	lsls	r2, r2, #6
 800094a:	0a52      	lsrs	r2, r2, #9
 800094c:	b2d8      	uxtb	r0, r3
 800094e:	e7c5      	b.n	80008dc <__aeabi_fdiv+0x104>
 8000950:	2280      	movs	r2, #128	@ 0x80
 8000952:	2500      	movs	r5, #0
 8000954:	20ff      	movs	r0, #255	@ 0xff
 8000956:	03d2      	lsls	r2, r2, #15
 8000958:	e7c0      	b.n	80008dc <__aeabi_fdiv+0x104>
 800095a:	2280      	movs	r2, #128	@ 0x80
 800095c:	03d2      	lsls	r2, r2, #15
 800095e:	4214      	tst	r4, r2
 8000960:	d002      	beq.n	8000968 <__aeabi_fdiv+0x190>
 8000962:	4643      	mov	r3, r8
 8000964:	4213      	tst	r3, r2
 8000966:	d049      	beq.n	80009fc <__aeabi_fdiv+0x224>
 8000968:	2280      	movs	r2, #128	@ 0x80
 800096a:	03d2      	lsls	r2, r2, #15
 800096c:	4322      	orrs	r2, r4
 800096e:	0252      	lsls	r2, r2, #9
 8000970:	20ff      	movs	r0, #255	@ 0xff
 8000972:	0a52      	lsrs	r2, r2, #9
 8000974:	e7b2      	b.n	80008dc <__aeabi_fdiv+0x104>
 8000976:	2201      	movs	r2, #1
 8000978:	1ad3      	subs	r3, r2, r3
 800097a:	2b1b      	cmp	r3, #27
 800097c:	dcc3      	bgt.n	8000906 <__aeabi_fdiv+0x12e>
 800097e:	4642      	mov	r2, r8
 8000980:	40da      	lsrs	r2, r3
 8000982:	4643      	mov	r3, r8
 8000984:	379e      	adds	r7, #158	@ 0x9e
 8000986:	40bb      	lsls	r3, r7
 8000988:	1e59      	subs	r1, r3, #1
 800098a:	418b      	sbcs	r3, r1
 800098c:	431a      	orrs	r2, r3
 800098e:	0753      	lsls	r3, r2, #29
 8000990:	d004      	beq.n	800099c <__aeabi_fdiv+0x1c4>
 8000992:	230f      	movs	r3, #15
 8000994:	4013      	ands	r3, r2
 8000996:	2b04      	cmp	r3, #4
 8000998:	d000      	beq.n	800099c <__aeabi_fdiv+0x1c4>
 800099a:	3204      	adds	r2, #4
 800099c:	0153      	lsls	r3, r2, #5
 800099e:	d529      	bpl.n	80009f4 <__aeabi_fdiv+0x21c>
 80009a0:	2001      	movs	r0, #1
 80009a2:	2200      	movs	r2, #0
 80009a4:	e79a      	b.n	80008dc <__aeabi_fdiv+0x104>
 80009a6:	4642      	mov	r2, r8
 80009a8:	0163      	lsls	r3, r4, #5
 80009aa:	0155      	lsls	r5, r2, #5
 80009ac:	42ab      	cmp	r3, r5
 80009ae:	d215      	bcs.n	80009dc <__aeabi_fdiv+0x204>
 80009b0:	201b      	movs	r0, #27
 80009b2:	2200      	movs	r2, #0
 80009b4:	3f01      	subs	r7, #1
 80009b6:	2601      	movs	r6, #1
 80009b8:	001c      	movs	r4, r3
 80009ba:	0052      	lsls	r2, r2, #1
 80009bc:	005b      	lsls	r3, r3, #1
 80009be:	2c00      	cmp	r4, #0
 80009c0:	db01      	blt.n	80009c6 <__aeabi_fdiv+0x1ee>
 80009c2:	429d      	cmp	r5, r3
 80009c4:	d801      	bhi.n	80009ca <__aeabi_fdiv+0x1f2>
 80009c6:	1b5b      	subs	r3, r3, r5
 80009c8:	4332      	orrs	r2, r6
 80009ca:	3801      	subs	r0, #1
 80009cc:	2800      	cmp	r0, #0
 80009ce:	d1f3      	bne.n	80009b8 <__aeabi_fdiv+0x1e0>
 80009d0:	1e58      	subs	r0, r3, #1
 80009d2:	4183      	sbcs	r3, r0
 80009d4:	4313      	orrs	r3, r2
 80009d6:	4698      	mov	r8, r3
 80009d8:	000d      	movs	r5, r1
 80009da:	e79a      	b.n	8000912 <__aeabi_fdiv+0x13a>
 80009dc:	201a      	movs	r0, #26
 80009de:	2201      	movs	r2, #1
 80009e0:	1b5b      	subs	r3, r3, r5
 80009e2:	e7e8      	b.n	80009b6 <__aeabi_fdiv+0x1de>
 80009e4:	3b02      	subs	r3, #2
 80009e6:	425a      	negs	r2, r3
 80009e8:	4153      	adcs	r3, r2
 80009ea:	425b      	negs	r3, r3
 80009ec:	0035      	movs	r5, r6
 80009ee:	2200      	movs	r2, #0
 80009f0:	b2d8      	uxtb	r0, r3
 80009f2:	e773      	b.n	80008dc <__aeabi_fdiv+0x104>
 80009f4:	0192      	lsls	r2, r2, #6
 80009f6:	2000      	movs	r0, #0
 80009f8:	0a52      	lsrs	r2, r2, #9
 80009fa:	e76f      	b.n	80008dc <__aeabi_fdiv+0x104>
 80009fc:	431a      	orrs	r2, r3
 80009fe:	0252      	lsls	r2, r2, #9
 8000a00:	0035      	movs	r5, r6
 8000a02:	20ff      	movs	r0, #255	@ 0xff
 8000a04:	0a52      	lsrs	r2, r2, #9
 8000a06:	e769      	b.n	80008dc <__aeabi_fdiv+0x104>
 8000a08:	4644      	mov	r4, r8
 8000a0a:	e7ad      	b.n	8000968 <__aeabi_fdiv+0x190>
 8000a0c:	08013894 	.word	0x08013894
 8000a10:	080138d4 	.word	0x080138d4
 8000a14:	f7ffffff 	.word	0xf7ffffff

08000a18 <__eqsf2>:
 8000a18:	b570      	push	{r4, r5, r6, lr}
 8000a1a:	0042      	lsls	r2, r0, #1
 8000a1c:	024e      	lsls	r6, r1, #9
 8000a1e:	004c      	lsls	r4, r1, #1
 8000a20:	0245      	lsls	r5, r0, #9
 8000a22:	0a6d      	lsrs	r5, r5, #9
 8000a24:	0e12      	lsrs	r2, r2, #24
 8000a26:	0fc3      	lsrs	r3, r0, #31
 8000a28:	0a76      	lsrs	r6, r6, #9
 8000a2a:	0e24      	lsrs	r4, r4, #24
 8000a2c:	0fc9      	lsrs	r1, r1, #31
 8000a2e:	2aff      	cmp	r2, #255	@ 0xff
 8000a30:	d010      	beq.n	8000a54 <__eqsf2+0x3c>
 8000a32:	2cff      	cmp	r4, #255	@ 0xff
 8000a34:	d00c      	beq.n	8000a50 <__eqsf2+0x38>
 8000a36:	2001      	movs	r0, #1
 8000a38:	42a2      	cmp	r2, r4
 8000a3a:	d10a      	bne.n	8000a52 <__eqsf2+0x3a>
 8000a3c:	42b5      	cmp	r5, r6
 8000a3e:	d108      	bne.n	8000a52 <__eqsf2+0x3a>
 8000a40:	428b      	cmp	r3, r1
 8000a42:	d00f      	beq.n	8000a64 <__eqsf2+0x4c>
 8000a44:	2a00      	cmp	r2, #0
 8000a46:	d104      	bne.n	8000a52 <__eqsf2+0x3a>
 8000a48:	0028      	movs	r0, r5
 8000a4a:	1e43      	subs	r3, r0, #1
 8000a4c:	4198      	sbcs	r0, r3
 8000a4e:	e000      	b.n	8000a52 <__eqsf2+0x3a>
 8000a50:	2001      	movs	r0, #1
 8000a52:	bd70      	pop	{r4, r5, r6, pc}
 8000a54:	2001      	movs	r0, #1
 8000a56:	2cff      	cmp	r4, #255	@ 0xff
 8000a58:	d1fb      	bne.n	8000a52 <__eqsf2+0x3a>
 8000a5a:	4335      	orrs	r5, r6
 8000a5c:	d1f9      	bne.n	8000a52 <__eqsf2+0x3a>
 8000a5e:	404b      	eors	r3, r1
 8000a60:	0018      	movs	r0, r3
 8000a62:	e7f6      	b.n	8000a52 <__eqsf2+0x3a>
 8000a64:	2000      	movs	r0, #0
 8000a66:	e7f4      	b.n	8000a52 <__eqsf2+0x3a>

08000a68 <__gesf2>:
 8000a68:	b530      	push	{r4, r5, lr}
 8000a6a:	0042      	lsls	r2, r0, #1
 8000a6c:	0244      	lsls	r4, r0, #9
 8000a6e:	024d      	lsls	r5, r1, #9
 8000a70:	0fc3      	lsrs	r3, r0, #31
 8000a72:	0048      	lsls	r0, r1, #1
 8000a74:	0a64      	lsrs	r4, r4, #9
 8000a76:	0e12      	lsrs	r2, r2, #24
 8000a78:	0a6d      	lsrs	r5, r5, #9
 8000a7a:	0e00      	lsrs	r0, r0, #24
 8000a7c:	0fc9      	lsrs	r1, r1, #31
 8000a7e:	2aff      	cmp	r2, #255	@ 0xff
 8000a80:	d019      	beq.n	8000ab6 <__gesf2+0x4e>
 8000a82:	28ff      	cmp	r0, #255	@ 0xff
 8000a84:	d00b      	beq.n	8000a9e <__gesf2+0x36>
 8000a86:	2a00      	cmp	r2, #0
 8000a88:	d11e      	bne.n	8000ac8 <__gesf2+0x60>
 8000a8a:	2800      	cmp	r0, #0
 8000a8c:	d10b      	bne.n	8000aa6 <__gesf2+0x3e>
 8000a8e:	2d00      	cmp	r5, #0
 8000a90:	d027      	beq.n	8000ae2 <__gesf2+0x7a>
 8000a92:	2c00      	cmp	r4, #0
 8000a94:	d134      	bne.n	8000b00 <__gesf2+0x98>
 8000a96:	2900      	cmp	r1, #0
 8000a98:	d02f      	beq.n	8000afa <__gesf2+0x92>
 8000a9a:	0008      	movs	r0, r1
 8000a9c:	bd30      	pop	{r4, r5, pc}
 8000a9e:	2d00      	cmp	r5, #0
 8000aa0:	d128      	bne.n	8000af4 <__gesf2+0x8c>
 8000aa2:	2a00      	cmp	r2, #0
 8000aa4:	d101      	bne.n	8000aaa <__gesf2+0x42>
 8000aa6:	2c00      	cmp	r4, #0
 8000aa8:	d0f5      	beq.n	8000a96 <__gesf2+0x2e>
 8000aaa:	428b      	cmp	r3, r1
 8000aac:	d107      	bne.n	8000abe <__gesf2+0x56>
 8000aae:	2b00      	cmp	r3, #0
 8000ab0:	d023      	beq.n	8000afa <__gesf2+0x92>
 8000ab2:	0018      	movs	r0, r3
 8000ab4:	e7f2      	b.n	8000a9c <__gesf2+0x34>
 8000ab6:	2c00      	cmp	r4, #0
 8000ab8:	d11c      	bne.n	8000af4 <__gesf2+0x8c>
 8000aba:	28ff      	cmp	r0, #255	@ 0xff
 8000abc:	d014      	beq.n	8000ae8 <__gesf2+0x80>
 8000abe:	1e58      	subs	r0, r3, #1
 8000ac0:	2302      	movs	r3, #2
 8000ac2:	4018      	ands	r0, r3
 8000ac4:	3801      	subs	r0, #1
 8000ac6:	e7e9      	b.n	8000a9c <__gesf2+0x34>
 8000ac8:	2800      	cmp	r0, #0
 8000aca:	d0f8      	beq.n	8000abe <__gesf2+0x56>
 8000acc:	428b      	cmp	r3, r1
 8000ace:	d1f6      	bne.n	8000abe <__gesf2+0x56>
 8000ad0:	4282      	cmp	r2, r0
 8000ad2:	dcf4      	bgt.n	8000abe <__gesf2+0x56>
 8000ad4:	dbeb      	blt.n	8000aae <__gesf2+0x46>
 8000ad6:	42ac      	cmp	r4, r5
 8000ad8:	d8f1      	bhi.n	8000abe <__gesf2+0x56>
 8000ada:	2000      	movs	r0, #0
 8000adc:	42ac      	cmp	r4, r5
 8000ade:	d2dd      	bcs.n	8000a9c <__gesf2+0x34>
 8000ae0:	e7e5      	b.n	8000aae <__gesf2+0x46>
 8000ae2:	2c00      	cmp	r4, #0
 8000ae4:	d0da      	beq.n	8000a9c <__gesf2+0x34>
 8000ae6:	e7ea      	b.n	8000abe <__gesf2+0x56>
 8000ae8:	2d00      	cmp	r5, #0
 8000aea:	d103      	bne.n	8000af4 <__gesf2+0x8c>
 8000aec:	428b      	cmp	r3, r1
 8000aee:	d1e6      	bne.n	8000abe <__gesf2+0x56>
 8000af0:	2000      	movs	r0, #0
 8000af2:	e7d3      	b.n	8000a9c <__gesf2+0x34>
 8000af4:	2002      	movs	r0, #2
 8000af6:	4240      	negs	r0, r0
 8000af8:	e7d0      	b.n	8000a9c <__gesf2+0x34>
 8000afa:	2001      	movs	r0, #1
 8000afc:	4240      	negs	r0, r0
 8000afe:	e7cd      	b.n	8000a9c <__gesf2+0x34>
 8000b00:	428b      	cmp	r3, r1
 8000b02:	d0e8      	beq.n	8000ad6 <__gesf2+0x6e>
 8000b04:	e7db      	b.n	8000abe <__gesf2+0x56>
 8000b06:	46c0      	nop			@ (mov r8, r8)

08000b08 <__lesf2>:
 8000b08:	b530      	push	{r4, r5, lr}
 8000b0a:	0042      	lsls	r2, r0, #1
 8000b0c:	0244      	lsls	r4, r0, #9
 8000b0e:	024d      	lsls	r5, r1, #9
 8000b10:	0fc3      	lsrs	r3, r0, #31
 8000b12:	0048      	lsls	r0, r1, #1
 8000b14:	0a64      	lsrs	r4, r4, #9
 8000b16:	0e12      	lsrs	r2, r2, #24
 8000b18:	0a6d      	lsrs	r5, r5, #9
 8000b1a:	0e00      	lsrs	r0, r0, #24
 8000b1c:	0fc9      	lsrs	r1, r1, #31
 8000b1e:	2aff      	cmp	r2, #255	@ 0xff
 8000b20:	d01a      	beq.n	8000b58 <__lesf2+0x50>
 8000b22:	28ff      	cmp	r0, #255	@ 0xff
 8000b24:	d00e      	beq.n	8000b44 <__lesf2+0x3c>
 8000b26:	2a00      	cmp	r2, #0
 8000b28:	d11e      	bne.n	8000b68 <__lesf2+0x60>
 8000b2a:	2800      	cmp	r0, #0
 8000b2c:	d10e      	bne.n	8000b4c <__lesf2+0x44>
 8000b2e:	2d00      	cmp	r5, #0
 8000b30:	d02a      	beq.n	8000b88 <__lesf2+0x80>
 8000b32:	2c00      	cmp	r4, #0
 8000b34:	d00c      	beq.n	8000b50 <__lesf2+0x48>
 8000b36:	428b      	cmp	r3, r1
 8000b38:	d01d      	beq.n	8000b76 <__lesf2+0x6e>
 8000b3a:	1e58      	subs	r0, r3, #1
 8000b3c:	2302      	movs	r3, #2
 8000b3e:	4018      	ands	r0, r3
 8000b40:	3801      	subs	r0, #1
 8000b42:	e010      	b.n	8000b66 <__lesf2+0x5e>
 8000b44:	2d00      	cmp	r5, #0
 8000b46:	d10d      	bne.n	8000b64 <__lesf2+0x5c>
 8000b48:	2a00      	cmp	r2, #0
 8000b4a:	d120      	bne.n	8000b8e <__lesf2+0x86>
 8000b4c:	2c00      	cmp	r4, #0
 8000b4e:	d11e      	bne.n	8000b8e <__lesf2+0x86>
 8000b50:	2900      	cmp	r1, #0
 8000b52:	d023      	beq.n	8000b9c <__lesf2+0x94>
 8000b54:	0008      	movs	r0, r1
 8000b56:	e006      	b.n	8000b66 <__lesf2+0x5e>
 8000b58:	2c00      	cmp	r4, #0
 8000b5a:	d103      	bne.n	8000b64 <__lesf2+0x5c>
 8000b5c:	28ff      	cmp	r0, #255	@ 0xff
 8000b5e:	d1ec      	bne.n	8000b3a <__lesf2+0x32>
 8000b60:	2d00      	cmp	r5, #0
 8000b62:	d017      	beq.n	8000b94 <__lesf2+0x8c>
 8000b64:	2002      	movs	r0, #2
 8000b66:	bd30      	pop	{r4, r5, pc}
 8000b68:	2800      	cmp	r0, #0
 8000b6a:	d0e6      	beq.n	8000b3a <__lesf2+0x32>
 8000b6c:	428b      	cmp	r3, r1
 8000b6e:	d1e4      	bne.n	8000b3a <__lesf2+0x32>
 8000b70:	4282      	cmp	r2, r0
 8000b72:	dce2      	bgt.n	8000b3a <__lesf2+0x32>
 8000b74:	db04      	blt.n	8000b80 <__lesf2+0x78>
 8000b76:	42ac      	cmp	r4, r5
 8000b78:	d8df      	bhi.n	8000b3a <__lesf2+0x32>
 8000b7a:	2000      	movs	r0, #0
 8000b7c:	42ac      	cmp	r4, r5
 8000b7e:	d2f2      	bcs.n	8000b66 <__lesf2+0x5e>
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d00b      	beq.n	8000b9c <__lesf2+0x94>
 8000b84:	0018      	movs	r0, r3
 8000b86:	e7ee      	b.n	8000b66 <__lesf2+0x5e>
 8000b88:	2c00      	cmp	r4, #0
 8000b8a:	d0ec      	beq.n	8000b66 <__lesf2+0x5e>
 8000b8c:	e7d5      	b.n	8000b3a <__lesf2+0x32>
 8000b8e:	428b      	cmp	r3, r1
 8000b90:	d1d3      	bne.n	8000b3a <__lesf2+0x32>
 8000b92:	e7f5      	b.n	8000b80 <__lesf2+0x78>
 8000b94:	2000      	movs	r0, #0
 8000b96:	428b      	cmp	r3, r1
 8000b98:	d0e5      	beq.n	8000b66 <__lesf2+0x5e>
 8000b9a:	e7ce      	b.n	8000b3a <__lesf2+0x32>
 8000b9c:	2001      	movs	r0, #1
 8000b9e:	4240      	negs	r0, r0
 8000ba0:	e7e1      	b.n	8000b66 <__lesf2+0x5e>
 8000ba2:	46c0      	nop			@ (mov r8, r8)

08000ba4 <__aeabi_fmul>:
 8000ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ba6:	464f      	mov	r7, r9
 8000ba8:	4646      	mov	r6, r8
 8000baa:	46d6      	mov	lr, sl
 8000bac:	0243      	lsls	r3, r0, #9
 8000bae:	0a5b      	lsrs	r3, r3, #9
 8000bb0:	0045      	lsls	r5, r0, #1
 8000bb2:	b5c0      	push	{r6, r7, lr}
 8000bb4:	4699      	mov	r9, r3
 8000bb6:	1c0f      	adds	r7, r1, #0
 8000bb8:	0e2d      	lsrs	r5, r5, #24
 8000bba:	0fc6      	lsrs	r6, r0, #31
 8000bbc:	2d00      	cmp	r5, #0
 8000bbe:	d100      	bne.n	8000bc2 <__aeabi_fmul+0x1e>
 8000bc0:	e088      	b.n	8000cd4 <__aeabi_fmul+0x130>
 8000bc2:	2dff      	cmp	r5, #255	@ 0xff
 8000bc4:	d100      	bne.n	8000bc8 <__aeabi_fmul+0x24>
 8000bc6:	e08d      	b.n	8000ce4 <__aeabi_fmul+0x140>
 8000bc8:	2280      	movs	r2, #128	@ 0x80
 8000bca:	00db      	lsls	r3, r3, #3
 8000bcc:	04d2      	lsls	r2, r2, #19
 8000bce:	431a      	orrs	r2, r3
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	4691      	mov	r9, r2
 8000bd4:	4698      	mov	r8, r3
 8000bd6:	469a      	mov	sl, r3
 8000bd8:	3d7f      	subs	r5, #127	@ 0x7f
 8000bda:	027c      	lsls	r4, r7, #9
 8000bdc:	007b      	lsls	r3, r7, #1
 8000bde:	0a64      	lsrs	r4, r4, #9
 8000be0:	0e1b      	lsrs	r3, r3, #24
 8000be2:	0fff      	lsrs	r7, r7, #31
 8000be4:	2b00      	cmp	r3, #0
 8000be6:	d068      	beq.n	8000cba <__aeabi_fmul+0x116>
 8000be8:	2bff      	cmp	r3, #255	@ 0xff
 8000bea:	d021      	beq.n	8000c30 <__aeabi_fmul+0x8c>
 8000bec:	2280      	movs	r2, #128	@ 0x80
 8000bee:	00e4      	lsls	r4, r4, #3
 8000bf0:	04d2      	lsls	r2, r2, #19
 8000bf2:	4314      	orrs	r4, r2
 8000bf4:	4642      	mov	r2, r8
 8000bf6:	3b7f      	subs	r3, #127	@ 0x7f
 8000bf8:	195b      	adds	r3, r3, r5
 8000bfa:	2100      	movs	r1, #0
 8000bfc:	1c5d      	adds	r5, r3, #1
 8000bfe:	2a0a      	cmp	r2, #10
 8000c00:	dc2e      	bgt.n	8000c60 <__aeabi_fmul+0xbc>
 8000c02:	407e      	eors	r6, r7
 8000c04:	4642      	mov	r2, r8
 8000c06:	2a02      	cmp	r2, #2
 8000c08:	dc23      	bgt.n	8000c52 <__aeabi_fmul+0xae>
 8000c0a:	3a01      	subs	r2, #1
 8000c0c:	2a01      	cmp	r2, #1
 8000c0e:	d900      	bls.n	8000c12 <__aeabi_fmul+0x6e>
 8000c10:	e0bd      	b.n	8000d8e <__aeabi_fmul+0x1ea>
 8000c12:	2902      	cmp	r1, #2
 8000c14:	d06e      	beq.n	8000cf4 <__aeabi_fmul+0x150>
 8000c16:	2901      	cmp	r1, #1
 8000c18:	d12c      	bne.n	8000c74 <__aeabi_fmul+0xd0>
 8000c1a:	2000      	movs	r0, #0
 8000c1c:	2200      	movs	r2, #0
 8000c1e:	05c0      	lsls	r0, r0, #23
 8000c20:	07f6      	lsls	r6, r6, #31
 8000c22:	4310      	orrs	r0, r2
 8000c24:	4330      	orrs	r0, r6
 8000c26:	bce0      	pop	{r5, r6, r7}
 8000c28:	46ba      	mov	sl, r7
 8000c2a:	46b1      	mov	r9, r6
 8000c2c:	46a8      	mov	r8, r5
 8000c2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c30:	002b      	movs	r3, r5
 8000c32:	33ff      	adds	r3, #255	@ 0xff
 8000c34:	2c00      	cmp	r4, #0
 8000c36:	d065      	beq.n	8000d04 <__aeabi_fmul+0x160>
 8000c38:	2203      	movs	r2, #3
 8000c3a:	4641      	mov	r1, r8
 8000c3c:	4311      	orrs	r1, r2
 8000c3e:	0032      	movs	r2, r6
 8000c40:	3501      	adds	r5, #1
 8000c42:	4688      	mov	r8, r1
 8000c44:	407a      	eors	r2, r7
 8000c46:	35ff      	adds	r5, #255	@ 0xff
 8000c48:	290a      	cmp	r1, #10
 8000c4a:	dd00      	ble.n	8000c4e <__aeabi_fmul+0xaa>
 8000c4c:	e0d8      	b.n	8000e00 <__aeabi_fmul+0x25c>
 8000c4e:	0016      	movs	r6, r2
 8000c50:	2103      	movs	r1, #3
 8000c52:	4640      	mov	r0, r8
 8000c54:	2201      	movs	r2, #1
 8000c56:	4082      	lsls	r2, r0
 8000c58:	20a6      	movs	r0, #166	@ 0xa6
 8000c5a:	00c0      	lsls	r0, r0, #3
 8000c5c:	4202      	tst	r2, r0
 8000c5e:	d020      	beq.n	8000ca2 <__aeabi_fmul+0xfe>
 8000c60:	4653      	mov	r3, sl
 8000c62:	2b02      	cmp	r3, #2
 8000c64:	d046      	beq.n	8000cf4 <__aeabi_fmul+0x150>
 8000c66:	2b03      	cmp	r3, #3
 8000c68:	d100      	bne.n	8000c6c <__aeabi_fmul+0xc8>
 8000c6a:	e0bb      	b.n	8000de4 <__aeabi_fmul+0x240>
 8000c6c:	4651      	mov	r1, sl
 8000c6e:	464c      	mov	r4, r9
 8000c70:	2901      	cmp	r1, #1
 8000c72:	d0d2      	beq.n	8000c1a <__aeabi_fmul+0x76>
 8000c74:	002b      	movs	r3, r5
 8000c76:	337f      	adds	r3, #127	@ 0x7f
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	dd70      	ble.n	8000d5e <__aeabi_fmul+0x1ba>
 8000c7c:	0762      	lsls	r2, r4, #29
 8000c7e:	d004      	beq.n	8000c8a <__aeabi_fmul+0xe6>
 8000c80:	220f      	movs	r2, #15
 8000c82:	4022      	ands	r2, r4
 8000c84:	2a04      	cmp	r2, #4
 8000c86:	d000      	beq.n	8000c8a <__aeabi_fmul+0xe6>
 8000c88:	3404      	adds	r4, #4
 8000c8a:	0122      	lsls	r2, r4, #4
 8000c8c:	d503      	bpl.n	8000c96 <__aeabi_fmul+0xf2>
 8000c8e:	4b63      	ldr	r3, [pc, #396]	@ (8000e1c <__aeabi_fmul+0x278>)
 8000c90:	401c      	ands	r4, r3
 8000c92:	002b      	movs	r3, r5
 8000c94:	3380      	adds	r3, #128	@ 0x80
 8000c96:	2bfe      	cmp	r3, #254	@ 0xfe
 8000c98:	dc2c      	bgt.n	8000cf4 <__aeabi_fmul+0x150>
 8000c9a:	01a2      	lsls	r2, r4, #6
 8000c9c:	0a52      	lsrs	r2, r2, #9
 8000c9e:	b2d8      	uxtb	r0, r3
 8000ca0:	e7bd      	b.n	8000c1e <__aeabi_fmul+0x7a>
 8000ca2:	2090      	movs	r0, #144	@ 0x90
 8000ca4:	0080      	lsls	r0, r0, #2
 8000ca6:	4202      	tst	r2, r0
 8000ca8:	d127      	bne.n	8000cfa <__aeabi_fmul+0x156>
 8000caa:	38b9      	subs	r0, #185	@ 0xb9
 8000cac:	38ff      	subs	r0, #255	@ 0xff
 8000cae:	4210      	tst	r0, r2
 8000cb0:	d06d      	beq.n	8000d8e <__aeabi_fmul+0x1ea>
 8000cb2:	003e      	movs	r6, r7
 8000cb4:	46a1      	mov	r9, r4
 8000cb6:	468a      	mov	sl, r1
 8000cb8:	e7d2      	b.n	8000c60 <__aeabi_fmul+0xbc>
 8000cba:	2c00      	cmp	r4, #0
 8000cbc:	d141      	bne.n	8000d42 <__aeabi_fmul+0x19e>
 8000cbe:	2301      	movs	r3, #1
 8000cc0:	4642      	mov	r2, r8
 8000cc2:	431a      	orrs	r2, r3
 8000cc4:	4690      	mov	r8, r2
 8000cc6:	002b      	movs	r3, r5
 8000cc8:	4642      	mov	r2, r8
 8000cca:	2101      	movs	r1, #1
 8000ccc:	1c5d      	adds	r5, r3, #1
 8000cce:	2a0a      	cmp	r2, #10
 8000cd0:	dd97      	ble.n	8000c02 <__aeabi_fmul+0x5e>
 8000cd2:	e7c5      	b.n	8000c60 <__aeabi_fmul+0xbc>
 8000cd4:	2b00      	cmp	r3, #0
 8000cd6:	d126      	bne.n	8000d26 <__aeabi_fmul+0x182>
 8000cd8:	2304      	movs	r3, #4
 8000cda:	4698      	mov	r8, r3
 8000cdc:	3b03      	subs	r3, #3
 8000cde:	2500      	movs	r5, #0
 8000ce0:	469a      	mov	sl, r3
 8000ce2:	e77a      	b.n	8000bda <__aeabi_fmul+0x36>
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	d118      	bne.n	8000d1a <__aeabi_fmul+0x176>
 8000ce8:	2308      	movs	r3, #8
 8000cea:	4698      	mov	r8, r3
 8000cec:	3b06      	subs	r3, #6
 8000cee:	25ff      	movs	r5, #255	@ 0xff
 8000cf0:	469a      	mov	sl, r3
 8000cf2:	e772      	b.n	8000bda <__aeabi_fmul+0x36>
 8000cf4:	20ff      	movs	r0, #255	@ 0xff
 8000cf6:	2200      	movs	r2, #0
 8000cf8:	e791      	b.n	8000c1e <__aeabi_fmul+0x7a>
 8000cfa:	2280      	movs	r2, #128	@ 0x80
 8000cfc:	2600      	movs	r6, #0
 8000cfe:	20ff      	movs	r0, #255	@ 0xff
 8000d00:	03d2      	lsls	r2, r2, #15
 8000d02:	e78c      	b.n	8000c1e <__aeabi_fmul+0x7a>
 8000d04:	4641      	mov	r1, r8
 8000d06:	2202      	movs	r2, #2
 8000d08:	3501      	adds	r5, #1
 8000d0a:	4311      	orrs	r1, r2
 8000d0c:	4688      	mov	r8, r1
 8000d0e:	35ff      	adds	r5, #255	@ 0xff
 8000d10:	290a      	cmp	r1, #10
 8000d12:	dca5      	bgt.n	8000c60 <__aeabi_fmul+0xbc>
 8000d14:	2102      	movs	r1, #2
 8000d16:	407e      	eors	r6, r7
 8000d18:	e774      	b.n	8000c04 <__aeabi_fmul+0x60>
 8000d1a:	230c      	movs	r3, #12
 8000d1c:	4698      	mov	r8, r3
 8000d1e:	3b09      	subs	r3, #9
 8000d20:	25ff      	movs	r5, #255	@ 0xff
 8000d22:	469a      	mov	sl, r3
 8000d24:	e759      	b.n	8000bda <__aeabi_fmul+0x36>
 8000d26:	0018      	movs	r0, r3
 8000d28:	f000 facc 	bl	80012c4 <__clzsi2>
 8000d2c:	464a      	mov	r2, r9
 8000d2e:	1f43      	subs	r3, r0, #5
 8000d30:	2576      	movs	r5, #118	@ 0x76
 8000d32:	409a      	lsls	r2, r3
 8000d34:	2300      	movs	r3, #0
 8000d36:	426d      	negs	r5, r5
 8000d38:	4691      	mov	r9, r2
 8000d3a:	4698      	mov	r8, r3
 8000d3c:	469a      	mov	sl, r3
 8000d3e:	1a2d      	subs	r5, r5, r0
 8000d40:	e74b      	b.n	8000bda <__aeabi_fmul+0x36>
 8000d42:	0020      	movs	r0, r4
 8000d44:	f000 fabe 	bl	80012c4 <__clzsi2>
 8000d48:	4642      	mov	r2, r8
 8000d4a:	1f43      	subs	r3, r0, #5
 8000d4c:	409c      	lsls	r4, r3
 8000d4e:	1a2b      	subs	r3, r5, r0
 8000d50:	3b76      	subs	r3, #118	@ 0x76
 8000d52:	2100      	movs	r1, #0
 8000d54:	1c5d      	adds	r5, r3, #1
 8000d56:	2a0a      	cmp	r2, #10
 8000d58:	dc00      	bgt.n	8000d5c <__aeabi_fmul+0x1b8>
 8000d5a:	e752      	b.n	8000c02 <__aeabi_fmul+0x5e>
 8000d5c:	e780      	b.n	8000c60 <__aeabi_fmul+0xbc>
 8000d5e:	2201      	movs	r2, #1
 8000d60:	1ad3      	subs	r3, r2, r3
 8000d62:	2b1b      	cmp	r3, #27
 8000d64:	dd00      	ble.n	8000d68 <__aeabi_fmul+0x1c4>
 8000d66:	e758      	b.n	8000c1a <__aeabi_fmul+0x76>
 8000d68:	359e      	adds	r5, #158	@ 0x9e
 8000d6a:	0022      	movs	r2, r4
 8000d6c:	40ac      	lsls	r4, r5
 8000d6e:	40da      	lsrs	r2, r3
 8000d70:	1e63      	subs	r3, r4, #1
 8000d72:	419c      	sbcs	r4, r3
 8000d74:	4322      	orrs	r2, r4
 8000d76:	0753      	lsls	r3, r2, #29
 8000d78:	d004      	beq.n	8000d84 <__aeabi_fmul+0x1e0>
 8000d7a:	230f      	movs	r3, #15
 8000d7c:	4013      	ands	r3, r2
 8000d7e:	2b04      	cmp	r3, #4
 8000d80:	d000      	beq.n	8000d84 <__aeabi_fmul+0x1e0>
 8000d82:	3204      	adds	r2, #4
 8000d84:	0153      	lsls	r3, r2, #5
 8000d86:	d537      	bpl.n	8000df8 <__aeabi_fmul+0x254>
 8000d88:	2001      	movs	r0, #1
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	e747      	b.n	8000c1e <__aeabi_fmul+0x7a>
 8000d8e:	0c21      	lsrs	r1, r4, #16
 8000d90:	464a      	mov	r2, r9
 8000d92:	0424      	lsls	r4, r4, #16
 8000d94:	0c24      	lsrs	r4, r4, #16
 8000d96:	0027      	movs	r7, r4
 8000d98:	0c10      	lsrs	r0, r2, #16
 8000d9a:	0412      	lsls	r2, r2, #16
 8000d9c:	0c12      	lsrs	r2, r2, #16
 8000d9e:	4344      	muls	r4, r0
 8000da0:	4357      	muls	r7, r2
 8000da2:	4348      	muls	r0, r1
 8000da4:	4351      	muls	r1, r2
 8000da6:	0c3a      	lsrs	r2, r7, #16
 8000da8:	1909      	adds	r1, r1, r4
 8000daa:	1852      	adds	r2, r2, r1
 8000dac:	4294      	cmp	r4, r2
 8000dae:	d903      	bls.n	8000db8 <__aeabi_fmul+0x214>
 8000db0:	2180      	movs	r1, #128	@ 0x80
 8000db2:	0249      	lsls	r1, r1, #9
 8000db4:	468c      	mov	ip, r1
 8000db6:	4460      	add	r0, ip
 8000db8:	043f      	lsls	r7, r7, #16
 8000dba:	0411      	lsls	r1, r2, #16
 8000dbc:	0c3f      	lsrs	r7, r7, #16
 8000dbe:	19c9      	adds	r1, r1, r7
 8000dc0:	018c      	lsls	r4, r1, #6
 8000dc2:	1e67      	subs	r7, r4, #1
 8000dc4:	41bc      	sbcs	r4, r7
 8000dc6:	0c12      	lsrs	r2, r2, #16
 8000dc8:	0e89      	lsrs	r1, r1, #26
 8000dca:	1812      	adds	r2, r2, r0
 8000dcc:	430c      	orrs	r4, r1
 8000dce:	0192      	lsls	r2, r2, #6
 8000dd0:	4314      	orrs	r4, r2
 8000dd2:	0112      	lsls	r2, r2, #4
 8000dd4:	d50e      	bpl.n	8000df4 <__aeabi_fmul+0x250>
 8000dd6:	2301      	movs	r3, #1
 8000dd8:	0862      	lsrs	r2, r4, #1
 8000dda:	401c      	ands	r4, r3
 8000ddc:	4314      	orrs	r4, r2
 8000dde:	e749      	b.n	8000c74 <__aeabi_fmul+0xd0>
 8000de0:	003e      	movs	r6, r7
 8000de2:	46a1      	mov	r9, r4
 8000de4:	2280      	movs	r2, #128	@ 0x80
 8000de6:	464b      	mov	r3, r9
 8000de8:	03d2      	lsls	r2, r2, #15
 8000dea:	431a      	orrs	r2, r3
 8000dec:	0252      	lsls	r2, r2, #9
 8000dee:	20ff      	movs	r0, #255	@ 0xff
 8000df0:	0a52      	lsrs	r2, r2, #9
 8000df2:	e714      	b.n	8000c1e <__aeabi_fmul+0x7a>
 8000df4:	001d      	movs	r5, r3
 8000df6:	e73d      	b.n	8000c74 <__aeabi_fmul+0xd0>
 8000df8:	0192      	lsls	r2, r2, #6
 8000dfa:	2000      	movs	r0, #0
 8000dfc:	0a52      	lsrs	r2, r2, #9
 8000dfe:	e70e      	b.n	8000c1e <__aeabi_fmul+0x7a>
 8000e00:	290f      	cmp	r1, #15
 8000e02:	d1ed      	bne.n	8000de0 <__aeabi_fmul+0x23c>
 8000e04:	2280      	movs	r2, #128	@ 0x80
 8000e06:	464b      	mov	r3, r9
 8000e08:	03d2      	lsls	r2, r2, #15
 8000e0a:	4213      	tst	r3, r2
 8000e0c:	d0ea      	beq.n	8000de4 <__aeabi_fmul+0x240>
 8000e0e:	4214      	tst	r4, r2
 8000e10:	d1e8      	bne.n	8000de4 <__aeabi_fmul+0x240>
 8000e12:	003e      	movs	r6, r7
 8000e14:	20ff      	movs	r0, #255	@ 0xff
 8000e16:	4322      	orrs	r2, r4
 8000e18:	e701      	b.n	8000c1e <__aeabi_fmul+0x7a>
 8000e1a:	46c0      	nop			@ (mov r8, r8)
 8000e1c:	f7ffffff 	.word	0xf7ffffff

08000e20 <__aeabi_fsub>:
 8000e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e22:	4647      	mov	r7, r8
 8000e24:	46ce      	mov	lr, r9
 8000e26:	024e      	lsls	r6, r1, #9
 8000e28:	0243      	lsls	r3, r0, #9
 8000e2a:	0045      	lsls	r5, r0, #1
 8000e2c:	0a72      	lsrs	r2, r6, #9
 8000e2e:	0fc4      	lsrs	r4, r0, #31
 8000e30:	0048      	lsls	r0, r1, #1
 8000e32:	b580      	push	{r7, lr}
 8000e34:	4694      	mov	ip, r2
 8000e36:	0a5f      	lsrs	r7, r3, #9
 8000e38:	0e2d      	lsrs	r5, r5, #24
 8000e3a:	099b      	lsrs	r3, r3, #6
 8000e3c:	0e00      	lsrs	r0, r0, #24
 8000e3e:	0fc9      	lsrs	r1, r1, #31
 8000e40:	09b6      	lsrs	r6, r6, #6
 8000e42:	28ff      	cmp	r0, #255	@ 0xff
 8000e44:	d024      	beq.n	8000e90 <__aeabi_fsub+0x70>
 8000e46:	2201      	movs	r2, #1
 8000e48:	4051      	eors	r1, r2
 8000e4a:	1a2a      	subs	r2, r5, r0
 8000e4c:	428c      	cmp	r4, r1
 8000e4e:	d00f      	beq.n	8000e70 <__aeabi_fsub+0x50>
 8000e50:	2a00      	cmp	r2, #0
 8000e52:	dc00      	bgt.n	8000e56 <__aeabi_fsub+0x36>
 8000e54:	e16a      	b.n	800112c <__aeabi_fsub+0x30c>
 8000e56:	2800      	cmp	r0, #0
 8000e58:	d135      	bne.n	8000ec6 <__aeabi_fsub+0xa6>
 8000e5a:	2e00      	cmp	r6, #0
 8000e5c:	d100      	bne.n	8000e60 <__aeabi_fsub+0x40>
 8000e5e:	e0a2      	b.n	8000fa6 <__aeabi_fsub+0x186>
 8000e60:	1e51      	subs	r1, r2, #1
 8000e62:	2a01      	cmp	r2, #1
 8000e64:	d100      	bne.n	8000e68 <__aeabi_fsub+0x48>
 8000e66:	e124      	b.n	80010b2 <__aeabi_fsub+0x292>
 8000e68:	2aff      	cmp	r2, #255	@ 0xff
 8000e6a:	d021      	beq.n	8000eb0 <__aeabi_fsub+0x90>
 8000e6c:	000a      	movs	r2, r1
 8000e6e:	e02f      	b.n	8000ed0 <__aeabi_fsub+0xb0>
 8000e70:	2a00      	cmp	r2, #0
 8000e72:	dc00      	bgt.n	8000e76 <__aeabi_fsub+0x56>
 8000e74:	e167      	b.n	8001146 <__aeabi_fsub+0x326>
 8000e76:	2800      	cmp	r0, #0
 8000e78:	d05e      	beq.n	8000f38 <__aeabi_fsub+0x118>
 8000e7a:	2dff      	cmp	r5, #255	@ 0xff
 8000e7c:	d018      	beq.n	8000eb0 <__aeabi_fsub+0x90>
 8000e7e:	2180      	movs	r1, #128	@ 0x80
 8000e80:	04c9      	lsls	r1, r1, #19
 8000e82:	430e      	orrs	r6, r1
 8000e84:	2a1b      	cmp	r2, #27
 8000e86:	dc00      	bgt.n	8000e8a <__aeabi_fsub+0x6a>
 8000e88:	e076      	b.n	8000f78 <__aeabi_fsub+0x158>
 8000e8a:	002a      	movs	r2, r5
 8000e8c:	3301      	adds	r3, #1
 8000e8e:	e032      	b.n	8000ef6 <__aeabi_fsub+0xd6>
 8000e90:	002a      	movs	r2, r5
 8000e92:	3aff      	subs	r2, #255	@ 0xff
 8000e94:	4691      	mov	r9, r2
 8000e96:	2e00      	cmp	r6, #0
 8000e98:	d042      	beq.n	8000f20 <__aeabi_fsub+0x100>
 8000e9a:	428c      	cmp	r4, r1
 8000e9c:	d055      	beq.n	8000f4a <__aeabi_fsub+0x12a>
 8000e9e:	464a      	mov	r2, r9
 8000ea0:	2a00      	cmp	r2, #0
 8000ea2:	d100      	bne.n	8000ea6 <__aeabi_fsub+0x86>
 8000ea4:	e09c      	b.n	8000fe0 <__aeabi_fsub+0x1c0>
 8000ea6:	2d00      	cmp	r5, #0
 8000ea8:	d100      	bne.n	8000eac <__aeabi_fsub+0x8c>
 8000eaa:	e077      	b.n	8000f9c <__aeabi_fsub+0x17c>
 8000eac:	000c      	movs	r4, r1
 8000eae:	0033      	movs	r3, r6
 8000eb0:	08db      	lsrs	r3, r3, #3
 8000eb2:	2b00      	cmp	r3, #0
 8000eb4:	d100      	bne.n	8000eb8 <__aeabi_fsub+0x98>
 8000eb6:	e06e      	b.n	8000f96 <__aeabi_fsub+0x176>
 8000eb8:	2280      	movs	r2, #128	@ 0x80
 8000eba:	03d2      	lsls	r2, r2, #15
 8000ebc:	4313      	orrs	r3, r2
 8000ebe:	025b      	lsls	r3, r3, #9
 8000ec0:	20ff      	movs	r0, #255	@ 0xff
 8000ec2:	0a5b      	lsrs	r3, r3, #9
 8000ec4:	e024      	b.n	8000f10 <__aeabi_fsub+0xf0>
 8000ec6:	2dff      	cmp	r5, #255	@ 0xff
 8000ec8:	d0f2      	beq.n	8000eb0 <__aeabi_fsub+0x90>
 8000eca:	2180      	movs	r1, #128	@ 0x80
 8000ecc:	04c9      	lsls	r1, r1, #19
 8000ece:	430e      	orrs	r6, r1
 8000ed0:	2101      	movs	r1, #1
 8000ed2:	2a1b      	cmp	r2, #27
 8000ed4:	dc08      	bgt.n	8000ee8 <__aeabi_fsub+0xc8>
 8000ed6:	0031      	movs	r1, r6
 8000ed8:	2020      	movs	r0, #32
 8000eda:	40d1      	lsrs	r1, r2
 8000edc:	1a82      	subs	r2, r0, r2
 8000ede:	4096      	lsls	r6, r2
 8000ee0:	0032      	movs	r2, r6
 8000ee2:	1e50      	subs	r0, r2, #1
 8000ee4:	4182      	sbcs	r2, r0
 8000ee6:	4311      	orrs	r1, r2
 8000ee8:	1a5b      	subs	r3, r3, r1
 8000eea:	015a      	lsls	r2, r3, #5
 8000eec:	d460      	bmi.n	8000fb0 <__aeabi_fsub+0x190>
 8000eee:	2107      	movs	r1, #7
 8000ef0:	002a      	movs	r2, r5
 8000ef2:	4019      	ands	r1, r3
 8000ef4:	d057      	beq.n	8000fa6 <__aeabi_fsub+0x186>
 8000ef6:	210f      	movs	r1, #15
 8000ef8:	4019      	ands	r1, r3
 8000efa:	2904      	cmp	r1, #4
 8000efc:	d000      	beq.n	8000f00 <__aeabi_fsub+0xe0>
 8000efe:	3304      	adds	r3, #4
 8000f00:	0159      	lsls	r1, r3, #5
 8000f02:	d550      	bpl.n	8000fa6 <__aeabi_fsub+0x186>
 8000f04:	1c50      	adds	r0, r2, #1
 8000f06:	2afe      	cmp	r2, #254	@ 0xfe
 8000f08:	d045      	beq.n	8000f96 <__aeabi_fsub+0x176>
 8000f0a:	019b      	lsls	r3, r3, #6
 8000f0c:	b2c0      	uxtb	r0, r0
 8000f0e:	0a5b      	lsrs	r3, r3, #9
 8000f10:	05c0      	lsls	r0, r0, #23
 8000f12:	4318      	orrs	r0, r3
 8000f14:	07e4      	lsls	r4, r4, #31
 8000f16:	4320      	orrs	r0, r4
 8000f18:	bcc0      	pop	{r6, r7}
 8000f1a:	46b9      	mov	r9, r7
 8000f1c:	46b0      	mov	r8, r6
 8000f1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f20:	2201      	movs	r2, #1
 8000f22:	4051      	eors	r1, r2
 8000f24:	428c      	cmp	r4, r1
 8000f26:	d1ba      	bne.n	8000e9e <__aeabi_fsub+0x7e>
 8000f28:	464a      	mov	r2, r9
 8000f2a:	2a00      	cmp	r2, #0
 8000f2c:	d010      	beq.n	8000f50 <__aeabi_fsub+0x130>
 8000f2e:	2d00      	cmp	r5, #0
 8000f30:	d100      	bne.n	8000f34 <__aeabi_fsub+0x114>
 8000f32:	e098      	b.n	8001066 <__aeabi_fsub+0x246>
 8000f34:	2300      	movs	r3, #0
 8000f36:	e7bb      	b.n	8000eb0 <__aeabi_fsub+0x90>
 8000f38:	2e00      	cmp	r6, #0
 8000f3a:	d034      	beq.n	8000fa6 <__aeabi_fsub+0x186>
 8000f3c:	1e51      	subs	r1, r2, #1
 8000f3e:	2a01      	cmp	r2, #1
 8000f40:	d06e      	beq.n	8001020 <__aeabi_fsub+0x200>
 8000f42:	2aff      	cmp	r2, #255	@ 0xff
 8000f44:	d0b4      	beq.n	8000eb0 <__aeabi_fsub+0x90>
 8000f46:	000a      	movs	r2, r1
 8000f48:	e79c      	b.n	8000e84 <__aeabi_fsub+0x64>
 8000f4a:	2a00      	cmp	r2, #0
 8000f4c:	d000      	beq.n	8000f50 <__aeabi_fsub+0x130>
 8000f4e:	e088      	b.n	8001062 <__aeabi_fsub+0x242>
 8000f50:	20fe      	movs	r0, #254	@ 0xfe
 8000f52:	1c6a      	adds	r2, r5, #1
 8000f54:	4210      	tst	r0, r2
 8000f56:	d000      	beq.n	8000f5a <__aeabi_fsub+0x13a>
 8000f58:	e092      	b.n	8001080 <__aeabi_fsub+0x260>
 8000f5a:	2d00      	cmp	r5, #0
 8000f5c:	d000      	beq.n	8000f60 <__aeabi_fsub+0x140>
 8000f5e:	e0a4      	b.n	80010aa <__aeabi_fsub+0x28a>
 8000f60:	2b00      	cmp	r3, #0
 8000f62:	d100      	bne.n	8000f66 <__aeabi_fsub+0x146>
 8000f64:	e0cb      	b.n	80010fe <__aeabi_fsub+0x2de>
 8000f66:	2e00      	cmp	r6, #0
 8000f68:	d000      	beq.n	8000f6c <__aeabi_fsub+0x14c>
 8000f6a:	e0ca      	b.n	8001102 <__aeabi_fsub+0x2e2>
 8000f6c:	2200      	movs	r2, #0
 8000f6e:	08db      	lsrs	r3, r3, #3
 8000f70:	025b      	lsls	r3, r3, #9
 8000f72:	0a5b      	lsrs	r3, r3, #9
 8000f74:	b2d0      	uxtb	r0, r2
 8000f76:	e7cb      	b.n	8000f10 <__aeabi_fsub+0xf0>
 8000f78:	0031      	movs	r1, r6
 8000f7a:	2020      	movs	r0, #32
 8000f7c:	40d1      	lsrs	r1, r2
 8000f7e:	1a82      	subs	r2, r0, r2
 8000f80:	4096      	lsls	r6, r2
 8000f82:	0032      	movs	r2, r6
 8000f84:	1e50      	subs	r0, r2, #1
 8000f86:	4182      	sbcs	r2, r0
 8000f88:	430a      	orrs	r2, r1
 8000f8a:	189b      	adds	r3, r3, r2
 8000f8c:	015a      	lsls	r2, r3, #5
 8000f8e:	d5ae      	bpl.n	8000eee <__aeabi_fsub+0xce>
 8000f90:	1c6a      	adds	r2, r5, #1
 8000f92:	2dfe      	cmp	r5, #254	@ 0xfe
 8000f94:	d14a      	bne.n	800102c <__aeabi_fsub+0x20c>
 8000f96:	20ff      	movs	r0, #255	@ 0xff
 8000f98:	2300      	movs	r3, #0
 8000f9a:	e7b9      	b.n	8000f10 <__aeabi_fsub+0xf0>
 8000f9c:	22ff      	movs	r2, #255	@ 0xff
 8000f9e:	2b00      	cmp	r3, #0
 8000fa0:	d14b      	bne.n	800103a <__aeabi_fsub+0x21a>
 8000fa2:	000c      	movs	r4, r1
 8000fa4:	0033      	movs	r3, r6
 8000fa6:	08db      	lsrs	r3, r3, #3
 8000fa8:	2aff      	cmp	r2, #255	@ 0xff
 8000faa:	d100      	bne.n	8000fae <__aeabi_fsub+0x18e>
 8000fac:	e781      	b.n	8000eb2 <__aeabi_fsub+0x92>
 8000fae:	e7df      	b.n	8000f70 <__aeabi_fsub+0x150>
 8000fb0:	019f      	lsls	r7, r3, #6
 8000fb2:	09bf      	lsrs	r7, r7, #6
 8000fb4:	0038      	movs	r0, r7
 8000fb6:	f000 f985 	bl	80012c4 <__clzsi2>
 8000fba:	3805      	subs	r0, #5
 8000fbc:	4087      	lsls	r7, r0
 8000fbe:	4285      	cmp	r5, r0
 8000fc0:	dc21      	bgt.n	8001006 <__aeabi_fsub+0x1e6>
 8000fc2:	003b      	movs	r3, r7
 8000fc4:	2120      	movs	r1, #32
 8000fc6:	1b42      	subs	r2, r0, r5
 8000fc8:	3201      	adds	r2, #1
 8000fca:	40d3      	lsrs	r3, r2
 8000fcc:	1a8a      	subs	r2, r1, r2
 8000fce:	4097      	lsls	r7, r2
 8000fd0:	1e7a      	subs	r2, r7, #1
 8000fd2:	4197      	sbcs	r7, r2
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	433b      	orrs	r3, r7
 8000fd8:	0759      	lsls	r1, r3, #29
 8000fda:	d000      	beq.n	8000fde <__aeabi_fsub+0x1be>
 8000fdc:	e78b      	b.n	8000ef6 <__aeabi_fsub+0xd6>
 8000fde:	e78f      	b.n	8000f00 <__aeabi_fsub+0xe0>
 8000fe0:	20fe      	movs	r0, #254	@ 0xfe
 8000fe2:	1c6a      	adds	r2, r5, #1
 8000fe4:	4210      	tst	r0, r2
 8000fe6:	d112      	bne.n	800100e <__aeabi_fsub+0x1ee>
 8000fe8:	2d00      	cmp	r5, #0
 8000fea:	d152      	bne.n	8001092 <__aeabi_fsub+0x272>
 8000fec:	2b00      	cmp	r3, #0
 8000fee:	d07c      	beq.n	80010ea <__aeabi_fsub+0x2ca>
 8000ff0:	2e00      	cmp	r6, #0
 8000ff2:	d0bb      	beq.n	8000f6c <__aeabi_fsub+0x14c>
 8000ff4:	1b9a      	subs	r2, r3, r6
 8000ff6:	0150      	lsls	r0, r2, #5
 8000ff8:	d400      	bmi.n	8000ffc <__aeabi_fsub+0x1dc>
 8000ffa:	e08b      	b.n	8001114 <__aeabi_fsub+0x2f4>
 8000ffc:	2401      	movs	r4, #1
 8000ffe:	2200      	movs	r2, #0
 8001000:	1af3      	subs	r3, r6, r3
 8001002:	400c      	ands	r4, r1
 8001004:	e7e8      	b.n	8000fd8 <__aeabi_fsub+0x1b8>
 8001006:	4b56      	ldr	r3, [pc, #344]	@ (8001160 <__aeabi_fsub+0x340>)
 8001008:	1a2a      	subs	r2, r5, r0
 800100a:	403b      	ands	r3, r7
 800100c:	e7e4      	b.n	8000fd8 <__aeabi_fsub+0x1b8>
 800100e:	1b9f      	subs	r7, r3, r6
 8001010:	017a      	lsls	r2, r7, #5
 8001012:	d446      	bmi.n	80010a2 <__aeabi_fsub+0x282>
 8001014:	2f00      	cmp	r7, #0
 8001016:	d1cd      	bne.n	8000fb4 <__aeabi_fsub+0x194>
 8001018:	2400      	movs	r4, #0
 800101a:	2000      	movs	r0, #0
 800101c:	2300      	movs	r3, #0
 800101e:	e777      	b.n	8000f10 <__aeabi_fsub+0xf0>
 8001020:	199b      	adds	r3, r3, r6
 8001022:	2501      	movs	r5, #1
 8001024:	3201      	adds	r2, #1
 8001026:	0159      	lsls	r1, r3, #5
 8001028:	d400      	bmi.n	800102c <__aeabi_fsub+0x20c>
 800102a:	e760      	b.n	8000eee <__aeabi_fsub+0xce>
 800102c:	2101      	movs	r1, #1
 800102e:	484d      	ldr	r0, [pc, #308]	@ (8001164 <__aeabi_fsub+0x344>)
 8001030:	4019      	ands	r1, r3
 8001032:	085b      	lsrs	r3, r3, #1
 8001034:	4003      	ands	r3, r0
 8001036:	430b      	orrs	r3, r1
 8001038:	e7ce      	b.n	8000fd8 <__aeabi_fsub+0x1b8>
 800103a:	1e57      	subs	r7, r2, #1
 800103c:	2a01      	cmp	r2, #1
 800103e:	d05a      	beq.n	80010f6 <__aeabi_fsub+0x2d6>
 8001040:	000c      	movs	r4, r1
 8001042:	2aff      	cmp	r2, #255	@ 0xff
 8001044:	d033      	beq.n	80010ae <__aeabi_fsub+0x28e>
 8001046:	2201      	movs	r2, #1
 8001048:	2f1b      	cmp	r7, #27
 800104a:	dc07      	bgt.n	800105c <__aeabi_fsub+0x23c>
 800104c:	2120      	movs	r1, #32
 800104e:	1bc9      	subs	r1, r1, r7
 8001050:	001a      	movs	r2, r3
 8001052:	408b      	lsls	r3, r1
 8001054:	40fa      	lsrs	r2, r7
 8001056:	1e59      	subs	r1, r3, #1
 8001058:	418b      	sbcs	r3, r1
 800105a:	431a      	orrs	r2, r3
 800105c:	0005      	movs	r5, r0
 800105e:	1ab3      	subs	r3, r6, r2
 8001060:	e743      	b.n	8000eea <__aeabi_fsub+0xca>
 8001062:	2d00      	cmp	r5, #0
 8001064:	d123      	bne.n	80010ae <__aeabi_fsub+0x28e>
 8001066:	22ff      	movs	r2, #255	@ 0xff
 8001068:	2b00      	cmp	r3, #0
 800106a:	d09b      	beq.n	8000fa4 <__aeabi_fsub+0x184>
 800106c:	1e51      	subs	r1, r2, #1
 800106e:	2a01      	cmp	r2, #1
 8001070:	d0d6      	beq.n	8001020 <__aeabi_fsub+0x200>
 8001072:	2aff      	cmp	r2, #255	@ 0xff
 8001074:	d01b      	beq.n	80010ae <__aeabi_fsub+0x28e>
 8001076:	291b      	cmp	r1, #27
 8001078:	dd2c      	ble.n	80010d4 <__aeabi_fsub+0x2b4>
 800107a:	0002      	movs	r2, r0
 800107c:	1c73      	adds	r3, r6, #1
 800107e:	e73a      	b.n	8000ef6 <__aeabi_fsub+0xd6>
 8001080:	2aff      	cmp	r2, #255	@ 0xff
 8001082:	d088      	beq.n	8000f96 <__aeabi_fsub+0x176>
 8001084:	199b      	adds	r3, r3, r6
 8001086:	085b      	lsrs	r3, r3, #1
 8001088:	0759      	lsls	r1, r3, #29
 800108a:	d000      	beq.n	800108e <__aeabi_fsub+0x26e>
 800108c:	e733      	b.n	8000ef6 <__aeabi_fsub+0xd6>
 800108e:	08db      	lsrs	r3, r3, #3
 8001090:	e76e      	b.n	8000f70 <__aeabi_fsub+0x150>
 8001092:	2b00      	cmp	r3, #0
 8001094:	d110      	bne.n	80010b8 <__aeabi_fsub+0x298>
 8001096:	2e00      	cmp	r6, #0
 8001098:	d043      	beq.n	8001122 <__aeabi_fsub+0x302>
 800109a:	2401      	movs	r4, #1
 800109c:	0033      	movs	r3, r6
 800109e:	400c      	ands	r4, r1
 80010a0:	e706      	b.n	8000eb0 <__aeabi_fsub+0x90>
 80010a2:	2401      	movs	r4, #1
 80010a4:	1af7      	subs	r7, r6, r3
 80010a6:	400c      	ands	r4, r1
 80010a8:	e784      	b.n	8000fb4 <__aeabi_fsub+0x194>
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d104      	bne.n	80010b8 <__aeabi_fsub+0x298>
 80010ae:	0033      	movs	r3, r6
 80010b0:	e6fe      	b.n	8000eb0 <__aeabi_fsub+0x90>
 80010b2:	2501      	movs	r5, #1
 80010b4:	1b9b      	subs	r3, r3, r6
 80010b6:	e718      	b.n	8000eea <__aeabi_fsub+0xca>
 80010b8:	2e00      	cmp	r6, #0
 80010ba:	d100      	bne.n	80010be <__aeabi_fsub+0x29e>
 80010bc:	e6f8      	b.n	8000eb0 <__aeabi_fsub+0x90>
 80010be:	2280      	movs	r2, #128	@ 0x80
 80010c0:	03d2      	lsls	r2, r2, #15
 80010c2:	4297      	cmp	r7, r2
 80010c4:	d304      	bcc.n	80010d0 <__aeabi_fsub+0x2b0>
 80010c6:	4594      	cmp	ip, r2
 80010c8:	d202      	bcs.n	80010d0 <__aeabi_fsub+0x2b0>
 80010ca:	2401      	movs	r4, #1
 80010cc:	0033      	movs	r3, r6
 80010ce:	400c      	ands	r4, r1
 80010d0:	08db      	lsrs	r3, r3, #3
 80010d2:	e6f1      	b.n	8000eb8 <__aeabi_fsub+0x98>
 80010d4:	001a      	movs	r2, r3
 80010d6:	2520      	movs	r5, #32
 80010d8:	40ca      	lsrs	r2, r1
 80010da:	1a69      	subs	r1, r5, r1
 80010dc:	408b      	lsls	r3, r1
 80010de:	1e59      	subs	r1, r3, #1
 80010e0:	418b      	sbcs	r3, r1
 80010e2:	4313      	orrs	r3, r2
 80010e4:	0005      	movs	r5, r0
 80010e6:	199b      	adds	r3, r3, r6
 80010e8:	e750      	b.n	8000f8c <__aeabi_fsub+0x16c>
 80010ea:	2e00      	cmp	r6, #0
 80010ec:	d094      	beq.n	8001018 <__aeabi_fsub+0x1f8>
 80010ee:	2401      	movs	r4, #1
 80010f0:	0033      	movs	r3, r6
 80010f2:	400c      	ands	r4, r1
 80010f4:	e73a      	b.n	8000f6c <__aeabi_fsub+0x14c>
 80010f6:	000c      	movs	r4, r1
 80010f8:	2501      	movs	r5, #1
 80010fa:	1af3      	subs	r3, r6, r3
 80010fc:	e6f5      	b.n	8000eea <__aeabi_fsub+0xca>
 80010fe:	0033      	movs	r3, r6
 8001100:	e734      	b.n	8000f6c <__aeabi_fsub+0x14c>
 8001102:	199b      	adds	r3, r3, r6
 8001104:	2200      	movs	r2, #0
 8001106:	0159      	lsls	r1, r3, #5
 8001108:	d5c1      	bpl.n	800108e <__aeabi_fsub+0x26e>
 800110a:	4a15      	ldr	r2, [pc, #84]	@ (8001160 <__aeabi_fsub+0x340>)
 800110c:	4013      	ands	r3, r2
 800110e:	08db      	lsrs	r3, r3, #3
 8001110:	2201      	movs	r2, #1
 8001112:	e72d      	b.n	8000f70 <__aeabi_fsub+0x150>
 8001114:	2a00      	cmp	r2, #0
 8001116:	d100      	bne.n	800111a <__aeabi_fsub+0x2fa>
 8001118:	e77e      	b.n	8001018 <__aeabi_fsub+0x1f8>
 800111a:	0013      	movs	r3, r2
 800111c:	2200      	movs	r2, #0
 800111e:	08db      	lsrs	r3, r3, #3
 8001120:	e726      	b.n	8000f70 <__aeabi_fsub+0x150>
 8001122:	2380      	movs	r3, #128	@ 0x80
 8001124:	2400      	movs	r4, #0
 8001126:	20ff      	movs	r0, #255	@ 0xff
 8001128:	03db      	lsls	r3, r3, #15
 800112a:	e6f1      	b.n	8000f10 <__aeabi_fsub+0xf0>
 800112c:	2a00      	cmp	r2, #0
 800112e:	d100      	bne.n	8001132 <__aeabi_fsub+0x312>
 8001130:	e756      	b.n	8000fe0 <__aeabi_fsub+0x1c0>
 8001132:	1b47      	subs	r7, r0, r5
 8001134:	003a      	movs	r2, r7
 8001136:	2d00      	cmp	r5, #0
 8001138:	d100      	bne.n	800113c <__aeabi_fsub+0x31c>
 800113a:	e730      	b.n	8000f9e <__aeabi_fsub+0x17e>
 800113c:	2280      	movs	r2, #128	@ 0x80
 800113e:	04d2      	lsls	r2, r2, #19
 8001140:	000c      	movs	r4, r1
 8001142:	4313      	orrs	r3, r2
 8001144:	e77f      	b.n	8001046 <__aeabi_fsub+0x226>
 8001146:	2a00      	cmp	r2, #0
 8001148:	d100      	bne.n	800114c <__aeabi_fsub+0x32c>
 800114a:	e701      	b.n	8000f50 <__aeabi_fsub+0x130>
 800114c:	1b41      	subs	r1, r0, r5
 800114e:	2d00      	cmp	r5, #0
 8001150:	d101      	bne.n	8001156 <__aeabi_fsub+0x336>
 8001152:	000a      	movs	r2, r1
 8001154:	e788      	b.n	8001068 <__aeabi_fsub+0x248>
 8001156:	2280      	movs	r2, #128	@ 0x80
 8001158:	04d2      	lsls	r2, r2, #19
 800115a:	4313      	orrs	r3, r2
 800115c:	e78b      	b.n	8001076 <__aeabi_fsub+0x256>
 800115e:	46c0      	nop			@ (mov r8, r8)
 8001160:	fbffffff 	.word	0xfbffffff
 8001164:	7dffffff 	.word	0x7dffffff

08001168 <__aeabi_f2iz>:
 8001168:	0241      	lsls	r1, r0, #9
 800116a:	0042      	lsls	r2, r0, #1
 800116c:	0fc3      	lsrs	r3, r0, #31
 800116e:	0a49      	lsrs	r1, r1, #9
 8001170:	2000      	movs	r0, #0
 8001172:	0e12      	lsrs	r2, r2, #24
 8001174:	2a7e      	cmp	r2, #126	@ 0x7e
 8001176:	dd03      	ble.n	8001180 <__aeabi_f2iz+0x18>
 8001178:	2a9d      	cmp	r2, #157	@ 0x9d
 800117a:	dd02      	ble.n	8001182 <__aeabi_f2iz+0x1a>
 800117c:	4a09      	ldr	r2, [pc, #36]	@ (80011a4 <__aeabi_f2iz+0x3c>)
 800117e:	1898      	adds	r0, r3, r2
 8001180:	4770      	bx	lr
 8001182:	2080      	movs	r0, #128	@ 0x80
 8001184:	0400      	lsls	r0, r0, #16
 8001186:	4301      	orrs	r1, r0
 8001188:	2a95      	cmp	r2, #149	@ 0x95
 800118a:	dc07      	bgt.n	800119c <__aeabi_f2iz+0x34>
 800118c:	2096      	movs	r0, #150	@ 0x96
 800118e:	1a82      	subs	r2, r0, r2
 8001190:	40d1      	lsrs	r1, r2
 8001192:	4248      	negs	r0, r1
 8001194:	2b00      	cmp	r3, #0
 8001196:	d1f3      	bne.n	8001180 <__aeabi_f2iz+0x18>
 8001198:	0008      	movs	r0, r1
 800119a:	e7f1      	b.n	8001180 <__aeabi_f2iz+0x18>
 800119c:	3a96      	subs	r2, #150	@ 0x96
 800119e:	4091      	lsls	r1, r2
 80011a0:	e7f7      	b.n	8001192 <__aeabi_f2iz+0x2a>
 80011a2:	46c0      	nop			@ (mov r8, r8)
 80011a4:	7fffffff 	.word	0x7fffffff

080011a8 <__aeabi_i2f>:
 80011a8:	b570      	push	{r4, r5, r6, lr}
 80011aa:	2800      	cmp	r0, #0
 80011ac:	d013      	beq.n	80011d6 <__aeabi_i2f+0x2e>
 80011ae:	17c3      	asrs	r3, r0, #31
 80011b0:	18c5      	adds	r5, r0, r3
 80011b2:	405d      	eors	r5, r3
 80011b4:	0fc4      	lsrs	r4, r0, #31
 80011b6:	0028      	movs	r0, r5
 80011b8:	f000 f884 	bl	80012c4 <__clzsi2>
 80011bc:	239e      	movs	r3, #158	@ 0x9e
 80011be:	0001      	movs	r1, r0
 80011c0:	1a1b      	subs	r3, r3, r0
 80011c2:	2b96      	cmp	r3, #150	@ 0x96
 80011c4:	dc0f      	bgt.n	80011e6 <__aeabi_i2f+0x3e>
 80011c6:	2808      	cmp	r0, #8
 80011c8:	d034      	beq.n	8001234 <__aeabi_i2f+0x8c>
 80011ca:	3908      	subs	r1, #8
 80011cc:	408d      	lsls	r5, r1
 80011ce:	026d      	lsls	r5, r5, #9
 80011d0:	0a6d      	lsrs	r5, r5, #9
 80011d2:	b2d8      	uxtb	r0, r3
 80011d4:	e002      	b.n	80011dc <__aeabi_i2f+0x34>
 80011d6:	2400      	movs	r4, #0
 80011d8:	2000      	movs	r0, #0
 80011da:	2500      	movs	r5, #0
 80011dc:	05c0      	lsls	r0, r0, #23
 80011de:	4328      	orrs	r0, r5
 80011e0:	07e4      	lsls	r4, r4, #31
 80011e2:	4320      	orrs	r0, r4
 80011e4:	bd70      	pop	{r4, r5, r6, pc}
 80011e6:	2b99      	cmp	r3, #153	@ 0x99
 80011e8:	dc16      	bgt.n	8001218 <__aeabi_i2f+0x70>
 80011ea:	1f42      	subs	r2, r0, #5
 80011ec:	2805      	cmp	r0, #5
 80011ee:	d000      	beq.n	80011f2 <__aeabi_i2f+0x4a>
 80011f0:	4095      	lsls	r5, r2
 80011f2:	002a      	movs	r2, r5
 80011f4:	4811      	ldr	r0, [pc, #68]	@ (800123c <__aeabi_i2f+0x94>)
 80011f6:	4002      	ands	r2, r0
 80011f8:	076e      	lsls	r6, r5, #29
 80011fa:	d009      	beq.n	8001210 <__aeabi_i2f+0x68>
 80011fc:	260f      	movs	r6, #15
 80011fe:	4035      	ands	r5, r6
 8001200:	2d04      	cmp	r5, #4
 8001202:	d005      	beq.n	8001210 <__aeabi_i2f+0x68>
 8001204:	3204      	adds	r2, #4
 8001206:	0155      	lsls	r5, r2, #5
 8001208:	d502      	bpl.n	8001210 <__aeabi_i2f+0x68>
 800120a:	239f      	movs	r3, #159	@ 0x9f
 800120c:	4002      	ands	r2, r0
 800120e:	1a5b      	subs	r3, r3, r1
 8001210:	0192      	lsls	r2, r2, #6
 8001212:	0a55      	lsrs	r5, r2, #9
 8001214:	b2d8      	uxtb	r0, r3
 8001216:	e7e1      	b.n	80011dc <__aeabi_i2f+0x34>
 8001218:	2205      	movs	r2, #5
 800121a:	1a12      	subs	r2, r2, r0
 800121c:	0028      	movs	r0, r5
 800121e:	40d0      	lsrs	r0, r2
 8001220:	0002      	movs	r2, r0
 8001222:	0008      	movs	r0, r1
 8001224:	301b      	adds	r0, #27
 8001226:	4085      	lsls	r5, r0
 8001228:	0028      	movs	r0, r5
 800122a:	1e45      	subs	r5, r0, #1
 800122c:	41a8      	sbcs	r0, r5
 800122e:	4302      	orrs	r2, r0
 8001230:	0015      	movs	r5, r2
 8001232:	e7de      	b.n	80011f2 <__aeabi_i2f+0x4a>
 8001234:	026d      	lsls	r5, r5, #9
 8001236:	2096      	movs	r0, #150	@ 0x96
 8001238:	0a6d      	lsrs	r5, r5, #9
 800123a:	e7cf      	b.n	80011dc <__aeabi_i2f+0x34>
 800123c:	fbffffff 	.word	0xfbffffff

08001240 <__aeabi_ui2f>:
 8001240:	b570      	push	{r4, r5, r6, lr}
 8001242:	1e04      	subs	r4, r0, #0
 8001244:	d00e      	beq.n	8001264 <__aeabi_ui2f+0x24>
 8001246:	f000 f83d 	bl	80012c4 <__clzsi2>
 800124a:	239e      	movs	r3, #158	@ 0x9e
 800124c:	0001      	movs	r1, r0
 800124e:	1a1b      	subs	r3, r3, r0
 8001250:	2b96      	cmp	r3, #150	@ 0x96
 8001252:	dc0c      	bgt.n	800126e <__aeabi_ui2f+0x2e>
 8001254:	2808      	cmp	r0, #8
 8001256:	d02f      	beq.n	80012b8 <__aeabi_ui2f+0x78>
 8001258:	3908      	subs	r1, #8
 800125a:	408c      	lsls	r4, r1
 800125c:	0264      	lsls	r4, r4, #9
 800125e:	0a64      	lsrs	r4, r4, #9
 8001260:	b2d8      	uxtb	r0, r3
 8001262:	e001      	b.n	8001268 <__aeabi_ui2f+0x28>
 8001264:	2000      	movs	r0, #0
 8001266:	2400      	movs	r4, #0
 8001268:	05c0      	lsls	r0, r0, #23
 800126a:	4320      	orrs	r0, r4
 800126c:	bd70      	pop	{r4, r5, r6, pc}
 800126e:	2b99      	cmp	r3, #153	@ 0x99
 8001270:	dc16      	bgt.n	80012a0 <__aeabi_ui2f+0x60>
 8001272:	1f42      	subs	r2, r0, #5
 8001274:	2805      	cmp	r0, #5
 8001276:	d000      	beq.n	800127a <__aeabi_ui2f+0x3a>
 8001278:	4094      	lsls	r4, r2
 800127a:	0022      	movs	r2, r4
 800127c:	4810      	ldr	r0, [pc, #64]	@ (80012c0 <__aeabi_ui2f+0x80>)
 800127e:	4002      	ands	r2, r0
 8001280:	0765      	lsls	r5, r4, #29
 8001282:	d009      	beq.n	8001298 <__aeabi_ui2f+0x58>
 8001284:	250f      	movs	r5, #15
 8001286:	402c      	ands	r4, r5
 8001288:	2c04      	cmp	r4, #4
 800128a:	d005      	beq.n	8001298 <__aeabi_ui2f+0x58>
 800128c:	3204      	adds	r2, #4
 800128e:	0154      	lsls	r4, r2, #5
 8001290:	d502      	bpl.n	8001298 <__aeabi_ui2f+0x58>
 8001292:	239f      	movs	r3, #159	@ 0x9f
 8001294:	4002      	ands	r2, r0
 8001296:	1a5b      	subs	r3, r3, r1
 8001298:	0192      	lsls	r2, r2, #6
 800129a:	0a54      	lsrs	r4, r2, #9
 800129c:	b2d8      	uxtb	r0, r3
 800129e:	e7e3      	b.n	8001268 <__aeabi_ui2f+0x28>
 80012a0:	0002      	movs	r2, r0
 80012a2:	0020      	movs	r0, r4
 80012a4:	321b      	adds	r2, #27
 80012a6:	4090      	lsls	r0, r2
 80012a8:	0002      	movs	r2, r0
 80012aa:	1e50      	subs	r0, r2, #1
 80012ac:	4182      	sbcs	r2, r0
 80012ae:	2005      	movs	r0, #5
 80012b0:	1a40      	subs	r0, r0, r1
 80012b2:	40c4      	lsrs	r4, r0
 80012b4:	4314      	orrs	r4, r2
 80012b6:	e7e0      	b.n	800127a <__aeabi_ui2f+0x3a>
 80012b8:	0264      	lsls	r4, r4, #9
 80012ba:	2096      	movs	r0, #150	@ 0x96
 80012bc:	0a64      	lsrs	r4, r4, #9
 80012be:	e7d3      	b.n	8001268 <__aeabi_ui2f+0x28>
 80012c0:	fbffffff 	.word	0xfbffffff

080012c4 <__clzsi2>:
 80012c4:	211c      	movs	r1, #28
 80012c6:	2301      	movs	r3, #1
 80012c8:	041b      	lsls	r3, r3, #16
 80012ca:	4298      	cmp	r0, r3
 80012cc:	d301      	bcc.n	80012d2 <__clzsi2+0xe>
 80012ce:	0c00      	lsrs	r0, r0, #16
 80012d0:	3910      	subs	r1, #16
 80012d2:	0a1b      	lsrs	r3, r3, #8
 80012d4:	4298      	cmp	r0, r3
 80012d6:	d301      	bcc.n	80012dc <__clzsi2+0x18>
 80012d8:	0a00      	lsrs	r0, r0, #8
 80012da:	3908      	subs	r1, #8
 80012dc:	091b      	lsrs	r3, r3, #4
 80012de:	4298      	cmp	r0, r3
 80012e0:	d301      	bcc.n	80012e6 <__clzsi2+0x22>
 80012e2:	0900      	lsrs	r0, r0, #4
 80012e4:	3904      	subs	r1, #4
 80012e6:	a202      	add	r2, pc, #8	@ (adr r2, 80012f0 <__clzsi2+0x2c>)
 80012e8:	5c10      	ldrb	r0, [r2, r0]
 80012ea:	1840      	adds	r0, r0, r1
 80012ec:	4770      	bx	lr
 80012ee:	46c0      	nop			@ (mov r8, r8)
 80012f0:	02020304 	.word	0x02020304
 80012f4:	01010101 	.word	0x01010101
	...

08001300 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8001300:	4770      	bx	lr

08001302 <_ZN22MB1642ButtonController4initEv>:
#include <main.h>
#include <touchgfx/hal/HAL.hpp>

void MB1642ButtonController::init()
{
    previousState = 0;
 8001302:	2300      	movs	r3, #0
 8001304:	7103      	strb	r3, [r0, #4]
}
 8001306:	4770      	bx	lr

08001308 <_ZN22MB1642ButtonControllerD1Ev>:
#ifndef MB1642ABUTTONCONTROLLER_HPP_
#define MB1642ABUTTONCONTROLLER_HPP_

#include <platform/driver/button/ButtonController.hpp>

class MB1642ButtonController : public touchgfx::ButtonController
 8001308:	4770      	bx	lr

0800130a <_ZN22MB1642ButtonControllerD0Ev>:
 800130a:	b510      	push	{r4, lr}
 800130c:	0004      	movs	r4, r0
 800130e:	2108      	movs	r1, #8
 8001310:	f010 fbf9 	bl	8011b06 <_ZdlPvj>
 8001314:	0020      	movs	r0, r4
 8001316:	bd10      	pop	{r4, pc}

08001318 <_ZN22MB1642ButtonController11getKeyStateEv>:
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
    {
        return instance;
 8001318:	4b2f      	ldr	r3, [pc, #188]	@ (80013d8 <_ZN22MB1642ButtonController11getKeyStateEv+0xc0>)
     *
     * @return The current display orientation.
     */
    DisplayOrientation getDisplayOrientation() const
    {
        if (DISPLAY_ROTATION == rotate0)
 800131a:	4a30      	ldr	r2, [pc, #192]	@ (80013dc <_ZN22MB1642ButtonController11getKeyStateEv+0xc4>)
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	7812      	ldrb	r2, [r2, #0]
 8001320:	3334      	adds	r3, #52	@ 0x34
    }
    return false;
}

uint8_t MB1642ButtonController::getKeyState(void)
{
 8001322:	b510      	push	{r4, lr}
 8001324:	781b      	ldrb	r3, [r3, #0]
 8001326:	2a00      	cmp	r2, #0
 8001328:	d029      	beq.n	800137e <_ZN22MB1642ButtonController11getKeyStateEv+0x66>
        {
            return nativeDisplayOrientation;
        }
        return (nativeDisplayOrientation == ORIENTATION_LANDSCAPE ? ORIENTATION_PORTRAIT : ORIENTATION_LANDSCAPE);
 800132a:	2b00      	cmp	r3, #0
 800132c:	d029      	beq.n	8001382 <_ZN22MB1642ButtonController11getKeyStateEv+0x6a>
            keyPressed = '0';
        }
    }
    else
    {
        if (HAL_GPIO_ReadPin(BUTTON_CENTER_GPIO_Port, BUTTON_CENTER_Pin) == GPIO_PIN_RESET)
 800132e:	2180      	movs	r1, #128	@ 0x80
 8001330:	482b      	ldr	r0, [pc, #172]	@ (80013e0 <_ZN22MB1642ButtonController11getKeyStateEv+0xc8>)
 8001332:	f004 ffcf 	bl	80062d4 <HAL_GPIO_ReadPin>
 8001336:	2800      	cmp	r0, #0
 8001338:	d029      	beq.n	800138e <_ZN22MB1642ButtonController11getKeyStateEv+0x76>
        {
            keyPressed = '5'; // Corresponds to keyboard keypad enter
        }
        else if (HAL_GPIO_ReadPin(BUTTON_LEFT_GPIO_Port, BUTTON_LEFT_Pin) == GPIO_PIN_RESET)
 800133a:	2101      	movs	r1, #1
 800133c:	4829      	ldr	r0, [pc, #164]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 800133e:	f004 ffc9 	bl	80062d4 <HAL_GPIO_ReadPin>
 8001342:	2800      	cmp	r0, #0
 8001344:	d03c      	beq.n	80013c0 <_ZN22MB1642ButtonController11getKeyStateEv+0xa8>
        {
            keyPressed = '8'; // Corresponds to keyboard keypad up
        }
        else if (HAL_GPIO_ReadPin(BUTTON_RIGHT_GPIO_Port, BUTTON_RIGHT_Pin) == GPIO_PIN_RESET)
 8001346:	2102      	movs	r1, #2
 8001348:	4826      	ldr	r0, [pc, #152]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 800134a:	f004 ffc3 	bl	80062d4 <HAL_GPIO_ReadPin>
 800134e:	2800      	cmp	r0, #0
 8001350:	d03e      	beq.n	80013d0 <_ZN22MB1642ButtonController11getKeyStateEv+0xb8>
        {
            keyPressed = '2'; // Corresponds to keyboard keypad down
        }
        else if (HAL_GPIO_ReadPin(BUTTON_UP_GPIO_Port, BUTTON_UP_Pin) == GPIO_PIN_RESET)
 8001352:	2180      	movs	r1, #128	@ 0x80
 8001354:	4823      	ldr	r0, [pc, #140]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 8001356:	0149      	lsls	r1, r1, #5
 8001358:	f004 ffbc 	bl	80062d4 <HAL_GPIO_ReadPin>
 800135c:	2800      	cmp	r0, #0
 800135e:	d026      	beq.n	80013ae <_ZN22MB1642ButtonController11getKeyStateEv+0x96>
        {
            keyPressed = '6'; // Corresponds to keyboard keypad right
        }
        else if (HAL_GPIO_ReadPin(BUTTON_DOWN_GPIO_Port, BUTTON_DOWN_Pin) == GPIO_PIN_RESET)
 8001360:	2110      	movs	r1, #16
 8001362:	4820      	ldr	r0, [pc, #128]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 8001364:	f004 ffb6 	bl	80062d4 <HAL_GPIO_ReadPin>
 8001368:	2800      	cmp	r0, #0
 800136a:	d018      	beq.n	800139e <_ZN22MB1642ButtonController11getKeyStateEv+0x86>
        else if (HAL_GPIO_ReadPin(BUTTON_USER_GPIO_Port, BUTTON_USER_Pin) == GPIO_PIN_RESET)
 800136c:	2180      	movs	r1, #128	@ 0x80
 800136e:	481c      	ldr	r0, [pc, #112]	@ (80013e0 <_ZN22MB1642ButtonController11getKeyStateEv+0xc8>)
 8001370:	0189      	lsls	r1, r1, #6
 8001372:	f004 ffaf 	bl	80062d4 <HAL_GPIO_ReadPin>
 8001376:	2800      	cmp	r0, #0
 8001378:	d12c      	bne.n	80013d4 <_ZN22MB1642ButtonController11getKeyStateEv+0xbc>
            keyPressed = '4'; // Corresponds to keyboard keypad left
        }
        //Blue user button on Nucleo boad
        else if (HAL_GPIO_ReadPin(BUTTON_USER_GPIO_Port, BUTTON_USER_Pin) == GPIO_PIN_RESET)
        {
            keyPressed = '0';
 800137a:	2030      	movs	r0, #48	@ 0x30
 800137c:	e008      	b.n	8001390 <_ZN22MB1642ButtonController11getKeyStateEv+0x78>
    if (touchgfx::HAL::getInstance()->getDisplayOrientation() == touchgfx::ORIENTATION_PORTRAIT)
 800137e:	2b01      	cmp	r3, #1
 8001380:	d1d5      	bne.n	800132e <_ZN22MB1642ButtonController11getKeyStateEv+0x16>
        if (HAL_GPIO_ReadPin(BUTTON_CENTER_GPIO_Port, BUTTON_CENTER_Pin) == GPIO_PIN_RESET)
 8001382:	2180      	movs	r1, #128	@ 0x80
 8001384:	4816      	ldr	r0, [pc, #88]	@ (80013e0 <_ZN22MB1642ButtonController11getKeyStateEv+0xc8>)
 8001386:	f004 ffa5 	bl	80062d4 <HAL_GPIO_ReadPin>
 800138a:	2800      	cmp	r0, #0
 800138c:	d101      	bne.n	8001392 <_ZN22MB1642ButtonController11getKeyStateEv+0x7a>
            keyPressed = '5'; // Corresponds to keyboard keypad enter
 800138e:	2035      	movs	r0, #53	@ 0x35
        }
    }

    return keyPressed;
}
 8001390:	bd10      	pop	{r4, pc}
        else if (HAL_GPIO_ReadPin(BUTTON_LEFT_GPIO_Port, BUTTON_LEFT_Pin) == GPIO_PIN_RESET)
 8001392:	2101      	movs	r1, #1
 8001394:	4813      	ldr	r0, [pc, #76]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 8001396:	f004 ff9d 	bl	80062d4 <HAL_GPIO_ReadPin>
 800139a:	2800      	cmp	r0, #0
 800139c:	d101      	bne.n	80013a2 <_ZN22MB1642ButtonController11getKeyStateEv+0x8a>
            keyPressed = '4'; // Corresponds to keyboard keypad left
 800139e:	2034      	movs	r0, #52	@ 0x34
 80013a0:	e7f6      	b.n	8001390 <_ZN22MB1642ButtonController11getKeyStateEv+0x78>
        else if (HAL_GPIO_ReadPin(BUTTON_RIGHT_GPIO_Port, BUTTON_RIGHT_Pin) == GPIO_PIN_RESET)
 80013a2:	2102      	movs	r1, #2
 80013a4:	480f      	ldr	r0, [pc, #60]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 80013a6:	f004 ff95 	bl	80062d4 <HAL_GPIO_ReadPin>
 80013aa:	2800      	cmp	r0, #0
 80013ac:	d101      	bne.n	80013b2 <_ZN22MB1642ButtonController11getKeyStateEv+0x9a>
            keyPressed = '6'; // Corresponds to keyboard keypad right
 80013ae:	2036      	movs	r0, #54	@ 0x36
 80013b0:	e7ee      	b.n	8001390 <_ZN22MB1642ButtonController11getKeyStateEv+0x78>
        else if (HAL_GPIO_ReadPin(BUTTON_UP_GPIO_Port, BUTTON_UP_Pin) == GPIO_PIN_RESET)
 80013b2:	2180      	movs	r1, #128	@ 0x80
 80013b4:	480b      	ldr	r0, [pc, #44]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 80013b6:	0149      	lsls	r1, r1, #5
 80013b8:	f004 ff8c 	bl	80062d4 <HAL_GPIO_ReadPin>
 80013bc:	2800      	cmp	r0, #0
 80013be:	d101      	bne.n	80013c4 <_ZN22MB1642ButtonController11getKeyStateEv+0xac>
            keyPressed = '8'; // Corresponds to keyboard keypad up
 80013c0:	2038      	movs	r0, #56	@ 0x38
 80013c2:	e7e5      	b.n	8001390 <_ZN22MB1642ButtonController11getKeyStateEv+0x78>
        else if (HAL_GPIO_ReadPin(BUTTON_DOWN_GPIO_Port, BUTTON_DOWN_Pin) == GPIO_PIN_RESET)
 80013c4:	2110      	movs	r1, #16
 80013c6:	4807      	ldr	r0, [pc, #28]	@ (80013e4 <_ZN22MB1642ButtonController11getKeyStateEv+0xcc>)
 80013c8:	f004 ff84 	bl	80062d4 <HAL_GPIO_ReadPin>
 80013cc:	2800      	cmp	r0, #0
 80013ce:	d1cd      	bne.n	800136c <_ZN22MB1642ButtonController11getKeyStateEv+0x54>
            keyPressed = '2'; // Corresponds to keyboard keypad down
 80013d0:	2032      	movs	r0, #50	@ 0x32
 80013d2:	e7dd      	b.n	8001390 <_ZN22MB1642ButtonController11getKeyStateEv+0x78>
    uint8_t keyPressed = 0;
 80013d4:	2000      	movs	r0, #0
 80013d6:	e7db      	b.n	8001390 <_ZN22MB1642ButtonController11getKeyStateEv+0x78>
 80013d8:	20003578 	.word	0x20003578
 80013dc:	20003570 	.word	0x20003570
 80013e0:	50000800 	.word	0x50000800
 80013e4:	50000400 	.word	0x50000400

080013e8 <_ZN22MB1642ButtonController6sampleERh>:
{
 80013e8:	b570      	push	{r4, r5, r6, lr}
 80013ea:	0004      	movs	r4, r0
 80013ec:	000d      	movs	r5, r1
    uint8_t state = getKeyState();
 80013ee:	f7ff ff93 	bl	8001318 <_ZN22MB1642ButtonController11getKeyStateEv>
    if (state == previousState)
 80013f2:	7923      	ldrb	r3, [r4, #4]
 80013f4:	4283      	cmp	r3, r0
 80013f6:	d101      	bne.n	80013fc <_ZN22MB1642ButtonController6sampleERh+0x14>
        return false;
 80013f8:	2000      	movs	r0, #0
}
 80013fa:	bd70      	pop	{r4, r5, r6, pc}
    previousState = state;
 80013fc:	7120      	strb	r0, [r4, #4]
    if (state != 0)
 80013fe:	2800      	cmp	r0, #0
 8001400:	d0fa      	beq.n	80013f8 <_ZN22MB1642ButtonController6sampleERh+0x10>
        key = state;
 8001402:	7028      	strb	r0, [r5, #0]
        return true;
 8001404:	2001      	movs	r0, #1
 8001406:	e7f8      	b.n	80013fa <_ZN22MB1642ButtonController6sampleERh+0x12>

08001408 <readData>:

//Status flag. Non-zero when receiving data
static volatile uint8_t isReceivingData = 0;

void readData(uint32_t address24, uint8_t* buffer, uint32_t length)
{
 8001408:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    FLASH_CS_GPIO_Port->BRR = FLASH_CS_Pin;
 800140a:	23a0      	movs	r3, #160	@ 0xa0
{
 800140c:	0004      	movs	r4, r0
 800140e:	0010      	movs	r0, r2
    FLASH_CS_GPIO_Port->BRR = FLASH_CS_Pin;
 8001410:	2280      	movs	r2, #128	@ 0x80
 8001412:	05db      	lsls	r3, r3, #23
 8001414:	0052      	lsls	r2, r2, #1
 8001416:	629a      	str	r2, [r3, #40]	@ 0x28
    *((__IO uint8_t*)&SPI2->DR) = CMD_READ;
 8001418:	4b48      	ldr	r3, [pc, #288]	@ (800153c <readData+0x134>)
 800141a:	3afd      	subs	r2, #253	@ 0xfd
 800141c:	701a      	strb	r2, [r3, #0]

    //clock out address
    *((__IO uint8_t*)&hspi2.Instance->DR) = (address24 >> 16) & 0xFF;
 800141e:	4a48      	ldr	r2, [pc, #288]	@ (8001540 <readData+0x138>)
 8001420:	0c26      	lsrs	r6, r4, #16
 8001422:	9201      	str	r2, [sp, #4]
 8001424:	6812      	ldr	r2, [r2, #0]
 8001426:	b2f6      	uxtb	r6, r6
 8001428:	7316      	strb	r6, [r2, #12]

    while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800142a:	2602      	movs	r6, #2
 800142c:	6897      	ldr	r7, [r2, #8]
 800142e:	4237      	tst	r7, r6
 8001430:	d0fc      	beq.n	800142c <readData+0x24>
    *((__IO uint8_t*)&hspi2.Instance->DR) = (address24 >> 8) & 0xFF;
 8001432:	0a26      	lsrs	r6, r4, #8
 8001434:	b2f6      	uxtb	r6, r6
 8001436:	7316      	strb	r6, [r2, #12]

    while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 8001438:	2602      	movs	r6, #2
 800143a:	6897      	ldr	r7, [r2, #8]
 800143c:	4237      	tst	r7, r6
 800143e:	d0fc      	beq.n	800143a <readData+0x32>
    *((__IO uint8_t*)&hspi2.Instance->DR) = address24 & 0xFF;
 8001440:	b2e4      	uxtb	r4, r4
 8001442:	7314      	strb	r4, [r2, #12]

    switch (length)
    {
        default:
            while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 8001444:	2402      	movs	r4, #2
    switch (length)
 8001446:	2803      	cmp	r0, #3
 8001448:	d803      	bhi.n	8001452 <readData+0x4a>
 800144a:	f7fe fe6d 	bl	8000128 <__gnu_thumb1_case_uqi>
 800144e:	1626      	.short	0x1626
 8001450:	080f      	.short	0x080f
            while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 8001452:	6896      	ldr	r6, [r2, #8]
 8001454:	4226      	tst	r6, r4
 8001456:	d0fc      	beq.n	8001452 <readData+0x4a>
            *((__IO uint8_t*)&hspi2.Instance->DR);
 8001458:	7b14      	ldrb	r4, [r2, #12]
            *((__IO uint8_t*)&hspi2.Instance->DR) = 0 ;
 800145a:	2400      	movs	r4, #0
 800145c:	7314      	strb	r4, [r2, #12]
        case 3:
            while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800145e:	2402      	movs	r4, #2
 8001460:	6896      	ldr	r6, [r2, #8]
 8001462:	4226      	tst	r6, r4
 8001464:	d0fc      	beq.n	8001460 <readData+0x58>
            *((__IO uint8_t*)&hspi2.Instance->DR);
 8001466:	7b14      	ldrb	r4, [r2, #12]
            *((__IO uint8_t*)&hspi2.Instance->DR) = 0;
 8001468:	2400      	movs	r4, #0
 800146a:	7314      	strb	r4, [r2, #12]
        case 2:
            while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800146c:	2402      	movs	r4, #2
 800146e:	6896      	ldr	r6, [r2, #8]
 8001470:	4226      	tst	r6, r4
 8001472:	d0fc      	beq.n	800146e <readData+0x66>
            *((__IO uint8_t*)&hspi2.Instance->DR);
 8001474:	7b14      	ldrb	r4, [r2, #12]
            *((__IO uint8_t*)&hspi2.Instance->DR) = 0;
 8001476:	2400      	movs	r4, #0
 8001478:	7314      	strb	r4, [r2, #12]
        case 1:
            while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800147a:	2402      	movs	r4, #2
 800147c:	6896      	ldr	r6, [r2, #8]
 800147e:	4226      	tst	r6, r4
 8001480:	d0fc      	beq.n	800147c <readData+0x74>
            *((__IO uint8_t*)&hspi2.Instance->DR);
 8001482:	7b14      	ldrb	r4, [r2, #12]
            *((__IO uint8_t*)&hspi2.Instance->DR) = 0;
 8001484:	2400      	movs	r4, #0
 8001486:	7314      	strb	r4, [r2, #12]
        case 0:
            break;
    }
    switch (length)
 8001488:	2802      	cmp	r0, #2
 800148a:	d004      	beq.n	8001496 <readData+0x8e>
 800148c:	2803      	cmp	r0, #3
 800148e:	d003      	beq.n	8001498 <readData+0x90>
 8001490:	2801      	cmp	r0, #1
 8001492:	d102      	bne.n	800149a <readData+0x92>
    {
        case 1:
        *((__IO uint8_t*)&hspi2.Instance->DR);
 8001494:	7b14      	ldrb	r4, [r2, #12]
        case 2:
        *((__IO uint8_t*)&hspi2.Instance->DR);
 8001496:	7b14      	ldrb	r4, [r2, #12]
        case 3:
        *((__IO uint8_t*)&hspi2.Instance->DR);
 8001498:	7b12      	ldrb	r2, [r2, #12]

    while ((buf_end - buffer) > 3)
    {
        while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
	*((__IO uint8_t*)&SPI2->DR) = 0;
 800149a:	2600      	movs	r6, #0
        while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800149c:	2702      	movs	r7, #2
	*((__IO uint8_t*)&SPI2->DR) = 0;
 800149e:	46b4      	mov	ip, r6
    uint8_t* const buf_end = buffer + length - 4;
 80014a0:	1f02      	subs	r2, r0, #4
        while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 80014a2:	4c28      	ldr	r4, [pc, #160]	@ (8001544 <readData+0x13c>)
    uint8_t* const buf_end = buffer + length - 4;
 80014a4:	188a      	adds	r2, r1, r2
    while ((buf_end - buffer) > 3)
 80014a6:	1a56      	subs	r6, r2, r1
 80014a8:	2e03      	cmp	r6, #3
 80014aa:	dc1a      	bgt.n	80014e2 <readData+0xda>
 80014ac:	000c      	movs	r4, r1
	while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
	*((__IO uint8_t*)&SPI2->DR) = 0;
    }

    while (buffer < buf_end)
 80014ae:	42a2      	cmp	r2, r4
 80014b0:	d835      	bhi.n	800151e <readData+0x116>
 80014b2:	2400      	movs	r4, #0
 80014b4:	428a      	cmp	r2, r1
 80014b6:	4164      	adcs	r4, r4
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
	*((__IO uint8_t*)&SPI2->DR) = 0;
    }

    /* Wait until the bus is ready before releasing Chip select */
    while(((hspi2.Instance->SR) & SPI_FLAG_BSY) != RESET) { }
 80014b8:	9a01      	ldr	r2, [sp, #4]
 80014ba:	4264      	negs	r4, r4
 80014bc:	6815      	ldr	r5, [r2, #0]
 80014be:	2280      	movs	r2, #128	@ 0x80
 80014c0:	4034      	ands	r4, r6
 80014c2:	190c      	adds	r4, r1, r4
 80014c4:	68a9      	ldr	r1, [r5, #8]
 80014c6:	4211      	tst	r1, r2
 80014c8:	d1fc      	bne.n	80014c4 <readData+0xbc>

    FLASH_CS_GPIO_Port->BSRR = FLASH_CS_Pin;
 80014ca:	22a0      	movs	r2, #160	@ 0xa0
 80014cc:	2180      	movs	r1, #128	@ 0x80
 80014ce:	05d2      	lsls	r2, r2, #23
 80014d0:	0049      	lsls	r1, r1, #1
 80014d2:	6191      	str	r1, [r2, #24]
    const int rest = length < 4 ? length : 4;
 80014d4:	2804      	cmp	r0, #4
 80014d6:	d900      	bls.n	80014da <readData+0xd2>
 80014d8:	2004      	movs	r0, #4
    for (int i = 0; i<rest; i++)
 80014da:	2200      	movs	r2, #0
 80014dc:	4282      	cmp	r2, r0
 80014de:	db29      	blt.n	8001534 <readData+0x12c>
    {
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
    }
}
 80014e0:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
        while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 80014e2:	68a6      	ldr	r6, [r4, #8]
 80014e4:	423e      	tst	r6, r7
 80014e6:	d0fc      	beq.n	80014e2 <readData+0xda>
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
 80014e8:	781e      	ldrb	r6, [r3, #0]
 80014ea:	700e      	strb	r6, [r1, #0]
	*((__IO uint8_t*)&SPI2->DR) = 0;
 80014ec:	4666      	mov	r6, ip
 80014ee:	701e      	strb	r6, [r3, #0]
	while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 80014f0:	68a6      	ldr	r6, [r4, #8]
 80014f2:	423e      	tst	r6, r7
 80014f4:	d0fc      	beq.n	80014f0 <readData+0xe8>
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
 80014f6:	781e      	ldrb	r6, [r3, #0]
 80014f8:	704e      	strb	r6, [r1, #1]
	*((__IO uint8_t*)&SPI2->DR) = 0;
 80014fa:	4666      	mov	r6, ip
 80014fc:	701e      	strb	r6, [r3, #0]
	while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 80014fe:	68a6      	ldr	r6, [r4, #8]
 8001500:	423e      	tst	r6, r7
 8001502:	d0fc      	beq.n	80014fe <readData+0xf6>
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
 8001504:	781e      	ldrb	r6, [r3, #0]
 8001506:	708e      	strb	r6, [r1, #2]
	*((__IO uint8_t*)&SPI2->DR) = 0;
 8001508:	4666      	mov	r6, ip
 800150a:	701e      	strb	r6, [r3, #0]
	while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800150c:	68a6      	ldr	r6, [r4, #8]
 800150e:	423e      	tst	r6, r7
 8001510:	d0fc      	beq.n	800150c <readData+0x104>
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
 8001512:	781e      	ldrb	r6, [r3, #0]
 8001514:	70ce      	strb	r6, [r1, #3]
	*((__IO uint8_t*)&SPI2->DR) = 0;
 8001516:	4666      	mov	r6, ip
 8001518:	3104      	adds	r1, #4
 800151a:	701e      	strb	r6, [r3, #0]
 800151c:	e7c3      	b.n	80014a6 <readData+0x9e>
        while(((SPI2->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800151e:	2702      	movs	r7, #2
 8001520:	4d08      	ldr	r5, [pc, #32]	@ (8001544 <readData+0x13c>)
 8001522:	68ad      	ldr	r5, [r5, #8]
 8001524:	423d      	tst	r5, r7
 8001526:	d0fa      	beq.n	800151e <readData+0x116>
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
 8001528:	781d      	ldrb	r5, [r3, #0]
 800152a:	7025      	strb	r5, [r4, #0]
	*((__IO uint8_t*)&SPI2->DR) = 0;
 800152c:	2500      	movs	r5, #0
 800152e:	3401      	adds	r4, #1
 8001530:	701d      	strb	r5, [r3, #0]
 8001532:	e7bc      	b.n	80014ae <readData+0xa6>
        *buffer++ = *((__IO uint8_t*)&SPI2->DR);
 8001534:	7819      	ldrb	r1, [r3, #0]
 8001536:	54a1      	strb	r1, [r4, r2]
    for (int i = 0; i<rest; i++)
 8001538:	3201      	adds	r2, #1
 800153a:	e7cf      	b.n	80014dc <readData+0xd4>
 800153c:	4000380c 	.word	0x4000380c
 8001540:	20000200 	.word	0x20000200
 8001544:	40003800 	.word	0x40003800

08001548 <readDataDMA>:

void readDataDMA(uint32_t address24, uint8_t* buffer, uint32_t length)
{
 8001548:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800154a:	9101      	str	r1, [sp, #4]
    // Pull Flash CS pin low
    isReceivingData = 1;
 800154c:	2101      	movs	r1, #1
 800154e:	4b3a      	ldr	r3, [pc, #232]	@ (8001638 <readDataDMA+0xf0>)
 8001550:	7019      	strb	r1, [r3, #0]
    FLASH_CS_GPIO_Port->BRR = FLASH_CS_Pin;
 8001552:	23a0      	movs	r3, #160	@ 0xa0
 8001554:	31ff      	adds	r1, #255	@ 0xff
 8001556:	05db      	lsls	r3, r3, #23
 8001558:	6299      	str	r1, [r3, #40]	@ 0x28

    *((__IO uint8_t*)&hspi2.Instance->DR) = CMD_READ;
 800155a:	4b38      	ldr	r3, [pc, #224]	@ (800163c <readDataDMA+0xf4>)
 800155c:	39fd      	subs	r1, #253	@ 0xfd
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	7319      	strb	r1, [r3, #12]

    //clock out address
    while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 8001562:	3901      	subs	r1, #1
 8001564:	689c      	ldr	r4, [r3, #8]
 8001566:	420c      	tst	r4, r1
 8001568:	d0fc      	beq.n	8001564 <readDataDMA+0x1c>
    *((__IO uint8_t*)&hspi2.Instance->DR) = (address24 >> 16) & 0xFF;
 800156a:	0c01      	lsrs	r1, r0, #16
 800156c:	b2c9      	uxtb	r1, r1
 800156e:	7319      	strb	r1, [r3, #12]

    while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 8001570:	2102      	movs	r1, #2
 8001572:	689c      	ldr	r4, [r3, #8]
 8001574:	420c      	tst	r4, r1
 8001576:	d0fc      	beq.n	8001572 <readDataDMA+0x2a>
    *((__IO uint8_t*)&hspi2.Instance->DR) = (address24 >> 8) & 0xFF;
 8001578:	0a01      	lsrs	r1, r0, #8
 800157a:	b2c9      	uxtb	r1, r1
 800157c:	7319      	strb	r1, [r3, #12]

    while(((hspi2.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800157e:	2102      	movs	r1, #2
 8001580:	689c      	ldr	r4, [r3, #8]
 8001582:	420c      	tst	r4, r1
 8001584:	d0fc      	beq.n	8001580 <readDataDMA+0x38>
    *((__IO uint8_t*)&hspi2.Instance->DR) = address24 & 0xFF;

    /* Wait until the bus is ready before reading 4 dummy bytes */
    while(((hspi2.Instance->SR) & SPI_FLAG_BSY) != RESET) { }
 8001586:	2180      	movs	r1, #128	@ 0x80
    *((__IO uint8_t*)&hspi2.Instance->DR) = address24 & 0xFF;
 8001588:	b2c0      	uxtb	r0, r0
 800158a:	7318      	strb	r0, [r3, #12]
    while(((hspi2.Instance->SR) & SPI_FLAG_BSY) != RESET) { }
 800158c:	6898      	ldr	r0, [r3, #8]
 800158e:	4208      	tst	r0, r1
 8001590:	d1fc      	bne.n	800158c <readDataDMA+0x44>
    *((__IO uint8_t*)&hspi2.Instance->DR);
 8001592:	7b19      	ldrb	r1, [r3, #12]
    *((__IO uint8_t*)&hspi2.Instance->DR);
    *((__IO uint8_t*)&hspi2.Instance->DR);
    *((__IO uint8_t*)&hspi2.Instance->DR);

    /* Reset the threshold bit */
    CLEAR_BIT(hspi2.Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
 8001594:	482a      	ldr	r0, [pc, #168]	@ (8001640 <readDataDMA+0xf8>)
    *((__IO uint8_t*)&hspi2.Instance->DR);
 8001596:	7b19      	ldrb	r1, [r3, #12]
    *((__IO uint8_t*)&hspi2.Instance->DR);
 8001598:	7b19      	ldrb	r1, [r3, #12]
    *((__IO uint8_t*)&hspi2.Instance->DR);
 800159a:	7b19      	ldrb	r1, [r3, #12]
    CLEAR_BIT(hspi2.Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
 800159c:	6859      	ldr	r1, [r3, #4]
    /* Set RX Fifo threshold according the reception data length: 8bit */
    SET_BIT(hspi2.Instance->CR2, SPI_RXFIFO_THRESHOLD);

    /******** RX ****************/
    /* Disable the peripheral */
    __HAL_DMA_DISABLE(&hdma_spi2_rx);
 800159e:	4f29      	ldr	r7, [pc, #164]	@ (8001644 <readDataDMA+0xfc>)
    CLEAR_BIT(hspi2.Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
 80015a0:	4001      	ands	r1, r0
 80015a2:	6059      	str	r1, [r3, #4]
    SET_BIT(hspi2.Instance->CR2, SPI_RXFIFO_THRESHOLD);
 80015a4:	2180      	movs	r1, #128	@ 0x80
 80015a6:	6858      	ldr	r0, [r3, #4]
 80015a8:	0149      	lsls	r1, r1, #5
 80015aa:	4301      	orrs	r1, r0
 80015ac:	6059      	str	r1, [r3, #4]
    __HAL_DMA_DISABLE(&hdma_spi2_rx);
 80015ae:	2101      	movs	r1, #1
 80015b0:	6838      	ldr	r0, [r7, #0]

    /* Clear all flags */
    __HAL_DMA_CLEAR_FLAG(&hdma_spi2_rx, (DMA_FLAG_GI1 << (hdma_spi2_rx.ChannelIndex & 0x1cU)));
 80015b2:	4d25      	ldr	r5, [pc, #148]	@ (8001648 <readDataDMA+0x100>)
    __HAL_DMA_DISABLE(&hdma_spi2_rx);
 80015b4:	6804      	ldr	r4, [r0, #0]
 80015b6:	438c      	bics	r4, r1
 80015b8:	6004      	str	r4, [r0, #0]
    __HAL_DMA_CLEAR_FLAG(&hdma_spi2_rx, (DMA_FLAG_GI1 << (hdma_spi2_rx.ChannelIndex & 0x1cU)));
 80015ba:	6c3c      	ldr	r4, [r7, #64]	@ 0x40
 80015bc:	271c      	movs	r7, #28
 80015be:	403c      	ands	r4, r7
 80015c0:	000f      	movs	r7, r1
 80015c2:	40a7      	lsls	r7, r4
 80015c4:	003c      	movs	r4, r7
 80015c6:	686e      	ldr	r6, [r5, #4]
 80015c8:	4334      	orrs	r4, r6
 80015ca:	606c      	str	r4, [r5, #4]

    /* Configure DMA Channel data length */
    hdma_spi2_rx.Instance->CNDTR = length;

    /* Configure DMA Channel destination address */
    hdma_spi2_rx.Instance->CPAR = (uint32_t)&hspi2.Instance->DR;
 80015cc:	001c      	movs	r4, r3

    /* Configure DMA Channel source address */
    hdma_spi2_rx.Instance->CMAR = (uint32_t)buffer;

    __HAL_DMA_DISABLE_IT(&hdma_spi2_rx, DMA_IT_HT | DMA_IT_TE);
 80015ce:	260c      	movs	r6, #12
    hdma_spi2_rx.Instance->CPAR = (uint32_t)&hspi2.Instance->DR;
 80015d0:	340c      	adds	r4, #12
    hdma_spi2_rx.Instance->CNDTR = length;
 80015d2:	6042      	str	r2, [r0, #4]
    hdma_spi2_rx.Instance->CPAR = (uint32_t)&hspi2.Instance->DR;
 80015d4:	9400      	str	r4, [sp, #0]
 80015d6:	6084      	str	r4, [r0, #8]
    hdma_spi2_rx.Instance->CMAR = (uint32_t)buffer;
 80015d8:	9c01      	ldr	r4, [sp, #4]
 80015da:	60c4      	str	r4, [r0, #12]
    __HAL_DMA_DISABLE_IT(&hdma_spi2_rx, DMA_IT_HT | DMA_IT_TE);
 80015dc:	6804      	ldr	r4, [r0, #0]
 80015de:	43b4      	bics	r4, r6
 80015e0:	6004      	str	r4, [r0, #0]
    __HAL_DMA_ENABLE_IT(&hdma_spi2_rx, (DMA_IT_TC));
 80015e2:	2402      	movs	r4, #2
 80015e4:	6806      	ldr	r6, [r0, #0]
 80015e6:	4326      	orrs	r6, r4
 80015e8:	6006      	str	r6, [r0, #0]

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(&hdma_spi2_rx);
 80015ea:	6806      	ldr	r6, [r0, #0]
 80015ec:	430e      	orrs	r6, r1
 80015ee:	6006      	str	r6, [r0, #0]

    /* Enable Rx DMA Request */
    SET_BIT(hspi2.Instance->CR2, SPI_CR2_RXDMAEN);
 80015f0:	6858      	ldr	r0, [r3, #4]

    /******** TX ****************/
    /* Disable the peripheral */
    __HAL_DMA_DISABLE(&hdma_spi2_tx);
 80015f2:	4e16      	ldr	r6, [pc, #88]	@ (800164c <readDataDMA+0x104>)
    SET_BIT(hspi2.Instance->CR2, SPI_CR2_RXDMAEN);
 80015f4:	4308      	orrs	r0, r1
 80015f6:	6058      	str	r0, [r3, #4]
    __HAL_DMA_DISABLE(&hdma_spi2_tx);
 80015f8:	6830      	ldr	r0, [r6, #0]
 80015fa:	6807      	ldr	r7, [r0, #0]
 80015fc:	438f      	bics	r7, r1
 80015fe:	6007      	str	r7, [r0, #0]

    /* Clear all flags */
    __HAL_DMA_CLEAR_FLAG(&hdma_spi2_tx, (DMA_FLAG_GI1 << (hdma_spi2_tx.ChannelIndex & 0x1cU)));
 8001600:	686f      	ldr	r7, [r5, #4]
 8001602:	6c36      	ldr	r6, [r6, #64]	@ 0x40
 8001604:	46bc      	mov	ip, r7
 8001606:	271c      	movs	r7, #28
 8001608:	403e      	ands	r6, r7
 800160a:	000f      	movs	r7, r1
 800160c:	40b7      	lsls	r7, r6
 800160e:	003e      	movs	r6, r7
 8001610:	4667      	mov	r7, ip
 8001612:	433e      	orrs	r6, r7
 8001614:	606e      	str	r6, [r5, #4]

    /* Configure DMA Channel data length */
    hdma_spi2_tx.Instance->CNDTR = length;
 8001616:	6042      	str	r2, [r0, #4]

    /* Configure DMA Channel destination address */
    hdma_spi2_tx.Instance->CPAR = (uint32_t)&hspi2.Instance->DR;
 8001618:	9a00      	ldr	r2, [sp, #0]
 800161a:	6082      	str	r2, [r0, #8]

    /* Configure DMA Channel source address */
    hdma_spi2_tx.Instance->CMAR = (uint32_t)buffer;
 800161c:	9a01      	ldr	r2, [sp, #4]
 800161e:	60c2      	str	r2, [r0, #12]

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(&hdma_spi2_tx);
 8001620:	6802      	ldr	r2, [r0, #0]
 8001622:	4311      	orrs	r1, r2

    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(&hspi2);
 8001624:	2240      	movs	r2, #64	@ 0x40
    __HAL_DMA_ENABLE(&hdma_spi2_tx);
 8001626:	6001      	str	r1, [r0, #0]
    __HAL_SPI_ENABLE(&hspi2);
 8001628:	6819      	ldr	r1, [r3, #0]
 800162a:	430a      	orrs	r2, r1
 800162c:	601a      	str	r2, [r3, #0]

    /* Enable Tx DMA Request */
    SET_BIT(hspi2.Instance->CR2, SPI_CR2_TXDMAEN);
 800162e:	685a      	ldr	r2, [r3, #4]
 8001630:	4314      	orrs	r4, r2
 8001632:	605c      	str	r4, [r3, #4]
}
 8001634:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001636:	46c0      	nop			@ (mov r8, r8)
 8001638:	2000009c 	.word	0x2000009c
 800163c:	20000200 	.word	0x20000200
 8001640:	ffff9fff 	.word	0xffff9fff
 8001644:	20000148 	.word	0x20000148
 8001648:	40020000 	.word	0x40020000
 800164c:	200000ec 	.word	0x200000ec

08001650 <DataReader_DMACallback>:

void DataReader_DMACallback()
{
    /* Transfer Complete Interrupt management ***********************************/
    if ((0U != (DMA1->ISR & (DMA_FLAG_TC1 << (hdma_spi2_rx.ChannelIndex & 0x1cU)))) && (0U != (hdma_spi2_rx.Instance->CCR & DMA_IT_TC)))
 8001650:	201c      	movs	r0, #28
 8001652:	4913      	ldr	r1, [pc, #76]	@ (80016a0 <DataReader_DMACallback+0x50>)
{
 8001654:	b530      	push	{r4, r5, lr}
    if ((0U != (DMA1->ISR & (DMA_FLAG_TC1 << (hdma_spi2_rx.ChannelIndex & 0x1cU)))) && (0U != (hdma_spi2_rx.Instance->CCR & DMA_IT_TC)))
 8001656:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001658:	4a12      	ldr	r2, [pc, #72]	@ (80016a4 <DataReader_DMACallback+0x54>)
 800165a:	4003      	ands	r3, r0
 800165c:	381a      	subs	r0, #26
 800165e:	0005      	movs	r5, r0
 8001660:	409d      	lsls	r5, r3
 8001662:	6814      	ldr	r4, [r2, #0]
 8001664:	002b      	movs	r3, r5
 8001666:	4225      	tst	r5, r4
 8001668:	d019      	beq.n	800169e <DataReader_DMACallback+0x4e>
 800166a:	6809      	ldr	r1, [r1, #0]
 800166c:	680c      	ldr	r4, [r1, #0]
 800166e:	4204      	tst	r4, r0
 8001670:	d015      	beq.n	800169e <DataReader_DMACallback+0x4e>
    {
        /* Disable the transfer complete and error interrupt */
        __HAL_DMA_DISABLE_IT(&hdma_spi2_rx, DMA_IT_TE | DMA_IT_TC);
 8001672:	240a      	movs	r4, #10
 8001674:	6808      	ldr	r0, [r1, #0]
 8001676:	43a0      	bics	r0, r4
 8001678:	6008      	str	r0, [r1, #0]
        /* Clear the transfer complete flag */
        __HAL_DMA_CLEAR_FLAG(&hdma_spi2_rx, (DMA_FLAG_TC1 << (hdma_spi2_rx.ChannelIndex & 0x1cU)));
 800167a:	6851      	ldr	r1, [r2, #4]
 800167c:	430b      	orrs	r3, r1
 800167e:	6053      	str	r3, [r2, #4]


        // Wait until the bus is not busy before changing configuration
        // SPI is busy in communication or Tx buffer is not empty
        while(((hspi2.Instance->SR) & SPI_FLAG_BSY) != RESET) { }
 8001680:	4b09      	ldr	r3, [pc, #36]	@ (80016a8 <DataReader_DMACallback+0x58>)
 8001682:	6818      	ldr	r0, [r3, #0]
 8001684:	2380      	movs	r3, #128	@ 0x80
 8001686:	6882      	ldr	r2, [r0, #8]
 8001688:	0011      	movs	r1, r2
 800168a:	4019      	ands	r1, r3
 800168c:	421a      	tst	r2, r3
 800168e:	d1fa      	bne.n	8001686 <DataReader_DMACallback+0x36>

        FLASH_CS_GPIO_Port->BSRR = FLASH_CS_Pin;
 8001690:	23a0      	movs	r3, #160	@ 0xa0
 8001692:	2280      	movs	r2, #128	@ 0x80
 8001694:	05db      	lsls	r3, r3, #23
 8001696:	0052      	lsls	r2, r2, #1
 8001698:	619a      	str	r2, [r3, #24]

        isReceivingData = 0;
 800169a:	4b04      	ldr	r3, [pc, #16]	@ (80016ac <DataReader_DMACallback+0x5c>)
 800169c:	7019      	strb	r1, [r3, #0]
    }
}
 800169e:	bd30      	pop	{r4, r5, pc}
 80016a0:	20000148 	.word	0x20000148
 80016a4:	40020000 	.word	0x40020000
 80016a8:	20000200 	.word	0x20000200
 80016ac:	2000009c 	.word	0x2000009c

080016b0 <DataReader_ReadData>:

void DataReader_ReadData(uint32_t address24, uint8_t* buffer, uint32_t length)
{
 80016b0:	b510      	push	{r4, lr}
    readData(address24, buffer, length);
 80016b2:	f7ff fea9 	bl	8001408 <readData>
}
 80016b6:	bd10      	pop	{r4, pc}

080016b8 <DataReader_StartDMAReadData>:

void DataReader_StartDMAReadData(uint32_t address24, uint8_t* buffer, uint32_t length)
{
 80016b8:	b510      	push	{r4, lr}
    readDataDMA(address24, buffer, length);
 80016ba:	f7ff ff45 	bl	8001548 <readDataDMA>
}
 80016be:	bd10      	pop	{r4, pc}

080016c0 <DataReader_WaitForReceiveDone>:
    return isReceivingData;
}

void DataReader_WaitForReceiveDone(void)
{
    while (isReceivingData);
 80016c0:	4a02      	ldr	r2, [pc, #8]	@ (80016cc <DataReader_WaitForReceiveDone+0xc>)
 80016c2:	7813      	ldrb	r3, [r2, #0]
 80016c4:	2b00      	cmp	r3, #0
 80016c6:	d1fc      	bne.n	80016c2 <DataReader_WaitForReceiveDone+0x2>
}
 80016c8:	4770      	bx	lr
 80016ca:	46c0      	nop			@ (mov r8, r8)
 80016cc:	2000009c 	.word	0x2000009c

080016d0 <DataReader_Init>:

void DataReader_Init(void)
{
    __HAL_SPI_ENABLE(&hspi2);
 80016d0:	4b03      	ldr	r3, [pc, #12]	@ (80016e0 <DataReader_Init+0x10>)
 80016d2:	681a      	ldr	r2, [r3, #0]
 80016d4:	2340      	movs	r3, #64	@ 0x40
 80016d6:	6811      	ldr	r1, [r2, #0]
 80016d8:	430b      	orrs	r3, r1
 80016da:	6013      	str	r3, [r2, #0]
}
 80016dc:	4770      	bx	lr
 80016de:	46c0      	nop			@ (mov r8, r8)
 80016e0:	20000200 	.word	0x20000200

080016e4 <Display_DCS_Send>:
void clearVSYNC(void);

static void Display_DCS_Send(uint8_t command)
{
  // Reset the nCS pin
  DISPLAY_CSX_GPIO_Port->BRR = DISPLAY_CSX_Pin;
 80016e4:	23a0      	movs	r3, #160	@ 0xa0
 80016e6:	2280      	movs	r2, #128	@ 0x80
  // Set the DCX pin
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 80016e8:	2180      	movs	r1, #128	@ 0x80
{
 80016ea:	b530      	push	{r4, r5, lr}

  // Send the command
  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 80016ec:	4c08      	ldr	r4, [pc, #32]	@ (8001710 <Display_DCS_Send+0x2c>)
  DISPLAY_CSX_GPIO_Port->BRR = DISPLAY_CSX_Pin;
 80016ee:	0092      	lsls	r2, r2, #2
 80016f0:	05db      	lsls	r3, r3, #23
 80016f2:	629a      	str	r2, [r3, #40]	@ 0x28
  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 80016f4:	6824      	ldr	r4, [r4, #0]
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 80016f6:	4a07      	ldr	r2, [pc, #28]	@ (8001714 <Display_DCS_Send+0x30>)
 80016f8:	01c9      	lsls	r1, r1, #7
 80016fa:	6291      	str	r1, [r2, #40]	@ 0x28
  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 80016fc:	7320      	strb	r0, [r4, #12]

  // Wait until the bus is not busy before changing configuration
  while(((hspi1.Instance->SR) & SPI_FLAG_BSY) != RESET);
 80016fe:	2080      	movs	r0, #128	@ 0x80
 8001700:	68a5      	ldr	r5, [r4, #8]
 8001702:	4205      	tst	r5, r0
 8001704:	d1fc      	bne.n	8001700 <Display_DCS_Send+0x1c>

  // Reset the DCX pin
  DISPLAY_DCX_GPIO_Port->BSRR = DISPLAY_DCX_Pin;
 8001706:	6191      	str	r1, [r2, #24]

  // Set the nCS
  DISPLAY_CSX_GPIO_Port->BSRR = DISPLAY_CSX_Pin;
 8001708:	2280      	movs	r2, #128	@ 0x80
 800170a:	0092      	lsls	r2, r2, #2
 800170c:	619a      	str	r2, [r3, #24]
}
 800170e:	bd30      	pop	{r4, r5, pc}
 8001710:	20000264 	.word	0x20000264
 8001714:	50000400 	.word	0x50000400

08001718 <Display_DCS_Send_With_Data>:

  return data;
}

static void Display_DCS_Send_With_Data(uint8_t command, uint8_t* data, uint8_t size)
{
 8001718:	b570      	push	{r4, r5, r6, lr}
  // Reset the nCS pin
  DISPLAY_CSX_GPIO_Port->BRR = DISPLAY_CSX_Pin;
 800171a:	23a0      	movs	r3, #160	@ 0xa0
 800171c:	2480      	movs	r4, #128	@ 0x80
  // Set the DCX pin
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 800171e:	2580      	movs	r5, #128	@ 0x80
  DISPLAY_CSX_GPIO_Port->BRR = DISPLAY_CSX_Pin;
 8001720:	05db      	lsls	r3, r3, #23
 8001722:	00a4      	lsls	r4, r4, #2
 8001724:	629c      	str	r4, [r3, #40]	@ 0x28

  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 8001726:	4b10      	ldr	r3, [pc, #64]	@ (8001768 <Display_DCS_Send_With_Data+0x50>)
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 8001728:	4c10      	ldr	r4, [pc, #64]	@ (800176c <Display_DCS_Send_With_Data+0x54>)
  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 800172a:	681b      	ldr	r3, [r3, #0]
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 800172c:	01ed      	lsls	r5, r5, #7
 800172e:	62a5      	str	r5, [r4, #40]	@ 0x28
  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 8001730:	7318      	strb	r0, [r3, #12]

  // Wait until the bus is not busy before changing configuration
  while(((hspi1.Instance->SR) & SPI_FLAG_BSY) != RESET);
 8001732:	2080      	movs	r0, #128	@ 0x80
 8001734:	689e      	ldr	r6, [r3, #8]
 8001736:	4206      	tst	r6, r0
 8001738:	d1fc      	bne.n	8001734 <Display_DCS_Send_With_Data+0x1c>
  DISPLAY_DCX_GPIO_Port->BSRR = DISPLAY_DCX_Pin;
 800173a:	61a5      	str	r5, [r4, #24]
  {
    *((__IO uint8_t*)&hspi1.Instance->DR) = *data;
    data++;
    size--;
    /* Wait until TXE flag is set to send data */
    while(((hspi1.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 800173c:	2402      	movs	r4, #2
  while (size > 0U)
 800173e:	188a      	adds	r2, r1, r2
 8001740:	b2d2      	uxtb	r2, r2
    *((__IO uint8_t*)&hspi1.Instance->DR) = *data;
 8001742:	7808      	ldrb	r0, [r1, #0]
    data++;
 8001744:	3101      	adds	r1, #1
    *((__IO uint8_t*)&hspi1.Instance->DR) = *data;
 8001746:	7318      	strb	r0, [r3, #12]
    while(((hspi1.Instance->SR) & SPI_FLAG_TXE) != SPI_FLAG_TXE);
 8001748:	6898      	ldr	r0, [r3, #8]
 800174a:	4220      	tst	r0, r4
 800174c:	d0fc      	beq.n	8001748 <Display_DCS_Send_With_Data+0x30>
  while (size > 0U)
 800174e:	b2c8      	uxtb	r0, r1
 8001750:	4290      	cmp	r0, r2
 8001752:	d1f6      	bne.n	8001742 <Display_DCS_Send_With_Data+0x2a>
  }

  // Wait until the bus is not busy before changing configuration
  while(((hspi1.Instance->SR) & SPI_FLAG_BSY) != RESET);
 8001754:	2280      	movs	r2, #128	@ 0x80
 8001756:	6899      	ldr	r1, [r3, #8]
 8001758:	4211      	tst	r1, r2
 800175a:	d1fc      	bne.n	8001756 <Display_DCS_Send_With_Data+0x3e>

  // Set the nCS
  DISPLAY_CSX_GPIO_Port->BSRR = DISPLAY_CSX_Pin;
 800175c:	23a0      	movs	r3, #160	@ 0xa0
 800175e:	2280      	movs	r2, #128	@ 0x80
 8001760:	05db      	lsls	r3, r3, #23
 8001762:	0092      	lsls	r2, r2, #2
 8001764:	619a      	str	r2, [r3, #24]
}
 8001766:	bd70      	pop	{r4, r5, r6, pc}
 8001768:	20000264 	.word	0x20000264
 800176c:	50000400 	.word	0x50000400

08001770 <DisplayDriver_DisplayOn>:

void DisplayDriver_DisplayOn(void)
{
 8001770:	b510      	push	{r4, lr}
  // Display ON
  Display_DCS_Send(DCS_SET_DISPLAY_ON);
 8001772:	2029      	movs	r0, #41	@ 0x29
 8001774:	f7ff ffb6 	bl	80016e4 <Display_DCS_Send>
  HAL_Delay(100);
 8001778:	2064      	movs	r0, #100	@ 0x64
 800177a:	f004 fb73 	bl	8005e64 <HAL_Delay>
}
 800177e:	bd10      	pop	{r4, pc}

08001780 <Display_Set_Area>:

static uint16_t old_x0=0xFFFF, old_x1=0xFFFF, old_y0=0xFFFF, old_y1=0xFFFF;

void Display_Set_Area(uint16_t x0, uint16_t y0,
                      uint16_t x1, uint16_t y1)
{
 8001780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001782:	001c      	movs	r4, r3
  uint8_t arguments[4];

  // Set columns, if changed
  if (x0 != old_x0 || x1 != old_x1)
 8001784:	4b18      	ldr	r3, [pc, #96]	@ (80017e8 <Display_Set_Area+0x68>)
{
 8001786:	b085      	sub	sp, #20
 8001788:	0016      	movs	r6, r2
  if (x0 != old_x0 || x1 != old_x1)
 800178a:	9300      	str	r3, [sp, #0]
 800178c:	4a17      	ldr	r2, [pc, #92]	@ (80017ec <Display_Set_Area+0x6c>)
 800178e:	881b      	ldrh	r3, [r3, #0]
{
 8001790:	0007      	movs	r7, r0
 8001792:	000d      	movs	r5, r1
 8001794:	9201      	str	r2, [sp, #4]
  if (x0 != old_x0 || x1 != old_x1)
 8001796:	4283      	cmp	r3, r0
 8001798:	d102      	bne.n	80017a0 <Display_Set_Area+0x20>
 800179a:	8813      	ldrh	r3, [r2, #0]
 800179c:	42b3      	cmp	r3, r6
 800179e:	d00d      	beq.n	80017bc <Display_Set_Area+0x3c>
  {
    arguments[0] = x0 >> 8;
 80017a0:	aa02      	add	r2, sp, #8
 80017a2:	ba7b      	rev16	r3, r7
 80017a4:	8093      	strh	r3, [r2, #4]
    arguments[1] = x0 & 0xFF;
    arguments[2] = x1 >> 8;
 80017a6:	ba73      	rev16	r3, r6
 80017a8:	80d3      	strh	r3, [r2, #6]
    arguments[3] = x1 & 0xFF;
    Display_DCS_Send_With_Data(0x2A, arguments, 4);
 80017aa:	202a      	movs	r0, #42	@ 0x2a
 80017ac:	2204      	movs	r2, #4
 80017ae:	a903      	add	r1, sp, #12
 80017b0:	f7ff ffb2 	bl	8001718 <Display_DCS_Send_With_Data>

    old_x0 = x0;
 80017b4:	9b00      	ldr	r3, [sp, #0]
 80017b6:	801f      	strh	r7, [r3, #0]
    old_x1 = x1;
 80017b8:	9b01      	ldr	r3, [sp, #4]
 80017ba:	801e      	strh	r6, [r3, #0]
  }

  // Set rows, if changed
  if (y0 != old_y0 || y1 != old_y1)
 80017bc:	4f0c      	ldr	r7, [pc, #48]	@ (80017f0 <Display_Set_Area+0x70>)
 80017be:	4e0d      	ldr	r6, [pc, #52]	@ (80017f4 <Display_Set_Area+0x74>)
 80017c0:	883b      	ldrh	r3, [r7, #0]
 80017c2:	42ab      	cmp	r3, r5
 80017c4:	d102      	bne.n	80017cc <Display_Set_Area+0x4c>
 80017c6:	8833      	ldrh	r3, [r6, #0]
 80017c8:	42a3      	cmp	r3, r4
 80017ca:	d00b      	beq.n	80017e4 <Display_Set_Area+0x64>
  {
    arguments[0] = y0 >> 8;
 80017cc:	aa02      	add	r2, sp, #8
 80017ce:	ba6b      	rev16	r3, r5
 80017d0:	8093      	strh	r3, [r2, #4]
    arguments[1] = y0 & 0xFF;
    arguments[2] = y1 >> 8;
 80017d2:	ba63      	rev16	r3, r4
 80017d4:	80d3      	strh	r3, [r2, #6]
    arguments[3] = y1 & 0xFF;
    Display_DCS_Send_With_Data(0x2B, arguments, 4);
 80017d6:	202b      	movs	r0, #43	@ 0x2b
 80017d8:	2204      	movs	r2, #4
 80017da:	a903      	add	r1, sp, #12
 80017dc:	f7ff ff9c 	bl	8001718 <Display_DCS_Send_With_Data>

    old_y0 = y0;
 80017e0:	803d      	strh	r5, [r7, #0]
    old_y1 = y1;
 80017e2:	8034      	strh	r4, [r6, #0]
  }
}
 80017e4:	b005      	add	sp, #20
 80017e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017e8:	20000006 	.word	0x20000006
 80017ec:	20000004 	.word	0x20000004
 80017f0:	20000002 	.word	0x20000002
 80017f4:	20000000 	.word	0x20000000

080017f8 <Display_Bitmap>:

volatile uint8_t IsTransmittingBlock_;
void Display_Bitmap(const uint16_t *bitmap, uint16_t posx, uint16_t posy, uint16_t sizex, uint16_t sizey)
{
 80017f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80017fa:	9001      	str	r0, [sp, #4]
 80017fc:	0008      	movs	r0, r1
 80017fe:	0011      	movs	r1, r2
  IsTransmittingBlock_ = 1;
 8001800:	2201      	movs	r2, #1
{
 8001802:	001d      	movs	r5, r3
 8001804:	ab08      	add	r3, sp, #32
 8001806:	881c      	ldrh	r4, [r3, #0]
  IsTransmittingBlock_ = 1;
 8001808:	4b2c      	ldr	r3, [pc, #176]	@ (80018bc <Display_Bitmap+0xc4>)
  __HAL_SPI_ENABLE(&hspi1); // Enables SPI peripheral
 800180a:	4e2d      	ldr	r6, [pc, #180]	@ (80018c0 <Display_Bitmap+0xc8>)
  IsTransmittingBlock_ = 1;
 800180c:	701a      	strb	r2, [r3, #0]
  __HAL_SPI_ENABLE(&hspi1); // Enables SPI peripheral
 800180e:	2340      	movs	r3, #64	@ 0x40
 8001810:	6832      	ldr	r2, [r6, #0]
 8001812:	6817      	ldr	r7, [r2, #0]
 8001814:	433b      	orrs	r3, r7
 8001816:	6013      	str	r3, [r2, #0]
  uint8_t command = DCS_WRITE_MEMORY_START;

  // Define the display area
  Display_Set_Area(posx, posy, posx+sizex-1, posy+sizey-1);
 8001818:	1e63      	subs	r3, r4, #1
 800181a:	1e6a      	subs	r2, r5, #1
 800181c:	18cb      	adds	r3, r1, r3
 800181e:	1882      	adds	r2, r0, r2
 8001820:	b29b      	uxth	r3, r3
 8001822:	b292      	uxth	r2, r2
 8001824:	f7ff ffac 	bl	8001780 <Display_Set_Area>

  // Reset the nCS pin
  DISPLAY_CSX_GPIO_Port->BRR = DISPLAY_CSX_Pin;
 8001828:	23a0      	movs	r3, #160	@ 0xa0
 800182a:	2280      	movs	r2, #128	@ 0x80
  // Set the DCX pin
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 800182c:	2180      	movs	r1, #128	@ 0x80

  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 800182e:	202c      	movs	r0, #44	@ 0x2c
  DISPLAY_CSX_GPIO_Port->BRR = DISPLAY_CSX_Pin;
 8001830:	05db      	lsls	r3, r3, #23
 8001832:	0092      	lsls	r2, r2, #2
 8001834:	629a      	str	r2, [r3, #40]	@ 0x28
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 8001836:	4b23      	ldr	r3, [pc, #140]	@ (80018c4 <Display_Bitmap+0xcc>)
  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 8001838:	6832      	ldr	r2, [r6, #0]
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 800183a:	01c9      	lsls	r1, r1, #7
 800183c:	6299      	str	r1, [r3, #40]	@ 0x28
  *((__IO uint8_t*)&hspi1.Instance->DR) = command;
 800183e:	7310      	strb	r0, [r2, #12]

  // Wait until the bus is not busy before changing configuration
  while(((hspi1.Instance->SR) & SPI_FLAG_BSY) != RESET);
 8001840:	3054      	adds	r0, #84	@ 0x54
 8001842:	6896      	ldr	r6, [r2, #8]
 8001844:	4206      	tst	r6, r0
 8001846:	d1fc      	bne.n	8001842 <Display_Bitmap+0x4a>
  DISPLAY_DCX_GPIO_Port->BSRR = DISPLAY_DCX_Pin;
 8001848:	6199      	str	r1, [r3, #24]

  // Set the SPI in 16-bit mode to match endianess
  hspi1.Instance->CR2 = SPI_DATASIZE_16BIT;
 800184a:	23f0      	movs	r3, #240	@ 0xf0

  // Disable spi peripherals
  __HAL_SPI_DISABLE(&hspi1);
 800184c:	2140      	movs	r1, #64	@ 0x40
  hspi1.Instance->CR2 = SPI_DATASIZE_16BIT;
 800184e:	011b      	lsls	r3, r3, #4
 8001850:	6053      	str	r3, [r2, #4]
  __HAL_SPI_DISABLE(&hspi1);
 8001852:	6813      	ldr	r3, [r2, #0]
  __HAL_DMA_DISABLE(&hdma_spi1_tx);
 8001854:	4e1c      	ldr	r6, [pc, #112]	@ (80018c8 <Display_Bitmap+0xd0>)
  __HAL_SPI_DISABLE(&hspi1);
 8001856:	438b      	bics	r3, r1
 8001858:	6013      	str	r3, [r2, #0]
  __HAL_DMA_DISABLE(&hdma_spi1_tx);
 800185a:	2301      	movs	r3, #1
 800185c:	6831      	ldr	r1, [r6, #0]

  CLEAR_BIT(hspi1.Instance->CR2, SPI_CR2_LDMATX);
 800185e:	481b      	ldr	r0, [pc, #108]	@ (80018cc <Display_Bitmap+0xd4>)
  __HAL_DMA_DISABLE(&hdma_spi1_tx);
 8001860:	680f      	ldr	r7, [r1, #0]

  /* Clear all flags */
  __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, (DMA_FLAG_GI1 << (hdma_spi1_tx.ChannelIndex & 0x1cU)));
 8001862:	6c36      	ldr	r6, [r6, #64]	@ 0x40
  __HAL_DMA_DISABLE(&hdma_spi1_tx);
 8001864:	439f      	bics	r7, r3
 8001866:	600f      	str	r7, [r1, #0]
  CLEAR_BIT(hspi1.Instance->CR2, SPI_CR2_LDMATX);
 8001868:	6857      	ldr	r7, [r2, #4]

  /* Configure DMA Channel data length */
  hdma_spi1_tx.Instance->CNDTR = sizex*sizey;
 800186a:	436c      	muls	r4, r5
  CLEAR_BIT(hspi1.Instance->CR2, SPI_CR2_LDMATX);
 800186c:	4007      	ands	r7, r0
 800186e:	6057      	str	r7, [r2, #4]
  __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, (DMA_FLAG_GI1 << (hdma_spi1_tx.ChannelIndex & 0x1cU)));
 8001870:	4f17      	ldr	r7, [pc, #92]	@ (80018d0 <Display_Bitmap+0xd8>)

  /* Configure DMA Channel source address */
  hdma_spi1_tx.Instance->CMAR = (uint32_t)bitmap;

  /* Disable the transfer half complete interrupt */
  __HAL_DMA_DISABLE_IT(&hdma_spi1_tx, DMA_IT_HT);
 8001872:	2504      	movs	r5, #4
  __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, (DMA_FLAG_GI1 << (hdma_spi1_tx.ChannelIndex & 0x1cU)));
 8001874:	6878      	ldr	r0, [r7, #4]
 8001876:	9000      	str	r0, [sp, #0]
 8001878:	201c      	movs	r0, #28
 800187a:	4006      	ands	r6, r0
 800187c:	0018      	movs	r0, r3
 800187e:	40b0      	lsls	r0, r6
 8001880:	0006      	movs	r6, r0
 8001882:	9800      	ldr	r0, [sp, #0]
 8001884:	4306      	orrs	r6, r0
 8001886:	607e      	str	r6, [r7, #4]
  hdma_spi1_tx.Instance->CNDTR = sizex*sizey;
 8001888:	604c      	str	r4, [r1, #4]
  hdma_spi1_tx.Instance->CPAR = (uint32_t)&hspi1.Instance->DR;
 800188a:	0014      	movs	r4, r2
  hdma_spi1_tx.Instance->CMAR = (uint32_t)bitmap;
 800188c:	9801      	ldr	r0, [sp, #4]
  hdma_spi1_tx.Instance->CPAR = (uint32_t)&hspi1.Instance->DR;
 800188e:	340c      	adds	r4, #12
 8001890:	608c      	str	r4, [r1, #8]
  hdma_spi1_tx.Instance->CMAR = (uint32_t)bitmap;
 8001892:	60c8      	str	r0, [r1, #12]
  __HAL_DMA_DISABLE_IT(&hdma_spi1_tx, DMA_IT_HT);
 8001894:	680c      	ldr	r4, [r1, #0]
  /* Enable the transfer complete interrupt */
  __HAL_DMA_ENABLE_IT(&hdma_spi1_tx, (DMA_IT_TC | DMA_IT_TE));

  /* Enable the Peripherals */
  __HAL_DMA_ENABLE(&hdma_spi1_tx);
  __HAL_SPI_ENABLE(&hspi1);
 8001896:	2040      	movs	r0, #64	@ 0x40
  __HAL_DMA_DISABLE_IT(&hdma_spi1_tx, DMA_IT_HT);
 8001898:	43ac      	bics	r4, r5
 800189a:	600c      	str	r4, [r1, #0]
  __HAL_DMA_ENABLE_IT(&hdma_spi1_tx, (DMA_IT_TC | DMA_IT_TE));
 800189c:	240a      	movs	r4, #10
 800189e:	680d      	ldr	r5, [r1, #0]
 80018a0:	432c      	orrs	r4, r5
 80018a2:	600c      	str	r4, [r1, #0]
  __HAL_DMA_ENABLE(&hdma_spi1_tx);
 80018a4:	680c      	ldr	r4, [r1, #0]
 80018a6:	4323      	orrs	r3, r4
 80018a8:	600b      	str	r3, [r1, #0]
  __HAL_SPI_ENABLE(&hspi1);
 80018aa:	6813      	ldr	r3, [r2, #0]
 80018ac:	4318      	orrs	r0, r3

  /* Enable Tx DMA Request */
  SET_BIT(hspi1.Instance->CR2, SPI_CR2_TXDMAEN);
 80018ae:	2302      	movs	r3, #2
  __HAL_SPI_ENABLE(&hspi1);
 80018b0:	6010      	str	r0, [r2, #0]
  SET_BIT(hspi1.Instance->CR2, SPI_CR2_TXDMAEN);
 80018b2:	6851      	ldr	r1, [r2, #4]
 80018b4:	430b      	orrs	r3, r1
 80018b6:	6053      	str	r3, [r2, #4]
}
 80018b8:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80018ba:	46c0      	nop			@ (mov r8, r8)
 80018bc:	2000009d 	.word	0x2000009d
 80018c0:	20000264 	.word	0x20000264
 80018c4:	50000400 	.word	0x50000400
 80018c8:	200001a4 	.word	0x200001a4
 80018cc:	ffffbfff 	.word	0xffffbfff
 80018d0:	40020000 	.word	0x40020000

080018d4 <HAL_GPIO_EXTI_Rising_Callback>:

  // The draw speed of displays varies based on factors such as design, production variance, temperature and so on
  // to achieve good performance on all displays the timer tick rate needs to be adjusted based on the actual draw time of the latest frame
  // The following code dynamically adjusts the prescaler on every new frame to match the draw rate
  const uint32_t TARGET = DCS_DISPLAY_HEIGHT;         // Number of lines in display drawing direction
  volatile uint32_t count = __HAL_TIM_GET_COUNTER(&htim6);
 80018d4:	4b18      	ldr	r3, [pc, #96]	@ (8001938 <HAL_GPIO_EXTI_Rising_Callback+0x64>)
{
 80018d6:	b513      	push	{r0, r1, r4, lr}
  volatile uint32_t count = __HAL_TIM_GET_COUNTER(&htim6);
 80018d8:	681c      	ldr	r4, [r3, #0]
 80018da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80018dc:	9301      	str	r3, [sp, #4]
  if(count < TARGET - 1 || count > TARGET + 1)
 80018de:	239f      	movs	r3, #159	@ 0x9f
 80018e0:	9a01      	ldr	r2, [sp, #4]
 80018e2:	005b      	lsls	r3, r3, #1
 80018e4:	429a      	cmp	r2, r3
 80018e6:	d903      	bls.n	80018f0 <HAL_GPIO_EXTI_Rising_Callback+0x1c>
 80018e8:	9a01      	ldr	r2, [sp, #4]
 80018ea:	3304      	adds	r3, #4
 80018ec:	429a      	cmp	r2, r3
 80018ee:	d312      	bcc.n	8001916 <HAL_GPIO_EXTI_Rising_Callback+0x42>
  {
    const uint16_t oldPrescaler = htim6.Instance->PSC;
    const uint16_t newPrescaler = (count * oldPrescaler + TARGET / 2) / TARGET;
 80018f0:	21a0      	movs	r1, #160	@ 0xa0
    const uint16_t oldPrescaler = htim6.Instance->PSC;
 80018f2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
    const uint16_t newPrescaler = (count * oldPrescaler + TARGET / 2) / TARGET;
 80018f4:	9801      	ldr	r0, [sp, #4]
 80018f6:	b29b      	uxth	r3, r3
 80018f8:	4358      	muls	r0, r3
 80018fa:	0049      	lsls	r1, r1, #1
 80018fc:	30a0      	adds	r0, #160	@ 0xa0
 80018fe:	f7fe fc31 	bl	8000164 <__udivsi3>
            
    // Check if the proposed new prescaler is in a reasonable range
    if (newPrescaler > 1000 && newPrescaler < 6000)
 8001902:	4b0e      	ldr	r3, [pc, #56]	@ (800193c <HAL_GPIO_EXTI_Rising_Callback+0x68>)
 8001904:	4a0e      	ldr	r2, [pc, #56]	@ (8001940 <HAL_GPIO_EXTI_Rising_Callback+0x6c>)
 8001906:	18c3      	adds	r3, r0, r3
 8001908:	b29b      	uxth	r3, r3
 800190a:	4293      	cmp	r3, r2
 800190c:	d803      	bhi.n	8001916 <HAL_GPIO_EXTI_Rising_Callback+0x42>
    {
      htim6.Instance->PSC = newPrescaler;
      htim6.Instance->EGR = TIM_EGR_UG; // Reinitialize the counter and generates an update of the registers
 800190e:	2301      	movs	r3, #1
 8001910:	b280      	uxth	r0, r0
      htim6.Instance->PSC = newPrescaler;
 8001912:	62a0      	str	r0, [r4, #40]	@ 0x28
      htim6.Instance->EGR = TIM_EGR_UG; // Reinitialize the counter and generates an update of the registers
 8001914:	6163      	str	r3, [r4, #20]
    }
  }

  tearingEffectCount++;
 8001916:	4a0b      	ldr	r2, [pc, #44]	@ (8001944 <HAL_GPIO_EXTI_Rising_Callback+0x70>)
 8001918:	8813      	ldrh	r3, [r2, #0]
 800191a:	3301      	adds	r3, #1
 800191c:	b29b      	uxth	r3, r3
 800191e:	8013      	strh	r3, [r2, #0]
  (&htim6)->Instance->CR1 &= ~(TIM_CR1_CEN);
 8001920:	2201      	movs	r2, #1
 8001922:	6823      	ldr	r3, [r4, #0]
 8001924:	4393      	bics	r3, r2
 8001926:	6023      	str	r3, [r4, #0]
  (&htim6)->Instance->CNT = 0;
 8001928:	2300      	movs	r3, #0
 800192a:	6263      	str	r3, [r4, #36]	@ 0x24

  touchgfxSignalVSync();
 800192c:	f001 fa22 	bl	8002d74 <touchgfxSignalVSync>
  setVSYNC();
 8001930:	f000 fe5d 	bl	80025ee <setVSYNC>
}
 8001934:	bd13      	pop	{r0, r1, r4, pc}
 8001936:	46c0      	nop			@ (mov r8, r8)
 8001938:	200000a0 	.word	0x200000a0
 800193c:	fffffc17 	.word	0xfffffc17
 8001940:	00001386 	.word	0x00001386
 8001944:	2000009e 	.word	0x2000009e

08001948 <HAL_GPIO_EXTI_Falling_Callback>:

void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin)
{
  UNUSED(GPIO_Pin);
  (&htim6)->Instance->CR1 = (TIM_CR1_CEN);
 8001948:	2201      	movs	r2, #1
{
 800194a:	b510      	push	{r4, lr}
  (&htim6)->Instance->CR1 = (TIM_CR1_CEN);
 800194c:	4b02      	ldr	r3, [pc, #8]	@ (8001958 <HAL_GPIO_EXTI_Falling_Callback+0x10>)
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	601a      	str	r2, [r3, #0]

  clearVSYNC();
 8001952:	f000 fe51 	bl	80025f8 <clearVSYNC>
}
 8001956:	bd10      	pop	{r4, pc}
 8001958:	200000a0 	.word	0x200000a0

0800195c <DisplayDriver_DisplayInit>:

void DisplayDriver_DisplayInit(void)
{
  uint8_t arguments[4];
  __HAL_SPI_ENABLE(&hspi1);
 800195c:	2340      	movs	r3, #64	@ 0x40
{
 800195e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_SPI_ENABLE(&hspi1);
 8001960:	4c3d      	ldr	r4, [pc, #244]	@ (8001a58 <DisplayDriver_DisplayInit+0xfc>)
  // Sleep out
  Display_DCS_Send(DCS_EXIT_SLEEP_MODE);
 8001962:	2011      	movs	r0, #17
  __HAL_SPI_ENABLE(&hspi1);
 8001964:	6822      	ldr	r2, [r4, #0]
 8001966:	6811      	ldr	r1, [r2, #0]
 8001968:	430b      	orrs	r3, r1
 800196a:	6013      	str	r3, [r2, #0]
  Display_DCS_Send(DCS_EXIT_SLEEP_MODE);
 800196c:	f7ff feba 	bl	80016e4 <Display_DCS_Send>
  HAL_Delay(100);
 8001970:	2064      	movs	r0, #100	@ 0x64
 8001972:	f004 fa77 	bl	8005e64 <HAL_Delay>

  // Display Normal mode
  Display_DCS_Send(DCS_ENTER_NORMAL_MODE);
 8001976:	2013      	movs	r0, #19
 8001978:	f7ff feb4 	bl	80016e4 <Display_DCS_Send>
  HAL_Delay(100);
 800197c:	2064      	movs	r0, #100	@ 0x64
 800197e:	f004 fa71 	bl	8005e64 <HAL_Delay>
  const uint32_t originalPrescaler = *((__IO uint32_t*)&hspi1.Instance->CR1) & SPI_CR1_BR_Msk;
 8001982:	2238      	movs	r2, #56	@ 0x38
 8001984:	6823      	ldr	r3, [r4, #0]
  *((__IO uint8_t*)&hspi1.Instance->DR) = address;
 8001986:	24dc      	movs	r4, #220	@ 0xdc
  const uint32_t originalPrescaler = *((__IO uint32_t*)&hspi1.Instance->CR1) & SPI_CR1_BR_Msk;
 8001988:	6819      	ldr	r1, [r3, #0]
  *((__IO uint32_t*)&hspi1.Instance->CR1) &= ~SPI_CR1_BR_Msk;
 800198a:	6818      	ldr	r0, [r3, #0]
  const uint32_t originalPrescaler = *((__IO uint32_t*)&hspi1.Instance->CR1) & SPI_CR1_BR_Msk;
 800198c:	4011      	ands	r1, r2
  *((__IO uint32_t*)&hspi1.Instance->CR1) &= ~SPI_CR1_BR_Msk;
 800198e:	4390      	bics	r0, r2
 8001990:	6018      	str	r0, [r3, #0]
  *((__IO uint32_t*)&hspi1.Instance->CR1) |= SPI_CR1_BR_Msk & SPI_BAUDRATEPRESCALER_256;
 8001992:	6818      	ldr	r0, [r3, #0]
 8001994:	4302      	orrs	r2, r0
 8001996:	601a      	str	r2, [r3, #0]
  DISPLAY_CSX_GPIO_Port->BRR = DISPLAY_CSX_Pin;
 8001998:	2080      	movs	r0, #128	@ 0x80
 800199a:	22a0      	movs	r2, #160	@ 0xa0
 800199c:	0080      	lsls	r0, r0, #2
 800199e:	05d2      	lsls	r2, r2, #23
 80019a0:	6290      	str	r0, [r2, #40]	@ 0x28
  DISPLAY_DCX_GPIO_Port->BRR = DISPLAY_DCX_Pin;
 80019a2:	2080      	movs	r0, #128	@ 0x80
 80019a4:	4a2d      	ldr	r2, [pc, #180]	@ (8001a5c <DisplayDriver_DisplayInit+0x100>)
 80019a6:	01c0      	lsls	r0, r0, #7
 80019a8:	6290      	str	r0, [r2, #40]	@ 0x28
  *((__IO uint8_t*)&hspi1.Instance->DR) = address;
 80019aa:	731c      	strb	r4, [r3, #12]
  while(((hspi1.Instance->SR) & SPI_FLAG_BSY));
 80019ac:	3c5c      	subs	r4, #92	@ 0x5c
 80019ae:	689d      	ldr	r5, [r3, #8]
 80019b0:	4225      	tst	r5, r4
 80019b2:	d1fc      	bne.n	80019ae <DisplayDriver_DisplayInit+0x52>
  DISPLAY_DCX_GPIO_Port->BSRR = DISPLAY_DCX_Pin;
 80019b4:	6190      	str	r0, [r2, #24]
  while (hspi1.Instance->SR & SPI_FLAG_RXNE)
 80019b6:	2201      	movs	r2, #1
 80019b8:	6898      	ldr	r0, [r3, #8]
 80019ba:	0004      	movs	r4, r0
 80019bc:	4014      	ands	r4, r2
 80019be:	4210      	tst	r0, r2
 80019c0:	d148      	bne.n	8001a54 <DisplayDriver_DisplayInit+0xf8>
  while(((hspi1.Instance->SR) & SPI_FLAG_BSY));
 80019c2:	2280      	movs	r2, #128	@ 0x80
  *((__IO uint8_t*)&hspi1.Instance->DR) = 0;
 80019c4:	731c      	strb	r4, [r3, #12]
  while(((hspi1.Instance->SR) & SPI_FLAG_BSY));
 80019c6:	6898      	ldr	r0, [r3, #8]
 80019c8:	4210      	tst	r0, r2
 80019ca:	d1fc      	bne.n	80019c6 <DisplayDriver_DisplayInit+0x6a>
  DISPLAY_CSX_GPIO_Port->BSRR = DISPLAY_CSX_Pin;
 80019cc:	22a0      	movs	r2, #160	@ 0xa0
 80019ce:	2480      	movs	r4, #128	@ 0x80
 80019d0:	05d2      	lsls	r2, r2, #23
 80019d2:	00a4      	lsls	r4, r4, #2
  uint8_t data = *((__IO uint8_t*)&hspi1.Instance->DR);
 80019d4:	7b18      	ldrb	r0, [r3, #12]
  DISPLAY_CSX_GPIO_Port->BSRR = DISPLAY_CSX_Pin;
 80019d6:	6194      	str	r4, [r2, #24]
  *((__IO uint32_t*)&hspi1.Instance->CR1) &= ~SPI_CR1_BR_Msk;
 80019d8:	681a      	ldr	r2, [r3, #0]
 80019da:	3cc9      	subs	r4, #201	@ 0xc9
 80019dc:	3cff      	subs	r4, #255	@ 0xff
 80019de:	43a2      	bics	r2, r4
 80019e0:	601a      	str	r2, [r3, #0]
  *((__IO uint32_t*)&hspi1.Instance->CR1) |= originalPrescaler;
 80019e2:	681a      	ldr	r2, [r3, #0]
 80019e4:	ac01      	add	r4, sp, #4
 80019e6:	430a      	orrs	r2, r1
 80019e8:	601a      	str	r2, [r3, #0]

  // The GFX01M2-AZ2 display (Driver IC ILI9341) needs to have the colors and X-axis inverted
  const uint8_t id = Display_DCS_Read(0xDC); // Read RDID3
  if (id == 0x00) // RDID3 for the GFX01M2-AZ2 is 0x00
 80019ea:	2800      	cmp	r0, #0
 80019ec:	d114      	bne.n	8001a18 <DisplayDriver_DisplayInit+0xbc>
  {
    // MADCTL: Exchange RGB / BGR + Mirror X
    arguments[0] = 0x48; // 0x48
 80019ee:	2348      	movs	r3, #72	@ 0x48
    Display_DCS_Send_With_Data(DCS_SET_ADDRESS_MODE, arguments, 1);
 80019f0:	2201      	movs	r2, #1
 80019f2:	0021      	movs	r1, r4
 80019f4:	3036      	adds	r0, #54	@ 0x36
    arguments[0] = 0x48; // 0x48
 80019f6:	7023      	strb	r3, [r4, #0]
    Display_DCS_Send_With_Data(DCS_SET_ADDRESS_MODE, arguments, 1);
 80019f8:	f7ff fe8e 	bl	8001718 <Display_DCS_Send_With_Data>
    HAL_Delay(100);
 80019fc:	2064      	movs	r0, #100	@ 0x64
 80019fe:	f004 fa31 	bl	8005e64 <HAL_Delay>

    // Set frame rate of AZ2 to 60 fps
    arguments[0] = 0x00;
 8001a02:	23f8      	movs	r3, #248	@ 0xf8
    arguments[1] = 0x1F;
    Display_DCS_Send_With_Data(DCS_FRMCTR1, arguments, 2);
 8001a04:	20b1      	movs	r0, #177	@ 0xb1
    arguments[0] = 0x00;
 8001a06:	015b      	lsls	r3, r3, #5
    Display_DCS_Send_With_Data(DCS_FRMCTR1, arguments, 2);
 8001a08:	2202      	movs	r2, #2
 8001a0a:	0021      	movs	r1, r4
    arguments[0] = 0x00;
 8001a0c:	8023      	strh	r3, [r4, #0]
    Display_DCS_Send_With_Data(DCS_FRMCTR1, arguments, 2);
 8001a0e:	f7ff fe83 	bl	8001718 <Display_DCS_Send_With_Data>
    HAL_Delay(100);
 8001a12:	2064      	movs	r0, #100	@ 0x64
 8001a14:	f004 fa26 	bl	8005e64 <HAL_Delay>
  }

  // Pixel Format
  arguments[0] = 0x05; // RGB565
 8001a18:	2305      	movs	r3, #5
  Display_DCS_Send_With_Data(DCS_SET_PIXEL_FORMAT, arguments, 1);
  HAL_Delay(100);

  // Tearing effect line on
  arguments[0] = 0; //0x00;
 8001a1a:	2500      	movs	r5, #0
  Display_DCS_Send_With_Data(DCS_SET_PIXEL_FORMAT, arguments, 1);
 8001a1c:	0021      	movs	r1, r4
 8001a1e:	2201      	movs	r2, #1
 8001a20:	203a      	movs	r0, #58	@ 0x3a
  arguments[0] = 0x05; // RGB565
 8001a22:	7023      	strb	r3, [r4, #0]
  Display_DCS_Send_With_Data(DCS_SET_PIXEL_FORMAT, arguments, 1);
 8001a24:	f7ff fe78 	bl	8001718 <Display_DCS_Send_With_Data>
  HAL_Delay(100);
 8001a28:	2064      	movs	r0, #100	@ 0x64
 8001a2a:	f004 fa1b 	bl	8005e64 <HAL_Delay>
  Display_DCS_Send_With_Data(DCS_SET_TEAR_ON, arguments, 1);
 8001a2e:	0021      	movs	r1, r4
 8001a30:	2201      	movs	r2, #1
 8001a32:	2035      	movs	r0, #53	@ 0x35
  arguments[0] = 0; //0x00;
 8001a34:	7025      	strb	r5, [r4, #0]
  Display_DCS_Send_With_Data(DCS_SET_TEAR_ON, arguments, 1);
 8001a36:	f7ff fe6f 	bl	8001718 <Display_DCS_Send_With_Data>
  HAL_Delay(100);
 8001a3a:	2064      	movs	r0, #100	@ 0x64
 8001a3c:	f004 fa12 	bl	8005e64 <HAL_Delay>

  // Tearing effect scan line
  arguments[0] = 0;
  arguments[1] = 0;
  Display_DCS_Send_With_Data(DCS_SET_TEAR_SCANLINE, arguments, 2);
 8001a40:	2202      	movs	r2, #2
 8001a42:	0021      	movs	r1, r4
 8001a44:	2044      	movs	r0, #68	@ 0x44
  arguments[1] = 0;
 8001a46:	7065      	strb	r5, [r4, #1]
  Display_DCS_Send_With_Data(DCS_SET_TEAR_SCANLINE, arguments, 2);
 8001a48:	f7ff fe66 	bl	8001718 <Display_DCS_Send_With_Data>
  HAL_Delay(100);
 8001a4c:	2064      	movs	r0, #100	@ 0x64
 8001a4e:	f004 fa09 	bl	8005e64 <HAL_Delay>
}
 8001a52:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
	  *((__IO uint8_t*)&hspi1.Instance->DR);
 8001a54:	7b18      	ldrb	r0, [r3, #12]
 8001a56:	e7af      	b.n	80019b8 <DisplayDriver_DisplayInit+0x5c>
 8001a58:	20000264 	.word	0x20000264
 8001a5c:	50000400 	.word	0x50000400

08001a60 <DisplayDriver_DisplayReset>:

void DisplayDriver_DisplayReset(void)
{
 8001a60:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(DISPLAY_RESET_GPIO_Port, DISPLAY_RESET_Pin, GPIO_PIN_RESET);
 8001a62:	24a0      	movs	r4, #160	@ 0xa0
 8001a64:	05e4      	lsls	r4, r4, #23
 8001a66:	2200      	movs	r2, #0
 8001a68:	2102      	movs	r1, #2
 8001a6a:	0020      	movs	r0, r4
 8001a6c:	f004 fc38 	bl	80062e0 <HAL_GPIO_WritePin>
  HAL_Delay(100);
 8001a70:	2064      	movs	r0, #100	@ 0x64
 8001a72:	f004 f9f7 	bl	8005e64 <HAL_Delay>
  HAL_GPIO_WritePin(DISPLAY_RESET_GPIO_Port, DISPLAY_RESET_Pin, GPIO_PIN_SET);
 8001a76:	2201      	movs	r2, #1
 8001a78:	2102      	movs	r1, #2
 8001a7a:	0020      	movs	r0, r4
 8001a7c:	f004 fc30 	bl	80062e0 <HAL_GPIO_WritePin>
  HAL_Delay(100);
 8001a80:	2064      	movs	r0, #100	@ 0x64
 8001a82:	f004 f9ef 	bl	8005e64 <HAL_Delay>
}
 8001a86:	bd10      	pop	{r4, pc}

08001a88 <DisplayDriver_Init>:

void DisplayDriver_Init(void)
{
  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001a88:	2200      	movs	r2, #0
{
 8001a8a:	b510      	push	{r4, lr}
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001a8c:	0011      	movs	r1, r2
 8001a8e:	2009      	movs	r0, #9
 8001a90:	f004 fa06 	bl	8005ea0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001a94:	2009      	movs	r0, #9
 8001a96:	f004 fa2d 	bl	8005ef4 <HAL_NVIC_EnableIRQ>
}
 8001a9a:	bd10      	pop	{r4, pc}

08001a9c <touchgfxDisplayDriverTransmitActive>:

int touchgfxDisplayDriverTransmitActive(void)
{
  return IsTransmittingBlock_;
 8001a9c:	4b01      	ldr	r3, [pc, #4]	@ (8001aa4 <touchgfxDisplayDriverTransmitActive+0x8>)
 8001a9e:	7818      	ldrb	r0, [r3, #0]
 8001aa0:	b2c0      	uxtb	r0, r0
}
 8001aa2:	4770      	bx	lr
 8001aa4:	2000009d 	.word	0x2000009d

08001aa8 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 8001aa8:	b513      	push	{r0, r1, r4, lr}
 8001aaa:	ac04      	add	r4, sp, #16
 8001aac:	8824      	ldrh	r4, [r4, #0]
  Display_Bitmap((uint16_t*)pixels, x, y, w, h);
 8001aae:	9400      	str	r4, [sp, #0]
 8001ab0:	f7ff fea2 	bl	80017f8 <Display_Bitmap>
}
 8001ab4:	bd13      	pop	{r0, r1, r4, pc}
	...

08001ab8 <DisplayDriver_DMACallback>:

void DisplayDriver_DMACallback(void)
{
  /* Transfer Complete Interrupt management ***********************************/
  if ((0U != (DMA1->ISR & (DMA_FLAG_TC1))) && (0U != (hdma_spi1_tx.Instance->CCR & DMA_IT_TC)))
 8001ab8:	2202      	movs	r2, #2
 8001aba:	4b1e      	ldr	r3, [pc, #120]	@ (8001b34 <DisplayDriver_DMACallback+0x7c>)
{
 8001abc:	b510      	push	{r4, lr}
  if ((0U != (DMA1->ISR & (DMA_FLAG_TC1))) && (0U != (hdma_spi1_tx.Instance->CCR & DMA_IT_TC)))
 8001abe:	6819      	ldr	r1, [r3, #0]
 8001ac0:	4211      	tst	r1, r2
 8001ac2:	d01f      	beq.n	8001b04 <DisplayDriver_DMACallback+0x4c>
 8001ac4:	491c      	ldr	r1, [pc, #112]	@ (8001b38 <DisplayDriver_DMACallback+0x80>)
 8001ac6:	6809      	ldr	r1, [r1, #0]
 8001ac8:	6808      	ldr	r0, [r1, #0]
 8001aca:	4210      	tst	r0, r2
 8001acc:	d01a      	beq.n	8001b04 <DisplayDriver_DMACallback+0x4c>
  {
    /* Disable the transfer complete and error interrupt */
    __HAL_DMA_DISABLE_IT(&hdma_spi1_tx, DMA_IT_TE | DMA_IT_TC);
 8001ace:	240a      	movs	r4, #10
 8001ad0:	6808      	ldr	r0, [r1, #0]
 8001ad2:	43a0      	bics	r0, r4
 8001ad4:	6008      	str	r0, [r1, #0]

    /* Clear the transfer complete flag */
    __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, DMA_FLAG_TC1);
 8001ad6:	6859      	ldr	r1, [r3, #4]
 8001ad8:	430a      	orrs	r2, r1
 8001ada:	605a      	str	r2, [r3, #4]

    IsTransmittingBlock_ = 0;
 8001adc:	2200      	movs	r2, #0
 8001ade:	4b17      	ldr	r3, [pc, #92]	@ (8001b3c <DisplayDriver_DMACallback+0x84>)
 8001ae0:	701a      	strb	r2, [r3, #0]

    // Wait until the bus is not busy before changing configuration
    // SPI is busy in communication or Tx buffer is not empty
    while(((hspi1.Instance->SR) & SPI_FLAG_BSY) != RESET) { }
 8001ae2:	4b17      	ldr	r3, [pc, #92]	@ (8001b40 <DisplayDriver_DMACallback+0x88>)
 8001ae4:	3280      	adds	r2, #128	@ 0x80
 8001ae6:	681b      	ldr	r3, [r3, #0]
 8001ae8:	6899      	ldr	r1, [r3, #8]
 8001aea:	4211      	tst	r1, r2
 8001aec:	d1fc      	bne.n	8001ae8 <DisplayDriver_DMACallback+0x30>

    // Set the nCS
    DISPLAY_CSX_GPIO_Port->BSRR = DISPLAY_CSX_Pin;
 8001aee:	22a0      	movs	r2, #160	@ 0xa0
 8001af0:	2180      	movs	r1, #128	@ 0x80
 8001af2:	05d2      	lsls	r2, r2, #23
 8001af4:	0089      	lsls	r1, r1, #2
 8001af6:	6191      	str	r1, [r2, #24]

    // Go back to 8-bit mode
    hspi1.Instance->CR2 = SPI_DATASIZE_8BIT;
 8001af8:	22e0      	movs	r2, #224	@ 0xe0
 8001afa:	00d2      	lsls	r2, r2, #3
 8001afc:	605a      	str	r2, [r3, #4]

    // Signal Transfer Complete to TouchGFX
    DisplayDriver_TransferCompleteCallback();
 8001afe:	f001 f934 	bl	8002d6a <DisplayDriver_TransferCompleteCallback>
    /* Clear all flags */
    __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, DMA_FLAG_GI1 );

    assert(0);  // Halting program - Transfer Error Interrupt received.
  }
}
 8001b02:	bd10      	pop	{r4, pc}
  else if ((0U != (DMA1->ISR & (DMA_FLAG_TC1))) && (0U != (hdma_spi1_tx.Instance->CCR & DMA_IT_TE)))
 8001b04:	681a      	ldr	r2, [r3, #0]
 8001b06:	0792      	lsls	r2, r2, #30
 8001b08:	d5fb      	bpl.n	8001b02 <DisplayDriver_DMACallback+0x4a>
 8001b0a:	4a0b      	ldr	r2, [pc, #44]	@ (8001b38 <DisplayDriver_DMACallback+0x80>)
 8001b0c:	6812      	ldr	r2, [r2, #0]
 8001b0e:	6811      	ldr	r1, [r2, #0]
 8001b10:	0709      	lsls	r1, r1, #28
 8001b12:	d5f6      	bpl.n	8001b02 <DisplayDriver_DMACallback+0x4a>
    __HAL_DMA_DISABLE_IT(&hdma_spi1_tx, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8001b14:	200e      	movs	r0, #14
 8001b16:	6811      	ldr	r1, [r2, #0]
 8001b18:	4381      	bics	r1, r0
 8001b1a:	6011      	str	r1, [r2, #0]
    __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, DMA_FLAG_GI1 );
 8001b1c:	2201      	movs	r2, #1
 8001b1e:	6859      	ldr	r1, [r3, #4]
    assert(0);  // Halting program - Transfer Error Interrupt received.
 8001b20:	4808      	ldr	r0, [pc, #32]	@ (8001b44 <DisplayDriver_DMACallback+0x8c>)
    __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, DMA_FLAG_GI1 );
 8001b22:	430a      	orrs	r2, r1
    assert(0);  // Halting program - Transfer Error Interrupt received.
 8001b24:	21b2      	movs	r1, #178	@ 0xb2
    __HAL_DMA_CLEAR_FLAG(&hdma_spi1_tx, DMA_FLAG_GI1 );
 8001b26:	605a      	str	r2, [r3, #4]
    assert(0);  // Halting program - Transfer Error Interrupt received.
 8001b28:	0049      	lsls	r1, r1, #1
 8001b2a:	4b07      	ldr	r3, [pc, #28]	@ (8001b48 <DisplayDriver_DMACallback+0x90>)
 8001b2c:	4a07      	ldr	r2, [pc, #28]	@ (8001b4c <DisplayDriver_DMACallback+0x94>)
 8001b2e:	f010 fe17 	bl	8012760 <__assert_func>
 8001b32:	46c0      	nop			@ (mov r8, r8)
 8001b34:	40020000 	.word	0x40020000
 8001b38:	200001a4 	.word	0x200001a4
 8001b3c:	2000009d 	.word	0x2000009d
 8001b40:	20000264 	.word	0x20000264
 8001b44:	0801392c 	.word	0x0801392c
 8001b48:	08015063 	.word	0x08015063
 8001b4c:	0801399c 	.word	0x0801399c

08001b50 <touchgfxDisplayDriverShouldTransferBlock>:
int touchgfxDisplayDriverShouldTransferBlock(uint16_t bottom)
{
  // Only allow block transfer if the display has drawn past the bottom of the requested block (plus a margin of two lines)
  // A timer is used to estimate how many lines have been drawn by setting the prescaler so the tick rate matches the line draw rate
  uint16_t lastLineDrawn = __HAL_TIM_GET_COUNTER(&htim6);
 8001b50:	4b06      	ldr	r3, [pc, #24]	@ (8001b6c <touchgfxDisplayDriverShouldTransferBlock+0x1c>)
  return bottom + 2 < lastLineDrawn || tearingEffectCount > 0;
 8001b52:	1c82      	adds	r2, r0, #2
  uint16_t lastLineDrawn = __HAL_TIM_GET_COUNTER(&htim6);
 8001b54:	681b      	ldr	r3, [r3, #0]
  return bottom + 2 < lastLineDrawn || tearingEffectCount > 0;
 8001b56:	2001      	movs	r0, #1
  uint16_t lastLineDrawn = __HAL_TIM_GET_COUNTER(&htim6);
 8001b58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
  return bottom + 2 < lastLineDrawn || tearingEffectCount > 0;
 8001b5a:	b29b      	uxth	r3, r3
 8001b5c:	429a      	cmp	r2, r3
 8001b5e:	db03      	blt.n	8001b68 <touchgfxDisplayDriverShouldTransferBlock+0x18>
 8001b60:	4b03      	ldr	r3, [pc, #12]	@ (8001b70 <touchgfxDisplayDriverShouldTransferBlock+0x20>)
 8001b62:	8818      	ldrh	r0, [r3, #0]
 8001b64:	1e43      	subs	r3, r0, #1
 8001b66:	4198      	sbcs	r0, r3
}
 8001b68:	4770      	bx	lr
 8001b6a:	46c0      	nop			@ (mov r8, r8)
 8001b6c:	200000a0 	.word	0x200000a0
 8001b70:	2000009e 	.word	0x2000009e

08001b74 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001b74:	b510      	push	{r4, lr}
 8001b76:	b092      	sub	sp, #72	@ 0x48
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b78:	2238      	movs	r2, #56	@ 0x38
 8001b7a:	2100      	movs	r1, #0
 8001b7c:	a804      	add	r0, sp, #16
 8001b7e:	f011 f80e 	bl	8012b9e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b82:	2210      	movs	r2, #16
 8001b84:	2100      	movs	r1, #0
 8001b86:	4668      	mov	r0, sp
 8001b88:	f011 f809 	bl	8012b9e <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001b8c:	2080      	movs	r0, #128	@ 0x80
 8001b8e:	0080      	lsls	r0, r0, #2
 8001b90:	f004 fbc8 	bl	8006324 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001b94:	2380      	movs	r3, #128	@ 0x80
 8001b96:	005b      	lsls	r3, r3, #1
 8001b98:	9307      	str	r3, [sp, #28]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 8001b9a:	2300      	movs	r3, #0
 8001b9c:	9308      	str	r3, [sp, #32]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8001b9e:	930d      	str	r3, [sp, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001ba0:	3308      	adds	r3, #8
 8001ba2:	930e      	str	r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001ba4:	2380      	movs	r3, #128	@ 0x80
 8001ba6:	029b      	lsls	r3, r3, #10
 8001ba8:	930f      	str	r3, [sp, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8001baa:	2380      	movs	r3, #128	@ 0x80
 8001bac:	049b      	lsls	r3, r3, #18
 8001bae:	9310      	str	r3, [sp, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001bb0:	2380      	movs	r3, #128	@ 0x80
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001bb2:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001bb4:	2240      	movs	r2, #64	@ 0x40
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001bb6:	059b      	lsls	r3, r3, #22
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001bb8:	a804      	add	r0, sp, #16
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001bba:	9404      	str	r4, [sp, #16]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001bbc:	9209      	str	r2, [sp, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001bbe:	940b      	str	r4, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001bc0:	940c      	str	r4, [sp, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001bc2:	9311      	str	r3, [sp, #68]	@ 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001bc4:	f004 fbda 	bl	800637c <HAL_RCC_OscConfig>
 8001bc8:	2800      	cmp	r0, #0
 8001bca:	d001      	beq.n	8001bd0 <SystemClock_Config+0x5c>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001bcc:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001bce:	e7fe      	b.n	8001bce <SystemClock_Config+0x5a>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001bd0:	2307      	movs	r3, #7
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001bd2:	9002      	str	r0, [sp, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001bd4:	9003      	str	r0, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001bd6:	0021      	movs	r1, r4
 8001bd8:	4668      	mov	r0, sp
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001bda:	9300      	str	r3, [sp, #0]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001bdc:	9401      	str	r4, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001bde:	f004 fe35 	bl	800684c <HAL_RCC_ClockConfig>
 8001be2:	2800      	cmp	r0, #0
 8001be4:	d001      	beq.n	8001bea <SystemClock_Config+0x76>
 8001be6:	b672      	cpsid	i
  while (1)
 8001be8:	e7fe      	b.n	8001be8 <SystemClock_Config+0x74>
}
 8001bea:	b012      	add	sp, #72	@ 0x48
 8001bec:	bd10      	pop	{r4, pc}
	...

08001bf0 <main>:
{
 8001bf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bf2:	b08d      	sub	sp, #52	@ 0x34
  HAL_Init();
 8001bf4:	f004 f910 	bl	8005e18 <HAL_Init>
  SystemClock_Config();
 8001bf8:	f7ff ffbc 	bl	8001b74 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bfc:	2214      	movs	r2, #20
 8001bfe:	2100      	movs	r1, #0
 8001c00:	a807      	add	r0, sp, #28
 8001c02:	f010 ffcc 	bl	8012b9e <memset>
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c06:	2204      	movs	r2, #4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c08:	2601      	movs	r6, #1
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c0a:	2702      	movs	r7, #2
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c0c:	4d8d      	ldr	r5, [pc, #564]	@ (8001e44 <main+0x254>)
  HAL_GPIO_WritePin(DISPLAY_RESET_GPIO_Port, DISPLAY_RESET_Pin, GPIO_PIN_RESET);
 8001c0e:	20a0      	movs	r0, #160	@ 0xa0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c10:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
  HAL_GPIO_WritePin(DISPLAY_RESET_GPIO_Port, DISPLAY_RESET_Pin, GPIO_PIN_RESET);
 8001c12:	0039      	movs	r1, r7
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c14:	4313      	orrs	r3, r2
 8001c16:	636b      	str	r3, [r5, #52]	@ 0x34
 8001c18:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
  HAL_GPIO_WritePin(DISPLAY_RESET_GPIO_Port, DISPLAY_RESET_Pin, GPIO_PIN_RESET);
 8001c1a:	05c0      	lsls	r0, r0, #23
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c1c:	4013      	ands	r3, r2
 8001c1e:	9302      	str	r3, [sp, #8]
 8001c20:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c22:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8001c24:	321c      	adds	r2, #28
 8001c26:	4313      	orrs	r3, r2
 8001c28:	636b      	str	r3, [r5, #52]	@ 0x34
 8001c2a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001c2c:	2400      	movs	r4, #0
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c2e:	4013      	ands	r3, r2
 8001c30:	9303      	str	r3, [sp, #12]
 8001c32:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c34:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c36:	3a18      	subs	r2, #24
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c38:	4333      	orrs	r3, r6
 8001c3a:	636b      	str	r3, [r5, #52]	@ 0x34
 8001c3c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8001c3e:	4033      	ands	r3, r6
 8001c40:	9304      	str	r3, [sp, #16]
 8001c42:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c44:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8001c46:	433b      	orrs	r3, r7
 8001c48:	636b      	str	r3, [r5, #52]	@ 0x34
 8001c4a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8001c4c:	403b      	ands	r3, r7
 8001c4e:	9305      	str	r3, [sp, #20]
 8001c50:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c52:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8001c54:	4313      	orrs	r3, r2
 8001c56:	636b      	str	r3, [r5, #52]	@ 0x34
 8001c58:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8001c5a:	4013      	ands	r3, r2
 8001c5c:	9306      	str	r3, [sp, #24]
  HAL_GPIO_WritePin(DISPLAY_RESET_GPIO_Port, DISPLAY_RESET_Pin, GPIO_PIN_RESET);
 8001c5e:	2200      	movs	r2, #0
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c60:	9b06      	ldr	r3, [sp, #24]
  HAL_GPIO_WritePin(DISPLAY_RESET_GPIO_Port, DISPLAY_RESET_Pin, GPIO_PIN_RESET);
 8001c62:	f004 fb3d 	bl	80062e0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, MCU_ACTIVE_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001c66:	2200      	movs	r2, #0
 8001c68:	2130      	movs	r1, #48	@ 0x30
 8001c6a:	4877      	ldr	r0, [pc, #476]	@ (8001e48 <main+0x258>)
 8001c6c:	f004 fb38 	bl	80062e0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DISPLAY_DCX_GPIO_Port, DISPLAY_DCX_Pin, GPIO_PIN_SET);
 8001c70:	2180      	movs	r1, #128	@ 0x80
 8001c72:	0032      	movs	r2, r6
 8001c74:	4875      	ldr	r0, [pc, #468]	@ (8001e4c <main+0x25c>)
 8001c76:	01c9      	lsls	r1, r1, #7
 8001c78:	f004 fb32 	bl	80062e0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FLASH_CS_Pin|DISPLAY_CSX_Pin, GPIO_PIN_SET);
 8001c7c:	21c0      	movs	r1, #192	@ 0xc0
 8001c7e:	20a0      	movs	r0, #160	@ 0xa0
 8001c80:	0032      	movs	r2, r6
 8001c82:	0089      	lsls	r1, r1, #2
 8001c84:	05c0      	lsls	r0, r0, #23
 8001c86:	f004 fb2b 	bl	80062e0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, RENDER_TIME_Pin|VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001c8a:	21c0      	movs	r1, #192	@ 0xc0
 8001c8c:	2200      	movs	r2, #0
 8001c8e:	4870      	ldr	r0, [pc, #448]	@ (8001e50 <main+0x260>)
 8001c90:	0089      	lsls	r1, r1, #2
 8001c92:	f004 fb25 	bl	80062e0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = BUTTON_USER_Pin|BUTTON_CENTER_Pin;
 8001c96:	2382      	movs	r3, #130	@ 0x82
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c98:	486b      	ldr	r0, [pc, #428]	@ (8001e48 <main+0x258>)
  GPIO_InitStruct.Pin = BUTTON_USER_Pin|BUTTON_CENTER_Pin;
 8001c9a:	019b      	lsls	r3, r3, #6
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c9c:	a907      	add	r1, sp, #28
  GPIO_InitStruct.Pin = BUTTON_USER_Pin|BUTTON_CENTER_Pin;
 8001c9e:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001ca0:	9408      	str	r4, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001ca2:	9609      	str	r6, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ca4:	f004 fa64 	bl	8006170 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8001ca8:	23c4      	movs	r3, #196	@ 0xc4
  HAL_GPIO_Init(DISPLAY_TEARING_EFFECT_GPIO_Port, &GPIO_InitStruct);
 8001caa:	20a0      	movs	r0, #160	@ 0xa0
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8001cac:	039b      	lsls	r3, r3, #14
  HAL_GPIO_Init(DISPLAY_TEARING_EFFECT_GPIO_Port, &GPIO_InitStruct);
 8001cae:	a907      	add	r1, sp, #28
 8001cb0:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8001cb2:	9308      	str	r3, [sp, #32]
  GPIO_InitStruct.Pin = DISPLAY_TEARING_EFFECT_Pin;
 8001cb4:	9607      	str	r6, [sp, #28]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cb6:	9409      	str	r4, [sp, #36]	@ 0x24
  HAL_GPIO_Init(DISPLAY_TEARING_EFFECT_GPIO_Port, &GPIO_InitStruct);
 8001cb8:	f004 fa5a 	bl	8006170 <HAL_GPIO_Init>
  HAL_GPIO_Init(DISPLAY_RESET_GPIO_Port, &GPIO_InitStruct);
 8001cbc:	20a0      	movs	r0, #160	@ 0xa0
 8001cbe:	a907      	add	r1, sp, #28
 8001cc0:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = DISPLAY_RESET_Pin;
 8001cc2:	9707      	str	r7, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cc4:	970a      	str	r7, [sp, #40]	@ 0x28
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cc6:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cc8:	9409      	str	r4, [sp, #36]	@ 0x24
  HAL_GPIO_Init(DISPLAY_RESET_GPIO_Port, &GPIO_InitStruct);
 8001cca:	f004 fa51 	bl	8006170 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin|FRAME_RATE_Pin;
 8001cce:	2330      	movs	r3, #48	@ 0x30
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cd0:	19bf      	adds	r7, r7, r6
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cd2:	485d      	ldr	r0, [pc, #372]	@ (8001e48 <main+0x258>)
 8001cd4:	a907      	add	r1, sp, #28
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin|FRAME_RATE_Pin;
 8001cd6:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cd8:	970a      	str	r7, [sp, #40]	@ 0x28
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cda:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cdc:	9409      	str	r4, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cde:	f004 fa47 	bl	8006170 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = BUTTON_LEFT_Pin|BUTTON_RIGHT_Pin|BUTTON_UP_Pin|BUTTON_DOWN_Pin;
 8001ce2:	4b5c      	ldr	r3, [pc, #368]	@ (8001e54 <main+0x264>)
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce4:	4859      	ldr	r0, [pc, #356]	@ (8001e4c <main+0x25c>)
 8001ce6:	a907      	add	r1, sp, #28
  GPIO_InitStruct.Pin = BUTTON_LEFT_Pin|BUTTON_RIGHT_Pin|BUTTON_UP_Pin|BUTTON_DOWN_Pin;
 8001ce8:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001cea:	9408      	str	r4, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001cec:	9609      	str	r6, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cee:	f004 fa3f 	bl	8006170 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DISPLAY_DCX_Pin;
 8001cf2:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(DISPLAY_DCX_GPIO_Port, &GPIO_InitStruct);
 8001cf4:	4855      	ldr	r0, [pc, #340]	@ (8001e4c <main+0x25c>)
  GPIO_InitStruct.Pin = DISPLAY_DCX_Pin;
 8001cf6:	01db      	lsls	r3, r3, #7
  HAL_GPIO_Init(DISPLAY_DCX_GPIO_Port, &GPIO_InitStruct);
 8001cf8:	a907      	add	r1, sp, #28
  GPIO_InitStruct.Pin = DISPLAY_DCX_Pin;
 8001cfa:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cfc:	970a      	str	r7, [sp, #40]	@ 0x28
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cfe:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d00:	9409      	str	r4, [sp, #36]	@ 0x24
  HAL_GPIO_Init(DISPLAY_DCX_GPIO_Port, &GPIO_InitStruct);
 8001d02:	f004 fa35 	bl	8006170 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FLASH_CS_Pin|DISPLAY_CSX_Pin;
 8001d06:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d08:	20a0      	movs	r0, #160	@ 0xa0
  GPIO_InitStruct.Pin = FLASH_CS_Pin|DISPLAY_CSX_Pin;
 8001d0a:	009b      	lsls	r3, r3, #2
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d0c:	a907      	add	r1, sp, #28
 8001d0e:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = FLASH_CS_Pin|DISPLAY_CSX_Pin;
 8001d10:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d12:	970a      	str	r7, [sp, #40]	@ 0x28
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d14:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d16:	9409      	str	r4, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d18:	f004 fa2a 	bl	8006170 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = RENDER_TIME_Pin|VSYNC_FREQ_Pin;
 8001d1c:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d1e:	484c      	ldr	r0, [pc, #304]	@ (8001e50 <main+0x260>)
  GPIO_InitStruct.Pin = RENDER_TIME_Pin|VSYNC_FREQ_Pin;
 8001d20:	009b      	lsls	r3, r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d22:	a907      	add	r1, sp, #28
  GPIO_InitStruct.Pin = RENDER_TIME_Pin|VSYNC_FREQ_Pin;
 8001d24:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d26:	970a      	str	r7, [sp, #40]	@ 0x28
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d28:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d2a:	9409      	str	r4, [sp, #36]	@ 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d2c:	f004 fa20 	bl	8006170 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI0_1_IRQn, 0, 0);
 8001d30:	0022      	movs	r2, r4
 8001d32:	0021      	movs	r1, r4
 8001d34:	2005      	movs	r0, #5
 8001d36:	f004 f8b3 	bl	8005ea0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_1_IRQn);
 8001d3a:	2005      	movs	r0, #5
 8001d3c:	f004 f8da 	bl	8005ef4 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001d40:	6bab      	ldr	r3, [r5, #56]	@ 0x38
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001d42:	0022      	movs	r2, r4
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001d44:	4333      	orrs	r3, r6
 8001d46:	63ab      	str	r3, [r5, #56]	@ 0x38
 8001d48:	6bab      	ldr	r3, [r5, #56]	@ 0x38
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001d4a:	0021      	movs	r1, r4
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001d4c:	4033      	ands	r3, r6
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001d4e:	2009      	movs	r0, #9
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001d50:	9301      	str	r3, [sp, #4]
 8001d52:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001d54:	f004 f8a4 	bl	8005ea0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001d58:	2009      	movs	r0, #9
 8001d5a:	f004 f8cb 	bl	8005ef4 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 8001d5e:	0022      	movs	r2, r4
 8001d60:	0021      	movs	r1, r4
 8001d62:	200a      	movs	r0, #10
 8001d64:	f004 f89c 	bl	8005ea0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 8001d68:	200a      	movs	r0, #10
 8001d6a:	f004 f8c3 	bl	8005ef4 <HAL_NVIC_EnableIRQ>
  hspi1.Instance = SPI1;
 8001d6e:	483a      	ldr	r0, [pc, #232]	@ (8001e58 <main+0x268>)
 8001d70:	4b3a      	ldr	r3, [pc, #232]	@ (8001e5c <main+0x26c>)
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001d72:	25e0      	movs	r5, #224	@ 0xe0
  hspi1.Instance = SPI1;
 8001d74:	6003      	str	r3, [r0, #0]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001d76:	2380      	movs	r3, #128	@ 0x80
 8001d78:	009b      	lsls	r3, r3, #2
 8001d7a:	6183      	str	r3, [r0, #24]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001d7c:	3702      	adds	r7, #2
  hspi1.Init.CRCPolynomial = 7;
 8001d7e:	3bfa      	subs	r3, #250	@ 0xfa
 8001d80:	3bff      	subs	r3, #255	@ 0xff
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001d82:	37ff      	adds	r7, #255	@ 0xff
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001d84:	00ed      	lsls	r5, r5, #3
  hspi1.Init.CRCPolynomial = 7;
 8001d86:	62c3      	str	r3, [r0, #44]	@ 0x2c
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001d88:	6047      	str	r7, [r0, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8001d8a:	6084      	str	r4, [r0, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001d8c:	60c5      	str	r5, [r0, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001d8e:	6104      	str	r4, [r0, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001d90:	6144      	str	r4, [r0, #20]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001d92:	61c4      	str	r4, [r0, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001d94:	6204      	str	r4, [r0, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001d96:	6244      	str	r4, [r0, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001d98:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8001d9a:	6304      	str	r4, [r0, #48]	@ 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8001d9c:	6344      	str	r4, [r0, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001d9e:	f004 fe03 	bl	80069a8 <HAL_SPI_Init>
 8001da2:	0003      	movs	r3, r0
 8001da4:	42a0      	cmp	r0, r4
 8001da6:	d001      	beq.n	8001dac <main+0x1bc>
 8001da8:	b672      	cpsid	i
  while (1)
 8001daa:	e7fe      	b.n	8001daa <main+0x1ba>
  hcrc.Instance = CRC;
 8001dac:	482c      	ldr	r0, [pc, #176]	@ (8001e60 <main+0x270>)
 8001dae:	4a2d      	ldr	r2, [pc, #180]	@ (8001e64 <main+0x274>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8001db0:	8083      	strh	r3, [r0, #4]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8001db2:	6143      	str	r3, [r0, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8001db4:	6183      	str	r3, [r0, #24]
  hcrc.Instance = CRC;
 8001db6:	6002      	str	r2, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8001db8:	6206      	str	r6, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001dba:	f004 f8c1 	bl	8005f40 <HAL_CRC_Init>
 8001dbe:	1e03      	subs	r3, r0, #0
 8001dc0:	d001      	beq.n	8001dc6 <main+0x1d6>
 8001dc2:	b672      	cpsid	i
  while (1)
 8001dc4:	e7fe      	b.n	8001dc4 <main+0x1d4>
  hspi2.Instance = SPI2;
 8001dc6:	4828      	ldr	r0, [pc, #160]	@ (8001e68 <main+0x278>)
 8001dc8:	4a28      	ldr	r2, [pc, #160]	@ (8001e6c <main+0x27c>)
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001dca:	60c5      	str	r5, [r0, #12]
  hspi2.Instance = SPI2;
 8001dcc:	6002      	str	r2, [r0, #0]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001dce:	2280      	movs	r2, #128	@ 0x80
 8001dd0:	0092      	lsls	r2, r2, #2
 8001dd2:	6182      	str	r2, [r0, #24]
  hspi2.Init.CRCPolynomial = 7;
 8001dd4:	3afa      	subs	r2, #250	@ 0xfa
 8001dd6:	3aff      	subs	r2, #255	@ 0xff
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001dd8:	6047      	str	r7, [r0, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001dda:	6083      	str	r3, [r0, #8]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001ddc:	6103      	str	r3, [r0, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001dde:	6143      	str	r3, [r0, #20]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001de0:	61c3      	str	r3, [r0, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001de2:	6203      	str	r3, [r0, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8001de4:	6243      	str	r3, [r0, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001de6:	6283      	str	r3, [r0, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 7;
 8001de8:	62c2      	str	r2, [r0, #44]	@ 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8001dea:	6303      	str	r3, [r0, #48]	@ 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8001dec:	6343      	str	r3, [r0, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001dee:	f004 fddb 	bl	80069a8 <HAL_SPI_Init>
 8001df2:	1e05      	subs	r5, r0, #0
 8001df4:	d001      	beq.n	8001dfa <main+0x20a>
 8001df6:	b672      	cpsid	i
  while (1)
 8001df8:	e7fe      	b.n	8001df8 <main+0x208>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001dfa:	0001      	movs	r1, r0
 8001dfc:	220c      	movs	r2, #12
 8001dfe:	a807      	add	r0, sp, #28
 8001e00:	f010 fecd 	bl	8012b9e <memset>
  htim6.Instance = TIM6;
 8001e04:	4c1a      	ldr	r4, [pc, #104]	@ (8001e70 <main+0x280>)
 8001e06:	4b1b      	ldr	r3, [pc, #108]	@ (8001e74 <main+0x284>)
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8001e08:	0020      	movs	r0, r4
  htim6.Instance = TIM6;
 8001e0a:	6023      	str	r3, [r4, #0]
  htim6.Init.Prescaler = 3077;
 8001e0c:	4b1a      	ldr	r3, [pc, #104]	@ (8001e78 <main+0x288>)
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e0e:	60a5      	str	r5, [r4, #8]
  htim6.Init.Prescaler = 3077;
 8001e10:	6063      	str	r3, [r4, #4]
  htim6.Init.Period = 0xFFFF;
 8001e12:	4b1a      	ldr	r3, [pc, #104]	@ (8001e7c <main+0x28c>)
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e14:	61a5      	str	r5, [r4, #24]
  htim6.Init.Period = 0xFFFF;
 8001e16:	60e3      	str	r3, [r4, #12]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8001e18:	f004 ffd6 	bl	8006dc8 <HAL_TIM_Base_Init>
 8001e1c:	2800      	cmp	r0, #0
 8001e1e:	d001      	beq.n	8001e24 <main+0x234>
 8001e20:	b672      	cpsid	i
  while (1)
 8001e22:	e7fe      	b.n	8001e22 <main+0x232>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_ENABLE;
 8001e24:	2310      	movs	r3, #16
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e26:	9009      	str	r0, [sp, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8001e28:	a907      	add	r1, sp, #28
 8001e2a:	0020      	movs	r0, r4
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_ENABLE;
 8001e2c:	9307      	str	r3, [sp, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8001e2e:	f004 fff5 	bl	8006e1c <HAL_TIMEx_MasterConfigSynchronization>
 8001e32:	2800      	cmp	r0, #0
 8001e34:	d001      	beq.n	8001e3a <main+0x24a>
 8001e36:	b672      	cpsid	i
  while (1)
 8001e38:	e7fe      	b.n	8001e38 <main+0x248>
  MX_TouchGFX_Init();
 8001e3a:	f000 f9f4 	bl	8002226 <MX_TouchGFX_Init>
  MX_TouchGFX_Process();
 8001e3e:	f000 f9f8 	bl	8002232 <MX_TouchGFX_Process>
  while (1)
 8001e42:	e7fc      	b.n	8001e3e <main+0x24e>
 8001e44:	40021000 	.word	0x40021000
 8001e48:	50000800 	.word	0x50000800
 8001e4c:	50000400 	.word	0x50000400
 8001e50:	50000c00 	.word	0x50000c00
 8001e54:	00001013 	.word	0x00001013
 8001e58:	20000264 	.word	0x20000264
 8001e5c:	40013000 	.word	0x40013000
 8001e60:	200002c8 	.word	0x200002c8
 8001e64:	40023000 	.word	0x40023000
 8001e68:	20000200 	.word	0x20000200
 8001e6c:	40003800 	.word	0x40003800
 8001e70:	200000a0 	.word	0x200000a0
 8001e74:	40001000 	.word	0x40001000
 8001e78:	00000c05 	.word	0x00000c05
 8001e7c:	0000ffff 	.word	0x0000ffff

08001e80 <Error_Handler>:
 8001e80:	b672      	cpsid	i
  while (1)
 8001e82:	e7fe      	b.n	8001e82 <Error_Handler+0x2>

08001e84 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001e84:	b507      	push	{r0, r1, r2, lr}

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e86:	2101      	movs	r1, #1
 8001e88:	4b0a      	ldr	r3, [pc, #40]	@ (8001eb4 <HAL_MspInit+0x30>)

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 8001e8a:	20c0      	movs	r0, #192	@ 0xc0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e8c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 8001e8e:	00c0      	lsls	r0, r0, #3
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e90:	430a      	orrs	r2, r1
 8001e92:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e94:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001e96:	400a      	ands	r2, r1
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e98:	2180      	movs	r1, #128	@ 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e9a:	9200      	str	r2, [sp, #0]
 8001e9c:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e9e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8001ea0:	0549      	lsls	r1, r1, #21
 8001ea2:	430a      	orrs	r2, r1
 8001ea4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001ea6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001ea8:	400b      	ands	r3, r1
 8001eaa:	9301      	str	r3, [sp, #4]
 8001eac:	9b01      	ldr	r3, [sp, #4]
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 8001eae:	f003 ffeb 	bl	8005e88 <HAL_SYSCFG_StrobeDBattpinsConfig>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001eb2:	bd07      	pop	{r0, r1, r2, pc}
 8001eb4:	40021000 	.word	0x40021000

08001eb8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001eb8:	4b08      	ldr	r3, [pc, #32]	@ (8001edc <HAL_CRC_MspInit+0x24>)
 8001eba:	6802      	ldr	r2, [r0, #0]
{
 8001ebc:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001ebe:	429a      	cmp	r2, r3
 8001ec0:	d109      	bne.n	8001ed6 <HAL_CRC_MspInit+0x1e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001ec2:	2180      	movs	r1, #128	@ 0x80
 8001ec4:	4b06      	ldr	r3, [pc, #24]	@ (8001ee0 <HAL_CRC_MspInit+0x28>)
 8001ec6:	0149      	lsls	r1, r1, #5
 8001ec8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8001eca:	430a      	orrs	r2, r1
 8001ecc:	639a      	str	r2, [r3, #56]	@ 0x38
 8001ece:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001ed0:	400b      	ands	r3, r1
 8001ed2:	9301      	str	r3, [sp, #4]
 8001ed4:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8001ed6:	b002      	add	sp, #8
 8001ed8:	4770      	bx	lr
 8001eda:	46c0      	nop			@ (mov r8, r8)
 8001edc:	40023000 	.word	0x40023000
 8001ee0:	40021000 	.word	0x40021000

08001ee4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ee4:	b570      	push	{r4, r5, r6, lr}
 8001ee6:	0005      	movs	r5, r0
 8001ee8:	b08a      	sub	sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eea:	2214      	movs	r2, #20
 8001eec:	2100      	movs	r1, #0
 8001eee:	a805      	add	r0, sp, #20
 8001ef0:	f010 fe55 	bl	8012b9e <memset>
  if(hspi->Instance==SPI1)
 8001ef4:	682b      	ldr	r3, [r5, #0]
 8001ef6:	4a5c      	ldr	r2, [pc, #368]	@ (8002068 <HAL_SPI_MspInit+0x184>)
 8001ef8:	4293      	cmp	r3, r2
 8001efa:	d14c      	bne.n	8001f96 <HAL_SPI_MspInit+0xb2>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001efc:	2180      	movs	r1, #128	@ 0x80
 8001efe:	4b5b      	ldr	r3, [pc, #364]	@ (800206c <HAL_SPI_MspInit+0x188>)
 8001f00:	0149      	lsls	r1, r1, #5
 8001f02:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f04:	20a0      	movs	r0, #160	@ 0xa0
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001f06:	430a      	orrs	r2, r1
 8001f08:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f0a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f0c:	2402      	movs	r4, #2
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001f0e:	400a      	ands	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f10:	2101      	movs	r1, #1
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001f12:	9200      	str	r2, [sp, #0]
 8001f14:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f16:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f18:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f1a:	430a      	orrs	r2, r1
 8001f1c:	635a      	str	r2, [r3, #52]	@ 0x34
 8001f1e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f20:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f22:	400b      	ands	r3, r1
 8001f24:	9301      	str	r3, [sp, #4]
 8001f26:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 8001f28:	23a0      	movs	r3, #160	@ 0xa0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f2a:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 8001f2c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001f2e:	9407      	str	r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f30:	9408      	str	r4, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f32:	f004 f91d 	bl	8006170 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f36:	20a0      	movs	r0, #160	@ 0xa0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f38:	2600      	movs	r6, #0
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001f3a:	2340      	movs	r3, #64	@ 0x40
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f3c:	05c0      	lsls	r0, r0, #23
 8001f3e:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001f40:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f42:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001f44:	9407      	str	r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f46:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 8001f48:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f4a:	f004 f911 	bl	8006170 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA1_Channel1;
 8001f4e:	4c48      	ldr	r4, [pc, #288]	@ (8002070 <HAL_SPI_MspInit+0x18c>)
 8001f50:	4b48      	ldr	r3, [pc, #288]	@ (8002074 <HAL_SPI_MspInit+0x190>)
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
    hdma_spi1_tx.Init.Mode = DMA_NORMAL;
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 8001f52:	0020      	movs	r0, r4
    hdma_spi1_tx.Instance = DMA1_Channel1;
 8001f54:	6023      	str	r3, [r4, #0]
    hdma_spi1_tx.Init.Request = DMA_REQUEST_SPI1_TX;
 8001f56:	2311      	movs	r3, #17
 8001f58:	6063      	str	r3, [r4, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001f5a:	3b01      	subs	r3, #1
 8001f5c:	60a3      	str	r3, [r4, #8]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001f5e:	3370      	adds	r3, #112	@ 0x70
 8001f60:	6123      	str	r3, [r4, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001f62:	3380      	adds	r3, #128	@ 0x80
 8001f64:	6163      	str	r3, [r4, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001f66:	2380      	movs	r3, #128	@ 0x80
 8001f68:	00db      	lsls	r3, r3, #3
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001f6a:	60e6      	str	r6, [r4, #12]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001f6c:	61a3      	str	r3, [r4, #24]
    hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 8001f6e:	61e6      	str	r6, [r4, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001f70:	6226      	str	r6, [r4, #32]
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 8001f72:	f004 f869 	bl	8006048 <HAL_DMA_Init>
 8001f76:	42b0      	cmp	r0, r6
 8001f78:	d001      	beq.n	8001f7e <HAL_SPI_MspInit+0x9a>
    {
      Error_Handler();
 8001f7a:	f7ff ff81 	bl	8001e80 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi1_tx);

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 8001f7e:	2200      	movs	r2, #0
 8001f80:	2019      	movs	r0, #25
 8001f82:	0011      	movs	r1, r2
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi1_tx);
 8001f84:	656c      	str	r4, [r5, #84]	@ 0x54
 8001f86:	62a5      	str	r5, [r4, #40]	@ 0x28
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 8001f88:	f003 ff8a 	bl	8005ea0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8001f8c:	2019      	movs	r0, #25

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8001f8e:	f003 ffb1 	bl	8005ef4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8001f92:	b00a      	add	sp, #40	@ 0x28
 8001f94:	bd70      	pop	{r4, r5, r6, pc}
  else if(hspi->Instance==SPI2)
 8001f96:	4a38      	ldr	r2, [pc, #224]	@ (8002078 <HAL_SPI_MspInit+0x194>)
 8001f98:	4293      	cmp	r3, r2
 8001f9a:	d1fa      	bne.n	8001f92 <HAL_SPI_MspInit+0xae>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001f9c:	2180      	movs	r1, #128	@ 0x80
 8001f9e:	4b33      	ldr	r3, [pc, #204]	@ (800206c <HAL_SPI_MspInit+0x188>)
 8001fa0:	01c9      	lsls	r1, r1, #7
 8001fa2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fa4:	2402      	movs	r4, #2
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001fa6:	430a      	orrs	r2, r1
 8001fa8:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001faa:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fac:	4833      	ldr	r0, [pc, #204]	@ (800207c <HAL_SPI_MspInit+0x198>)
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001fae:	400a      	ands	r2, r1
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fb0:	2104      	movs	r1, #4
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001fb2:	9202      	str	r2, [sp, #8]
 8001fb4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fb6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI2;
 8001fb8:	2600      	movs	r6, #0
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fba:	430a      	orrs	r2, r1
 8001fbc:	635a      	str	r2, [r3, #52]	@ 0x34
 8001fbe:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001fc0:	400a      	ands	r2, r1
 8001fc2:	9203      	str	r2, [sp, #12]
 8001fc4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fc6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fc8:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fca:	4322      	orrs	r2, r4
 8001fcc:	635a      	str	r2, [r3, #52]	@ 0x34
 8001fce:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fd0:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fd2:	4023      	ands	r3, r4
 8001fd4:	9304      	str	r3, [sp, #16]
 8001fd6:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001fd8:	230c      	movs	r3, #12
 8001fda:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF1_SPI2;
 8001fdc:	3b0b      	subs	r3, #11
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001fde:	9407      	str	r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fe0:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_SPI2;
 8001fe2:	9309      	str	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe4:	f004 f8c4 	bl	8006170 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001fe8:	2380      	movs	r3, #128	@ 0x80
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fea:	4825      	ldr	r0, [pc, #148]	@ (8002080 <HAL_SPI_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001fec:	019b      	lsls	r3, r3, #6
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fee:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001ff0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ff2:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001ff4:	9407      	str	r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ff6:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI2;
 8001ff8:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ffa:	f004 f8b9 	bl	8006170 <HAL_GPIO_Init>
    hdma_spi2_rx.Instance = DMA1_Channel2;
 8001ffe:	4c21      	ldr	r4, [pc, #132]	@ (8002084 <HAL_SPI_MspInit+0x1a0>)
 8002000:	4b21      	ldr	r3, [pc, #132]	@ (8002088 <HAL_SPI_MspInit+0x1a4>)
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 8002002:	0020      	movs	r0, r4
    hdma_spi2_rx.Instance = DMA1_Channel2;
 8002004:	6023      	str	r3, [r4, #0]
    hdma_spi2_rx.Init.Request = DMA_REQUEST_SPI2_RX;
 8002006:	2312      	movs	r3, #18
 8002008:	6063      	str	r3, [r4, #4]
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 800200a:	336e      	adds	r3, #110	@ 0x6e
    hdma_spi2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800200c:	60a6      	str	r6, [r4, #8]
    hdma_spi2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800200e:	60e6      	str	r6, [r4, #12]
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002010:	6123      	str	r3, [r4, #16]
    hdma_spi2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002012:	6166      	str	r6, [r4, #20]
    hdma_spi2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002014:	61a6      	str	r6, [r4, #24]
    hdma_spi2_rx.Init.Mode = DMA_NORMAL;
 8002016:	61e6      	str	r6, [r4, #28]
    hdma_spi2_rx.Init.Priority = DMA_PRIORITY_LOW;
 8002018:	6226      	str	r6, [r4, #32]
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 800201a:	f004 f815 	bl	8006048 <HAL_DMA_Init>
 800201e:	42b0      	cmp	r0, r6
 8002020:	d001      	beq.n	8002026 <HAL_SPI_MspInit+0x142>
      Error_Handler();
 8002022:	f7ff ff2d 	bl	8001e80 <Error_Handler>
    hdma_spi2_tx.Instance = DMA1_Channel3;
 8002026:	4b19      	ldr	r3, [pc, #100]	@ (800208c <HAL_SPI_MspInit+0x1a8>)
    __HAL_LINKDMA(hspi,hdmarx,hdma_spi2_rx);
 8002028:	65ac      	str	r4, [r5, #88]	@ 0x58
 800202a:	62a5      	str	r5, [r4, #40]	@ 0x28
    hdma_spi2_tx.Instance = DMA1_Channel3;
 800202c:	4c18      	ldr	r4, [pc, #96]	@ (8002090 <HAL_SPI_MspInit+0x1ac>)
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 800202e:	2280      	movs	r2, #128	@ 0x80
    hdma_spi2_tx.Instance = DMA1_Channel3;
 8002030:	6023      	str	r3, [r4, #0]
    hdma_spi2_tx.Init.Request = DMA_REQUEST_SPI2_TX;
 8002032:	2313      	movs	r3, #19
 8002034:	6063      	str	r3, [r4, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002036:	3b03      	subs	r3, #3
 8002038:	60a3      	str	r3, [r4, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800203a:	2300      	movs	r3, #0
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 800203c:	0020      	movs	r0, r4
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800203e:	60e3      	str	r3, [r4, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002040:	6122      	str	r2, [r4, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002042:	6163      	str	r3, [r4, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002044:	61a3      	str	r3, [r4, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8002046:	61e3      	str	r3, [r4, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8002048:	6223      	str	r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 800204a:	f003 fffd 	bl	8006048 <HAL_DMA_Init>
 800204e:	2800      	cmp	r0, #0
 8002050:	d001      	beq.n	8002056 <HAL_SPI_MspInit+0x172>
      Error_Handler();
 8002052:	f7ff ff15 	bl	8001e80 <Error_Handler>
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8002056:	2200      	movs	r2, #0
 8002058:	201a      	movs	r0, #26
 800205a:	0011      	movs	r1, r2
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 800205c:	656c      	str	r4, [r5, #84]	@ 0x54
 800205e:	62a5      	str	r5, [r4, #40]	@ 0x28
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8002060:	f003 ff1e 	bl	8005ea0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8002064:	201a      	movs	r0, #26
 8002066:	e792      	b.n	8001f8e <HAL_SPI_MspInit+0xaa>
 8002068:	40013000 	.word	0x40013000
 800206c:	40021000 	.word	0x40021000
 8002070:	200001a4 	.word	0x200001a4
 8002074:	40020008 	.word	0x40020008
 8002078:	40003800 	.word	0x40003800
 800207c:	50000800 	.word	0x50000800
 8002080:	50000400 	.word	0x50000400
 8002084:	20000148 	.word	0x20000148
 8002088:	4002001c 	.word	0x4002001c
 800208c:	40020030 	.word	0x40020030
 8002090:	200000ec 	.word	0x200000ec

08002094 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002094:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM6)
 8002096:	4b0b      	ldr	r3, [pc, #44]	@ (80020c4 <HAL_TIM_Base_MspInit+0x30>)
 8002098:	6802      	ldr	r2, [r0, #0]
 800209a:	429a      	cmp	r2, r3
 800209c:	d110      	bne.n	80020c0 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM6_MspInit 0 */

  /* USER CODE END TIM6_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM6_CLK_ENABLE();
 800209e:	2110      	movs	r1, #16
 80020a0:	4b09      	ldr	r3, [pc, #36]	@ (80020c8 <HAL_TIM_Base_MspInit+0x34>)
    /* TIM6 interrupt Init */
    HAL_NVIC_SetPriority(TIM6_DAC_LPTIM1_IRQn, 0, 0);
 80020a2:	2011      	movs	r0, #17
    __HAL_RCC_TIM6_CLK_ENABLE();
 80020a4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80020a6:	430a      	orrs	r2, r1
 80020a8:	63da      	str	r2, [r3, #60]	@ 0x3c
    HAL_NVIC_SetPriority(TIM6_DAC_LPTIM1_IRQn, 0, 0);
 80020aa:	2200      	movs	r2, #0
    __HAL_RCC_TIM6_CLK_ENABLE();
 80020ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80020ae:	400b      	ands	r3, r1
 80020b0:	9301      	str	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM6_DAC_LPTIM1_IRQn, 0, 0);
 80020b2:	0011      	movs	r1, r2
    __HAL_RCC_TIM6_CLK_ENABLE();
 80020b4:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM6_DAC_LPTIM1_IRQn, 0, 0);
 80020b6:	f003 fef3 	bl	8005ea0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_DAC_LPTIM1_IRQn);
 80020ba:	2011      	movs	r0, #17
 80020bc:	f003 ff1a 	bl	8005ef4 <HAL_NVIC_EnableIRQ>

  /* USER CODE END TIM6_MspInit 1 */

  }

}
 80020c0:	bd07      	pop	{r0, r1, r2, pc}
 80020c2:	46c0      	nop			@ (mov r8, r8)
 80020c4:	40001000 	.word	0x40001000
 80020c8:	40021000 	.word	0x40021000

080020cc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80020cc:	4770      	bx	lr

080020ce <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80020ce:	e7fe      	b.n	80020ce <HardFault_Handler>

080020d0 <SVC_Handler>:
}

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
 80020d0:	4770      	bx	lr

080020d2 <PendSV_Handler>:
}

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 80020d2:	4770      	bx	lr

080020d4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80020d4:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80020d6:	f003 feb3 	bl	8005e40 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80020da:	bd10      	pop	{r4, pc}

080020dc <EXTI0_1_IRQHandler>:

/**
  * @brief This function handles EXTI line 0 and line 1 interrupts.
  */
void EXTI0_1_IRQHandler(void)
{
 80020dc:	b510      	push	{r4, lr}
  /* USER CODE BEGIN EXTI0_1_IRQn 0 */

  /* USER CODE END EXTI0_1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DISPLAY_TEARING_EFFECT_Pin);
 80020de:	2001      	movs	r0, #1
 80020e0:	f004 f90c 	bl	80062fc <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_1_IRQn 1 */

  /* USER CODE END EXTI0_1_IRQn 1 */
}
 80020e4:	bd10      	pop	{r4, pc}

080020e6 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 80020e6:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
  //__HAL_DMA_CLEAR_FLAG(0, DMA_FLAG_TC1);
  DisplayDriver_DMACallback();
 80020e8:	f7ff fce6 	bl	8001ab8 <DisplayDriver_DMACallback>
  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 80020ec:	bd10      	pop	{r4, pc}

080020ee <DMA1_Channel2_3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 2 and channel 3 interrupts.
  */
void DMA1_Channel2_3_IRQHandler(void)
{
 80020ee:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */

  /* USER CODE END DMA1_Channel2_3_IRQn 0 */
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
  DataReader_DMACallback();
 80020f0:	f7ff faae 	bl	8001650 <DataReader_DMACallback>
  /* USER CODE END DMA1_Channel2_3_IRQn 1 */
}
 80020f4:	bd10      	pop	{r4, pc}
	...

080020f8 <TIM6_DAC_LPTIM1_IRQHandler>:

/**
  * @brief This function handles TIM6, DAC1 and LPTIM1 interrupts (LPTIM1 interrupt through EXTI line 29).
  */
void TIM6_DAC_LPTIM1_IRQHandler(void)
{
 80020f8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 0 */

  /* USER CODE END TIM6_DAC_LPTIM1_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80020fa:	4802      	ldr	r0, [pc, #8]	@ (8002104 <TIM6_DAC_LPTIM1_IRQHandler+0xc>)
 80020fc:	f004 fd62 	bl	8006bc4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_LPTIM1_IRQn 1 */

  /* USER CODE END TIM6_DAC_LPTIM1_IRQn 1 */
}
 8002100:	bd10      	pop	{r4, pc}
 8002102:	46c0      	nop			@ (mov r8, r8)
 8002104:	200000a0 	.word	0x200000a0

08002108 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8002108:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 800210a:	4802      	ldr	r0, [pc, #8]	@ (8002114 <SPI1_IRQHandler+0xc>)
 800210c:	f004 fcc6 	bl	8006a9c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8002110:	bd10      	pop	{r4, pc}
 8002112:	46c0      	nop			@ (mov r8, r8)
 8002114:	20000264 	.word	0x20000264

08002118 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8002118:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 800211a:	4802      	ldr	r0, [pc, #8]	@ (8002124 <SPI2_IRQHandler+0xc>)
 800211c:	f004 fcbe 	bl	8006a9c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8002120:	bd10      	pop	{r4, pc}
 8002122:	46c0      	nop			@ (mov r8, r8)
 8002124:	20000200 	.word	0x20000200

08002128 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8002128:	2001      	movs	r0, #1
 800212a:	4770      	bx	lr

0800212c <_kill>:

int _kill(int pid, int sig)
{
 800212c:	b510      	push	{r4, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800212e:	f010 fdf5 	bl	8012d1c <__errno>
 8002132:	2316      	movs	r3, #22
 8002134:	6003      	str	r3, [r0, #0]
  return -1;
 8002136:	2001      	movs	r0, #1
}
 8002138:	4240      	negs	r0, r0
 800213a:	bd10      	pop	{r4, pc}

0800213c <_exit>:

void _exit (int status)
{
 800213c:	b510      	push	{r4, lr}
  errno = EINVAL;
 800213e:	f010 fded 	bl	8012d1c <__errno>
 8002142:	2316      	movs	r3, #22
 8002144:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8002146:	e7fe      	b.n	8002146 <_exit+0xa>

08002148 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002148:	b570      	push	{r4, r5, r6, lr}
 800214a:	000e      	movs	r6, r1
 800214c:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800214e:	2500      	movs	r5, #0
 8002150:	42a5      	cmp	r5, r4
 8002152:	db01      	blt.n	8002158 <_read+0x10>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8002154:	0020      	movs	r0, r4
 8002156:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8002158:	e000      	b.n	800215c <_read+0x14>
 800215a:	bf00      	nop
 800215c:	5570      	strb	r0, [r6, r5]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800215e:	3501      	adds	r5, #1
 8002160:	e7f6      	b.n	8002150 <_read+0x8>

08002162 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002162:	b570      	push	{r4, r5, r6, lr}
 8002164:	000e      	movs	r6, r1
 8002166:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002168:	2500      	movs	r5, #0
 800216a:	42a5      	cmp	r5, r4
 800216c:	db01      	blt.n	8002172 <_write+0x10>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 800216e:	0020      	movs	r0, r4
 8002170:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8002172:	5d70      	ldrb	r0, [r6, r5]
 8002174:	e000      	b.n	8002178 <_write+0x16>
 8002176:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002178:	3501      	adds	r5, #1
 800217a:	e7f6      	b.n	800216a <_write+0x8>

0800217c <_close>:

int _close(int file)
{
  (void)file;
  return -1;
 800217c:	2001      	movs	r0, #1
}
 800217e:	4240      	negs	r0, r0
 8002180:	4770      	bx	lr

08002182 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8002182:	2380      	movs	r3, #128	@ 0x80
 8002184:	019b      	lsls	r3, r3, #6
  return 0;
}
 8002186:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8002188:	604b      	str	r3, [r1, #4]
}
 800218a:	4770      	bx	lr

0800218c <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 800218c:	2001      	movs	r0, #1
 800218e:	4770      	bx	lr

08002190 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8002190:	2000      	movs	r0, #0
 8002192:	4770      	bx	lr

08002194 <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002194:	490b      	ldr	r1, [pc, #44]	@ (80021c4 <_sbrk+0x30>)
 8002196:	4a0c      	ldr	r2, [pc, #48]	@ (80021c8 <_sbrk+0x34>)
{
 8002198:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800219a:	1a52      	subs	r2, r2, r1
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800219c:	490b      	ldr	r1, [pc, #44]	@ (80021cc <_sbrk+0x38>)
{
 800219e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80021a0:	6808      	ldr	r0, [r1, #0]
 80021a2:	2800      	cmp	r0, #0
 80021a4:	d101      	bne.n	80021aa <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 80021a6:	480a      	ldr	r0, [pc, #40]	@ (80021d0 <_sbrk+0x3c>)
 80021a8:	6008      	str	r0, [r1, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80021aa:	6808      	ldr	r0, [r1, #0]
 80021ac:	18c3      	adds	r3, r0, r3
 80021ae:	4293      	cmp	r3, r2
 80021b0:	d906      	bls.n	80021c0 <_sbrk+0x2c>
  {
    errno = ENOMEM;
 80021b2:	f010 fdb3 	bl	8012d1c <__errno>
 80021b6:	230c      	movs	r3, #12
 80021b8:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80021ba:	2001      	movs	r0, #1
 80021bc:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80021be:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80021c0:	600b      	str	r3, [r1, #0]
  return (void *)prev_heap_end;
 80021c2:	e7fc      	b.n	80021be <_sbrk+0x2a>
 80021c4:	00000800 	.word	0x00000800
 80021c8:	20009000 	.word	0x20009000
 80021cc:	200002ec 	.word	0x200002ec
 80021d0:	200038e8 	.word	0x200038e8

080021d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80021d4:	480d      	ldr	r0, [pc, #52]	@ (800220c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80021d6:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 80021d8:	f003 fdf4 	bl	8005dc4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80021dc:	480c      	ldr	r0, [pc, #48]	@ (8002210 <LoopForever+0x6>)
  ldr r1, =_edata
 80021de:	490d      	ldr	r1, [pc, #52]	@ (8002214 <LoopForever+0xa>)
  ldr r2, =_sidata
 80021e0:	4a0d      	ldr	r2, [pc, #52]	@ (8002218 <LoopForever+0xe>)
  movs r3, #0
 80021e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80021e4:	e002      	b.n	80021ec <LoopCopyDataInit>

080021e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80021e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80021e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80021ea:	3304      	adds	r3, #4

080021ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80021ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80021ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80021f0:	d3f9      	bcc.n	80021e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80021f2:	4a0a      	ldr	r2, [pc, #40]	@ (800221c <LoopForever+0x12>)
  ldr r4, =_ebss
 80021f4:	4c0a      	ldr	r4, [pc, #40]	@ (8002220 <LoopForever+0x16>)
  movs r3, #0
 80021f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80021f8:	e001      	b.n	80021fe <LoopFillZerobss>

080021fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80021fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80021fc:	3204      	adds	r2, #4

080021fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80021fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002200:	d3fb      	bcc.n	80021fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002202:	f010 fd91 	bl	8012d28 <__libc_init_array>
/* Call the application s entry point.*/
  bl main
 8002206:	f7ff fcf3 	bl	8001bf0 <main>

0800220a <LoopForever>:

LoopForever:
  b LoopForever
 800220a:	e7fe      	b.n	800220a <LoopForever>
  ldr   r0, =_estack
 800220c:	20009000 	.word	0x20009000
  ldr r0, =_sdata
 8002210:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002214:	20000080 	.word	0x20000080
  ldr r2, =_sidata
 8002218:	08016208 	.word	0x08016208
  ldr r2, =_sbss
 800221c:	20000080 	.word	0x20000080
  ldr r4, =_ebss
 8002220:	200038e8 	.word	0x200038e8

08002224 <ADC1_COMP_IRQHandler>:
 * @retval None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002224:	e7fe      	b.n	8002224 <ADC1_COMP_IRQHandler>

08002226 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8002226:	b510      	push	{r4, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8002228:	f000 fb9e 	bl	8002968 <touchgfx_components_init>
    touchgfx_init();
 800222c:	f000 fb1e 	bl	800286c <touchgfx_init>
}
 8002230:	bd10      	pop	{r4, pc}

08002232 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8002232:	b510      	push	{r4, lr}
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8002234:	f000 fb9a 	bl	800296c <touchgfx_taskEntry>
}
 8002238:	bd10      	pop	{r4, pc}

0800223a <_ZN20STM32TouchController4initEv>:
{
    /**
     * Initialize touch controller and driver
     *
     */
}
 800223a:	4770      	bx	lr

0800223c <_ZN20STM32TouchController11sampleTouchERlS0_>:
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
}
 800223c:	2000      	movs	r0, #0
 800223e:	4770      	bx	lr

08002240 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8002240:	4770      	bx	lr

08002242 <_ZN20STM32TouchControllerD0Ev>:
 8002242:	b510      	push	{r4, lr}
 8002244:	0004      	movs	r4, r0
 8002246:	2104      	movs	r1, #4
 8002248:	f00f fc5d 	bl	8011b06 <_ZdlPvj>
 800224c:	0020      	movs	r0, r4
 800224e:	bd10      	pop	{r4, pc}

08002250 <_ZN18TouchGFXDataReaderD1Ev>:
{
public:
    /** Finalizes an instance of the TouchGFXDataReader class. */
    virtual ~TouchGFXDataReader()
    {
    }
 8002250:	4770      	bx	lr

08002252 <_ZN18TouchGFXDataReader20addressIsAddressableEPKv>:
#include <TouchGFXDataReader.hpp>

/* USER CODE BEGIN TouchGFXDataReader.cpp */

bool TouchGFXDataReader::addressIsAddressable(const void* address)
{
 8002252:	b510      	push	{r4, lr}
    // Calling parent implementation of addressIsAddressable().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedDataReader::addressIsAddressable(address);
 8002254:	f000 fc08 	bl	8002a68 <_ZN27TouchGFXGeneratedDataReader20addressIsAddressableEPKv>
}
 8002258:	bd10      	pop	{r4, pc}

0800225a <_ZN18TouchGFXDataReader8copyDataEPKvPvm>:

void TouchGFXDataReader::copyData(const void* src, void* dst, uint32_t bytes)
{
 800225a:	b510      	push	{r4, lr}
    // Calling parent implementation of copyData().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedDataReader::copyData(src, dst, bytes);
 800225c:	f000 fc32 	bl	8002ac4 <_ZN27TouchGFXGeneratedDataReader8copyDataEPKvPvm>
}
 8002260:	bd10      	pop	{r4, pc}

08002262 <_ZN18TouchGFXDataReader18startFlashLineReadEPKvm>:

void TouchGFXDataReader::startFlashLineRead(const void* src, uint32_t bytes)
{
 8002262:	b510      	push	{r4, lr}
    // Calling parent implementation of startFlashLineRead().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedDataReader::startFlashLineRead(src, bytes);
 8002264:	f000 fc0a 	bl	8002a7c <_ZN27TouchGFXGeneratedDataReader18startFlashLineReadEPKvm>
}
 8002268:	bd10      	pop	{r4, pc}

0800226a <_ZN18TouchGFXDataReader21waitFlashReadCompleteEv>:

const uint8_t* TouchGFXDataReader::waitFlashReadComplete()
{
 800226a:	b510      	push	{r4, lr}
    // Calling parent implementation of waitFlashReadComplete().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedDataReader::waitFlashReadComplete();
 800226c:	f000 fc16 	bl	8002a9c <_ZN27TouchGFXGeneratedDataReader21waitFlashReadCompleteEv>
}
 8002270:	bd10      	pop	{r4, pc}

08002272 <_ZN18TouchGFXDataReaderD0Ev>:
 8002272:	21f1      	movs	r1, #241	@ 0xf1
    virtual ~TouchGFXDataReader()
 8002274:	b510      	push	{r4, lr}
 8002276:	0004      	movs	r4, r0
    }
 8002278:	00c9      	lsls	r1, r1, #3
 800227a:	f00f fc44 	bl	8011b06 <_ZdlPvj>
 800227e:	0020      	movs	r0, r4
 8002280:	bd10      	pop	{r4, pc}
	...

08002284 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8002284:	b510      	push	{r4, lr}
    switch (id)
 8002286:	2803      	cmp	r0, #3
 8002288:	d80d      	bhi.n	80022a6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x22>
 800228a:	4b11      	ldr	r3, [pc, #68]	@ (80022d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800228c:	f7fd ff4c 	bl	8000128 <__gnu_thumb1_case_uqi>
 8002290:	1a130c02 	.word	0x1a130c02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002294:	681a      	ldr	r2, [r3, #0]
 8002296:	2180      	movs	r1, #128	@ 0x80
 8002298:	4253      	negs	r3, r2
 800229a:	415a      	adcs	r2, r3
 800229c:	0089      	lsls	r1, r1, #2
 800229e:	b2d2      	uxtb	r2, r2
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80022a0:	480c      	ldr	r0, [pc, #48]	@ (80022d4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80022a2:	f004 f81d 	bl	80062e0 <HAL_GPIO_WritePin>
#endif
        break;
    }
}
 80022a6:	bd10      	pop	{r4, pc}
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80022a8:	685a      	ldr	r2, [r3, #4]
 80022aa:	2180      	movs	r1, #128	@ 0x80
 80022ac:	4253      	negs	r3, r2
 80022ae:	415a      	adcs	r2, r3
 80022b0:	0049      	lsls	r1, r1, #1
 80022b2:	b2d2      	uxtb	r2, r2
 80022b4:	e7f4      	b.n	80022a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80022b6:	689a      	ldr	r2, [r3, #8]
 80022b8:	2120      	movs	r1, #32
 80022ba:	4253      	negs	r3, r2
 80022bc:	415a      	adcs	r2, r3
 80022be:	b2d2      	uxtb	r2, r2
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80022c0:	4805      	ldr	r0, [pc, #20]	@ (80022d8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80022c2:	e7ee      	b.n	80022a2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1e>
 80022c4:	68da      	ldr	r2, [r3, #12]
 80022c6:	2110      	movs	r1, #16
 80022c8:	4253      	negs	r3, r2
 80022ca:	415a      	adcs	r2, r3
 80022cc:	b2d2      	uxtb	r2, r2
 80022ce:	e7f7      	b.n	80022c0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
 80022d0:	200002f0 	.word	0x200002f0
 80022d4:	50000c00 	.word	0x50000c00
 80022d8:	50000800 	.word	0x50000800

080022dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 80022dc:	b510      	push	{r4, lr}
    switch (id)
 80022de:	2803      	cmp	r0, #3
 80022e0:	d80d      	bhi.n	80022fe <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x22>
 80022e2:	4b11      	ldr	r3, [pc, #68]	@ (8002328 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80022e4:	f7fd ff20 	bl	8000128 <__gnu_thumb1_case_uqi>
 80022e8:	1a130c02 	.word	0x1a130c02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80022ec:	681a      	ldr	r2, [r3, #0]
 80022ee:	2180      	movs	r1, #128	@ 0x80
 80022f0:	1e53      	subs	r3, r2, #1
 80022f2:	419a      	sbcs	r2, r3
 80022f4:	0089      	lsls	r1, r1, #2
 80022f6:	b2d2      	uxtb	r2, r2
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80022f8:	480c      	ldr	r0, [pc, #48]	@ (800232c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80022fa:	f003 fff1 	bl	80062e0 <HAL_GPIO_WritePin>
#endif
        break;
    }
}
 80022fe:	bd10      	pop	{r4, pc}
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8002300:	685a      	ldr	r2, [r3, #4]
 8002302:	2180      	movs	r1, #128	@ 0x80
 8002304:	1e53      	subs	r3, r2, #1
 8002306:	419a      	sbcs	r2, r3
 8002308:	0049      	lsls	r1, r1, #1
 800230a:	b2d2      	uxtb	r2, r2
 800230c:	e7f4      	b.n	80022f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 800230e:	689a      	ldr	r2, [r3, #8]
 8002310:	2120      	movs	r1, #32
 8002312:	1e53      	subs	r3, r2, #1
 8002314:	419a      	sbcs	r2, r3
 8002316:	b2d2      	uxtb	r2, r2
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8002318:	4805      	ldr	r0, [pc, #20]	@ (8002330 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 800231a:	e7ee      	b.n	80022fa <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1e>
 800231c:	68da      	ldr	r2, [r3, #12]
 800231e:	2110      	movs	r1, #16
 8002320:	1e53      	subs	r3, r2, #1
 8002322:	419a      	sbcs	r2, r3
 8002324:	b2d2      	uxtb	r2, r2
 8002326:	e7f7      	b.n	8002318 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
 8002328:	200002f0 	.word	0x200002f0
 800232c:	50000c00 	.word	0x50000c00
 8002330:	50000800 	.word	0x50000800

08002334 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8002334:	b510      	push	{r4, lr}
    switch (id)
 8002336:	2803      	cmp	r0, #3
 8002338:	d808      	bhi.n	800234c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>
 800233a:	f7fd fef5 	bl	8000128 <__gnu_thumb1_case_uqi>
 800233e:	0802      	.short	0x0802
 8002340:	0e0b      	.short	0x0e0b
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002342:	2180      	movs	r1, #128	@ 0x80
 8002344:	0089      	lsls	r1, r1, #2
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8002346:	4806      	ldr	r0, [pc, #24]	@ (8002360 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8002348:	f003 ffd0 	bl	80062ec <HAL_GPIO_TogglePin>
#endif
        break;
    }
}
 800234c:	bd10      	pop	{r4, pc}
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800234e:	2180      	movs	r1, #128	@ 0x80
 8002350:	0049      	lsls	r1, r1, #1
 8002352:	e7f8      	b.n	8002346 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002354:	2120      	movs	r1, #32
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8002356:	4803      	ldr	r0, [pc, #12]	@ (8002364 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 8002358:	e7f6      	b.n	8002348 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>
 800235a:	2110      	movs	r1, #16
 800235c:	e7fb      	b.n	8002356 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x22>
 800235e:	46c0      	nop			@ (mov r8, r8)
 8002360:	50000c00 	.word	0x50000c00
 8002364:	50000800 	.word	0x50000800

08002368 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002368:	2300      	movs	r3, #0
{
 800236a:	b510      	push	{r4, lr}
    switch (id)
 800236c:	2803      	cmp	r0, #3
 800236e:	d809      	bhi.n	8002384 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002370:	f7fd feda 	bl	8000128 <__gnu_thumb1_case_uqi>
 8002374:	13100d02 	.word	0x13100d02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002378:	2180      	movs	r1, #128	@ 0x80
 800237a:	0089      	lsls	r1, r1, #2
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800237c:	4808      	ldr	r0, [pc, #32]	@ (80023a0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800237e:	f003 ffa9 	bl	80062d4 <HAL_GPIO_ReadPin>
 8002382:	0003      	movs	r3, r0
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
 8002384:	1e58      	subs	r0, r3, #1
 8002386:	4243      	negs	r3, r0
 8002388:	4158      	adcs	r0, r3
 800238a:	b2c0      	uxtb	r0, r0
}
 800238c:	bd10      	pop	{r4, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800238e:	2180      	movs	r1, #128	@ 0x80
 8002390:	0049      	lsls	r1, r1, #1
 8002392:	e7f3      	b.n	800237c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002394:	2120      	movs	r1, #32
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8002396:	4803      	ldr	r0, [pc, #12]	@ (80023a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 8002398:	e7f1      	b.n	800237e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800239a:	2110      	movs	r1, #16
 800239c:	e7fb      	b.n	8002396 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 800239e:	46c0      	nop			@ (mov r8, r8)
 80023a0:	50000c00 	.word	0x50000c00
 80023a4:	50000800 	.word	0x50000800

080023a8 <_ZN8touchgfx4GPIO4initEv>:
{
 80023a8:	b570      	push	{r4, r5, r6, lr}
    for (int id = 0; id <= 4; id++)
 80023aa:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80023ac:	2601      	movs	r6, #1
 80023ae:	4d07      	ldr	r5, [pc, #28]	@ (80023cc <_ZN8touchgfx4GPIO4initEv+0x24>)
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80023b0:	b2e0      	uxtb	r0, r4
 80023b2:	f7ff ffd9 	bl	8002368 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80023b6:	2800      	cmp	r0, #0
 80023b8:	d003      	beq.n	80023c2 <_ZN8touchgfx4GPIO4initEv+0x1a>
            if (GPIO_InvertedLevels[id] != 1)
 80023ba:	682b      	ldr	r3, [r5, #0]
 80023bc:	2b01      	cmp	r3, #1
 80023be:	d000      	beq.n	80023c2 <_ZN8touchgfx4GPIO4initEv+0x1a>
                GPIO_InvertedLevels[id] = 1;
 80023c0:	602e      	str	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80023c2:	3401      	adds	r4, #1
 80023c4:	3504      	adds	r5, #4
 80023c6:	2c05      	cmp	r4, #5
 80023c8:	d1f2      	bne.n	80023b0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80023ca:	bd70      	pop	{r4, r5, r6, pc}
 80023cc:	200002f0 	.word	0x200002f0

080023d0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
        requestedOrientation = orientation;
 80023d0:	0003      	movs	r3, r0
 80023d2:	3378      	adds	r3, #120	@ 0x78
 80023d4:	7019      	strb	r1, [r3, #0]
        displayOrientationChangeRequested = true;
 80023d6:	2301      	movs	r3, #1
 80023d8:	3079      	adds	r0, #121	@ 0x79
 80023da:	7003      	strb	r3, [r0, #0]
    }
 80023dc:	4770      	bx	lr

080023de <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80023de:	2000      	movs	r0, #0
 80023e0:	4770      	bx	lr
	...

080023e4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80023e4:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80023e6:	1e4a      	subs	r2, r1, #1
 80023e8:	4191      	sbcs	r1, r2
 80023ea:	4b01      	ldr	r3, [pc, #4]	@ (80023f0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0xc>)
 80023ec:	7019      	strb	r1, [r3, #0]
    }
 80023ee:	4770      	bx	lr
 80023f0:	20003577 	.word	0x20003577

080023f4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80023f4:	2000      	movs	r0, #0
 80023f6:	4770      	bx	lr

080023f8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80023f8:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
 80023fa:	b510      	push	{r4, lr}
        if (taskDelayFunc)
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d001      	beq.n	8002404 <_ZN8touchgfx3HAL9taskDelayEt+0xc>
        {
            taskDelayFunc(ms);
 8002400:	0008      	movs	r0, r1
 8002402:	4798      	blx	r3
        }
    }
 8002404:	bd10      	pop	{r4, pc}
	...

08002408 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002408:	4800      	ldr	r0, [pc, #0]	@ (800240c <_ZN8touchgfx3HAL17getTFTCurrentLineEv+0x4>)
 800240a:	4770      	bx	lr
 800240c:	0000ffff 	.word	0x0000ffff

08002410 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8002410:	b510      	push	{r4, lr}
    {
        return dma.getDMAType();
 8002412:	6840      	ldr	r0, [r0, #4]
 8002414:	6803      	ldr	r3, [r0, #0]
 8002416:	699b      	ldr	r3, [r3, #24]
 8002418:	4798      	blx	r3
    }
 800241a:	bd10      	pop	{r4, pc}

0800241c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 800241c:	4770      	bx	lr

0800241e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800241e:	4770      	bx	lr

08002420 <_ZN20TouchGFXGeneratedHAL13setDataReaderEPN8touchgfx15FlashDataReaderE>:
     * @param datareader The pointer to the FlashDataReader object used for accessing unmapped data.
     *
     */
    virtual void setDataReader(touchgfx::FlashDataReader* datareader)
    {
        reader = datareader;
 8002420:	67c1      	str	r1, [r0, #124]	@ 0x7c
    }
 8002422:	4770      	bx	lr

08002424 <_ZN20TouchGFXGeneratedHAL13getDataReaderEv>:
     * @return pointer to the FlashDataReader object used for accessing unmapped data.
     *
     */
    virtual touchgfx::FlashDataReader* getDataReader()
    {
        return reader;
 8002424:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
    }
 8002426:	4770      	bx	lr

08002428 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002428:	4770      	bx	lr
	...

0800242c <_ZN11TouchGFXHAL10initializeEv>:
 */
//#error "A user must call touchgfx::startNewTransfer(); once TransmitBlock() has succesfully sent a block."
//#error "A user must implement C-methods IsTransmittingBlock() and TransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800242c:	b510      	push	{r4, lr}
 800242e:	0004      	movs	r4, r0
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    /* Initializing Display and SerialFlash drivers */
    DisplayDriver_Init();
 8002430:	f7ff fb2a 	bl	8001a88 <DisplayDriver_Init>
    DataReader_Init();
 8002434:	f7ff f94c 	bl	80016d0 <DataReader_Init>

    /* Prepares Display for operation */
    DisplayDriver_DisplayReset();
 8002438:	f7ff fb12 	bl	8001a60 <DisplayDriver_DisplayReset>
    DisplayDriver_DisplayInit();
 800243c:	f7ff fa8e 	bl	800195c <DisplayDriver_DisplayInit>

    /* Initialize TouchGFX Engine */
    TouchGFXGeneratedHAL::initialize();
 8002440:	0020      	movs	r0, r4
 8002442:	f000 fb6f 	bl	8002b24 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        buttonController = btnCtrl;
 8002446:	4b07      	ldr	r3, [pc, #28]	@ (8002464 <_ZN11TouchGFXHAL10initializeEv+0x38>)
 8002448:	6163      	str	r3, [r4, #20]
    setButtonController(&bc);

    /* Wait for first VSync from display */
    touchgfx::OSWrappers::waitForVSync();
 800244a:	f000 f91d 	bl	8002688 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        return instance;
 800244e:	4b06      	ldr	r3, [pc, #24]	@ (8002468 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
 8002450:	6818      	ldr	r0, [r3, #0]

    /* Render first frame, so there is valid data in the display's GRAM */
    HAL::getInstance()->backPorchExited();
 8002452:	6803      	ldr	r3, [r0, #0]
 8002454:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002456:	4798      	blx	r3

    /* GRAM has been filled, turn on display to show content of GRAM */
    DisplayDriver_DisplayOn();
 8002458:	f7ff f98a 	bl	8001770 <DisplayDriver_DisplayOn>
    touchgfx::OSWrappers::signalRenderingDone();
 800245c:	f000 f906 	bl	800266c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8002460:	bd10      	pop	{r4, pc}
 8002462:	46c0      	nop			@ (mov r8, r8)
 8002464:	20000300 	.word	0x20000300
 8002468:	20003578 	.word	0x20003578

0800246c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800246c:	b510      	push	{r4, lr}
 800246e:	0004      	movs	r4, r0
        swapFrameBuffers();
 8002470:	f005 fe8a 	bl	8008188 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002474:	6823      	ldr	r3, [r4, #0]
 8002476:	0020      	movs	r0, r4
 8002478:	33ac      	adds	r3, #172	@ 0xac
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4798      	blx	r3
    }
 800247e:	bd10      	pop	{r4, pc}

08002480 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 8002480:	b510      	push	{r4, lr}
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002482:	f000 fb2e 	bl	8002ae2 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
}
 8002486:	bd10      	pop	{r4, pc}

08002488 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 8002488:	b510      	push	{r4, lr}
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800248a:	f000 fb2c 	bl	8002ae6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800248e:	bd10      	pop	{r4, pc}

08002490 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8002490:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002492:	f000 fb71 	bl	8002b78 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 8002496:	bd10      	pop	{r4, pc}

08002498 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
    tearingEffectCount = 0;
 8002498:	2200      	movs	r2, #0
{
 800249a:	b510      	push	{r4, lr}
    tearingEffectCount = 0;
 800249c:	4b02      	ldr	r3, [pc, #8]	@ (80024a8 <_ZN11TouchGFXHAL10beginFrameEv+0x10>)
 800249e:	801a      	strh	r2, [r3, #0]
    return TouchGFXGeneratedHAL::beginFrame();
 80024a0:	f000 fb5c 	bl	8002b5c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
}
 80024a4:	bd10      	pop	{r4, pc}
 80024a6:	46c0      	nop			@ (mov r8, r8)
 80024a8:	2000009e 	.word	0x2000009e

080024ac <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 80024ac:	b510      	push	{r4, lr}
    TouchGFXGeneratedHAL::endFrame();
 80024ae:	f000 fb59 	bl	8002b64 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
    if (tearingEffectCount > 0)
 80024b2:	4b03      	ldr	r3, [pc, #12]	@ (80024c0 <_ZN11TouchGFXHAL8endFrameEv+0x14>)
 80024b4:	881b      	ldrh	r3, [r3, #0]
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d001      	beq.n	80024be <_ZN11TouchGFXHAL8endFrameEv+0x12>
    {
        touchgfx::OSWrappers::signalVSync();
 80024ba:	f000 f8d1 	bl	8002660 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
    }
}
 80024be:	bd10      	pop	{r4, pc}
 80024c0:	2000009e 	.word	0x2000009e

080024c4 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 80024c4:	b510      	push	{r4, lr}
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80024c6:	f000 fb5d 	bl	8002b84 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
}
 80024ca:	bd10      	pop	{r4, pc}

080024cc <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 80024cc:	b510      	push	{r4, lr}
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80024ce:	f000 fb07 	bl	8002ae0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 80024d2:	bd10      	pop	{r4, pc}

080024d4 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 80024d4:	b510      	push	{r4, lr}
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80024d6:	f000 fb03 	bl	8002ae0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 80024da:	bd10      	pop	{r4, pc}

080024dc <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 80024dc:	b510      	push	{r4, lr}
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80024de:	f000 faff 	bl	8002ae0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 80024e2:	bd10      	pop	{r4, pc}

080024e4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 80024e4:	b510      	push	{r4, lr}
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80024e6:	f000 fafb 	bl	8002ae0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 80024ea:	bd10      	pop	{r4, pc}

080024ec <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 80024ec:	b510      	push	{r4, lr}
        HAL::flushFrameBuffer();
 80024ee:	f005 f87b 	bl	80075e8 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
    }
 80024f2:	bd10      	pop	{r4, pc}

080024f4 <_ZN11TouchGFXHALD0Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80024f4:	b510      	push	{r4, lr}
 80024f6:	0004      	movs	r4, r0
 80024f8:	2180      	movs	r1, #128	@ 0x80
 80024fa:	f00f fb04 	bl	8011b06 <_ZdlPvj>
 80024fe:	0020      	movs	r0, r4
 8002500:	bd10      	pop	{r4, pc}
	...

08002504 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
 8002504:	0001      	movs	r1, r0
    virtual void performDisplayOrientationChange()
 8002506:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002508:	3178      	adds	r1, #120	@ 0x78
 800250a:	3034      	adds	r0, #52	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
 800250c:	4b0d      	ldr	r3, [pc, #52]	@ (8002544 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
        if (requestedOrientation != nativeDisplayOrientation)
 800250e:	780c      	ldrb	r4, [r1, #0]
 8002510:	7801      	ldrb	r1, [r0, #0]
            if (DISPLAY_ROTATION == rotate0)
 8002512:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002514:	428c      	cmp	r4, r1
 8002516:	d00a      	beq.n	800252e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
            if (DISPLAY_ROTATION == rotate0)
 8002518:	2a00      	cmp	r2, #0
 800251a:	d107      	bne.n	800252c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
                const uint16_t tmp = DISPLAY_HEIGHT;
 800251c:	490a      	ldr	r1, [pc, #40]	@ (8002548 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800251e:	4a0b      	ldr	r2, [pc, #44]	@ (800254c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002520:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002522:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8002524:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8002526:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002528:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800252a:	701a      	strb	r2, [r3, #0]
    }
 800252c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800252e:	2a00      	cmp	r2, #0
 8002530:	d0fc      	beq.n	800252c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002532:	4a06      	ldr	r2, [pc, #24]	@ (800254c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002534:	4904      	ldr	r1, [pc, #16]	@ (8002548 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002536:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002538:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800253a:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800253c:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800253e:	2200      	movs	r2, #0
 8002540:	e7f3      	b.n	800252a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
 8002542:	46c0      	nop			@ (mov r8, r8)
 8002544:	20003570 	.word	0x20003570
 8002548:	2000356e 	.word	0x2000356e
 800254c:	2000356c 	.word	0x2000356c

08002550 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002550:	b510      	push	{r4, lr}
 8002552:	000c      	movs	r4, r1
 8002554:	0019      	movs	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002556:	2c00      	cmp	r4, #0
 8002558:	d105      	bne.n	8002566 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800255a:	4b08      	ldr	r3, [pc, #32]	@ (800257c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2c>)
 800255c:	4a08      	ldr	r2, [pc, #32]	@ (8002580 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800255e:	4809      	ldr	r0, [pc, #36]	@ (8002584 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002560:	4909      	ldr	r1, [pc, #36]	@ (8002588 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002562:	f010 f8fd 	bl	8012760 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8002566:	63c4      	str	r4, [r0, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002568:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800256a:	1e54      	subs	r4, r2, #1
 800256c:	41a2      	sbcs	r2, r4
 800256e:	4b07      	ldr	r3, [pc, #28]	@ (800258c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002570:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002572:	6803      	ldr	r3, [r0, #0]
 8002574:	338c      	adds	r3, #140	@ 0x8c
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	4798      	blx	r3
    }
 800257a:	bd10      	pop	{r4, pc}
 800257c:	080139f0 	.word	0x080139f0
 8002580:	08013a28 	.word	0x08013a28
 8002584:	08013a76 	.word	0x08013a76
 8002588:	000002d2 	.word	0x000002d2
 800258c:	20003576 	.word	0x20003576

08002590 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002590:	4b09      	ldr	r3, [pc, #36]	@ (80025b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002592:	b510      	push	{r4, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002594:	881b      	ldrh	r3, [r3, #0]
 8002596:	428b      	cmp	r3, r1
 8002598:	d803      	bhi.n	80025a2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800259a:	4b08      	ldr	r3, [pc, #32]	@ (80025bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800259c:	881b      	ldrh	r3, [r3, #0]
 800259e:	4293      	cmp	r3, r2
 80025a0:	d905      	bls.n	80025ae <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80025a2:	219e      	movs	r1, #158	@ 0x9e
 80025a4:	4b06      	ldr	r3, [pc, #24]	@ (80025c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80025a6:	4a07      	ldr	r2, [pc, #28]	@ (80025c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80025a8:	4807      	ldr	r0, [pc, #28]	@ (80025c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80025aa:	f010 f8d9 	bl	8012760 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80025ae:	4b07      	ldr	r3, [pc, #28]	@ (80025cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80025b0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80025b2:	4b07      	ldr	r3, [pc, #28]	@ (80025d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80025b4:	801a      	strh	r2, [r3, #0]
    }
 80025b6:	bd10      	pop	{r4, pc}
 80025b8:	2000356c 	.word	0x2000356c
 80025bc:	2000356e 	.word	0x2000356e
 80025c0:	08013abb 	.word	0x08013abb
 80025c4:	08013b1e 	.word	0x08013b1e
 80025c8:	08013a76 	.word	0x08013a76
 80025cc:	20003572 	.word	0x20003572
 80025d0:	20003574 	.word	0x20003574

080025d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80025d4:	0002      	movs	r2, r0
    virtual BlitOperations getBlitCaps()
 80025d6:	0003      	movs	r3, r0
        return static_cast<BlitOperations>(0);
 80025d8:	2000      	movs	r0, #0
    virtual BlitOperations getBlitCaps()
 80025da:	b510      	push	{r4, lr}
        if (useDMAAcceleration)
 80025dc:	327a      	adds	r2, #122	@ 0x7a
 80025de:	7812      	ldrb	r2, [r2, #0]
 80025e0:	4282      	cmp	r2, r0
 80025e2:	d003      	beq.n	80025ec <_ZN8touchgfx3HAL11getBlitCapsEv+0x18>
 80025e4:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 80025e6:	6803      	ldr	r3, [r0, #0]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	4798      	blx	r3
    }
 80025ec:	bd10      	pop	{r4, pc}

080025ee <setVSYNC>:

// Set the External VSYNC GPIO Pin High.
extern "C"
void setVSYNC(void)
{
 80025ee:	b510      	push	{r4, lr}
    GPIO::set(GPIO::VSYNC_FREQ);
 80025f0:	2000      	movs	r0, #0
 80025f2:	f7ff fe47 	bl	8002284 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
}
 80025f6:	bd10      	pop	{r4, pc}

080025f8 <clearVSYNC>:

// Clear the External VSYNC GPIO Pin Low.
extern "C"
void clearVSYNC(void)
{
 80025f8:	b510      	push	{r4, lr}
    GPIO::clear(GPIO::VSYNC_FREQ);
 80025fa:	2000      	movs	r0, #0
 80025fc:	f7ff fe6e 	bl	80022dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
}
 8002600:	bd10      	pop	{r4, pc}
	...

08002604 <_GLOBAL__sub_I_bc>:
 8002604:	4b01      	ldr	r3, [pc, #4]	@ (800260c <_GLOBAL__sub_I_bc+0x8>)
 8002606:	4a02      	ldr	r2, [pc, #8]	@ (8002610 <_GLOBAL__sub_I_bc+0xc>)
 8002608:	601a      	str	r2, [r3, #0]
 800260a:	4770      	bx	lr
 800260c:	20000300 	.word	0x20000300
 8002610:	08013918 	.word	0x08013918

08002614 <_ZN8touchgfx10OSWrappers10initializeEv>:
/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    fb_sem = 0;
 8002614:	2200      	movs	r2, #0
 8002616:	4b02      	ldr	r3, [pc, #8]	@ (8002620 <_ZN8touchgfx10OSWrappers10initializeEv+0xc>)
 8002618:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800261a:	4b02      	ldr	r3, [pc, #8]	@ (8002624 <_ZN8touchgfx10OSWrappers10initializeEv+0x10>)
 800261c:	601a      	str	r2, [r3, #0]
}
 800261e:	4770      	bx	lr
 8002620:	2000030c 	.word	0x2000030c
 8002624:	20000308 	.word	0x20000308

08002628 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    while (fb_sem);
 8002628:	4b03      	ldr	r3, [pc, #12]	@ (8002638 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x10>)
 800262a:	681a      	ldr	r2, [r3, #0]
 800262c:	2a00      	cmp	r2, #0
 800262e:	d1fc      	bne.n	800262a <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2>
    fb_sem = 1;
 8002630:	3201      	adds	r2, #1
 8002632:	601a      	str	r2, [r3, #0]
}
 8002634:	4770      	bx	lr
 8002636:	46c0      	nop			@ (mov r8, r8)
 8002638:	2000030c 	.word	0x2000030c

0800263c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    fb_sem = 0;
 800263c:	2200      	movs	r2, #0
 800263e:	4b01      	ldr	r3, [pc, #4]	@ (8002644 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002640:	601a      	str	r2, [r3, #0]
}
 8002642:	4770      	bx	lr
 8002644:	2000030c 	.word	0x2000030c

08002648 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    fb_sem = 1;
 8002648:	2201      	movs	r2, #1
 800264a:	4b01      	ldr	r3, [pc, #4]	@ (8002650 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x8>)
 800264c:	601a      	str	r2, [r3, #0]
}
 800264e:	4770      	bx	lr
 8002650:	2000030c 	.word	0x2000030c

08002654 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8002654:	2200      	movs	r2, #0
 8002656:	4b01      	ldr	r3, [pc, #4]	@ (800265c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
 8002658:	601a      	str	r2, [r3, #0]
 800265a:	4770      	bx	lr
 800265c:	2000030c 	.word	0x2000030c

08002660 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    vsync_sem = 1;
 8002660:	2201      	movs	r2, #1
 8002662:	4b01      	ldr	r3, [pc, #4]	@ (8002668 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x8>)
 8002664:	601a      	str	r2, [r3, #0]
}
 8002666:	4770      	bx	lr
 8002668:	20000308 	.word	0x20000308

0800266c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
    vsync_sem = 0;
 800266c:	2200      	movs	r2, #0
 800266e:	4b01      	ldr	r3, [pc, #4]	@ (8002674 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x8>)
 8002670:	601a      	str	r2, [r3, #0]
}
 8002672:	4770      	bx	lr
 8002674:	20000308 	.word	0x20000308

08002678 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
    return vsync_sem;
 8002678:	4b02      	ldr	r3, [pc, #8]	@ (8002684 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0xc>)
 800267a:	6818      	ldr	r0, [r3, #0]
 800267c:	1e43      	subs	r3, r0, #1
 800267e:	4198      	sbcs	r0, r3
 8002680:	b2c0      	uxtb	r0, r0
}
 8002682:	4770      	bx	lr
 8002684:	20000308 	.word	0x20000308

08002688 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
    if (vsync_sem)
 8002688:	4b06      	ldr	r3, [pc, #24]	@ (80026a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x1c>)
{
 800268a:	b510      	push	{r4, lr}
    if (vsync_sem)
 800268c:	681a      	ldr	r2, [r3, #0]
 800268e:	2a00      	cmp	r2, #0
 8002690:	d006      	beq.n	80026a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x18>
    {
        vsync_sem = 0;
 8002692:	2200      	movs	r2, #0
 8002694:	601a      	str	r2, [r3, #0]
        return instance;
 8002696:	4b04      	ldr	r3, [pc, #16]	@ (80026a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>)
 8002698:	6818      	ldr	r0, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800269a:	6803      	ldr	r3, [r0, #0]
 800269c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800269e:	4798      	blx	r3
    }
}
 80026a0:	bd10      	pop	{r4, pc}
 80026a2:	46c0      	nop			@ (mov r8, r8)
 80026a4:	20000308 	.word	0x20000308
 80026a8:	20003578 	.word	0x20003578

080026ac <_ZN8touchgfx10OSWrappers9taskYieldEv>:
 * a very short task and return.
 */
void OSWrappers::taskYield()
{

}
 80026ac:	4770      	bx	lr

080026ae <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80026ae:	4770      	bx	lr

080026b0 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80026b0:	2000      	movs	r0, #0
 80026b2:	4770      	bx	lr

080026b4 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80026b4:	4770      	bx	lr

080026b6 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80026b6:	4770      	bx	lr

080026b8 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80026b8:	2000      	movs	r0, #0
 80026ba:	4770      	bx	lr

080026bc <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80026bc:	4770      	bx	lr
	...

080026c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
    assert(0 && "DMA operation not supported");
 80026c0:	2122      	movs	r1, #34	@ 0x22
{
 80026c2:	b510      	push	{r4, lr}
    assert(0 && "DMA operation not supported");
 80026c4:	4b02      	ldr	r3, [pc, #8]	@ (80026d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80026c6:	4a03      	ldr	r2, [pc, #12]	@ (80026d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80026c8:	4803      	ldr	r0, [pc, #12]	@ (80026d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80026ca:	f010 f849 	bl	8012760 <__assert_func>
 80026ce:	46c0      	nop			@ (mov r8, r8)
 80026d0:	08013c44 	.word	0x08013c44
 80026d4:	08013c67 	.word	0x08013c67
 80026d8:	08013ca5 	.word	0x08013ca5

080026dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
    assert(0 && "DMA operation not supported");
 80026dc:	2127      	movs	r1, #39	@ 0x27
{
 80026de:	b510      	push	{r4, lr}
    assert(0 && "DMA operation not supported");
 80026e0:	4b02      	ldr	r3, [pc, #8]	@ (80026ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80026e2:	4a03      	ldr	r2, [pc, #12]	@ (80026f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80026e4:	4803      	ldr	r0, [pc, #12]	@ (80026f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80026e6:	f010 f83b 	bl	8012760 <__assert_func>
 80026ea:	46c0      	nop			@ (mov r8, r8)
 80026ec:	08013c44 	.word	0x08013c44
 80026f0:	08013d1d 	.word	0x08013d1d
 80026f4:	08013ca5 	.word	0x08013ca5

080026f8 <_ZN8STM32DMAD0Ev>:
 80026f8:	b510      	push	{r4, lr}
 80026fa:	0004      	movs	r4, r0
 80026fc:	2144      	movs	r1, #68	@ 0x44
 80026fe:	f00f fa02 	bl	8011b06 <_ZdlPvj>
 8002702:	0020      	movs	r0, r4
 8002704:	bd10      	pop	{r4, pc}
	...

08002708 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002708:	b570      	push	{r4, r5, r6, lr}
 800270a:	0004      	movs	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800270c:	2500      	movs	r5, #0
    : DMA_Interface(q), q(&b, 1)
 800270e:	0021      	movs	r1, r4
 8002710:	4b06      	ldr	r3, [pc, #24]	@ (800272c <_ZN8STM32DMAC1Ev+0x24>)
 8002712:	300c      	adds	r0, #12
 8002714:	7225      	strb	r5, [r4, #8]
 8002716:	7265      	strb	r5, [r4, #9]
 8002718:	2201      	movs	r2, #1
 800271a:	6060      	str	r0, [r4, #4]
 800271c:	6023      	str	r3, [r4, #0]
 800271e:	3120      	adds	r1, #32
 8002720:	f005 fe72 	bl	8008408 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
}
 8002724:	0020      	movs	r0, r4
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002726:	62e5      	str	r5, [r4, #44]	@ 0x2c
 8002728:	bd70      	pop	{r4, r5, r6, pc}
 800272a:	46c0      	nop			@ (mov r8, r8)
 800272c:	08013d64 	.word	0x08013d64

08002730 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002730:	2001      	movs	r0, #1
 8002732:	4770      	bx	lr

08002734 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002734:	200c      	movs	r0, #12
 8002736:	4770      	bx	lr

08002738 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002738:	230c      	movs	r3, #12
 800273a:	434b      	muls	r3, r1
 800273c:	3308      	adds	r3, #8
 800273e:	18c0      	adds	r0, r0, r3
    }
 8002740:	4770      	bx	lr

08002742 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002742:	230c      	movs	r3, #12
 8002744:	434b      	muls	r3, r1
 8002746:	3308      	adds	r3, #8
 8002748:	18c0      	adds	r0, r0, r3
    }
 800274a:	4770      	bx	lr

0800274c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800274c:	2001      	movs	r0, #1
 800274e:	4770      	bx	lr

08002750 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002750:	4800      	ldr	r0, [pc, #0]	@ (8002754 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv+0x4>)
 8002752:	4770      	bx	lr
 8002754:	00000f44 	.word	0x00000f44

08002758 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002758:	4b02      	ldr	r3, [pc, #8]	@ (8002764 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt+0xc>)
 800275a:	434b      	muls	r3, r1
 800275c:	3308      	adds	r3, #8
 800275e:	18c0      	adds	r0, r0, r3
    }
 8002760:	4770      	bx	lr
 8002762:	46c0      	nop			@ (mov r8, r8)
 8002764:	00000f44 	.word	0x00000f44

08002768 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002768:	4b02      	ldr	r3, [pc, #8]	@ (8002774 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt+0xc>)
 800276a:	434b      	muls	r3, r1
 800276c:	3308      	adds	r3, #8
 800276e:	18c0      	adds	r0, r0, r3
    }
 8002770:	4770      	bx	lr
 8002772:	46c0      	nop			@ (mov r8, r8)
 8002774:	00000f44 	.word	0x00000f44

08002778 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002778:	2001      	movs	r0, #1
 800277a:	4770      	bx	lr

0800277c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800277c:	2010      	movs	r0, #16
 800277e:	4770      	bx	lr

08002780 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002780:	0109      	lsls	r1, r1, #4
 8002782:	3108      	adds	r1, #8
 8002784:	1840      	adds	r0, r0, r1
    }
 8002786:	4770      	bx	lr

08002788 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002788:	0109      	lsls	r1, r1, #4
 800278a:	3108      	adds	r1, #8
 800278c:	1840      	adds	r0, r0, r1
    }
 800278e:	4770      	bx	lr

08002790 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8002790:	b510      	push	{r4, lr}
 8002792:	0008      	movs	r0, r1
    {
        app.gotoMainScreenNoTransition();
 8002794:	f000 ff3c 	bl	8003610 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 8002798:	bd10      	pop	{r4, pc}
	...

0800279c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800279c:	b510      	push	{r4, lr}
 800279e:	0004      	movs	r4, r0
 80027a0:	4b02      	ldr	r3, [pc, #8]	@ (80027ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80027a2:	6003      	str	r3, [r0, #0]
 80027a4:	f004 fb9e 	bl	8006ee4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80027a8:	0020      	movs	r0, r4
 80027aa:	bd10      	pop	{r4, pc}
 80027ac:	08013e1c 	.word	0x08013e1c

080027b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80027b0:	b510      	push	{r4, lr}
 80027b2:	0004      	movs	r4, r0
 80027b4:	f7ff fff2 	bl	800279c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80027b8:	0020      	movs	r0, r4
 80027ba:	2114      	movs	r1, #20
 80027bc:	f00f f9a3 	bl	8011b06 <_ZdlPvj>
 80027c0:	0020      	movs	r0, r4
 80027c2:	bd10      	pop	{r4, pc}

080027c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80027c4:	b510      	push	{r4, lr}
 80027c6:	0004      	movs	r4, r0
 80027c8:	4b02      	ldr	r3, [pc, #8]	@ (80027d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80027ca:	6003      	str	r3, [r0, #0]
 80027cc:	f004 fb8a 	bl	8006ee4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80027d0:	0020      	movs	r0, r4
 80027d2:	bd10      	pop	{r4, pc}
 80027d4:	08013de8 	.word	0x08013de8

080027d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80027d8:	b510      	push	{r4, lr}
 80027da:	0004      	movs	r4, r0
 80027dc:	f7ff fff2 	bl	80027c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80027e0:	0020      	movs	r0, r4
 80027e2:	4902      	ldr	r1, [pc, #8]	@ (80027ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x14>)
 80027e4:	f00f f98f 	bl	8011b06 <_ZdlPvj>
 80027e8:	0020      	movs	r0, r4
 80027ea:	bd10      	pop	{r4, pc}
 80027ec:	00000f4c 	.word	0x00000f4c

080027f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80027f0:	b510      	push	{r4, lr}
 80027f2:	0004      	movs	r4, r0
 80027f4:	4b02      	ldr	r3, [pc, #8]	@ (8002800 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80027f6:	6003      	str	r3, [r0, #0]
 80027f8:	f004 fb74 	bl	8006ee4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80027fc:	0020      	movs	r0, r4
 80027fe:	bd10      	pop	{r4, pc}
 8002800:	08013db4 	.word	0x08013db4

08002804 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002804:	b510      	push	{r4, lr}
 8002806:	0004      	movs	r4, r0
 8002808:	f7ff fff2 	bl	80027f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800280c:	0020      	movs	r0, r4
 800280e:	2118      	movs	r1, #24
 8002810:	f00f f979 	bl	8011b06 <_ZdlPvj>
 8002814:	0020      	movs	r0, r4
 8002816:	bd10      	pop	{r4, pc}

08002818 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002818:	b510      	push	{r4, lr}
 800281a:	0004      	movs	r4, r0
 800281c:	4b07      	ldr	r3, [pc, #28]	@ (800283c <_ZN12FrontendHeapD1Ev+0x24>)
 800281e:	6003      	str	r3, [r0, #0]
 8002820:	4b07      	ldr	r3, [pc, #28]	@ (8002840 <_ZN12FrontendHeapD1Ev+0x28>)
 8002822:	18c0      	adds	r0, r0, r3
 8002824:	f7ff ffba 	bl	800279c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002828:	0020      	movs	r0, r4
 800282a:	302c      	adds	r0, #44	@ 0x2c
 800282c:	f7ff ffca 	bl	80027c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002830:	0020      	movs	r0, r4
 8002832:	3014      	adds	r0, #20
 8002834:	f7ff ffdc 	bl	80027f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002838:	0020      	movs	r0, r4
 800283a:	bd10      	pop	{r4, pc}
 800283c:	08013e50 	.word	0x08013e50
 8002840:	00000f78 	.word	0x00000f78

08002844 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002844:	b510      	push	{r4, lr}
 8002846:	4802      	ldr	r0, [pc, #8]	@ (8002850 <__tcf_0+0xc>)
 8002848:	f7ff ffe6 	bl	8002818 <_ZN12FrontendHeapD1Ev>
 800284c:	bd10      	pop	{r4, pc}
 800284e:	46c0      	nop			@ (mov r8, r8)
 8002850:	20000bf8 	.word	0x20000bf8

08002854 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002854:	b510      	push	{r4, lr}
 8002856:	0004      	movs	r4, r0
 8002858:	f7ff ffde 	bl	8002818 <_ZN12FrontendHeapD1Ev>
 800285c:	0020      	movs	r0, r4
 800285e:	4902      	ldr	r1, [pc, #8]	@ (8002868 <_ZN12FrontendHeapD0Ev+0x14>)
 8002860:	f00f f951 	bl	8011b06 <_ZdlPvj>
 8002864:	0020      	movs	r0, r4
 8002866:	bd10      	pop	{r4, pc}
 8002868:	000010ec 	.word	0x000010ec

0800286c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800286c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800286e:	b085      	sub	sp, #20
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002870:	f000 fabe 	bl	8002df0 <_ZN14BitmapDatabase11getInstanceEv>
 8002874:	2400      	movs	r4, #0
 8002876:	0005      	movs	r5, r0
 8002878:	f000 fabe 	bl	8002df8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800287c:	0023      	movs	r3, r4
 800287e:	0001      	movs	r1, r0
 8002880:	0022      	movs	r2, r4
 8002882:	0028      	movs	r0, r5
 8002884:	9400      	str	r4, [sp, #0]
 8002886:	f00b fef7 	bl	800e678 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800288a:	4b24      	ldr	r3, [pc, #144]	@ (800291c <touchgfx_init+0xb0>)
 800288c:	4a24      	ldr	r2, [pc, #144]	@ (8002920 <touchgfx_init+0xb4>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800288e:	0020      	movs	r0, r4
 8002890:	601a      	str	r2, [r3, #0]
 8002892:	f001 fe21 	bl	80044d8 <_ZN8touchgfx5Texts11setLanguageEt>
        reader = datareader;
 8002896:	4b23      	ldr	r3, [pc, #140]	@ (8002924 <touchgfx_init+0xb8>)
 8002898:	4e23      	ldr	r6, [pc, #140]	@ (8002928 <touchgfx_init+0xbc>)
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* flashReader)
    {
        fontFlashReader = flashReader;
 800289a:	4a24      	ldr	r2, [pc, #144]	@ (800292c <touchgfx_init+0xc0>)
     * in order to enable external data access.
     */
    hal.setDataReader(&dataReader);
    fontProvider.setFlashReader(&dataReader);

    FontManager::setFontProvider(&fontProvider);
 800289c:	4824      	ldr	r0, [pc, #144]	@ (8002930 <touchgfx_init+0xc4>)
 800289e:	67f3      	str	r3, [r6, #124]	@ 0x7c
 80028a0:	6013      	str	r3, [r2, #0]
 80028a2:	f00b fe4b 	bl	800e53c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
        static FrontendHeap instance;
 80028a6:	4b23      	ldr	r3, [pc, #140]	@ (8002934 <touchgfx_init+0xc8>)
 80028a8:	0018      	movs	r0, r3
 80028aa:	9302      	str	r3, [sp, #8]
 80028ac:	f00f f92f 	bl	8011b0e <__cxa_guard_acquire>
 80028b0:	42a0      	cmp	r0, r4
 80028b2:	d02d      	beq.n	8002910 <touchgfx_init+0xa4>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80028b4:	4c20      	ldr	r4, [pc, #128]	@ (8002938 <touchgfx_init+0xcc>)
          screenStorage(scr),
 80028b6:	4b21      	ldr	r3, [pc, #132]	@ (800293c <touchgfx_init+0xd0>)
          transitionStorage(tra),
 80028b8:	4f21      	ldr	r7, [pc, #132]	@ (8002940 <touchgfx_init+0xd4>)
          frontendApplication(app)
 80028ba:	4d22      	ldr	r5, [pc, #136]	@ (8002944 <touchgfx_init+0xd8>)
        : presenterStorage(pres),
 80028bc:	4822      	ldr	r0, [pc, #136]	@ (8002948 <touchgfx_init+0xdc>)
          screenStorage(scr),
 80028be:	9303      	str	r3, [sp, #12]
 80028c0:	60a3      	str	r3, [r4, #8]
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 80028c2:	4b22      	ldr	r3, [pc, #136]	@ (800294c <touchgfx_init+0xe0>)
          transitionStorage(tra),
 80028c4:	60e7      	str	r7, [r4, #12]
 80028c6:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 80028c8:	6060      	str	r0, [r4, #4]
          frontendApplication(app)
 80028ca:	6125      	str	r5, [r4, #16]
 80028cc:	f004 fb0c 	bl	8006ee8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80028d0:	4b1f      	ldr	r3, [pc, #124]	@ (8002950 <touchgfx_init+0xe4>)
 80028d2:	9803      	ldr	r0, [sp, #12]
 80028d4:	6163      	str	r3, [r4, #20]
 80028d6:	f004 fb07 	bl	8006ee8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80028da:	4b1e      	ldr	r3, [pc, #120]	@ (8002954 <touchgfx_init+0xe8>)
 80028dc:	0038      	movs	r0, r7
 80028de:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80028e0:	f004 fb02 	bl	8006ee8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80028e4:	4b1c      	ldr	r3, [pc, #112]	@ (8002958 <touchgfx_init+0xec>)
 80028e6:	4a1d      	ldr	r2, [pc, #116]	@ (800295c <touchgfx_init+0xf0>)
 80028e8:	50a3      	str	r3, [r4, r2]
 80028ea:	4b1d      	ldr	r3, [pc, #116]	@ (8002960 <touchgfx_init+0xf4>)
 80028ec:	001f      	movs	r7, r3
 80028ee:	0018      	movs	r0, r3
 80028f0:	f002 fed8 	bl	80056a4 <_ZN5ModelC1Ev>
 80028f4:	0022      	movs	r2, r4
 80028f6:	0039      	movs	r1, r7
 80028f8:	0028      	movs	r0, r5
 80028fa:	f002 f9df 	bl	8004cbc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
        app.gotoMainScreenNoTransition();
 80028fe:	0028      	movs	r0, r5
 8002900:	f000 fe86 	bl	8003610 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8002904:	4817      	ldr	r0, [pc, #92]	@ (8002964 <touchgfx_init+0xf8>)
 8002906:	f00f ff49 	bl	801279c <atexit>
 800290a:	9802      	ldr	r0, [sp, #8]
 800290c:	f00f f90c 	bl	8011b28 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002910:	0030      	movs	r0, r6
 8002912:	f7ff fd8b 	bl	800242c <_ZN11TouchGFXHAL10initializeEv>
}
 8002916:	b005      	add	sp, #20
 8002918:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800291a:	46c0      	nop			@ (mov r8, r8)
 800291c:	200035d4 	.word	0x200035d4
 8002920:	20000390 	.word	0x20000390
 8002924:	20000424 	.word	0x20000424
 8002928:	20000310 	.word	0x20000310
 800292c:	2000350c 	.word	0x2000350c
 8002930:	20000008 	.word	0x20000008
 8002934:	20000bf4 	.word	0x20000bf4
 8002938:	20000bf8 	.word	0x20000bf8
 800293c:	20000c24 	.word	0x20000c24
 8002940:	20001b70 	.word	0x20001b70
 8002944:	20001b88 	.word	0x20001b88
 8002948:	20000c0c 	.word	0x20000c0c
 800294c:	08013e50 	.word	0x08013e50
 8002950:	08013db4 	.word	0x08013db4
 8002954:	08013de8 	.word	0x08013de8
 8002958:	08013e1c 	.word	0x08013e1c
 800295c:	00000f78 	.word	0x00000f78
 8002960:	20001b84 	.word	0x20001b84
 8002964:	08002845 	.word	0x08002845

08002968 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002968:	4770      	bx	lr
	...

0800296c <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800296c:	b510      	push	{r4, lr}
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800296e:	f7ff fe83 	bl	8002678 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 8002972:	2800      	cmp	r0, #0
 8002974:	d006      	beq.n	8002984 <touchgfx_taskEntry+0x18>
        swapFrameBuffers();
 8002976:	4c04      	ldr	r4, [pc, #16]	@ (8002988 <touchgfx_taskEntry+0x1c>)
 8002978:	0020      	movs	r0, r4
 800297a:	f005 fc05 	bl	8008188 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800297e:	0020      	movs	r0, r4
 8002980:	f004 febe 	bl	8007700 <_ZN8touchgfx3HAL4tickEv>
    {
        hal.backPorchExited();
    }
}
 8002984:	bd10      	pop	{r4, pc}
 8002986:	46c0      	nop			@ (mov r8, r8)
 8002988:	20000310 	.word	0x20000310

0800298c <_GLOBAL__sub_I_touchgfx_init>:
 800298c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800298e:	4e26      	ldr	r6, [pc, #152]	@ (8002a28 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8002990:	4c26      	ldr	r4, [pc, #152]	@ (8002a2c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8002992:	4b27      	ldr	r3, [pc, #156]	@ (8002a30 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8002994:	0030      	movs	r0, r6
 8002996:	6023      	str	r3, [r4, #0]
 8002998:	f7ff feb6 	bl	8002708 <_ZN8STM32DMAC1Ev>
static LCD16bppSerialFlash display(dataReader);
 800299c:	4d25      	ldr	r5, [pc, #148]	@ (8002a34 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
class TouchGFXDataReader : public TouchGFXGeneratedDataReader
 800299e:	4926      	ldr	r1, [pc, #152]	@ (8002a38 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 80029a0:	4b26      	ldr	r3, [pc, #152]	@ (8002a3c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80029a2:	0028      	movs	r0, r5
 80029a4:	600b      	str	r3, [r1, #0]
 80029a6:	f00c fd1d 	bl	800f3e4 <_ZN8touchgfx19LCD16bppSerialFlashC1ERNS_15FlashDataReaderE>
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80029aa:	2180      	movs	r1, #128	@ 0x80
        : dma(dmaInterface),
 80029ac:	4b24      	ldr	r3, [pc, #144]	@ (8002a40 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80029ae:	0049      	lsls	r1, r1, #1
 80029b0:	6499      	str	r1, [r3, #72]	@ 0x48
          useAuxiliaryLCD(false),
 80029b2:	0019      	movs	r1, r3
          mcuInstrumentation(0),
 80029b4:	2200      	movs	r2, #0
          useAuxiliaryLCD(false),
 80029b6:	3158      	adds	r1, #88	@ 0x58
 80029b8:	700a      	strb	r2, [r1, #0]
          touchSampleRate(1),
 80029ba:	4922      	ldr	r1, [pc, #136]	@ (8002a44 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80029bc:	20f0      	movs	r0, #240	@ 0xf0
          touchSampleRate(1),
 80029be:	6699      	str	r1, [r3, #104]	@ 0x68
          updateMCULoad(0),
 80029c0:	0019      	movs	r1, r3
 80029c2:	3170      	adds	r1, #112	@ 0x70
 80029c4:	700a      	strb	r2, [r1, #0]
        instance = this;
 80029c6:	4920      	ldr	r1, [pc, #128]	@ (8002a48 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
        : dma(dmaInterface),
 80029c8:	605e      	str	r6, [r3, #4]
        instance = this;
 80029ca:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80029cc:	491f      	ldr	r1, [pc, #124]	@ (8002a4c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          lcdRef(display),
 80029ce:	609d      	str	r5, [r3, #8]
          mcuInstrumentation(0),
 80029d0:	611a      	str	r2, [r3, #16]
          buttonController(0),
 80029d2:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 80029d4:	619a      	str	r2, [r3, #24]
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80029d6:	61da      	str	r2, [r3, #28]
 80029d8:	621a      	str	r2, [r3, #32]
 80029da:	625a      	str	r2, [r3, #36]	@ 0x24
 80029dc:	629a      	str	r2, [r3, #40]	@ 0x28
 80029de:	62da      	str	r2, [r3, #44]	@ 0x2c
 80029e0:	861a      	strh	r2, [r3, #48]	@ 0x30
          taskDelayFunc(0),
 80029e2:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 80029e4:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 80029e6:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 80029e8:	645a      	str	r2, [r3, #68]	@ 0x44
          auxiliaryLCD(0),
 80029ea:	64da      	str	r2, [r3, #76]	@ 0x4c
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80029ec:	651a      	str	r2, [r3, #80]	@ 0x50
 80029ee:	655a      	str	r2, [r3, #84]	@ 0x54
          listener(0),
 80029f0:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 80029f2:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 80029f4:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
 80029f6:	66da      	str	r2, [r3, #108]	@ 0x6c
          touchController(touchCtrl),
 80029f8:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80029fa:	8008      	strh	r0, [r1, #0]
 80029fc:	4914      	ldr	r1, [pc, #80]	@ (8002a50 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          cc_begin(0),
 80029fe:	675a      	str	r2, [r3, #116]	@ 0x74
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002a00:	8008      	strh	r0, [r1, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002a02:	4914      	ldr	r1, [pc, #80]	@ (8002a54 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8002a04:	3050      	adds	r0, #80	@ 0x50
 8002a06:	8008      	strh	r0, [r1, #0]
 8002a08:	4913      	ldr	r1, [pc, #76]	@ (8002a58 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
        reader(0)
 8002a0a:	67da      	str	r2, [r3, #124]	@ 0x7c
 8002a0c:	8008      	strh	r0, [r1, #0]
        DISPLAY_ROTATION = rotate0;
 8002a0e:	4913      	ldr	r1, [pc, #76]	@ (8002a5c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002a10:	3840      	subs	r0, #64	@ 0x40
        DISPLAY_ROTATION = rotate0;
 8002a12:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002a14:	0019      	movs	r1, r3
 8002a16:	38ff      	subs	r0, #255	@ 0xff
 8002a18:	3134      	adds	r1, #52	@ 0x34
        TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002a1a:	4a11      	ldr	r2, [pc, #68]	@ (8002a60 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8002a1c:	7008      	strb	r0, [r1, #0]
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002a1e:	4911      	ldr	r1, [pc, #68]	@ (8002a64 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 8002a20:	601a      	str	r2, [r3, #0]
 8002a22:	6799      	str	r1, [r3, #120]	@ 0x78
}
 8002a24:	bd70      	pop	{r4, r5, r6, pc}
 8002a26:	46c0      	nop			@ (mov r8, r8)
 8002a28:	20000bac 	.word	0x20000bac
 8002a2c:	20000bf0 	.word	0x20000bf0
 8002a30:	080139c0 	.word	0x080139c0
 8002a34:	20000394 	.word	0x20000394
 8002a38:	20000424 	.word	0x20000424
 8002a3c:	080139d8 	.word	0x080139d8
 8002a40:	20000310 	.word	0x20000310
 8002a44:	01000001 	.word	0x01000001
 8002a48:	20003578 	.word	0x20003578
 8002a4c:	2000356c 	.word	0x2000356c
 8002a50:	20003572 	.word	0x20003572
 8002a54:	2000356e 	.word	0x2000356e
 8002a58:	20003574 	.word	0x20003574
 8002a5c:	20003570 	.word	0x20003570
 8002a60:	08013b6c 	.word	0x08013b6c
 8002a64:	01010000 	.word	0x01010000

08002a68 <_ZN27TouchGFXGeneratedDataReader20addressIsAddressableEPKv>:
extern "C" void DataReader_ReadData(uint32_t address24, uint8_t* buffer, uint32_t length);
extern "C" void DataReader_StartDMAReadData(uint32_t address24, uint8_t* buffer, uint32_t length);

bool TouchGFXGeneratedDataReader::addressIsAddressable(const void* address)
{
    if (address >= (void*)MEM_BASE_ADDRESS && address < (void*)(MEM_BASE_ADDRESS + MEM_FLASH_SIZE))
 8002a68:	23e0      	movs	r3, #224	@ 0xe0
 8002a6a:	05db      	lsls	r3, r3, #23
 8002a6c:	18c9      	adds	r1, r1, r3
 8002a6e:	2380      	movs	r3, #128	@ 0x80
 8002a70:	2000      	movs	r0, #0
 8002a72:	041b      	lsls	r3, r3, #16
 8002a74:	4299      	cmp	r1, r3
 8002a76:	4140      	adcs	r0, r0
    {
        return false;
    }

    return true;
}
 8002a78:	b2c0      	uxtb	r0, r0
 8002a7a:	4770      	bx	lr

08002a7c <_ZN27TouchGFXGeneratedDataReader18startFlashLineReadEPKvm>:
        DataReader_WaitForReceiveDone();
    }
}

void TouchGFXGeneratedDataReader::startFlashLineRead(const void* src, uint32_t bytes)
{
 8002a7c:	0003      	movs	r3, r0
 8002a7e:	0008      	movs	r0, r1
    /* Start transfer using DMA */
    DataReader_StartDMAReadData((uint32_t)src, (readToBuffer1 ? buffer1 : buffer2), bytes);
 8002a80:	4905      	ldr	r1, [pc, #20]	@ (8002a98 <_ZN27TouchGFXGeneratedDataReader18startFlashLineReadEPKvm+0x1c>)
{
 8002a82:	b510      	push	{r4, lr}
    DataReader_StartDMAReadData((uint32_t)src, (readToBuffer1 ? buffer1 : buffer2), bytes);
 8002a84:	5c5c      	ldrb	r4, [r3, r1]
 8002a86:	21f1      	movs	r1, #241	@ 0xf1
 8002a88:	0089      	lsls	r1, r1, #2
 8002a8a:	1859      	adds	r1, r3, r1
 8002a8c:	2c00      	cmp	r4, #0
 8002a8e:	d000      	beq.n	8002a92 <_ZN27TouchGFXGeneratedDataReader18startFlashLineReadEPKvm+0x16>
 8002a90:	1d19      	adds	r1, r3, #4
 8002a92:	f7fe fe11 	bl	80016b8 <DataReader_StartDMAReadData>
}
 8002a96:	bd10      	pop	{r4, pc}
 8002a98:	00000784 	.word	0x00000784

08002a9c <_ZN27TouchGFXGeneratedDataReader21waitFlashReadCompleteEv>:
const uint8_t* TouchGFXGeneratedDataReader::waitFlashReadComplete()
{
    /*
     * Switch line buffer and then wait for transmission to complete before returning new buffer.
     */
    uint8_t* readBuffer = readToBuffer1 ? buffer1 : buffer2;
 8002a9c:	22f1      	movs	r2, #241	@ 0xf1
{
 8002a9e:	b570      	push	{r4, r5, r6, lr}
    uint8_t* readBuffer = readToBuffer1 ? buffer1 : buffer2;
 8002aa0:	4d07      	ldr	r5, [pc, #28]	@ (8002ac0 <_ZN27TouchGFXGeneratedDataReader21waitFlashReadCompleteEv+0x24>)
 8002aa2:	0092      	lsls	r2, r2, #2
 8002aa4:	5d43      	ldrb	r3, [r0, r5]
{
 8002aa6:	0004      	movs	r4, r0
    uint8_t* readBuffer = readToBuffer1 ? buffer1 : buffer2;
 8002aa8:	1886      	adds	r6, r0, r2
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d000      	beq.n	8002ab0 <_ZN27TouchGFXGeneratedDataReader21waitFlashReadCompleteEv+0x14>
 8002aae:	1d06      	adds	r6, r0, #4
    DataReader_WaitForReceiveDone();
 8002ab0:	f7fe fe06 	bl	80016c0 <DataReader_WaitForReceiveDone>
    readToBuffer1 = !readToBuffer1;
 8002ab4:	2301      	movs	r3, #1
 8002ab6:	5d62      	ldrb	r2, [r4, r5]
    return readBuffer;
}
 8002ab8:	0030      	movs	r0, r6
    readToBuffer1 = !readToBuffer1;
 8002aba:	4053      	eors	r3, r2
 8002abc:	5563      	strb	r3, [r4, r5]
}
 8002abe:	bd70      	pop	{r4, r5, r6, pc}
 8002ac0:	00000784 	.word	0x00000784

08002ac4 <_ZN27TouchGFXGeneratedDataReader8copyDataEPKvPvm>:
{
 8002ac4:	0008      	movs	r0, r1
 8002ac6:	b510      	push	{r4, lr}
 8002ac8:	0011      	movs	r1, r2
 8002aca:	001a      	movs	r2, r3
    if (bytes < 250)
 8002acc:	2bf9      	cmp	r3, #249	@ 0xf9
 8002ace:	d802      	bhi.n	8002ad6 <_ZN27TouchGFXGeneratedDataReader8copyDataEPKvPvm+0x12>
        DataReader_ReadData((uint32_t)src, (uint8_t*)dst, bytes);
 8002ad0:	f7fe fdee 	bl	80016b0 <DataReader_ReadData>
}
 8002ad4:	bd10      	pop	{r4, pc}
        DataReader_StartDMAReadData((uint32_t)src, (uint8_t*)dst, bytes);
 8002ad6:	f7fe fdef 	bl	80016b8 <DataReader_StartDMAReadData>
        DataReader_WaitForReceiveDone();
 8002ada:	f7fe fdf1 	bl	80016c0 <DataReader_WaitForReceiveDone>
}
 8002ade:	e7f9      	b.n	8002ad4 <_ZN27TouchGFXGeneratedDataReader8copyDataEPKvPvm+0x10>

08002ae0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
}
 8002ae0:	4770      	bx	lr

08002ae2 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
}
 8002ae2:	2000      	movs	r0, #0
 8002ae4:	4770      	bx	lr

08002ae6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8002ae6:	4770      	bx	lr

08002ae8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev>:
 * queued for allocation again.
 *
 * @see FrameBufferAllocator
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
 8002ae8:	4770      	bx	lr

08002aea <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv>:
     */
    virtual bool hasBlockReadyForTransfer()
    {
        for (uint32_t i = 0; i < blocks; i++)
        {
            if (state[i] == DRAWN)
 8002aea:	7902      	ldrb	r2, [r0, #4]
    virtual bool hasBlockReadyForTransfer()
 8002aec:	0003      	movs	r3, r0
            {
                return true;
 8002aee:	2001      	movs	r0, #1
            if (state[i] == DRAWN)
 8002af0:	2a02      	cmp	r2, #2
 8002af2:	d007      	beq.n	8002b04 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x1a>
 8002af4:	795a      	ldrb	r2, [r3, #5]
 8002af6:	2a02      	cmp	r2, #2
 8002af8:	d004      	beq.n	8002b04 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x1a>
 8002afa:	7998      	ldrb	r0, [r3, #6]
 8002afc:	3802      	subs	r0, #2
 8002afe:	4243      	negs	r3, r0
 8002b00:	4158      	adcs	r0, r3
 8002b02:	b2c0      	uxtb	r0, r0
            }
        }
        return false;
    }
 8002b04:	4770      	bx	lr
	...

08002b08 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13hasEmptyBlockEv>:
        return blockRect[nextSendingBlock];
    }

    virtual bool hasEmptyBlock()
    {
        int nextDrawingBlock = drawingBlock + 1;
 8002b08:	4b05      	ldr	r3, [pc, #20]	@ (8002b20 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13hasEmptyBlockEv+0x18>)
 8002b0a:	58c2      	ldr	r2, [r0, r3]
 8002b0c:	1c53      	adds	r3, r2, #1
        if (nextDrawingBlock == blocks)
 8002b0e:	2a02      	cmp	r2, #2
 8002b10:	d100      	bne.n	8002b14 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13hasEmptyBlockEv+0xc>
        {
            nextDrawingBlock = 0;
 8002b12:	2300      	movs	r3, #0
        }
        return (state[nextDrawingBlock] == EMPTY);
 8002b14:	18c0      	adds	r0, r0, r3
 8002b16:	7900      	ldrb	r0, [r0, #4]
 8002b18:	4243      	negs	r3, r0
 8002b1a:	4158      	adcs	r0, r3
 8002b1c:	b2c0      	uxtb	r0, r0
    }
 8002b1e:	4770      	bx	lr
 8002b20:	00001824 	.word	0x00001824

08002b24 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002b24:	b570      	push	{r4, r5, r6, lr}
 8002b26:	0004      	movs	r4, r0
    HAL::initialize();
 8002b28:	f004 fdc7 	bl	80076ba <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002b2c:	6823      	ldr	r3, [r4, #0]
 8002b2e:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8002b30:	f008 fa4c 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 8002b34:	0001      	movs	r1, r0
 8002b36:	0020      	movs	r0, r4
 8002b38:	47a8      	blx	r5
    enableLCDControllerInterrupt();
 8002b3a:	6823      	ldr	r3, [r4, #0]
 8002b3c:	0020      	movs	r0, r4
 8002b3e:	3304      	adds	r3, #4
 8002b40:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8002b42:	4798      	blx	r3
    enableInterrupts();
 8002b44:	6823      	ldr	r3, [r4, #0]
 8002b46:	0020      	movs	r0, r4
 8002b48:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8002b4a:	4798      	blx	r3
        frameBufferAllocator = allocator;
 8002b4c:	4b02      	ldr	r3, [pc, #8]	@ (8002b58 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x34>)
 8002b4e:	61a3      	str	r3, [r4, #24]
            refreshStrategy = s;
 8002b50:	2302      	movs	r3, #2
 8002b52:	3448      	adds	r4, #72	@ 0x48
 8002b54:	7023      	strb	r3, [r4, #0]
}
 8002b56:	bd70      	pop	{r4, r5, r6, pc}
 8002b58:	20001ce4 	.word	0x20001ce4

08002b5c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
{
 8002b5c:	b510      	push	{r4, lr}
    return HAL::beginFrame();
 8002b5e:	f004 fd91 	bl	8007684 <_ZN8touchgfx3HAL10beginFrameEv>
}
 8002b62:	bd10      	pop	{r4, pc}

08002b64 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
 8002b64:	b510      	push	{r4, lr}
 8002b66:	0004      	movs	r4, r0
    PartialFrameBufferManager::transmitRemainingBlocks();
 8002b68:	f004 fc76 	bl	8007458 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv>
    HAL::endFrame();
 8002b6c:	0020      	movs	r0, r4
 8002b6e:	f004 fd95 	bl	800769c <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 8002b72:	f7ff fd7b 	bl	800266c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8002b76:	bd10      	pop	{r4, pc}

08002b78 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8002b78:	b510      	push	{r4, lr}
    HAL::flushFrameBuffer(rect);
 8002b7a:	f004 fd3c 	bl	80075f6 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Try transmitting a block
    PartialFrameBufferManager::tryTransmitBlock();
 8002b7e:	f004 fcaf 	bl	80074e0 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv>
}
 8002b82:	bd10      	pop	{r4, pc}

08002b84 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8002b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b86:	0004      	movs	r4, r0
    // If requested address is addressable use TouchGFXDataReader to retrive the data
    if (reader != NULL && (static_cast<TouchGFXDataReader*>(reader)->addressIsAddressable(src) == false))
 8002b88:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
{
 8002b8a:	000e      	movs	r6, r1
 8002b8c:	0015      	movs	r5, r2
 8002b8e:	001f      	movs	r7, r3
    if (reader != NULL && (static_cast<TouchGFXDataReader*>(reader)->addressIsAddressable(src) == false))
 8002b90:	2800      	cmp	r0, #0
 8002b92:	d00e      	beq.n	8002bb2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm+0x2e>
 8002b94:	6803      	ldr	r3, [r0, #0]
 8002b96:	0011      	movs	r1, r2
 8002b98:	689b      	ldr	r3, [r3, #8]
 8002b9a:	4798      	blx	r3
 8002b9c:	2800      	cmp	r0, #0
 8002b9e:	d108      	bne.n	8002bb2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm+0x2e>
    {
        static_cast<TouchGFXDataReader*>(reader)->copyData(src, dest, numBytes);
 8002ba0:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 8002ba2:	0032      	movs	r2, r6
 8002ba4:	6803      	ldr	r3, [r0, #0]
 8002ba6:	0029      	movs	r1, r5
 8002ba8:	68dc      	ldr	r4, [r3, #12]
 8002baa:	003b      	movs	r3, r7
 8002bac:	47a0      	blx	r4
        return true;
 8002bae:	2001      	movs	r0, #1
    }
    return HAL::blockCopy(dest, src, numBytes);
}
 8002bb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL::blockCopy(dest, src, numBytes);
 8002bb2:	003b      	movs	r3, r7
 8002bb4:	002a      	movs	r2, r5
 8002bb6:	0031      	movs	r1, r6
 8002bb8:	0020      	movs	r0, r4
 8002bba:	f004 feb0 	bl	800791e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8002bbe:	e7f7      	b.n	8002bb0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm+0x2c>

08002bc0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED0Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 8002bc0:	b510      	push	{r4, lr}
 8002bc2:	0004      	movs	r4, r0
 8002bc4:	4902      	ldr	r1, [pc, #8]	@ (8002bd0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED0Ev+0x10>)
 8002bc6:	f00e ff9e 	bl	8011b06 <_ZdlPvj>
 8002bca:	0020      	movs	r0, r4
 8002bcc:	bd10      	pop	{r4, pc}
 8002bce:	46c0      	nop			@ (mov r8, r8)
 8002bd0:	00001828 	.word	0x00001828

08002bd4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv>:
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
    {
        assert(state[sendingBlock] == SENDING);
 8002bd4:	23c1      	movs	r3, #193	@ 0xc1
 8002bd6:	015b      	lsls	r3, r3, #5
 8002bd8:	58c3      	ldr	r3, [r0, r3]
    virtual void freeBlockAfterTransfer()
 8002bda:	b510      	push	{r4, lr}
        assert(state[sendingBlock] == SENDING);
 8002bdc:	18c0      	adds	r0, r0, r3
 8002bde:	7903      	ldrb	r3, [r0, #4]
 8002be0:	2b03      	cmp	r3, #3
 8002be2:	d005      	beq.n	8002bf0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x1c>
 8002be4:	21ff      	movs	r1, #255	@ 0xff
 8002be6:	4b04      	ldr	r3, [pc, #16]	@ (8002bf8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x24>)
 8002be8:	4a04      	ldr	r2, [pc, #16]	@ (8002bfc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x28>)
 8002bea:	4805      	ldr	r0, [pc, #20]	@ (8002c00 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x2c>)
 8002bec:	f00f fdb8 	bl	8012760 <__assert_func>
        state[sendingBlock] = EMPTY;
 8002bf0:	2300      	movs	r3, #0
 8002bf2:	7103      	strb	r3, [r0, #4]
    }
 8002bf4:	bd10      	pop	{r4, pc}
 8002bf6:	46c0      	nop			@ (mov r8, r8)
 8002bf8:	08013e5c 	.word	0x08013e5c
 8002bfc:	08013e7b 	.word	0x08013e7b
 8002c00:	08013f4a 	.word	0x08013f4a

08002c04 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv>:
        int nextSendingBlock = sendingBlock + 1;
 8002c04:	23c1      	movs	r3, #193	@ 0xc1
 8002c06:	015b      	lsls	r3, r3, #5
 8002c08:	58c2      	ldr	r2, [r0, r3]
    virtual const Rect& peekBlockForTransfer()
 8002c0a:	b510      	push	{r4, lr}
        int nextSendingBlock = sendingBlock + 1;
 8002c0c:	1c53      	adds	r3, r2, #1
        if (nextSendingBlock == blocks)
 8002c0e:	2a02      	cmp	r2, #2
 8002c10:	d100      	bne.n	8002c14 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x10>
            nextSendingBlock = 0;
 8002c12:	2300      	movs	r3, #0
        assert(state[nextSendingBlock] == DRAWN);
 8002c14:	18c2      	adds	r2, r0, r3
 8002c16:	7912      	ldrb	r2, [r2, #4]
 8002c18:	2a02      	cmp	r2, #2
 8002c1a:	d005      	beq.n	8002c28 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x24>
 8002c1c:	21ea      	movs	r1, #234	@ 0xea
 8002c1e:	4b05      	ldr	r3, [pc, #20]	@ (8002c34 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x30>)
 8002c20:	4a05      	ldr	r2, [pc, #20]	@ (8002c38 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x34>)
 8002c22:	4806      	ldr	r0, [pc, #24]	@ (8002c3c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x38>)
 8002c24:	f00f fd9c 	bl	8012760 <__assert_func>
        return blockRect[nextSendingBlock];
 8002c28:	4a05      	ldr	r2, [pc, #20]	@ (8002c40 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x3c>)
 8002c2a:	189b      	adds	r3, r3, r2
 8002c2c:	00db      	lsls	r3, r3, #3
 8002c2e:	18c0      	adds	r0, r0, r3
    }
 8002c30:	bd10      	pop	{r4, pc}
 8002c32:	46c0      	nop			@ (mov r8, r8)
 8002c34:	08013fa0 	.word	0x08013fa0
 8002c38:	08013fc1 	.word	0x08013fc1
 8002c3c:	08013f4a 	.word	0x08013f4a
 8002c40:	00000301 	.word	0x00000301

08002c44 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
        sendingBlock++;
 8002c44:	23c1      	movs	r3, #193	@ 0xc1
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 8002c46:	b570      	push	{r4, r5, r6, lr}
 8002c48:	0004      	movs	r4, r0
        sendingBlock++;
 8002c4a:	015b      	lsls	r3, r3, #5
 8002c4c:	58e2      	ldr	r2, [r4, r3]
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 8002c4e:	0008      	movs	r0, r1
        sendingBlock++;
 8002c50:	1c55      	adds	r5, r2, #1
        if (sendingBlock == blocks)
 8002c52:	2a02      	cmp	r2, #2
 8002c54:	d100      	bne.n	8002c58 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x14>
            sendingBlock = 0;
 8002c56:	2500      	movs	r5, #0
 8002c58:	50e5      	str	r5, [r4, r3]
        assert(state[sendingBlock] == DRAWN);
 8002c5a:	1966      	adds	r6, r4, r5
 8002c5c:	7933      	ldrb	r3, [r6, #4]
 8002c5e:	2b02      	cmp	r3, #2
 8002c60:	d005      	beq.n	8002c6e <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x2a>
 8002c62:	21dd      	movs	r1, #221	@ 0xdd
 8002c64:	4b08      	ldr	r3, [pc, #32]	@ (8002c88 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x44>)
 8002c66:	4a09      	ldr	r2, [pc, #36]	@ (8002c8c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x48>)
 8002c68:	4809      	ldr	r0, [pc, #36]	@ (8002c90 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x4c>)
 8002c6a:	f00f fd79 	bl	8012760 <__assert_func>
        rect = blockRect[sendingBlock];
 8002c6e:	4b09      	ldr	r3, [pc, #36]	@ (8002c94 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x50>)
 8002c70:	2208      	movs	r2, #8
 8002c72:	18eb      	adds	r3, r5, r3
 8002c74:	00db      	lsls	r3, r3, #3
 8002c76:	18e1      	adds	r1, r4, r3
 8002c78:	f010 f87d 	bl	8012d76 <memcpy>
        state[sendingBlock] = SENDING;
 8002c7c:	2303      	movs	r3, #3
        return (const uint8_t*)&memory[sendingBlock][0];
 8002c7e:	02ed      	lsls	r5, r5, #11
 8002c80:	3508      	adds	r5, #8
 8002c82:	1960      	adds	r0, r4, r5
        state[sendingBlock] = SENDING;
 8002c84:	7133      	strb	r3, [r6, #4]
    }
 8002c86:	bd70      	pop	{r4, r5, r6, pc}
 8002c88:	0801409f 	.word	0x0801409f
 8002c8c:	080140bc 	.word	0x080140bc
 8002c90:	08013f4a 	.word	0x08013f4a
 8002c94:	00000301 	.word	0x00000301

08002c98 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh>:
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8002c98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        drawingBlock++;
 8002c9a:	4e18      	ldr	r6, [pc, #96]	@ (8002cfc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x64>)
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8002c9c:	ac06      	add	r4, sp, #24
        drawingBlock++;
 8002c9e:	5987      	ldr	r7, [r0, r6]
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8002ca0:	8825      	ldrh	r5, [r4, #0]
        drawingBlock++;
 8002ca2:	1c7c      	adds	r4, r7, #1
        if (drawingBlock == blocks)
 8002ca4:	2f02      	cmp	r7, #2
 8002ca6:	d100      	bne.n	8002caa <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x12>
            drawingBlock = 0;
 8002ca8:	2400      	movs	r4, #0
 8002caa:	5184      	str	r4, [r0, r6]
        while (state[drawingBlock] != EMPTY)
 8002cac:	1906      	adds	r6, r0, r4
 8002cae:	7937      	ldrb	r7, [r6, #4]
 8002cb0:	2f00      	cmp	r7, #0
 8002cb2:	d1fc      	bne.n	8002cae <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x16>
        assert(state[drawingBlock] == EMPTY);
 8002cb4:	7937      	ldrb	r7, [r6, #4]
 8002cb6:	2f00      	cmp	r7, #0
 8002cb8:	d005      	beq.n	8002cc6 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x2e>
 8002cba:	21aa      	movs	r1, #170	@ 0xaa
 8002cbc:	4b10      	ldr	r3, [pc, #64]	@ (8002d00 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x68>)
 8002cbe:	4a11      	ldr	r2, [pc, #68]	@ (8002d04 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x6c>)
 8002cc0:	4811      	ldr	r0, [pc, #68]	@ (8002d08 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x70>)
 8002cc2:	f00f fd4d 	bl	8012760 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 8002cc6:	2701      	movs	r7, #1
 8002cc8:	7137      	strb	r7, [r6, #4]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8002cca:	02e6      	lsls	r6, r4, #11
 8002ccc:	3608      	adds	r6, #8
 8002cce:	00e4      	lsls	r4, r4, #3
 8002cd0:	1904      	adds	r4, r0, r4
 8002cd2:	1986      	adds	r6, r0, r6
 8002cd4:	9f07      	ldr	r7, [sp, #28]
        blockRect[drawingBlock].x = x;
 8002cd6:	480d      	ldr	r0, [pc, #52]	@ (8002d0c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x74>)
        *block = (uint8_t*)&memory[drawingBlock][0];
 8002cd8:	603e      	str	r6, [r7, #0]
        blockRect[drawingBlock].x = x;
 8002cda:	5221      	strh	r1, [r4, r0]
        const int32_t lines = block_size / stride;
 8002cdc:	2080      	movs	r0, #128	@ 0x80
        blockRect[drawingBlock].y = y;
 8002cde:	490c      	ldr	r1, [pc, #48]	@ (8002d10 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x78>)
        const int32_t lines = block_size / stride;
 8002ce0:	0100      	lsls	r0, r0, #4
        blockRect[drawingBlock].y = y;
 8002ce2:	5262      	strh	r2, [r4, r1]
        blockRect[drawingBlock].width = width;
 8002ce4:	4a0b      	ldr	r2, [pc, #44]	@ (8002d14 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x7c>)
        const int32_t stride = width * bytes_pr_pixel;
 8002ce6:	0059      	lsls	r1, r3, #1
        blockRect[drawingBlock].width = width;
 8002ce8:	52a3      	strh	r3, [r4, r2]
        const int32_t lines = block_size / stride;
 8002cea:	f7fd fa3b 	bl	8000164 <__udivsi3>
        blockRect[drawingBlock].height = MIN(height, lines);
 8002cee:	42a8      	cmp	r0, r5
 8002cf0:	dd00      	ble.n	8002cf4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x5c>
 8002cf2:	0028      	movs	r0, r5
 8002cf4:	4b08      	ldr	r3, [pc, #32]	@ (8002d18 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x80>)
 8002cf6:	52e0      	strh	r0, [r4, r3]
        return blockRect[drawingBlock].height;
 8002cf8:	b280      	uxth	r0, r0
    }
 8002cfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002cfc:	00001824 	.word	0x00001824
 8002d00:	080141ba 	.word	0x080141ba
 8002d04:	080141d7 	.word	0x080141d7
 8002d08:	08013f4a 	.word	0x08013f4a
 8002d0c:	00001808 	.word	0x00001808
 8002d10:	0000180a 	.word	0x0000180a
 8002d14:	0000180c 	.word	0x0000180c
 8002d18:	0000180e 	.word	0x0000180e

08002d1c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv>:
        assert(state[drawingBlock] == ALLOCATED);
 8002d1c:	4b07      	ldr	r3, [pc, #28]	@ (8002d3c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x20>)
    virtual void markBlockReadyForTransfer()
 8002d1e:	b510      	push	{r4, lr}
        assert(state[drawingBlock] == ALLOCATED);
 8002d20:	58c3      	ldr	r3, [r0, r3]
 8002d22:	18c0      	adds	r0, r0, r3
 8002d24:	7903      	ldrb	r3, [r0, #4]
 8002d26:	2b01      	cmp	r3, #1
 8002d28:	d005      	beq.n	8002d36 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x1a>
 8002d2a:	21b9      	movs	r1, #185	@ 0xb9
 8002d2c:	4b04      	ldr	r3, [pc, #16]	@ (8002d40 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x24>)
 8002d2e:	4a05      	ldr	r2, [pc, #20]	@ (8002d44 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x28>)
 8002d30:	4805      	ldr	r0, [pc, #20]	@ (8002d48 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x2c>)
 8002d32:	f00f fd15 	bl	8012760 <__assert_func>
        state[drawingBlock] = DRAWN;
 8002d36:	2302      	movs	r3, #2
 8002d38:	7103      	strb	r3, [r0, #4]
    }
 8002d3a:	bd10      	pop	{r4, pc}
 8002d3c:	00001824 	.word	0x00001824
 8002d40:	0801430a 	.word	0x0801430a
 8002d44:	0801432b 	.word	0x0801432b
 8002d48:	08013f4a 	.word	0x08013f4a

08002d4c <_ZN8touchgfx14transmitActiveEv>:

/**
 * Check if a Frame Buffer Block is beeing transmitted.
 */
int transmitActive()
{
 8002d4c:	b510      	push	{r4, lr}
    return touchgfxDisplayDriverTransmitActive();
 8002d4e:	f7fe fea5 	bl	8001a9c <touchgfxDisplayDriverTransmitActive>
}
 8002d52:	bd10      	pop	{r4, pc}

08002d54 <_ZN8touchgfx19shouldTransferBlockEt>:

/**
 * Check if a Frame Buffer Block ending at bottom should be transferred.
 */
int shouldTransferBlock(uint16_t bottom)
{
 8002d54:	b510      	push	{r4, lr}
    return touchgfxDisplayDriverShouldTransferBlock(bottom);
 8002d56:	f7fe fefb 	bl	8001b50 <touchgfxDisplayDriverShouldTransferBlock>
}
 8002d5a:	bd10      	pop	{r4, pc}

08002d5c <_ZN8touchgfx13transmitBlockEPKhtttt>:

/**
 * Transmit a Frame Buffer Block.
 */
void transmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 8002d5c:	b513      	push	{r0, r1, r4, lr}
 8002d5e:	ac04      	add	r4, sp, #16
 8002d60:	8824      	ldrh	r4, [r4, #0]
    touchgfxDisplayDriverTransmitBlock(pixels, x, y, w, h);
 8002d62:	9400      	str	r4, [sp, #0]
 8002d64:	f7fe fea0 	bl	8001aa8 <touchgfxDisplayDriverTransmitBlock>
}
 8002d68:	bd13      	pop	{r0, r1, r4, pc}

08002d6a <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8002d6a:	b510      	push	{r4, lr}
    // After completed transmission start new transfer if blocks are ready.
    PartialFrameBufferManager::tryTransmitBlockFromIRQ();
 8002d6c:	f004 fc00 	bl	8007570 <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv>
}
 8002d70:	bd10      	pop	{r4, pc}
	...

08002d74 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8002d74:	b510      	push	{r4, lr}
        return instance;
 8002d76:	4b04      	ldr	r3, [pc, #16]	@ (8002d88 <touchgfxSignalVSync+0x14>)
 8002d78:	681b      	ldr	r3, [r3, #0]
        vSyncCnt++;
 8002d7a:	336a      	adds	r3, #106	@ 0x6a
 8002d7c:	781a      	ldrb	r2, [r3, #0]
 8002d7e:	3201      	adds	r2, #1
 8002d80:	701a      	strb	r2, [r3, #0]
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 8002d82:	f7ff fc6d 	bl	8002660 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8002d86:	bd10      	pop	{r4, pc}
 8002d88:	20003578 	.word	0x20003578

08002d8c <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
    {
 8002d8c:	2103      	movs	r1, #3
 8002d8e:	2000      	movs	r0, #0
 8002d90:	4a0b      	ldr	r2, [pc, #44]	@ (8002dc0 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh+0x34>)
 8002d92:	4b0c      	ldr	r3, [pc, #48]	@ (8002dc4 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh+0x38>)
 8002d94:	b510      	push	{r4, lr}
 8002d96:	601a      	str	r2, [r3, #0]
 8002d98:	4a0b      	ldr	r2, [pc, #44]	@ (8002dc8 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh+0x3c>)
 8002d9a:	3901      	subs	r1, #1
 8002d9c:	8010      	strh	r0, [r2, #0]
 8002d9e:	8050      	strh	r0, [r2, #2]
 8002da0:	8090      	strh	r0, [r2, #4]
 8002da2:	80d0      	strh	r0, [r2, #6]
 8002da4:	3208      	adds	r2, #8
 8002da6:	2900      	cmp	r1, #0
 8002da8:	d1f7      	bne.n	8002d9a <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh+0xe>
        sendingBlock = -1;
 8002daa:	2201      	movs	r2, #1
 8002dac:	24c1      	movs	r4, #193	@ 0xc1
 8002dae:	4252      	negs	r2, r2
 8002db0:	0164      	lsls	r4, r4, #5
 8002db2:	511a      	str	r2, [r3, r4]
        drawingBlock = -1;
 8002db4:	4c05      	ldr	r4, [pc, #20]	@ (8002dcc <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh+0x40>)
            state[i] = EMPTY;
 8002db6:	7118      	strb	r0, [r3, #4]
        drawingBlock = -1;
 8002db8:	511a      	str	r2, [r3, r4]
            state[i] = EMPTY;
 8002dba:	7159      	strb	r1, [r3, #5]
 8002dbc:	7199      	strb	r1, [r3, #6]
 8002dbe:	bd10      	pop	{r4, pc}
 8002dc0:	08014408 	.word	0x08014408
 8002dc4:	20001ce4 	.word	0x20001ce4
 8002dc8:	200034ec 	.word	0x200034ec
 8002dcc:	00001824 	.word	0x00001824

08002dd0 <_ZN23ApplicationFontProviderD1Ev>:
class ApplicationFontProvider : public touchgfx::FontProvider
 8002dd0:	4770      	bx	lr

08002dd2 <_ZN23ApplicationFontProviderD0Ev>:
 8002dd2:	b510      	push	{r4, lr}
 8002dd4:	0004      	movs	r4, r0
 8002dd6:	2104      	movs	r1, #4
 8002dd8:	f00e fe95 	bl	8011b06 <_ZdlPvj>
 8002ddc:	0020      	movs	r0, r4
 8002dde:	bd10      	pop	{r4, pc}

08002de0 <_ZN23ApplicationFontProvider7getFontEt>:
    {
    case Typography::LARGE:
        // NotoSans_Regular_34_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    default:
        return 0;
 8002de0:	2000      	movs	r0, #0
{
 8002de2:	b510      	push	{r4, lr}
    switch (typography)
 8002de4:	4281      	cmp	r1, r0
 8002de6:	d102      	bne.n	8002dee <_ZN23ApplicationFontProvider7getFontEt+0xe>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002de8:	f001 fbc4 	bl	8004574 <_ZN17TypedTextDatabase8getFontsEv>
 8002dec:	6800      	ldr	r0, [r0, #0]
    }
}
 8002dee:	bd10      	pop	{r4, pc}

08002df0 <_ZN14BitmapDatabase11getInstanceEv>:

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
 8002df0:	4800      	ldr	r0, [pc, #0]	@ (8002df4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
}
 8002df2:	4770      	bx	lr
 8002df4:	08014440 	.word	0x08014440

08002df8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002df8:	201d      	movs	r0, #29
 8002dfa:	4770      	bx	lr

08002dfc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002dfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002dfe:	2200      	movs	r2, #0
 8002e00:	0004      	movs	r4, r0
    {
        if (unicode == 0)
        {
            return 0;
 8002e02:	0008      	movs	r0, r1
        if (unicode == 0)
 8002e04:	4291      	cmp	r1, r2
 8002e06:	d008      	beq.n	8002e1a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8002e08:	466b      	mov	r3, sp
        const uint8_t* dummyPixelDataPointer = 0;
 8002e0a:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002e0c:	70da      	strb	r2, [r3, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002e0e:	6822      	ldr	r2, [r4, #0]
        uint8_t bitsPerPixelDummy = 0;
 8002e10:	3303      	adds	r3, #3
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002e12:	6895      	ldr	r5, [r2, #8]
 8002e14:	0020      	movs	r0, r4
 8002e16:	aa01      	add	r2, sp, #4
 8002e18:	47a8      	blx	r5
        return glyph;
    }
 8002e1a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08002e1c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
 8002e1c:	89c0      	ldrh	r0, [r0, #14]
    }
 8002e1e:	4770      	bx	lr

08002e20 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
 8002e20:	8a00      	ldrh	r0, [r0, #16]
    }
 8002e22:	4770      	bx	lr

08002e24 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
 8002e24:	88c0      	ldrh	r0, [r0, #6]
    }
 8002e26:	4770      	bx	lr

08002e28 <_ZNK8touchgfx4Font9getHeightEv>:
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
 8002e28:	8880      	ldrh	r0, [r0, #4]
    }
 8002e2a:	4770      	bx	lr

08002e2c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002e2c:	7a80      	ldrb	r0, [r0, #10]
 8002e2e:	0640      	lsls	r0, r0, #25
 8002e30:	0e40      	lsrs	r0, r0, #25
    }
 8002e32:	4770      	bx	lr

08002e34 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002e34:	7a80      	ldrb	r0, [r0, #10]
 8002e36:	09c0      	lsrs	r0, r0, #7
    }
 8002e38:	4770      	bx	lr

08002e3a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002e3a:	2000      	movs	r0, #0
 8002e3c:	4770      	bx	lr

08002e3e <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002e3e:	2000      	movs	r0, #0
 8002e40:	4770      	bx	lr

08002e42 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002e42:	2000      	movs	r0, #0
 8002e44:	4770      	bx	lr

08002e46 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002e46:	8081      	strh	r1, [r0, #4]
    }
 8002e48:	4770      	bx	lr

08002e4a <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002e4a:	80c1      	strh	r1, [r0, #6]
    }
 8002e4c:	4770      	bx	lr

08002e4e <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002e4e:	8101      	strh	r1, [r0, #8]
    }
 8002e50:	4770      	bx	lr

08002e52 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002e52:	8141      	strh	r1, [r0, #10]
    }
 8002e54:	4770      	bx	lr

08002e56 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002e56:	4770      	bx	lr

08002e58 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002e58:	4770      	bx	lr

08002e5a <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002e5a:	4770      	bx	lr

08002e5c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002e5c:	4770      	bx	lr

08002e5e <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002e5e:	4770      	bx	lr

08002e60 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 8002e60:	88c3      	ldrh	r3, [r0, #6]
    virtual void moveTo(int16_t x, int16_t y)
 8002e62:	b510      	push	{r4, lr}
        moveRelative(x - rect.x, y - rect.y);
 8002e64:	1ad2      	subs	r2, r2, r3
 8002e66:	8883      	ldrh	r3, [r0, #4]
 8002e68:	b212      	sxth	r2, r2
 8002e6a:	1ac9      	subs	r1, r1, r3
 8002e6c:	6803      	ldr	r3, [r0, #0]
 8002e6e:	b209      	sxth	r1, r1
 8002e70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002e72:	4798      	blx	r3
    }
 8002e74:	bd10      	pop	{r4, pc}

08002e76 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002e76:	2301      	movs	r3, #1
 8002e78:	425b      	negs	r3, r3
 8002e7a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002e7c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002e7e:	6813      	ldr	r3, [r2, #0]
 8002e80:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002e82:	6010      	str	r0, [r2, #0]
    }
 8002e84:	4770      	bx	lr

08002e86 <_ZN8touchgfx9Container13getFirstChildEv>:
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
 8002e86:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    }
 8002e88:	4770      	bx	lr

08002e8a <_ZN18CircleAnimatorBaseD1Ev>:
}

CircleAnimatorBase::~CircleAnimatorBase()
{

}
 8002e8a:	4770      	bx	lr

08002e8c <_ZN18CircleAnimatorBase10initializeEv>:

void CircleAnimatorBase::initialize()
{

}
 8002e8c:	4770      	bx	lr

08002e8e <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEED1Ev>:
 * 'uint8_t getAlpha()' method.
 *
 * @tparam T specifies the type to extend with the FadeAnimator behavior.
 */
template <class T>
class FadeAnimator : public T
 8002e8e:	4770      	bx	lr

08002e90 <_ZN8touchgfx12FadeAnimatorINS_5ImageEED1Ev>:
 8002e90:	4770      	bx	lr

08002e92 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 8002e92:	8581      	strh	r1, [r0, #44]	@ 0x2c
    }
 8002e94:	4770      	bx	lr

08002e96 <_ZNK8touchgfx12MoveAnimatorINS_5ImageEE21getMoveAnimationDelayEv>:
     *
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
 8002e96:	8d80      	ldrh	r0, [r0, #44]	@ 0x2c
    }
 8002e98:	4770      	bx	lr

08002e9a <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE21setFadeAnimationDelayEt>:
     *
     * @see getFadeAnimationDelay
     */
    virtual void setFadeAnimationDelay(uint16_t delay)
    {
        fadeAnimationDelay = delay;
 8002e9a:	3048      	adds	r0, #72	@ 0x48
 8002e9c:	8001      	strh	r1, [r0, #0]
    }
 8002e9e:	4770      	bx	lr

08002ea0 <_ZNK8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE21getFadeAnimationDelayEv>:
     *
     * @see setFadeAnimationDelay
     */
    virtual uint16_t getFadeAnimationDelay() const
    {
        return fadeAnimationDelay;
 8002ea0:	3048      	adds	r0, #72	@ 0x48
 8002ea2:	8800      	ldrh	r0, [r0, #0]
    }
 8002ea4:	4770      	bx	lr

08002ea6 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE21setFadeAnimationDelayEt>:
        fadeAnimationDelay = delay;
 8002ea6:	8581      	strh	r1, [r0, #44]	@ 0x2c
    }
 8002ea8:	4770      	bx	lr

08002eaa <_ZNK8touchgfx12FadeAnimatorINS_5ImageEE21getFadeAnimationDelayEv>:
        return fadeAnimationDelay;
 8002eaa:	8d80      	ldrh	r0, [r0, #44]	@ 0x2c
    }
 8002eac:	4770      	bx	lr

08002eae <_ZN8touchgfx12FadeAnimatorINS_5ImageEED0Ev>:
class FadeAnimator : public T
 8002eae:	b510      	push	{r4, lr}
 8002eb0:	0004      	movs	r4, r0
 8002eb2:	213c      	movs	r1, #60	@ 0x3c
 8002eb4:	f00e fe27 	bl	8011b06 <_ZdlPvj>
 8002eb8:	0020      	movs	r0, r4
 8002eba:	bd10      	pop	{r4, pc}

08002ebc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEED0Ev>:
 8002ebc:	b510      	push	{r4, lr}
 8002ebe:	0004      	movs	r4, r0
 8002ec0:	2158      	movs	r1, #88	@ 0x58
 8002ec2:	f00e fe20 	bl	8011b06 <_ZdlPvj>
 8002ec6:	0020      	movs	r0, r4
 8002ec8:	bd10      	pop	{r4, pc}

08002eca <_ZN18CircleAnimatorBaseD0Ev>:
}
 8002eca:	21ca      	movs	r1, #202	@ 0xca
CircleAnimatorBase::~CircleAnimatorBase()
 8002ecc:	b510      	push	{r4, lr}
 8002ece:	0004      	movs	r4, r0
}
 8002ed0:	0089      	lsls	r1, r1, #2
 8002ed2:	f00e fe18 	bl	8011b06 <_ZdlPvj>
 8002ed6:	0020      	movs	r0, r4
 8002ed8:	bd10      	pop	{r4, pc}

08002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>:
    virtual void invalidateContent() const
 8002eda:	b510      	push	{r4, lr}
        if (visible)
 8002edc:	1d83      	adds	r3, r0, #6
 8002ede:	7fdb      	ldrb	r3, [r3, #31]
 8002ee0:	2b00      	cmp	r3, #0
 8002ee2:	d002      	beq.n	8002eea <_ZNK8touchgfx8Drawable17invalidateContentEv+0x10>
            invalidate();
 8002ee4:	6803      	ldr	r3, [r0, #0]
 8002ee6:	695b      	ldr	r3, [r3, #20]
 8002ee8:	4798      	blx	r3
    }
 8002eea:	bd10      	pop	{r4, pc}

08002eec <_ZNK8touchgfx5Image17invalidateContentEv>:

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
    {
        if (alpha > 0)
 8002eec:	0003      	movs	r3, r0
    virtual void invalidateContent() const
 8002eee:	b510      	push	{r4, lr}
        if (alpha > 0)
 8002ef0:	3328      	adds	r3, #40	@ 0x28
 8002ef2:	781b      	ldrb	r3, [r3, #0]
 8002ef4:	2b00      	cmp	r3, #0
 8002ef6:	d001      	beq.n	8002efc <_ZNK8touchgfx5Image17invalidateContentEv+0x10>
        {
            Widget::invalidateContent();
 8002ef8:	f7ff ffef 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 8002efc:	bd10      	pop	{r4, pc}

08002efe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
        return visible;
 8002efe:	1d82      	adds	r2, r0, #6
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002f00:	7fd2      	ldrb	r2, [r2, #31]
 8002f02:	2a00      	cmp	r2, #0
 8002f04:	d004      	beq.n	8002f10 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x12>
        return touchable;
 8002f06:	1d42      	adds	r2, r0, #5
 8002f08:	7fd2      	ldrb	r2, [r2, #31]
 8002f0a:	2a00      	cmp	r2, #0
 8002f0c:	d000      	beq.n	8002f10 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x12>
        {
            *last = this;
 8002f0e:	6018      	str	r0, [r3, #0]
        }
    }
 8002f10:	4770      	bx	lr

08002f12 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv>:
            fadeAnimationRunning = false;
        }
    }

    /** @copydoc Drawable::handleTickEvent */
    virtual void handleTickEvent()
 8002f12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

protected:
    /** Execute next step in fade animation and stop the timer if necessary. */
    void nextFadeAnimationStep()
    {
        if (fadeAnimationRunning)
 8002f14:	0006      	movs	r6, r0
 8002f16:	3629      	adds	r6, #41	@ 0x29
 8002f18:	7833      	ldrb	r3, [r6, #0]
    virtual void handleTickEvent()
 8002f1a:	0004      	movs	r4, r0
        if (fadeAnimationRunning)
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d03a      	beq.n	8002f96 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x84>
        {
            fadeAnimationCounter++;
 8002f20:	8d41      	ldrh	r1, [r0, #42]	@ 0x2a
 8002f22:	3101      	adds	r1, #1
 8002f24:	b289      	uxth	r1, r1
 8002f26:	8541      	strh	r1, [r0, #42]	@ 0x2a
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8002f28:	8d80      	ldrh	r0, [r0, #44]	@ 0x2c
 8002f2a:	4281      	cmp	r1, r0
 8002f2c:	d333      	bcc.n	8002f96 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x84>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;

                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8002f2e:	8e25      	ldrh	r5, [r4, #48]	@ 0x30
 8002f30:	8e62      	ldrh	r2, [r4, #50]	@ 0x32
 8002f32:	1a08      	subs	r0, r1, r0
 8002f34:	1b52      	subs	r2, r2, r5
 8002f36:	8de3      	ldrh	r3, [r4, #46]	@ 0x2e
 8002f38:	6b67      	ldr	r7, [r4, #52]	@ 0x34
 8002f3a:	b212      	sxth	r2, r2
 8002f3c:	2100      	movs	r1, #0
 8002f3e:	b280      	uxth	r0, r0
 8002f40:	47b8      	blx	r7
        return alpha;
 8002f42:	0027      	movs	r7, r4
 8002f44:	3728      	adds	r7, #40	@ 0x28
 8002f46:	182d      	adds	r5, r5, r0

                if (T::getAlpha() != newAlpha)
 8002f48:	783a      	ldrb	r2, [r7, #0]
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8002f4a:	b2ab      	uxth	r3, r5
 8002f4c:	b22d      	sxth	r5, r5
                if (T::getAlpha() != newAlpha)
 8002f4e:	42aa      	cmp	r2, r5
 8002f50:	d005      	beq.n	8002f5e <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x4c>
                {
                    if (newAlpha == 0)
 8002f52:	2d00      	cmp	r5, #0
 8002f54:	d120      	bne.n	8002f98 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x86>
                    {
                        // InvalidateContent before it becomes invisible
                        T::invalidateContent();
 8002f56:	0020      	movs	r0, r4
 8002f58:	f7ff ffc8 	bl	8002eec <_ZNK8touchgfx5Image17invalidateContentEv>
        alpha = newAlpha;
 8002f5c:	703d      	strb	r5, [r7, #0]
                        T::setAlpha((uint8_t)newAlpha);
                        T::invalidateContent();
                    }
                }

                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8002f5e:	8da3      	ldrh	r3, [r4, #44]	@ 0x2c
 8002f60:	8de1      	ldrh	r1, [r4, #46]	@ 0x2e
 8002f62:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8002f64:	185b      	adds	r3, r3, r1
 8002f66:	429a      	cmp	r2, r3
 8002f68:	d315      	bcc.n	8002f96 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x84>
                {
                    // End of animation
                    fadeAnimationRunning = false;
 8002f6a:	2300      	movs	r3, #0
 8002f6c:	7033      	strb	r3, [r6, #0]
                    fadeAnimationDuration = 0;
 8002f6e:	85e3      	strh	r3, [r4, #46]	@ 0x2e
                    Application::getInstance()->unregisterTimerWidget(this);
 8002f70:	f008 f82c 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
     * @note If widget has been registered multiple times, an equal number of calls to unregister
     *       are required to stop widget from receiving tick events.
     */
    void unregisterTimerWidget(const Drawable* w)
    {
        timerWidgets.remove(w);
 8002f74:	0021      	movs	r1, r4
 8002f76:	3004      	adds	r0, #4
 8002f78:	f008 f84d 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>

                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8002f7c:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8002f7e:	2800      	cmp	r0, #0
 8002f80:	d009      	beq.n	8002f96 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x84>
 8002f82:	6803      	ldr	r3, [r0, #0]
 8002f84:	68db      	ldr	r3, [r3, #12]
 8002f86:	4798      	blx	r3
 8002f88:	2800      	cmp	r0, #0
 8002f8a:	d004      	beq.n	8002f96 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x84>
                    {
                        fadeAnimationEndedCallback->execute(*this);
 8002f8c:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8002f8e:	0021      	movs	r1, r4
 8002f90:	6803      	ldr	r3, [r0, #0]
 8002f92:	689b      	ldr	r3, [r3, #8]
 8002f94:	4798      	blx	r3
    }
 8002f96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                        T::invalidateContent();
 8002f98:	0020      	movs	r0, r4
 8002f9a:	703b      	strb	r3, [r7, #0]
 8002f9c:	f7ff ffa6 	bl	8002eec <_ZNK8touchgfx5Image17invalidateContentEv>
 8002fa0:	e7dd      	b.n	8002f5e <_ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv+0x4c>

08002fa2 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002fa2:	b570      	push	{r4, r5, r6, lr}
 8002fa4:	0004      	movs	r4, r0
 8002fa6:	0015      	movs	r5, r2
        setX(x);
 8002fa8:	6803      	ldr	r3, [r0, #0]
 8002faa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fac:	4798      	blx	r3
        setY(y);
 8002fae:	6823      	ldr	r3, [r4, #0]
 8002fb0:	0029      	movs	r1, r5
 8002fb2:	0020      	movs	r0, r4
 8002fb4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002fb6:	4798      	blx	r3
    }
 8002fb8:	bd70      	pop	{r4, r5, r6, pc}
	...

08002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8002fbc:	2300      	movs	r3, #0
    Image(const Bitmap& bmp = Bitmap())
 8002fbe:	b510      	push	{r4, lr}
 8002fc0:	6043      	str	r3, [r0, #4]
 8002fc2:	6083      	str	r3, [r0, #8]
 8002fc4:	60c3      	str	r3, [r0, #12]
 8002fc6:	6103      	str	r3, [r0, #16]
          cachedAbsX(0),
 8002fc8:	6203      	str	r3, [r0, #32]
          parent(0),
 8002fca:	6143      	str	r3, [r0, #20]
          nextSibling(0),
 8002fcc:	6183      	str	r3, [r0, #24]
          nextDrawChainElement(0),
 8002fce:	61c3      	str	r3, [r0, #28]
          touchable(false),
 8002fd0:	3301      	adds	r3, #1
 8002fd2:	33ff      	adds	r3, #255	@ 0xff
 8002fd4:	8483      	strh	r3, [r0, #36]	@ 0x24
        : Widget(), bitmap(bmp), alpha(255)
 8002fd6:	4b06      	ldr	r3, [pc, #24]	@ (8002ff0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 8002fd8:	22ff      	movs	r2, #255	@ 0xff
 8002fda:	6003      	str	r3, [r0, #0]
 8002fdc:	880b      	ldrh	r3, [r1, #0]
    Image(const Bitmap& bmp = Bitmap())
 8002fde:	0004      	movs	r4, r0
        : Widget(), bitmap(bmp), alpha(255)
 8002fe0:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8002fe2:	0003      	movs	r3, r0
 8002fe4:	3328      	adds	r3, #40	@ 0x28
 8002fe6:	701a      	strb	r2, [r3, #0]
        Image::setBitmap(bmp);
 8002fe8:	f005 fe73 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002fec:	0020      	movs	r0, r4
 8002fee:	bd10      	pop	{r4, pc}
 8002ff0:	0801596c 	.word	0x0801596c

08002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>:
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002ff4:	2301      	movs	r3, #1
    FadeAnimator()
 8002ff6:	b513      	push	{r0, r1, r4, lr}
 8002ff8:	0004      	movs	r4, r0
 8002ffa:	a901      	add	r1, sp, #4
 8002ffc:	425b      	negs	r3, r3
 8002ffe:	800b      	strh	r3, [r1, #0]
          moveAnimationEndedCallback(0)
 8003000:	f7ff ffdc 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          fadeAnimationEndedCallback(0)
 8003004:	4b0a      	ldr	r3, [pc, #40]	@ (8003030 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev+0x3c>)
          moveAnimationRunning(false),
 8003006:	0022      	movs	r2, r4
 8003008:	6023      	str	r3, [r4, #0]
 800300a:	2300      	movs	r3, #0
 800300c:	3229      	adds	r2, #41	@ 0x29
 800300e:	7013      	strb	r3, [r2, #0]
          moveAnimationCounter(0),
 8003010:	8563      	strh	r3, [r4, #42]	@ 0x2a
          moveAnimationDelay(0),
 8003012:	62e3      	str	r3, [r4, #44]	@ 0x2c
          moveAnimationStartX(0),
 8003014:	6323      	str	r3, [r4, #48]	@ 0x30
          moveAnimationEndX(0),
 8003016:	6363      	str	r3, [r4, #52]	@ 0x34
          moveAnimationXEquation(),
 8003018:	63a3      	str	r3, [r4, #56]	@ 0x38
          moveAnimationYEquation(),
 800301a:	63e3      	str	r3, [r4, #60]	@ 0x3c
          moveAnimationEndedCallback(0)
 800301c:	6423      	str	r3, [r4, #64]	@ 0x40
          fadeAnimationRunning(false),
 800301e:	321b      	adds	r2, #27
 8003020:	7013      	strb	r3, [r2, #0]
          fadeAnimationCounter(0),
 8003022:	8053      	strh	r3, [r2, #2]
    }
 8003024:	0020      	movs	r0, r4
          fadeAnimationDelay(0),
 8003026:	3204      	adds	r2, #4
 8003028:	8013      	strh	r3, [r2, #0]
          fadeAnimationEndedCallback(0)
 800302a:	6563      	str	r3, [r4, #84]	@ 0x54
    }
 800302c:	bd16      	pop	{r1, r2, r4, pc}
 800302e:	46c0      	nop			@ (mov r8, r8)
 8003030:	08014700 	.word	0x08014700

08003034 <_ZN18CircleAnimatorBaseC1Ev>:
 8003034:	2380      	movs	r3, #128	@ 0x80
 8003036:	005b      	lsls	r3, r3, #1
CircleAnimatorBase::CircleAnimatorBase()
 8003038:	b5f0      	push	{r4, r5, r6, r7, lr}
 800303a:	8483      	strh	r3, [r0, #36]	@ 0x24
 800303c:	4b7d      	ldr	r3, [pc, #500]	@ (8003234 <_ZN18CircleAnimatorBaseC1Ev+0x200>)
 800303e:	0007      	movs	r7, r0
 8003040:	6003      	str	r3, [r0, #0]
 8003042:	2301      	movs	r3, #1
 8003044:	2500      	movs	r5, #0
 8003046:	0004      	movs	r4, r0
 8003048:	b08b      	sub	sp, #44	@ 0x2c
 800304a:	ae09      	add	r6, sp, #36	@ 0x24
 800304c:	372c      	adds	r7, #44	@ 0x2c
 800304e:	425b      	negs	r3, r3
          fadeAnimationEndedCallback(0)
 8003050:	0031      	movs	r1, r6
 8003052:	6045      	str	r5, [r0, #4]
 8003054:	6085      	str	r5, [r0, #8]
 8003056:	60c5      	str	r5, [r0, #12]
 8003058:	6105      	str	r5, [r0, #16]
          parent(0),
 800305a:	6145      	str	r5, [r0, #20]
          nextSibling(0),
 800305c:	6185      	str	r5, [r0, #24]
          nextDrawChainElement(0),
 800305e:	61c5      	str	r5, [r0, #28]
          cachedAbsX(0),
 8003060:	6205      	str	r5, [r0, #32]
          firstChild(0)
 8003062:	6285      	str	r5, [r0, #40]	@ 0x28
 8003064:	8033      	strh	r3, [r6, #0]
 8003066:	0038      	movs	r0, r7
 8003068:	f7ff ffa8 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800306c:	4b72      	ldr	r3, [pc, #456]	@ (8003238 <_ZN18CircleAnimatorBaseC1Ev+0x204>)
 800306e:	62e3      	str	r3, [r4, #44]	@ 0x2c
          fadeAnimationRunning(false),
 8003070:	0023      	movs	r3, r4
 8003072:	3355      	adds	r3, #85	@ 0x55
 8003074:	701d      	strb	r5, [r3, #0]
          fadeAnimationCounter(0),
 8003076:	3301      	adds	r3, #1
 8003078:	801d      	strh	r5, [r3, #0]
          fadeAnimationDelay(0),
 800307a:	805d      	strh	r5, [r3, #2]
 800307c:	3312      	adds	r3, #18
 800307e:	0018      	movs	r0, r3
          fadeAnimationEndedCallback(0)
 8003080:	6665      	str	r5, [r4, #100]	@ 0x64
 8003082:	9300      	str	r3, [sp, #0]
 8003084:	f7ff ffb6 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 8003088:	0023      	movs	r3, r4
 800308a:	33c0      	adds	r3, #192	@ 0xc0
 800308c:	0018      	movs	r0, r3
 800308e:	9301      	str	r3, [sp, #4]
 8003090:	f7ff ffb0 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 8003094:	0023      	movs	r3, r4
 8003096:	3319      	adds	r3, #25
 8003098:	33ff      	adds	r3, #255	@ 0xff
 800309a:	0018      	movs	r0, r3
 800309c:	9302      	str	r3, [sp, #8]
 800309e:	f7ff ffa9 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 80030a2:	0023      	movs	r3, r4
 80030a4:	3371      	adds	r3, #113	@ 0x71
 80030a6:	33ff      	adds	r3, #255	@ 0xff
 80030a8:	0018      	movs	r0, r3
 80030aa:	9303      	str	r3, [sp, #12]
 80030ac:	f7ff ffa2 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 80030b0:	0023      	movs	r3, r4
 80030b2:	33c9      	adds	r3, #201	@ 0xc9
 80030b4:	33ff      	adds	r3, #255	@ 0xff
 80030b6:	0018      	movs	r0, r3
 80030b8:	9304      	str	r3, [sp, #16]
 80030ba:	f7ff ff9b 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 80030be:	2388      	movs	r3, #136	@ 0x88
 80030c0:	009b      	lsls	r3, r3, #2
 80030c2:	18e3      	adds	r3, r4, r3
 80030c4:	0018      	movs	r0, r3
 80030c6:	9305      	str	r3, [sp, #20]
 80030c8:	f7ff ff94 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 80030cc:	239e      	movs	r3, #158	@ 0x9e
 80030ce:	009b      	lsls	r3, r3, #2
 80030d0:	18e3      	adds	r3, r4, r3
 80030d2:	0018      	movs	r0, r3
 80030d4:	9306      	str	r3, [sp, #24]
 80030d6:	f7ff ff8d 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 80030da:	23b4      	movs	r3, #180	@ 0xb4
 80030dc:	009b      	lsls	r3, r3, #2
 80030de:	18e3      	adds	r3, r4, r3
 80030e0:	0018      	movs	r0, r3
 80030e2:	9307      	str	r3, [sp, #28]
 80030e4:	f7ff ff86 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
        rect.width = width;
 80030e8:	4b54      	ldr	r3, [pc, #336]	@ (800323c <_ZN18CircleAnimatorBaseC1Ev+0x208>)
    lines.setXY(0, 0);
 80030ea:	002a      	movs	r2, r5
 80030ec:	0029      	movs	r1, r5
 80030ee:	0038      	movs	r0, r7
 80030f0:	60a3      	str	r3, [r4, #8]
 80030f2:	f7ff ff56 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 80030f6:	230d      	movs	r3, #13
    lines.setBitmap(touchgfx::Bitmap(BITMAP_LINES_ID));
 80030f8:	0031      	movs	r1, r6
 80030fa:	0038      	movs	r0, r7
 80030fc:	8033      	strh	r3, [r6, #0]
 80030fe:	f005 fde8 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        alpha = newAlpha;
 8003102:	0023      	movs	r3, r4
    add(lines);
 8003104:	0039      	movs	r1, r7
 8003106:	2711      	movs	r7, #17
 8003108:	3354      	adds	r3, #84	@ 0x54
 800310a:	701d      	strb	r5, [r3, #0]
 800310c:	0020      	movs	r0, r4
 800310e:	f003 ff00 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle0.setXY(0, 0);
 8003112:	002a      	movs	r2, r5
 8003114:	0029      	movs	r1, r5
 8003116:	9800      	ldr	r0, [sp, #0]
 8003118:	f7ff ff43 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle0.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 800311c:	0031      	movs	r1, r6
 800311e:	9800      	ldr	r0, [sp, #0]
 8003120:	8037      	strh	r7, [r6, #0]
 8003122:	f005 fdd6 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003126:	0023      	movs	r3, r4
 8003128:	3390      	adds	r3, #144	@ 0x90
 800312a:	701d      	strb	r5, [r3, #0]
    add(circle0);
 800312c:	0020      	movs	r0, r4
 800312e:	9900      	ldr	r1, [sp, #0]
 8003130:	f003 feef 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setXY(0, 0);
 8003134:	002a      	movs	r2, r5
 8003136:	0029      	movs	r1, r5
 8003138:	9801      	ldr	r0, [sp, #4]
 800313a:	f7ff ff32 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle1.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 800313e:	0031      	movs	r1, r6
 8003140:	9801      	ldr	r0, [sp, #4]
 8003142:	8037      	strh	r7, [r6, #0]
 8003144:	f005 fdc5 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003148:	0023      	movs	r3, r4
 800314a:	33e8      	adds	r3, #232	@ 0xe8
 800314c:	701d      	strb	r5, [r3, #0]
    add(circle1);
 800314e:	0020      	movs	r0, r4
 8003150:	9901      	ldr	r1, [sp, #4]
 8003152:	f003 fede 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle2.setXY(0, 0);
 8003156:	002a      	movs	r2, r5
 8003158:	0029      	movs	r1, r5
 800315a:	9802      	ldr	r0, [sp, #8]
 800315c:	f7ff ff21 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle2.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 8003160:	0031      	movs	r1, r6
 8003162:	9802      	ldr	r0, [sp, #8]
 8003164:	8037      	strh	r7, [r6, #0]
 8003166:	f005 fdb4 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800316a:	0023      	movs	r3, r4
 800316c:	3341      	adds	r3, #65	@ 0x41
 800316e:	33ff      	adds	r3, #255	@ 0xff
 8003170:	701d      	strb	r5, [r3, #0]
    add(circle2);
 8003172:	0020      	movs	r0, r4
 8003174:	9902      	ldr	r1, [sp, #8]
 8003176:	f003 fecc 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle3.setXY(1, 0);
 800317a:	002a      	movs	r2, r5
 800317c:	9803      	ldr	r0, [sp, #12]
 800317e:	2101      	movs	r1, #1
 8003180:	f7ff ff0f 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle3.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 8003184:	0031      	movs	r1, r6
 8003186:	9803      	ldr	r0, [sp, #12]
 8003188:	8037      	strh	r7, [r6, #0]
 800318a:	f005 fda2 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800318e:	0023      	movs	r3, r4
 8003190:	3399      	adds	r3, #153	@ 0x99
 8003192:	33ff      	adds	r3, #255	@ 0xff
 8003194:	701d      	strb	r5, [r3, #0]
    add(circle3);
 8003196:	0020      	movs	r0, r4
 8003198:	9903      	ldr	r1, [sp, #12]
 800319a:	f003 feba 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle4.setXY(0, 0);
 800319e:	002a      	movs	r2, r5
 80031a0:	0029      	movs	r1, r5
 80031a2:	9804      	ldr	r0, [sp, #16]
 80031a4:	f7ff fefd 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle4.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 80031a8:	0031      	movs	r1, r6
 80031aa:	9804      	ldr	r0, [sp, #16]
 80031ac:	8037      	strh	r7, [r6, #0]
 80031ae:	f005 fd90 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031b2:	0023      	movs	r3, r4
 80031b4:	33f1      	adds	r3, #241	@ 0xf1
 80031b6:	33ff      	adds	r3, #255	@ 0xff
 80031b8:	701d      	strb	r5, [r3, #0]
    add(circle4);
 80031ba:	0020      	movs	r0, r4
 80031bc:	9904      	ldr	r1, [sp, #16]
 80031be:	f003 fea8 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5.setXY(0, 0);
 80031c2:	002a      	movs	r2, r5
 80031c4:	0029      	movs	r1, r5
 80031c6:	9805      	ldr	r0, [sp, #20]
 80031c8:	f7ff feeb 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle5.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 80031cc:	0031      	movs	r1, r6
 80031ce:	9805      	ldr	r0, [sp, #20]
 80031d0:	8037      	strh	r7, [r6, #0]
 80031d2:	f005 fd7e 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031d6:	2392      	movs	r3, #146	@ 0x92
 80031d8:	009b      	lsls	r3, r3, #2
 80031da:	18e3      	adds	r3, r4, r3
 80031dc:	701d      	strb	r5, [r3, #0]
    add(circle5);
 80031de:	0020      	movs	r0, r4
 80031e0:	9905      	ldr	r1, [sp, #20]
 80031e2:	f003 fe96 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle6.setXY(1, 0);
 80031e6:	002a      	movs	r2, r5
 80031e8:	9806      	ldr	r0, [sp, #24]
 80031ea:	2101      	movs	r1, #1
 80031ec:	f7ff fed9 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle6.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 80031f0:	0031      	movs	r1, r6
 80031f2:	9806      	ldr	r0, [sp, #24]
 80031f4:	8037      	strh	r7, [r6, #0]
 80031f6:	f005 fd6c 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031fa:	23a8      	movs	r3, #168	@ 0xa8
 80031fc:	009b      	lsls	r3, r3, #2
 80031fe:	18e3      	adds	r3, r4, r3
 8003200:	701d      	strb	r5, [r3, #0]
    add(circle6);
 8003202:	0020      	movs	r0, r4
 8003204:	9906      	ldr	r1, [sp, #24]
 8003206:	f003 fe84 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle7.setXY(1, 0);
 800320a:	002a      	movs	r2, r5
 800320c:	9807      	ldr	r0, [sp, #28]
 800320e:	2101      	movs	r1, #1
 8003210:	f7ff fec7 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    circle7.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_CIRCLE_ID));
 8003214:	0031      	movs	r1, r6
 8003216:	9807      	ldr	r0, [sp, #28]
 8003218:	8037      	strh	r7, [r6, #0]
 800321a:	f005 fd5a 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800321e:	23be      	movs	r3, #190	@ 0xbe
 8003220:	009b      	lsls	r3, r3, #2
 8003222:	18e3      	adds	r3, r4, r3
    add(circle7);
 8003224:	0020      	movs	r0, r4
 8003226:	9907      	ldr	r1, [sp, #28]
 8003228:	701d      	strb	r5, [r3, #0]
 800322a:	f003 fe72 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800322e:	0020      	movs	r0, r4
 8003230:	b00b      	add	sp, #44	@ 0x2c
 8003232:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003234:	0801477c 	.word	0x0801477c
 8003238:	0801468c 	.word	0x0801468c
 800323c:	00aa00aa 	.word	0x00aa00aa

08003240 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv>:
        nextMoveAnimationStep();
    }

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
 8003240:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    {
        if (moveAnimationRunning)
 8003242:	0006      	movs	r6, r0
 8003244:	3629      	adds	r6, #41	@ 0x29
 8003246:	7833      	ldrb	r3, [r6, #0]
    void nextMoveAnimationStep()
 8003248:	0004      	movs	r4, r0
        if (moveAnimationRunning)
 800324a:	2b00      	cmp	r3, #0
 800324c:	d041      	beq.n	80032d2 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv+0x92>
        {
            moveAnimationCounter++;
 800324e:	8d45      	ldrh	r5, [r0, #42]	@ 0x2a
            if (moveAnimationCounter >= moveAnimationDelay)
 8003250:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
            moveAnimationCounter++;
 8003252:	3501      	adds	r5, #1
 8003254:	b2ad      	uxth	r5, r5
 8003256:	8545      	strh	r5, [r0, #42]	@ 0x2a
            if (moveAnimationCounter >= moveAnimationDelay)
 8003258:	429d      	cmp	r5, r3
 800325a:	d33a      	bcc.n	80032d2 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv+0x92>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800325c:	8e01      	ldrh	r1, [r0, #48]	@ 0x30
 800325e:	8e82      	ldrh	r2, [r0, #52]	@ 0x34
 8003260:	1aed      	subs	r5, r5, r3
 8003262:	b2ad      	uxth	r5, r5
 8003264:	1a52      	subs	r2, r2, r1
 8003266:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 8003268:	6b87      	ldr	r7, [r0, #56]	@ 0x38
 800326a:	2100      	movs	r1, #0
 800326c:	b212      	sxth	r2, r2
 800326e:	0028      	movs	r0, r5
 8003270:	47b8      	blx	r7
 8003272:	9001      	str	r0, [sp, #4]
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8003274:	8e61      	ldrh	r1, [r4, #50]	@ 0x32
 8003276:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8003278:	8de3      	ldrh	r3, [r4, #46]	@ 0x2e
 800327a:	1a52      	subs	r2, r2, r1
 800327c:	b212      	sxth	r2, r2
 800327e:	2100      	movs	r1, #0
 8003280:	0028      	movs	r0, r5
 8003282:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8003284:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8003286:	9b01      	ldr	r3, [sp, #4]
 8003288:	8e62      	ldrh	r2, [r4, #50]	@ 0x32
 800328a:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
 800328c:	1812      	adds	r2, r2, r0
 800328e:	18c9      	adds	r1, r1, r3
 8003290:	b212      	sxth	r2, r2
 8003292:	b209      	sxth	r1, r1
 8003294:	0020      	movs	r0, r4
 8003296:	f7ff fde3 	bl	8002e60 <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 800329a:	8da3      	ldrh	r3, [r4, #44]	@ 0x2c
 800329c:	8de1      	ldrh	r1, [r4, #46]	@ 0x2e
 800329e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80032a0:	185b      	adds	r3, r3, r1
 80032a2:	429a      	cmp	r2, r3
 80032a4:	d315      	bcc.n	80032d2 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv+0x92>
                {
                    // End of animation
                    moveAnimationRunning = false;
 80032a6:	2300      	movs	r3, #0
 80032a8:	7033      	strb	r3, [r6, #0]
                    moveAnimationCounter = 0;
 80032aa:	8563      	strh	r3, [r4, #42]	@ 0x2a
                    Application::getInstance()->unregisterTimerWidget(this);
 80032ac:	f007 fe8e 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 80032b0:	0021      	movs	r1, r4
 80032b2:	3004      	adds	r0, #4
 80032b4:	f007 feaf 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 80032b8:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80032ba:	2800      	cmp	r0, #0
 80032bc:	d009      	beq.n	80032d2 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv+0x92>
 80032be:	6803      	ldr	r3, [r0, #0]
 80032c0:	68db      	ldr	r3, [r3, #12]
 80032c2:	4798      	blx	r3
 80032c4:	2800      	cmp	r0, #0
 80032c6:	d004      	beq.n	80032d2 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv+0x92>
                    {
                        moveAnimationEndedCallback->execute(*this);
 80032c8:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80032ca:	0021      	movs	r1, r4
 80032cc:	6803      	ldr	r3, [r0, #0]
 80032ce:	689b      	ldr	r3, [r3, #8]
 80032d0:	4798      	blx	r3
                    }
                }
            }
        }
    }
 80032d2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

080032d4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv>:
    virtual void handleTickEvent()
 80032d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80032d6:	0004      	movs	r4, r0
        nextMoveAnimationStep();
 80032d8:	f7ff ffb2 	bl	8003240 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE21nextMoveAnimationStepEv>
        if (fadeAnimationRunning)
 80032dc:	0023      	movs	r3, r4
 80032de:	3344      	adds	r3, #68	@ 0x44
 80032e0:	9301      	str	r3, [sp, #4]
 80032e2:	781b      	ldrb	r3, [r3, #0]
 80032e4:	2b00      	cmp	r3, #0
 80032e6:	d047      	beq.n	8003378 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0xa4>
            fadeAnimationCounter++;
 80032e8:	0026      	movs	r6, r4
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80032ea:	0023      	movs	r3, r4
            fadeAnimationCounter++;
 80032ec:	3608      	adds	r6, #8
 80032ee:	8ff1      	ldrh	r1, [r6, #62]	@ 0x3e
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80032f0:	3348      	adds	r3, #72	@ 0x48
            fadeAnimationCounter++;
 80032f2:	3101      	adds	r1, #1
 80032f4:	b289      	uxth	r1, r1
 80032f6:	87f1      	strh	r1, [r6, #62]	@ 0x3e
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80032f8:	8818      	ldrh	r0, [r3, #0]
 80032fa:	4281      	cmp	r1, r0
 80032fc:	d33c      	bcc.n	8003378 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0xa4>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 80032fe:	0022      	movs	r2, r4
 8003300:	889f      	ldrh	r7, [r3, #4]
 8003302:	3302      	adds	r3, #2
 8003304:	9300      	str	r3, [sp, #0]
 8003306:	324e      	adds	r2, #78	@ 0x4e
 8003308:	8812      	ldrh	r2, [r2, #0]
 800330a:	1a08      	subs	r0, r1, r0
 800330c:	1bd2      	subs	r2, r2, r7
 800330e:	881b      	ldrh	r3, [r3, #0]
 8003310:	6d25      	ldr	r5, [r4, #80]	@ 0x50
 8003312:	b212      	sxth	r2, r2
 8003314:	2100      	movs	r1, #0
 8003316:	b280      	uxth	r0, r0
 8003318:	47a8      	blx	r5
 800331a:	183d      	adds	r5, r7, r0
        return alpha;
 800331c:	0027      	movs	r7, r4
 800331e:	3728      	adds	r7, #40	@ 0x28
                if (T::getAlpha() != newAlpha)
 8003320:	783a      	ldrb	r2, [r7, #0]
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8003322:	b2ab      	uxth	r3, r5
 8003324:	b22d      	sxth	r5, r5
                if (T::getAlpha() != newAlpha)
 8003326:	42aa      	cmp	r2, r5
 8003328:	d005      	beq.n	8003336 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0x62>
                    if (newAlpha == 0)
 800332a:	2d00      	cmp	r5, #0
 800332c:	d125      	bne.n	800337a <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0xa6>
                        T::invalidateContent();
 800332e:	0020      	movs	r0, r4
 8003330:	f7ff fddc 	bl	8002eec <_ZNK8touchgfx5Image17invalidateContentEv>
        alpha = newAlpha;
 8003334:	703d      	strb	r5, [r7, #0]
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8003336:	0023      	movs	r3, r4
 8003338:	9900      	ldr	r1, [sp, #0]
 800333a:	3348      	adds	r3, #72	@ 0x48
 800333c:	881b      	ldrh	r3, [r3, #0]
 800333e:	8809      	ldrh	r1, [r1, #0]
 8003340:	8ff2      	ldrh	r2, [r6, #62]	@ 0x3e
 8003342:	185b      	adds	r3, r3, r1
 8003344:	429a      	cmp	r2, r3
 8003346:	d317      	bcc.n	8003378 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0xa4>
                    fadeAnimationRunning = false;
 8003348:	2300      	movs	r3, #0
 800334a:	9a01      	ldr	r2, [sp, #4]
 800334c:	7013      	strb	r3, [r2, #0]
                    fadeAnimationDuration = 0;
 800334e:	9a00      	ldr	r2, [sp, #0]
 8003350:	8013      	strh	r3, [r2, #0]
                    Application::getInstance()->unregisterTimerWidget(this);
 8003352:	f007 fe3b 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 8003356:	0021      	movs	r1, r4
 8003358:	3004      	adds	r0, #4
 800335a:	f007 fe5c 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 800335e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8003360:	2800      	cmp	r0, #0
 8003362:	d009      	beq.n	8003378 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0xa4>
 8003364:	6803      	ldr	r3, [r0, #0]
 8003366:	68db      	ldr	r3, [r3, #12]
 8003368:	4798      	blx	r3
 800336a:	2800      	cmp	r0, #0
 800336c:	d004      	beq.n	8003378 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0xa4>
                        fadeAnimationEndedCallback->execute(*this);
 800336e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8003370:	0021      	movs	r1, r4
 8003372:	6803      	ldr	r3, [r0, #0]
 8003374:	689b      	ldr	r3, [r3, #8]
 8003376:	4798      	blx	r3
    }
 8003378:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
                        T::invalidateContent();
 800337a:	0020      	movs	r0, r4
 800337c:	703b      	strb	r3, [r7, #0]
 800337e:	f7ff fdb5 	bl	8002eec <_ZNK8touchgfx5Image17invalidateContentEv>
 8003382:	e7d8      	b.n	8003336 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE15handleTickEventEv+0x62>

08003384 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003384:	4770      	bx	lr

08003386 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003386:	b510      	push	{r4, lr}
 8003388:	0004      	movs	r4, r0
    }
 800338a:	2108      	movs	r1, #8
 800338c:	f00e fbbb 	bl	8011b06 <_ZdlPvj>
 8003390:	0020      	movs	r0, r4
 8003392:	bd10      	pop	{r4, pc}

08003394 <_ZN8touchgfx11Application19changeToStartScreenEv>:
    }
 8003394:	4770      	bx	lr

08003396 <_ZN8touchgfx11Application15appSwitchScreenEh>:
    }
 8003396:	4770      	bx	lr

08003398 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    virtual void requestRedraw(Rect& rect)
 8003398:	b510      	push	{r4, lr}
        redraw = rect;
 800339a:	3031      	adds	r0, #49	@ 0x31
 800339c:	2208      	movs	r2, #8
 800339e:	30ff      	adds	r0, #255	@ 0xff
 80033a0:	f00f fce9 	bl	8012d76 <memcpy>
    }
 80033a4:	bd10      	pop	{r4, pc}

080033a6 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80033a6:	4770      	bx	lr

080033a8 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80033a8:	4770      	bx	lr

080033aa <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80033aa:	6041      	str	r1, [r0, #4]
    }
 80033ac:	4770      	bx	lr

080033ae <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80033ae:	4770      	bx	lr

080033b0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80033b0:	0003      	movs	r3, r0
 80033b2:	3345      	adds	r3, #69	@ 0x45
 80033b4:	4a04      	ldr	r2, [pc, #16]	@ (80033c8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
 80033b6:	33ff      	adds	r3, #255	@ 0xff
 80033b8:	6058      	str	r0, [r3, #4]
 80033ba:	30fc      	adds	r0, #252	@ 0xfc
 80033bc:	6502      	str	r2, [r0, #80]	@ 0x50
 80033be:	2200      	movs	r2, #0
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80033c0:	6443      	str	r3, [r0, #68]	@ 0x44
 80033c2:	6542      	str	r2, [r0, #84]	@ 0x54

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 80033c4:	4770      	bx	lr
 80033c6:	46c0      	nop			@ (mov r8, r8)
 80033c8:	08003465 	.word	0x08003465

080033cc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80033cc:	2301      	movs	r3, #1
 80033ce:	7203      	strb	r3, [r0, #8]
    }
 80033d0:	4770      	bx	lr

080033d2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80033d2:	4770      	bx	lr

080033d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80033d4:	4770      	bx	lr

080033d6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80033d6:	0003      	movs	r3, r0
 80033d8:	b510      	push	{r4, lr}
    {
        (pobject->*pmemfun)();
 80033da:	68c2      	ldr	r2, [r0, #12]
 80033dc:	6840      	ldr	r0, [r0, #4]
 80033de:	1051      	asrs	r1, r2, #1
 80033e0:	689b      	ldr	r3, [r3, #8]
 80033e2:	1840      	adds	r0, r0, r1
 80033e4:	07d2      	lsls	r2, r2, #31
 80033e6:	d501      	bpl.n	80033ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
 80033e8:	6802      	ldr	r2, [r0, #0]
 80033ea:	58d3      	ldr	r3, [r2, r3]
 80033ec:	4798      	blx	r3
    }
 80033ee:	bd10      	pop	{r4, pc}

080033f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80033f0:	6842      	ldr	r2, [r0, #4]
    virtual bool isValid() const
 80033f2:	0003      	movs	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80033f4:	1e10      	subs	r0, r2, #0
 80033f6:	d005      	beq.n	8003404 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80033f8:	689a      	ldr	r2, [r3, #8]
 80033fa:	2001      	movs	r0, #1
 80033fc:	2a00      	cmp	r2, #0
 80033fe:	d101      	bne.n	8003404 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003400:	68db      	ldr	r3, [r3, #12]
 8003402:	4018      	ands	r0, r3
    }
 8003404:	4770      	bx	lr

08003406 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003406:	b510      	push	{r4, lr}
 8003408:	0004      	movs	r4, r0
 800340a:	210c      	movs	r1, #12
 800340c:	f00e fb7b 	bl	8011b06 <_ZdlPvj>
 8003410:	0020      	movs	r0, r4
 8003412:	bd10      	pop	{r4, pc}

08003414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003414:	b510      	push	{r4, lr}
 8003416:	0004      	movs	r4, r0
 8003418:	2110      	movs	r1, #16
 800341a:	f00e fb74 	bl	8011b06 <_ZdlPvj>
 800341e:	0020      	movs	r0, r4
 8003420:	bd10      	pop	{r4, pc}

08003422 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003422:	21ae      	movs	r1, #174	@ 0xae
 8003424:	b510      	push	{r4, lr}
 8003426:	0004      	movs	r4, r0
 8003428:	0049      	lsls	r1, r1, #1
 800342a:	f00e fb6c 	bl	8011b06 <_ZdlPvj>
 800342e:	0020      	movs	r0, r4
 8003430:	bd10      	pop	{r4, pc}

08003432 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003432:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003434:	f007 fdca 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 8003438:	6803      	ldr	r3, [r0, #0]
 800343a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800343c:	4798      	blx	r3
    }
 800343e:	bd10      	pop	{r4, pc}

08003440 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003440:	30fc      	adds	r0, #252	@ 0xfc
    virtual void handlePendingScreenTransition()
 8003442:	b510      	push	{r4, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003444:	0004      	movs	r4, r0
 8003446:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 8003448:	2800      	cmp	r0, #0
 800344a:	d00a      	beq.n	8003462 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800344c:	6803      	ldr	r3, [r0, #0]
 800344e:	68db      	ldr	r3, [r3, #12]
 8003450:	4798      	blx	r3
 8003452:	2800      	cmp	r0, #0
 8003454:	d005      	beq.n	8003462 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003456:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8003458:	6803      	ldr	r3, [r0, #0]
 800345a:	689b      	ldr	r3, [r3, #8]
 800345c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800345e:	2300      	movs	r3, #0
 8003460:	6463      	str	r3, [r4, #68]	@ 0x44
    }
 8003462:	bd10      	pop	{r4, pc}

08003464 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8003464:	b5f0      	push	{r4, r5, r6, r7, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003466:	30fc      	adds	r0, #252	@ 0xfc
 8003468:	6d86      	ldr	r6, [r0, #88]	@ 0x58
 800346a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 800346c:	0007      	movs	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800346e:	68b0      	ldr	r0, [r6, #8]
{
 8003470:	b085      	sub	sp, #20
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003472:	9303      	str	r3, [sp, #12]
 8003474:	6803      	ldr	r3, [r0, #0]
 8003476:	6a1b      	ldr	r3, [r3, #32]
 8003478:	4798      	blx	r3
 800347a:	4b45      	ldr	r3, [pc, #276]	@ (8003590 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 800347c:	4298      	cmp	r0, r3
 800347e:	d805      	bhi.n	800348c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x28>
 8003480:	21a3      	movs	r1, #163	@ 0xa3
 8003482:	4b44      	ldr	r3, [pc, #272]	@ (8003594 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 8003484:	4a44      	ldr	r2, [pc, #272]	@ (8003598 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 8003486:	4845      	ldr	r0, [pc, #276]	@ (800359c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003488:	f00f f96a 	bl	8012760 <__assert_func>
 800348c:	6870      	ldr	r0, [r6, #4]
 800348e:	6803      	ldr	r3, [r0, #0]
 8003490:	6a1b      	ldr	r3, [r3, #32]
 8003492:	4798      	blx	r3
 8003494:	280f      	cmp	r0, #15
 8003496:	d804      	bhi.n	80034a2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x3e>
 8003498:	21a4      	movs	r1, #164	@ 0xa4
 800349a:	4b41      	ldr	r3, [pc, #260]	@ (80035a0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 800349c:	4a3e      	ldr	r2, [pc, #248]	@ (8003598 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 800349e:	483f      	ldr	r0, [pc, #252]	@ (800359c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 80034a0:	e7f2      	b.n	8003488 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80034a2:	68f0      	ldr	r0, [r6, #12]
 80034a4:	6803      	ldr	r3, [r0, #0]
 80034a6:	6a1b      	ldr	r3, [r3, #32]
 80034a8:	4798      	blx	r3
 80034aa:	280b      	cmp	r0, #11
 80034ac:	d804      	bhi.n	80034b8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x54>
 80034ae:	21a5      	movs	r1, #165	@ 0xa5
 80034b0:	4b3c      	ldr	r3, [pc, #240]	@ (80035a4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>)
 80034b2:	4a39      	ldr	r2, [pc, #228]	@ (8003598 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 80034b4:	4839      	ldr	r0, [pc, #228]	@ (800359c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 80034b6:	e7e7      	b.n	8003488 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 80034b8:	f007 fd88 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.clear();
 80034bc:	3004      	adds	r0, #4
 80034be:	f007 fdc6 	bl	800b04e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80034c2:	4b39      	ldr	r3, [pc, #228]	@ (80035a8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>)
 80034c4:	6818      	ldr	r0, [r3, #0]
 80034c6:	9301      	str	r3, [sp, #4]
 80034c8:	2800      	cmp	r0, #0
 80034ca:	d002      	beq.n	80034d2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x6e>
        (*currentTrans)->tearDown();
 80034cc:	6803      	ldr	r3, [r0, #0]
 80034ce:	68db      	ldr	r3, [r3, #12]
 80034d0:	4798      	blx	r3
    if (*currentTrans)
 80034d2:	9b01      	ldr	r3, [sp, #4]
 80034d4:	6818      	ldr	r0, [r3, #0]
 80034d6:	2800      	cmp	r0, #0
 80034d8:	d002      	beq.n	80034e0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x7c>
        (*currentTrans)->~Transition();
 80034da:	6803      	ldr	r3, [r0, #0]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	4798      	blx	r3
    if (*currentScreen)
 80034e0:	4b32      	ldr	r3, [pc, #200]	@ (80035ac <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x148>)
 80034e2:	6818      	ldr	r0, [r3, #0]
 80034e4:	9302      	str	r3, [sp, #8]
 80034e6:	2800      	cmp	r0, #0
 80034e8:	d002      	beq.n	80034f0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x8c>
        (*currentScreen)->tearDownScreen();
 80034ea:	6803      	ldr	r3, [r0, #0]
 80034ec:	695b      	ldr	r3, [r3, #20]
 80034ee:	4798      	blx	r3
    if (*currentPresenter)
 80034f0:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 80034f2:	2800      	cmp	r0, #0
 80034f4:	d002      	beq.n	80034fc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x98>
        (*currentPresenter)->deactivate();
 80034f6:	6803      	ldr	r3, [r0, #0]
 80034f8:	685b      	ldr	r3, [r3, #4]
 80034fa:	4798      	blx	r3
    if (*currentScreen)
 80034fc:	9b02      	ldr	r3, [sp, #8]
 80034fe:	6818      	ldr	r0, [r3, #0]
 8003500:	2800      	cmp	r0, #0
 8003502:	d002      	beq.n	800350a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa6>
        (*currentScreen)->~Screen();
 8003504:	6803      	ldr	r3, [r0, #0]
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	4798      	blx	r3
    if (*currentPresenter)
 800350a:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 800350c:	2800      	cmp	r0, #0
 800350e:	d002      	beq.n	8003516 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xb2>
        (*currentPresenter)->~Presenter();
 8003510:	6803      	ldr	r3, [r0, #0]
 8003512:	689b      	ldr	r3, [r3, #8]
 8003514:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003516:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003518:	2100      	movs	r1, #0
 800351a:	6803      	ldr	r3, [r0, #0]
 800351c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800351e:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003520:	2300      	movs	r3, #0
 8003522:	6043      	str	r3, [r0, #4]
 8003524:	7203      	strb	r3, [r0, #8]
 8003526:	4b22      	ldr	r3, [pc, #136]	@ (80035b0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x14c>)
 8003528:	0004      	movs	r4, r0
 800352a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800352c:	68b0      	ldr	r0, [r6, #8]
 800352e:	2100      	movs	r1, #0
 8003530:	6803      	ldr	r3, [r0, #0]
 8003532:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003534:	4798      	blx	r3
 8003536:	0005      	movs	r5, r0
 8003538:	f001 fec6 	bl	80052c8 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800353c:	6870      	ldr	r0, [r6, #4]
 800353e:	2100      	movs	r1, #0
 8003540:	6803      	ldr	r3, [r0, #0]
 8003542:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003544:	4798      	blx	r3
 8003546:	0006      	movs	r6, r0
 8003548:	0029      	movs	r1, r5
 800354a:	f001 fdfd 	bl	8005148 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 800354e:	9b01      	ldr	r3, [sp, #4]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003550:	9a03      	ldr	r2, [sp, #12]
 8003552:	601c      	str	r4, [r3, #0]
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
 8003554:	9b02      	ldr	r3, [sp, #8]
    *currentPresenter = newPresenter;
 8003556:	643e      	str	r6, [r7, #64]	@ 0x40
    *currentScreen = newScreen;
 8003558:	601d      	str	r5, [r3, #0]
    model->bind(newPresenter);
 800355a:	1d33      	adds	r3, r6, #4
 800355c:	6013      	str	r3, [r2, #0]
    newScreen->setupScreen();
 800355e:	682b      	ldr	r3, [r5, #0]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003560:	60b2      	str	r2, [r6, #8]
 8003562:	0028      	movs	r0, r5
 8003564:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003566:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003568:	4798      	blx	r3
    newPresenter->activate();
 800356a:	6833      	ldr	r3, [r6, #0]
 800356c:	0030      	movs	r0, r6
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003572:	0021      	movs	r1, r4
 8003574:	0028      	movs	r0, r5
 8003576:	f009 fa4a 	bl	800ca0e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800357a:	6823      	ldr	r3, [r4, #0]
 800357c:	0020      	movs	r0, r4
 800357e:	691b      	ldr	r3, [r3, #16]
 8003580:	4798      	blx	r3
    newTransition->invalidate();
 8003582:	6823      	ldr	r3, [r4, #0]
 8003584:	0020      	movs	r0, r4
 8003586:	695b      	ldr	r3, [r3, #20]
 8003588:	4798      	blx	r3
}
 800358a:	b005      	add	sp, #20
 800358c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800358e:	46c0      	nop			@ (mov r8, r8)
 8003590:	00000f43 	.word	0x00000f43
 8003594:	08014818 	.word	0x08014818
 8003598:	080148a6 	.word	0x080148a6
 800359c:	08014972 	.word	0x08014972
 80035a0:	080149b9 	.word	0x080149b9
 80035a4:	08014a5c 	.word	0x08014a5c
 80035a8:	200035b8 	.word	0x200035b8
 80035ac:	200035b4 	.word	0x200035b4
 80035b0:	08014b74 	.word	0x08014b74

080035b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80035b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035b6:	0004      	movs	r4, r0
 80035b8:	000e      	movs	r6, r1
 80035ba:	0017      	movs	r7, r2
          pendingScreenTransitionCallback(0)
 80035bc:	f007 fe2a 	bl	800b214 <_ZN8touchgfx11ApplicationC1Ev>
        : currentPresenter(0),
 80035c0:	0023      	movs	r3, r4
 80035c2:	2500      	movs	r5, #0
        : pobject(0), pmemfun(0)
 80035c4:	21a2      	movs	r1, #162	@ 0xa2
        instance = this;
 80035c6:	4a0e      	ldr	r2, [pc, #56]	@ (8003600 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
        : currentPresenter(0),
 80035c8:	33fc      	adds	r3, #252	@ 0xfc
        instance = this;
 80035ca:	6014      	str	r4, [r2, #0]
      model(m)
 80035cc:	4a0d      	ldr	r2, [pc, #52]	@ (8003604 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 80035ce:	641d      	str	r5, [r3, #64]	@ 0x40
          pendingScreenTransitionCallback(0)
 80035d0:	645d      	str	r5, [r3, #68]	@ 0x44
 80035d2:	6022      	str	r2, [r4, #0]
 80035d4:	4a0c      	ldr	r2, [pc, #48]	@ (8003608 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80035d6:	0049      	lsls	r1, r1, #1
 80035d8:	5062      	str	r2, [r4, r1]
 80035da:	1862      	adds	r2, r4, r1
 80035dc:	6095      	str	r5, [r2, #8]
 80035de:	60d5      	str	r5, [r2, #12]
 80035e0:	6055      	str	r5, [r2, #4]
      frontendHeap(heap),
 80035e2:	659f      	str	r7, [r3, #88]	@ 0x58
      model(m)
 80035e4:	65de      	str	r6, [r3, #92]	@ 0x5c
        return instance;
 80035e6:	4b09      	ldr	r3, [pc, #36]	@ (800360c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80035e8:	3944      	subs	r1, #68	@ 0x44
 80035ea:	6818      	ldr	r0, [r3, #0]
 80035ec:	39ff      	subs	r1, #255	@ 0xff
 80035ee:	6803      	ldr	r3, [r0, #0]
 80035f0:	689b      	ldr	r3, [r3, #8]
 80035f2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80035f4:	0028      	movs	r0, r5
 80035f6:	f000 ff6f 	bl	80044d8 <_ZN8touchgfx5Texts11setLanguageEt>
}
 80035fa:	0020      	movs	r0, r4
 80035fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80035fe:	46c0      	nop			@ (mov r8, r8)
 8003600:	200035c4 	.word	0x200035c4
 8003604:	08014b20 	.word	0x08014b20
 8003608:	08014b08 	.word	0x08014b08
 800360c:	20003578 	.word	0x20003578

08003610 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003610:	0003      	movs	r3, r0
 8003612:	3345      	adds	r3, #69	@ 0x45
 8003614:	4a04      	ldr	r2, [pc, #16]	@ (8003628 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x18>)
 8003616:	33ff      	adds	r3, #255	@ 0xff
 8003618:	6058      	str	r0, [r3, #4]
 800361a:	30fc      	adds	r0, #252	@ 0xfc
 800361c:	6502      	str	r2, [r0, #80]	@ 0x50
 800361e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
 8003620:	6443      	str	r3, [r0, #68]	@ 0x44
 8003622:	6542      	str	r2, [r0, #84]	@ 0x54
}
 8003624:	4770      	bx	lr
 8003626:	46c0      	nop			@ (mov r8, r8)
 8003628:	08003465 	.word	0x08003465

0800362c <_ZN17ImageAnimatorBaseD1Ev>:
}

ImageAnimatorBase::~ImageAnimatorBase()
{

}
 800362c:	4770      	bx	lr

0800362e <_ZN17ImageAnimatorBase10initializeEv>:

void ImageAnimatorBase::initialize()
{

}
 800362e:	4770      	bx	lr

08003630 <_ZN17ImageAnimatorBaseD0Ev>:
}
 8003630:	21c8      	movs	r1, #200	@ 0xc8
ImageAnimatorBase::~ImageAnimatorBase()
 8003632:	b510      	push	{r4, lr}
 8003634:	0004      	movs	r4, r0
}
 8003636:	0049      	lsls	r1, r1, #1
 8003638:	f00e fa65 	bl	8011b06 <_ZdlPvj>
 800363c:	0020      	movs	r0, r4
 800363e:	bd10      	pop	{r4, pc}

08003640 <_ZN17ImageAnimatorBase22emitImageIsOutCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitImageIsOutCallback()
 8003640:	b570      	push	{r4, r5, r6, lr}
    {
        if (imageIsOutCallback && imageIsOutCallback->isValid())
 8003642:	25c6      	movs	r5, #198	@ 0xc6
 8003644:	006d      	lsls	r5, r5, #1
    virtual void emitImageIsOutCallback()
 8003646:	0004      	movs	r4, r0
        if (imageIsOutCallback && imageIsOutCallback->isValid())
 8003648:	5940      	ldr	r0, [r0, r5]
 800364a:	2800      	cmp	r0, #0
 800364c:	d008      	beq.n	8003660 <_ZN17ImageAnimatorBase22emitImageIsOutCallbackEv+0x20>
 800364e:	6803      	ldr	r3, [r0, #0]
 8003650:	68db      	ldr	r3, [r3, #12]
 8003652:	4798      	blx	r3
 8003654:	2800      	cmp	r0, #0
 8003656:	d003      	beq.n	8003660 <_ZN17ImageAnimatorBase22emitImageIsOutCallbackEv+0x20>
 8003658:	5960      	ldr	r0, [r4, r5]
        {
            this->imageIsOutCallback->execute();
 800365a:	6803      	ldr	r3, [r0, #0]
 800365c:	689b      	ldr	r3, [r3, #8]
 800365e:	4798      	blx	r3
        }
    }
 8003660:	bd70      	pop	{r4, r5, r6, pc}
	...

08003664 <_ZN17ImageAnimatorBaseC1Ev>:
          touchable(false),
 8003664:	2380      	movs	r3, #128	@ 0x80
ImageAnimatorBase::ImageAnimatorBase() :
 8003666:	b5f0      	push	{r4, r5, r6, r7, lr}
    imageIsOutCallback(0)
 8003668:	0007      	movs	r7, r0
 800366a:	2500      	movs	r5, #0
ImageAnimatorBase::ImageAnimatorBase() :
 800366c:	0004      	movs	r4, r0
 800366e:	005b      	lsls	r3, r3, #1
 8003670:	8483      	strh	r3, [r0, #36]	@ 0x24
    imageIsOutCallback(0)
 8003672:	4b34      	ldr	r3, [pc, #208]	@ (8003744 <_ZN17ImageAnimatorBaseC1Ev+0xe0>)
 8003674:	372c      	adds	r7, #44	@ 0x2c
ImageAnimatorBase::ImageAnimatorBase() :
 8003676:	b087      	sub	sp, #28
 8003678:	6045      	str	r5, [r0, #4]
 800367a:	6085      	str	r5, [r0, #8]
 800367c:	60c5      	str	r5, [r0, #12]
 800367e:	6105      	str	r5, [r0, #16]
          parent(0),
 8003680:	6145      	str	r5, [r0, #20]
          nextSibling(0),
 8003682:	6185      	str	r5, [r0, #24]
          nextDrawChainElement(0),
 8003684:	61c5      	str	r5, [r0, #28]
          cachedAbsX(0),
 8003686:	6205      	str	r5, [r0, #32]
 8003688:	6285      	str	r5, [r0, #40]	@ 0x28
    imageIsOutCallback(0)
 800368a:	6003      	str	r3, [r0, #0]
 800368c:	0038      	movs	r0, r7
 800368e:	f7ff fcb1 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 8003692:	0023      	movs	r3, r4
 8003694:	3384      	adds	r3, #132	@ 0x84
 8003696:	0018      	movs	r0, r3
 8003698:	9301      	str	r3, [sp, #4]
 800369a:	f7ff fcab 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 800369e:	0023      	movs	r3, r4
 80036a0:	33dc      	adds	r3, #220	@ 0xdc
 80036a2:	0018      	movs	r0, r3
 80036a4:	9302      	str	r3, [sp, #8]
 80036a6:	f7ff fca5 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 80036aa:	0023      	movs	r3, r4
 80036ac:	3335      	adds	r3, #53	@ 0x35
 80036ae:	33ff      	adds	r3, #255	@ 0xff
 80036b0:	0018      	movs	r0, r3
 80036b2:	9303      	str	r3, [sp, #12]
 80036b4:	f7ff fc9e 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 80036b8:	23c6      	movs	r3, #198	@ 0xc6
 80036ba:	005b      	lsls	r3, r3, #1
 80036bc:	50e5      	str	r5, [r4, r3]
        rect.width = width;
 80036be:	4b22      	ldr	r3, [pc, #136]	@ (8003748 <_ZN17ImageAnimatorBaseC1Ev+0xe4>)
    image1.setXY(240, 53);
 80036c0:	2235      	movs	r2, #53	@ 0x35
 80036c2:	0038      	movs	r0, r7
 80036c4:	60a3      	str	r3, [r4, #8]
 80036c6:	21f0      	movs	r1, #240	@ 0xf0
 80036c8:	f7ff fc6b 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 80036cc:	2304      	movs	r3, #4
 80036ce:	ae05      	add	r6, sp, #20
 80036d0:	8033      	strh	r3, [r6, #0]
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ACADEMYTOPRIGHT_ID));
 80036d2:	0031      	movs	r1, r6
 80036d4:	0038      	movs	r0, r7
 80036d6:	f005 fafc 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 80036da:	0039      	movs	r1, r7
 80036dc:	0020      	movs	r0, r4
 80036de:	f003 fc18 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(56, -67);
 80036e2:	2243      	movs	r2, #67	@ 0x43
 80036e4:	9801      	ldr	r0, [sp, #4]
 80036e6:	4252      	negs	r2, r2
 80036e8:	2138      	movs	r1, #56	@ 0x38
 80036ea:	f7ff fc5a 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 80036ee:	2303      	movs	r3, #3
    image3.setBitmap(touchgfx::Bitmap(BITMAP_ACADEMYTOPLEFT_ID));
 80036f0:	0031      	movs	r1, r6
 80036f2:	8033      	strh	r3, [r6, #0]
 80036f4:	9801      	ldr	r0, [sp, #4]
 80036f6:	f005 faec 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image3);
 80036fa:	0020      	movs	r0, r4
 80036fc:	9901      	ldr	r1, [sp, #4]
 80036fe:	f003 fc08 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image4.setXY(120, 240);
 8003702:	22f0      	movs	r2, #240	@ 0xf0
 8003704:	9802      	ldr	r0, [sp, #8]
 8003706:	2178      	movs	r1, #120	@ 0x78
 8003708:	f7ff fc4b 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800370c:	2301      	movs	r3, #1
    image4.setBitmap(touchgfx::Bitmap(BITMAP_ACADEMYBOTTOMRIGHT_ID));
 800370e:	0031      	movs	r1, r6
 8003710:	8033      	strh	r3, [r6, #0]
 8003712:	9802      	ldr	r0, [sp, #8]
 8003714:	f005 fadd 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image4);
 8003718:	0020      	movs	r0, r4
 800371a:	9902      	ldr	r1, [sp, #8]
 800371c:	f003 fbf9 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(-64, 120);
 8003720:	2140      	movs	r1, #64	@ 0x40
 8003722:	2278      	movs	r2, #120	@ 0x78
 8003724:	9803      	ldr	r0, [sp, #12]
 8003726:	4249      	negs	r1, r1
 8003728:	f7ff fc3b 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_ACADEMYBOTTOMLEFT_ID));
 800372c:	0031      	movs	r1, r6
 800372e:	9803      	ldr	r0, [sp, #12]
 8003730:	8035      	strh	r5, [r6, #0]
 8003732:	f005 face 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image2);
 8003736:	0020      	movs	r0, r4
 8003738:	9903      	ldr	r1, [sp, #12]
 800373a:	f003 fbea 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800373e:	0020      	movs	r0, r4
 8003740:	b007      	add	sp, #28
 8003742:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003744:	08014b98 	.word	0x08014b98
 8003748:	00f000f0 	.word	0x00f000f0

0800374c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800374c:	4770      	bx	lr

0800374e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800374e:	4770      	bx	lr

08003750 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003750:	4770      	bx	lr

08003752 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003752:	4770      	bx	lr

08003754 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003754:	4770      	bx	lr

08003756 <_ZN12MainViewBase19selectActionHandlerEv>:
     * Virtual Action Handlers
     */
    virtual void selectActionHandler()
    {
        // Override and implement this function in Main
    }
 8003756:	4770      	bx	lr

08003758 <_ZN12MainViewBase17nextActionHandlerEv>:
    virtual void nextActionHandler()
    {
        // Override and implement this function in Main
    }
 8003758:	4770      	bx	lr

0800375a <_ZN12MainViewBase14updateDemoNameEv>:
    virtual void updateDemoName()
    {
        // Override and implement this function in Main
    }
 800375a:	4770      	bx	lr

0800375c <_ZN12MainViewBase38imageAnimatorImageIsOutCallbackHandlerEv>:
    imageAnimator.initialize();
    circleAnimator.initialize();
}

void MainViewBase::imageAnimatorImageIsOutCallbackHandler()
{
 800375c:	b510      	push	{r4, lr}
    //updateDemoName
    //When imageAnimator imageIsOut call virtual function
    //Call updateDemoName
    updateDemoName();
 800375e:	6803      	ldr	r3, [r0, #0]
 8003760:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003762:	4798      	blx	r3
}
 8003764:	bd10      	pop	{r4, pc}

08003766 <_ZN8touchgfx8CallbackI12MainViewBasevvvED1Ev>:
 8003766:	4770      	bx	lr

08003768 <_ZN8touchgfx8CallbackI12MainViewBasevvvE7executeEv>:
    virtual void execute()
 8003768:	0003      	movs	r3, r0
 800376a:	b510      	push	{r4, lr}
        (pobject->*pmemfun)();
 800376c:	68c2      	ldr	r2, [r0, #12]
 800376e:	6840      	ldr	r0, [r0, #4]
 8003770:	1051      	asrs	r1, r2, #1
 8003772:	689b      	ldr	r3, [r3, #8]
 8003774:	1840      	adds	r0, r0, r1
 8003776:	07d2      	lsls	r2, r2, #31
 8003778:	d501      	bpl.n	800377e <_ZN8touchgfx8CallbackI12MainViewBasevvvE7executeEv+0x16>
 800377a:	6802      	ldr	r2, [r0, #0]
 800377c:	58d3      	ldr	r3, [r2, r3]
 800377e:	4798      	blx	r3
    }
 8003780:	bd10      	pop	{r4, pc}

08003782 <_ZNK8touchgfx8CallbackI12MainViewBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003782:	6842      	ldr	r2, [r0, #4]
    virtual bool isValid() const
 8003784:	0003      	movs	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003786:	1e10      	subs	r0, r2, #0
 8003788:	d005      	beq.n	8003796 <_ZNK8touchgfx8CallbackI12MainViewBasevvvE7isValidEv+0x14>
 800378a:	689a      	ldr	r2, [r3, #8]
 800378c:	2001      	movs	r0, #1
 800378e:	2a00      	cmp	r2, #0
 8003790:	d101      	bne.n	8003796 <_ZNK8touchgfx8CallbackI12MainViewBasevvvE7isValidEv+0x14>
 8003792:	68db      	ldr	r3, [r3, #12]
 8003794:	4018      	ands	r0, r3
    }
 8003796:	4770      	bx	lr

08003798 <_ZN8touchgfx8CallbackI12MainViewBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003798:	b510      	push	{r4, lr}
 800379a:	0004      	movs	r4, r0
 800379c:	2110      	movs	r1, #16
 800379e:	f00e f9b2 	bl	8011b06 <_ZdlPvj>
 80037a2:	0020      	movs	r0, r4
 80037a4:	bd10      	pop	{r4, pc}
	...

080037a8 <_ZN12MainViewBase11setupScreenEv>:
{
 80037a8:	b510      	push	{r4, lr}
 80037aa:	0004      	movs	r4, r0
    numberAnimator0.initialize();
 80037ac:	3098      	adds	r0, #152	@ 0x98
 80037ae:	f002 f8c7 	bl	8005940 <_ZN14NumberAnimator10initializeEv>
    numberAnimator1.initialize();
 80037b2:	0020      	movs	r0, r4
 80037b4:	3099      	adds	r0, #153	@ 0x99
 80037b6:	30ff      	adds	r0, #255	@ 0xff
 80037b8:	f002 f8c2 	bl	8005940 <_ZN14NumberAnimator10initializeEv>
    qrCodeAnimator.initialize();
 80037bc:	23a6      	movs	r3, #166	@ 0xa6
 80037be:	009b      	lsls	r3, r3, #2
 80037c0:	18e0      	adds	r0, r4, r3
 80037c2:	f002 fafb 	bl	8005dbc <_ZN14QRCodeAnimator10initializeEv>
    imageAnimator.initialize();
 80037c6:	4b05      	ldr	r3, [pc, #20]	@ (80037dc <_ZN12MainViewBase11setupScreenEv+0x34>)
 80037c8:	18e0      	adds	r0, r4, r3
 80037ca:	f001 fbf5 	bl	8004fb8 <_ZN13ImageAnimator10initializeEv>
    circleAnimator.initialize();
 80037ce:	23a4      	movs	r3, #164	@ 0xa4
 80037d0:	011b      	lsls	r3, r3, #4
 80037d2:	18e0      	adds	r0, r4, r3
 80037d4:	f001 fa52 	bl	8004c7c <_ZN14CircleAnimator10initializeEv>
}
 80037d8:	bd10      	pop	{r4, pc}
 80037da:	46c0      	nop			@ (mov r8, r8)
 80037dc:	00000898 	.word	0x00000898

080037e0 <_ZN12MainViewBase14handleKeyEventEh>:

void MainViewBase::handleKeyEvent(uint8_t key)
{
 80037e0:	b510      	push	{r4, lr}
    if(53 == key)
 80037e2:	2935      	cmp	r1, #53	@ 0x35
 80037e4:	d103      	bne.n	80037ee <_ZN12MainViewBase14handleKeyEventEh+0xe>
    {
        //hardwareSelectButtonClicked
        //When hardware button 53 clicked call virtual function
        //Call selectActionHandler
        selectActionHandler();
 80037e6:	6803      	ldr	r3, [r0, #0]
 80037e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    if(54 == key)
    {
        //hardwareNextButtonClicked
        //When hardware button 54 clicked call virtual function
        //Call nextActionHandler
        nextActionHandler();
 80037ea:	4798      	blx	r3
    
    }
}
 80037ec:	bd10      	pop	{r4, pc}
    if(54 == key)
 80037ee:	2936      	cmp	r1, #54	@ 0x36
 80037f0:	d1fc      	bne.n	80037ec <_ZN12MainViewBase14handleKeyEventEh+0xc>
        nextActionHandler();
 80037f2:	6803      	ldr	r3, [r0, #0]
 80037f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037f6:	e7f8      	b.n	80037ea <_ZN12MainViewBase14handleKeyEventEh+0xa>

080037f8 <_ZN12MainViewBaseD1Ev>:

class CircleAnimator : public CircleAnimatorBase
{
public:
    CircleAnimator();
    virtual ~CircleAnimator() {}
 80037f8:	22a4      	movs	r2, #164	@ 0xa4
MainViewBase::~MainViewBase()
 80037fa:	b570      	push	{r4, r5, r6, lr}
 80037fc:	0004      	movs	r4, r0
 80037fe:	4b11      	ldr	r3, [pc, #68]	@ (8003844 <_ZN12MainViewBaseD1Ev+0x4c>)
 8003800:	0112      	lsls	r2, r2, #4
 8003802:	6003      	str	r3, [r0, #0]
 8003804:	4b10      	ldr	r3, [pc, #64]	@ (8003848 <_ZN12MainViewBaseD1Ev+0x50>)
 8003806:	5083      	str	r3, [r0, r2]
}
 8003808:	1880      	adds	r0, r0, r2
 800380a:	f7ff fb3e 	bl	8002e8a <_ZN18CircleAnimatorBaseD1Ev>
        circleAnimationsLogo,
        NUMBER_OF_IMAGES
    };

    ImageAnimator();
    virtual ~ImageAnimator() {}
 800380e:	4a0f      	ldr	r2, [pc, #60]	@ (800384c <_ZN12MainViewBaseD1Ev+0x54>)
 8003810:	4b0f      	ldr	r3, [pc, #60]	@ (8003850 <_ZN12MainViewBaseD1Ev+0x58>)
 8003812:	18a0      	adds	r0, r4, r2
 8003814:	50a3      	str	r3, [r4, r2]
 8003816:	f7ff ff09 	bl	800362c <_ZN17ImageAnimatorBaseD1Ev>

class QRCodeAnimator : public QRCodeAnimatorBase
{
public:
    QRCodeAnimator();
    virtual ~QRCodeAnimator() {}
 800381a:	22a6      	movs	r2, #166	@ 0xa6
 800381c:	4b0d      	ldr	r3, [pc, #52]	@ (8003854 <_ZN12MainViewBaseD1Ev+0x5c>)
 800381e:	0092      	lsls	r2, r2, #2
 8003820:	50a3      	str	r3, [r4, r2]
 8003822:	18a0      	adds	r0, r4, r2
 8003824:	f000 fa67 	bl	8003cf6 <_ZN18QRCodeAnimatorBaseD1Ev>

class NumberAnimator : public NumberAnimatorBase
{
public:
    NumberAnimator();
    virtual ~NumberAnimator() {}
 8003828:	23cc      	movs	r3, #204	@ 0xcc
 800382a:	4d0b      	ldr	r5, [pc, #44]	@ (8003858 <_ZN12MainViewBaseD1Ev+0x60>)
 800382c:	005b      	lsls	r3, r3, #1
 800382e:	50e5      	str	r5, [r4, r3]
 8003830:	18e0      	adds	r0, r4, r3
 8003832:	f000 f9d1 	bl	8003bd8 <_ZN18NumberAnimatorBaseD1Ev>
 8003836:	0020      	movs	r0, r4
 8003838:	3098      	adds	r0, #152	@ 0x98
 800383a:	6005      	str	r5, [r0, #0]
 800383c:	f000 f9cc 	bl	8003bd8 <_ZN18NumberAnimatorBaseD1Ev>
 8003840:	0020      	movs	r0, r4
 8003842:	bd70      	pop	{r4, r5, r6, pc}
 8003844:	08014c48 	.word	0x08014c48
 8003848:	080152ac 	.word	0x080152ac
 800384c:	00000898 	.word	0x00000898
 8003850:	080153ac 	.word	0x080153ac
 8003854:	080156ac 	.word	0x080156ac
 8003858:	08015560 	.word	0x08015560

0800385c <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800385c:	b510      	push	{r4, lr}
 800385e:	0004      	movs	r4, r0
}
 8003860:	f7ff ffca 	bl	80037f8 <_ZN12MainViewBaseD1Ev>
 8003864:	0020      	movs	r0, r4
 8003866:	4902      	ldr	r1, [pc, #8]	@ (8003870 <_ZN12MainViewBaseD0Ev+0x14>)
 8003868:	f00e f94d 	bl	8011b06 <_ZdlPvj>
 800386c:	0020      	movs	r0, r4
 800386e:	bd10      	pop	{r4, pc}
 8003870:	00000f3c 	.word	0x00000f3c

08003874 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003874:	b570      	push	{r4, r5, r6, lr}
 8003876:	0004      	movs	r4, r0
 8003878:	001d      	movs	r5, r3
 800387a:	ab04      	add	r3, sp, #16
 800387c:	2600      	movs	r6, #0
 800387e:	5f9e      	ldrsh	r6, [r3, r6]
        setXY(x, y);
 8003880:	f7ff fb8f 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003884:	6823      	ldr	r3, [r4, #0]
 8003886:	0029      	movs	r1, r5
 8003888:	0020      	movs	r0, r4
 800388a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800388c:	4798      	blx	r3
        setHeight(height);
 800388e:	6823      	ldr	r3, [r4, #0]
 8003890:	0031      	movs	r1, r6
 8003892:	0020      	movs	r0, r4
 8003894:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003896:	4798      	blx	r3
    }
 8003898:	bd70      	pop	{r4, r5, r6, pc}
	...

0800389c <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800389c:	4b09      	ldr	r3, [pc, #36]	@ (80038c4 <_ZN8touchgfx3BoxC1Ev+0x28>)
          touchable(false),
 800389e:	2280      	movs	r2, #128	@ 0x80
 80038a0:	6003      	str	r3, [r0, #0]
 80038a2:	21ff      	movs	r1, #255	@ 0xff
 80038a4:	2300      	movs	r3, #0
 80038a6:	0052      	lsls	r2, r2, #1
 80038a8:	8482      	strh	r2, [r0, #36]	@ 0x24
 80038aa:	1dc2      	adds	r2, r0, #7
 80038ac:	6043      	str	r3, [r0, #4]
 80038ae:	6083      	str	r3, [r0, #8]
 80038b0:	60c3      	str	r3, [r0, #12]
 80038b2:	6103      	str	r3, [r0, #16]
          parent(0),
 80038b4:	6143      	str	r3, [r0, #20]
          nextSibling(0),
 80038b6:	6183      	str	r3, [r0, #24]
          nextDrawChainElement(0),
 80038b8:	61c3      	str	r3, [r0, #28]
          cachedAbsX(0),
 80038ba:	6203      	str	r3, [r0, #32]
 80038bc:	77d1      	strb	r1, [r2, #31]
        : color(col)
 80038be:	6283      	str	r3, [r0, #40]	@ 0x28
    {
    }
 80038c0:	4770      	bx	lr
 80038c2:	46c0      	nop			@ (mov r8, r8)
 80038c4:	08015904 	.word	0x08015904

080038c8 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 80038c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80038ca:	0005      	movs	r5, r0
 80038cc:	b097      	sub	sp, #92	@ 0x5c
        : presenter(0)
 80038ce:	f008 ff03 	bl	800c6d8 <_ZN8touchgfx6ScreenC1Ev>
    imageAnimatorImageIsOutCallback(this, &MainViewBase::imageAnimatorImageIsOutCallbackHandler)
 80038d2:	4bb2      	ldr	r3, [pc, #712]	@ (8003b9c <_ZN12MainViewBaseC1Ev+0x2d4>)
 80038d4:	2700      	movs	r7, #0
 80038d6:	602b      	str	r3, [r5, #0]
 80038d8:	002b      	movs	r3, r5
 80038da:	3340      	adds	r3, #64	@ 0x40
 80038dc:	0018      	movs	r0, r3
 80038de:	63ef      	str	r7, [r5, #60]	@ 0x3c
 80038e0:	930c      	str	r3, [sp, #48]	@ 0x30
 80038e2:	f7ff ffdb 	bl	800389c <_ZN8touchgfx3BoxC1Ev>
 80038e6:	002b      	movs	r3, r5
 80038e8:	336c      	adds	r3, #108	@ 0x6c
 80038ea:	0018      	movs	r0, r3
 80038ec:	930d      	str	r3, [sp, #52]	@ 0x34
 80038ee:	f7ff ffd5 	bl	800389c <_ZN8touchgfx3BoxC1Ev>
 80038f2:	002b      	movs	r3, r5
 80038f4:	3398      	adds	r3, #152	@ 0x98
 80038f6:	0018      	movs	r0, r3
 80038f8:	930e      	str	r3, [sp, #56]	@ 0x38
 80038fa:	f001 ff81 	bl	8005800 <_ZN14NumberAnimatorC1Ev>
 80038fe:	002b      	movs	r3, r5
 8003900:	3399      	adds	r3, #153	@ 0x99
 8003902:	33ff      	adds	r3, #255	@ 0xff
 8003904:	0018      	movs	r0, r3
 8003906:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003908:	f001 ff7a 	bl	8005800 <_ZN14NumberAnimatorC1Ev>
 800390c:	23a6      	movs	r3, #166	@ 0xa6
 800390e:	009b      	lsls	r3, r3, #2
 8003910:	18eb      	adds	r3, r5, r3
 8003912:	0018      	movs	r0, r3
 8003914:	9310      	str	r3, [sp, #64]	@ 0x40
 8003916:	f002 f897 	bl	8005a48 <_ZN14QRCodeAnimatorC1Ev>
 800391a:	4ba1      	ldr	r3, [pc, #644]	@ (8003ba0 <_ZN12MainViewBaseC1Ev+0x2d8>)
 800391c:	2601      	movs	r6, #1
 800391e:	18eb      	adds	r3, r5, r3
 8003920:	0018      	movs	r0, r3
 8003922:	9311      	str	r3, [sp, #68]	@ 0x44
 8003924:	f001 fa48 	bl	8004db8 <_ZN13ImageAnimatorC1Ev>
 8003928:	23a4      	movs	r3, #164	@ 0xa4
 800392a:	011b      	lsls	r3, r3, #4
 800392c:	18eb      	adds	r3, r5, r3
 800392e:	0018      	movs	r0, r3
 8003930:	9312      	str	r3, [sp, #72]	@ 0x48
 8003932:	f000 ffab 	bl	800488c <_ZN14CircleAnimatorC1Ev>
 8003936:	23da      	movs	r3, #218	@ 0xda
 8003938:	011b      	lsls	r3, r3, #4
 800393a:	ac15      	add	r4, sp, #84	@ 0x54
 800393c:	4276      	negs	r6, r6
 800393e:	18eb      	adds	r3, r5, r3
 8003940:	0021      	movs	r1, r4
 8003942:	8026      	strh	r6, [r4, #0]
 8003944:	0018      	movs	r0, r3
 8003946:	9303      	str	r3, [sp, #12]
 8003948:	f7ff fb38 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800394c:	4b95      	ldr	r3, [pc, #596]	@ (8003ba4 <_ZN12MainViewBaseC1Ev+0x2dc>)
 800394e:	0021      	movs	r1, r4
 8003950:	18eb      	adds	r3, r5, r3
 8003952:	8026      	strh	r6, [r4, #0]
 8003954:	0018      	movs	r0, r3
 8003956:	9304      	str	r3, [sp, #16]
 8003958:	f7ff fb30 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800395c:	4b92      	ldr	r3, [pc, #584]	@ (8003ba8 <_ZN12MainViewBaseC1Ev+0x2e0>)
 800395e:	0021      	movs	r1, r4
 8003960:	18eb      	adds	r3, r5, r3
 8003962:	8026      	strh	r6, [r4, #0]
 8003964:	0018      	movs	r0, r3
 8003966:	9305      	str	r3, [sp, #20]
 8003968:	f7ff fb28 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800396c:	4b8f      	ldr	r3, [pc, #572]	@ (8003bac <_ZN12MainViewBaseC1Ev+0x2e4>)
 800396e:	0021      	movs	r1, r4
 8003970:	18eb      	adds	r3, r5, r3
 8003972:	8026      	strh	r6, [r4, #0]
 8003974:	0018      	movs	r0, r3
 8003976:	9306      	str	r3, [sp, #24]
 8003978:	f7ff fb20 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800397c:	23e5      	movs	r3, #229	@ 0xe5
 800397e:	011b      	lsls	r3, r3, #4
 8003980:	18eb      	adds	r3, r5, r3
 8003982:	0021      	movs	r1, r4
 8003984:	8026      	strh	r6, [r4, #0]
 8003986:	0018      	movs	r0, r3
 8003988:	9307      	str	r3, [sp, #28]
 800398a:	f7ff fb17 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800398e:	4b88      	ldr	r3, [pc, #544]	@ (8003bb0 <_ZN12MainViewBaseC1Ev+0x2e8>)
 8003990:	0021      	movs	r1, r4
 8003992:	18eb      	adds	r3, r5, r3
 8003994:	8026      	strh	r6, [r4, #0]
 8003996:	0018      	movs	r0, r3
 8003998:	9308      	str	r3, [sp, #32]
 800399a:	f7ff fb0f 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800399e:	4b85      	ldr	r3, [pc, #532]	@ (8003bb4 <_ZN12MainViewBaseC1Ev+0x2ec>)
 80039a0:	0021      	movs	r1, r4
 80039a2:	18eb      	adds	r3, r5, r3
 80039a4:	8026      	strh	r6, [r4, #0]
 80039a6:	0018      	movs	r0, r3
 80039a8:	9309      	str	r3, [sp, #36]	@ 0x24
 80039aa:	f7ff fb07 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80039ae:	4b82      	ldr	r3, [pc, #520]	@ (8003bb8 <_ZN12MainViewBaseC1Ev+0x2f0>)
 80039b0:	0021      	movs	r1, r4
 80039b2:	18eb      	adds	r3, r5, r3
 80039b4:	8026      	strh	r6, [r4, #0]
 80039b6:	0018      	movs	r0, r3
 80039b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80039ba:	f7ff faff 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80039be:	23f0      	movs	r3, #240	@ 0xf0
 80039c0:	011b      	lsls	r3, r3, #4
 80039c2:	18eb      	adds	r3, r5, r3
 80039c4:	0021      	movs	r1, r4
 80039c6:	8026      	strh	r6, [r4, #0]
 80039c8:	0018      	movs	r0, r3
 80039ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 80039cc:	f7ff faf6 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_0)
 80039d0:	4b7a      	ldr	r3, [pc, #488]	@ (8003bbc <_ZN12MainViewBaseC1Ev+0x2f4>)
 80039d2:	4a7b      	ldr	r2, [pc, #492]	@ (8003bc0 <_ZN12MainViewBaseC1Ev+0x2f8>)
    __background.setPosition(0, 0, 240, 320);
 80039d4:	0039      	movs	r1, r7
 80039d6:	50ab      	str	r3, [r5, r2]
 80039d8:	18ab      	adds	r3, r5, r2
 80039da:	605d      	str	r5, [r3, #4]
 80039dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80039de:	4a79      	ldr	r2, [pc, #484]	@ (8003bc4 <_ZN12MainViewBaseC1Ev+0x2fc>)
 80039e0:	4b79      	ldr	r3, [pc, #484]	@ (8003bc8 <_ZN12MainViewBaseC1Ev+0x300>)
 80039e2:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80039e4:	50ab      	str	r3, [r5, r2]
 80039e6:	4b79      	ldr	r3, [pc, #484]	@ (8003bcc <_ZN12MainViewBaseC1Ev+0x304>)
 80039e8:	003a      	movs	r2, r7
 80039ea:	50ef      	str	r7, [r5, r3]
 80039ec:	23a0      	movs	r3, #160	@ 0xa0
 80039ee:	005b      	lsls	r3, r3, #1
 80039f0:	9300      	str	r3, [sp, #0]
 80039f2:	3b50      	subs	r3, #80	@ 0x50
 80039f4:	f7ff ff3e 	bl	8003874 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80039f8:	23ff      	movs	r3, #255	@ 0xff
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80039fa:	1d2e      	adds	r6, r5, #4
 80039fc:	061b      	lsls	r3, r3, #24
 80039fe:	0030      	movs	r0, r6
 8003a00:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8003a02:	66ab      	str	r3, [r5, #104]	@ 0x68
 8003a04:	f003 fa85 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circleCenter.setPosition(30, 30, 180, 180);
 8003a08:	23b4      	movs	r3, #180	@ 0xb4
 8003a0a:	221e      	movs	r2, #30
 8003a0c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8003a0e:	0011      	movs	r1, r2
 8003a10:	9300      	str	r3, [sp, #0]
 8003a12:	f7ff ff2f 	bl	8003874 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a16:	002b      	movs	r3, r5
 8003a18:	4a6d      	ldr	r2, [pc, #436]	@ (8003bd0 <_ZN12MainViewBaseC1Ev+0x308>)
 8003a1a:	3394      	adds	r3, #148	@ 0x94
 8003a1c:	601a      	str	r2, [r3, #0]
 8003a1e:	0030      	movs	r0, r6
 8003a20:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8003a22:	f003 fa76 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    numberAnimator0.setXY(53, 34);
 8003a26:	2222      	movs	r2, #34	@ 0x22
 8003a28:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8003a2a:	2135      	movs	r1, #53	@ 0x35
 8003a2c:	f7ff fab9 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003a30:	0030      	movs	r0, r6
 8003a32:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8003a34:	f003 fa6d 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    numberAnimator1.setXY(120, 34);
 8003a38:	2222      	movs	r2, #34	@ 0x22
 8003a3a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8003a3c:	2178      	movs	r1, #120	@ 0x78
 8003a3e:	f7ff fab0 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003a42:	0030      	movs	r0, r6
 8003a44:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8003a46:	f003 fa64 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrCodeAnimator.setXY(66, 51);
 8003a4a:	2233      	movs	r2, #51	@ 0x33
 8003a4c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8003a4e:	2142      	movs	r1, #66	@ 0x42
 8003a50:	f7ff faa7 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003a54:	0030      	movs	r0, r6
 8003a56:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8003a58:	f003 fa5b 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imageAnimator.setXY(0, 0);
 8003a5c:	003a      	movs	r2, r7
 8003a5e:	0039      	movs	r1, r7
 8003a60:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8003a62:	f7ff fa9e 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
        this->imageIsOutCallback = &callback;
 8003a66:	4b5b      	ldr	r3, [pc, #364]	@ (8003bd4 <_ZN12MainViewBaseC1Ev+0x30c>)
 8003a68:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8003a6a:	18eb      	adds	r3, r5, r3
 8003a6c:	601a      	str	r2, [r3, #0]
 8003a6e:	0030      	movs	r0, r6
 8003a70:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8003a72:	f003 fa4e 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circleAnimator.setXY(35, 35);
 8003a76:	2223      	movs	r2, #35	@ 0x23
 8003a78:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8003a7a:	0011      	movs	r1, r2
 8003a7c:	f7ff fa91 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003a80:	0030      	movs	r0, r6
 8003a82:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8003a84:	f003 fa45 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circleTop.setXY(53, 19);
 8003a88:	2213      	movs	r2, #19
 8003a8a:	9803      	ldr	r0, [sp, #12]
 8003a8c:	2135      	movs	r1, #53	@ 0x35
 8003a8e:	f7ff fa88 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003a92:	230a      	movs	r3, #10
    circleTop.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLETOP_ID));
 8003a94:	0021      	movs	r1, r4
 8003a96:	8023      	strh	r3, [r4, #0]
 8003a98:	9803      	ldr	r0, [sp, #12]
 8003a9a:	f005 f91a 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003a9e:	0030      	movs	r0, r6
 8003aa0:	9903      	ldr	r1, [sp, #12]
 8003aa2:	f003 fa36 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circleBottom.setXY(53, 174);
 8003aa6:	22ae      	movs	r2, #174	@ 0xae
 8003aa8:	9804      	ldr	r0, [sp, #16]
 8003aaa:	2135      	movs	r1, #53	@ 0x35
 8003aac:	f7ff fa79 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003ab0:	2307      	movs	r3, #7
    circleBottom.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLEBOTTOM_ID));
 8003ab2:	0021      	movs	r1, r4
 8003ab4:	8023      	strh	r3, [r4, #0]
 8003ab6:	9804      	ldr	r0, [sp, #16]
 8003ab8:	f005 f90b 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003abc:	0030      	movs	r0, r6
 8003abe:	9904      	ldr	r1, [sp, #16]
 8003ac0:	f003 fa27 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circleLeft.setXY(0, 20);
 8003ac4:	2214      	movs	r2, #20
 8003ac6:	0039      	movs	r1, r7
 8003ac8:	9805      	ldr	r0, [sp, #20]
 8003aca:	f7ff fa6a 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003ace:	2308      	movs	r3, #8
    circleLeft.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLELEFTFULL_ID));
 8003ad0:	0021      	movs	r1, r4
 8003ad2:	8023      	strh	r3, [r4, #0]
 8003ad4:	9805      	ldr	r0, [sp, #20]
 8003ad6:	f005 f8fc 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003ada:	0030      	movs	r0, r6
 8003adc:	9905      	ldr	r1, [sp, #20]
 8003ade:	f003 fa18 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circleRight.setXY(187, 20);
 8003ae2:	2214      	movs	r2, #20
 8003ae4:	9806      	ldr	r0, [sp, #24]
 8003ae6:	21bb      	movs	r1, #187	@ 0xbb
 8003ae8:	f7ff fa5b 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003aec:	2309      	movs	r3, #9
    circleRight.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLERIGHTFULL_ID));
 8003aee:	0021      	movs	r1, r4
 8003af0:	8023      	strh	r3, [r4, #0]
 8003af2:	9806      	ldr	r0, [sp, #24]
 8003af4:	f005 f8ed 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003af8:	0030      	movs	r0, r6
 8003afa:	9906      	ldr	r1, [sp, #24]
 8003afc:	f003 fa09 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundTop.setXY(0, 0);
 8003b00:	003a      	movs	r2, r7
 8003b02:	0039      	movs	r1, r7
 8003b04:	9807      	ldr	r0, [sp, #28]
 8003b06:	f7ff fa4c 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003b0a:	2306      	movs	r3, #6
    backgroundTop.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUNDTOP_ID));
 8003b0c:	0021      	movs	r1, r4
 8003b0e:	8023      	strh	r3, [r4, #0]
 8003b10:	9807      	ldr	r0, [sp, #28]
 8003b12:	f005 f8de 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b16:	0030      	movs	r0, r6
 8003b18:	9907      	ldr	r1, [sp, #28]
 8003b1a:	f003 f9fa 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundBottom.setXY(0, 220);
 8003b1e:	22dc      	movs	r2, #220	@ 0xdc
 8003b20:	0039      	movs	r1, r7
 8003b22:	9808      	ldr	r0, [sp, #32]
 8003b24:	f7ff fa3d 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003b28:	2305      	movs	r3, #5
    backgroundBottom.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUNDBOTTOM_ID));
 8003b2a:	0021      	movs	r1, r4
 8003b2c:	8023      	strh	r3, [r4, #0]
 8003b2e:	9808      	ldr	r0, [sp, #32]
 8003b30:	f005 f8cf 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b34:	0030      	movs	r0, r6
 8003b36:	9908      	ldr	r1, [sp, #32]
 8003b38:	f003 f9eb 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    selectText.setXY(10, 10);
 8003b3c:	220a      	movs	r2, #10
 8003b3e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003b40:	0011      	movs	r1, r2
 8003b42:	f7ff fa2e 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003b46:	230b      	movs	r3, #11
    selectText.setBitmap(touchgfx::Bitmap(BITMAP_ENTER_TEXT_ID));
 8003b48:	0021      	movs	r1, r4
 8003b4a:	8023      	strh	r3, [r4, #0]
 8003b4c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003b4e:	f005 f8c0 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b52:	0030      	movs	r0, r6
 8003b54:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003b56:	f003 f9dc 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    nextIcon.setXY(210, 8);
 8003b5a:	2208      	movs	r2, #8
 8003b5c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003b5e:	21d2      	movs	r1, #210	@ 0xd2
 8003b60:	f7ff fa1f 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003b64:	230e      	movs	r3, #14
    nextIcon.setBitmap(touchgfx::Bitmap(BITMAP_NEXT_ICON_ID));
 8003b66:	0021      	movs	r1, r4
 8003b68:	8023      	strh	r3, [r4, #0]
 8003b6a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003b6c:	f005 f8b1 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b70:	0030      	movs	r0, r6
 8003b72:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003b74:	f003 f9cd 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    demoNameText.setXY(48, 222);
 8003b78:	22de      	movs	r2, #222	@ 0xde
 8003b7a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8003b7c:	2130      	movs	r1, #48	@ 0x30
 8003b7e:	f7ff fa10 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003b82:	2318      	movs	r3, #24
    demoNameText.setBitmap(touchgfx::Bitmap(BITMAP_TITLE_QR_ID));
 8003b84:	0021      	movs	r1, r4
 8003b86:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8003b88:	8023      	strh	r3, [r4, #0]
 8003b8a:	f005 f8a2 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b8e:	0030      	movs	r0, r6
 8003b90:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003b92:	f003 f9be 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003b96:	0028      	movs	r0, r5
 8003b98:	b017      	add	sp, #92	@ 0x5c
 8003b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b9c:	08014c48 	.word	0x08014c48
 8003ba0:	00000898 	.word	0x00000898
 8003ba4:	00000dcc 	.word	0x00000dcc
 8003ba8:	00000df8 	.word	0x00000df8
 8003bac:	00000e24 	.word	0x00000e24
 8003bb0:	00000e7c 	.word	0x00000e7c
 8003bb4:	00000ea8 	.word	0x00000ea8
 8003bb8:	00000ed4 	.word	0x00000ed4
 8003bbc:	08014c30 	.word	0x08014c30
 8003bc0:	00000f2c 	.word	0x00000f2c
 8003bc4:	00000f34 	.word	0x00000f34
 8003bc8:	0800375d 	.word	0x0800375d
 8003bcc:	00000f38 	.word	0x00000f38
 8003bd0:	ffe8f4f8 	.word	0xffe8f4f8
 8003bd4:	00000a24 	.word	0x00000a24

08003bd8 <_ZN18NumberAnimatorBaseD1Ev>:
}

NumberAnimatorBase::~NumberAnimatorBase()
{

}
 8003bd8:	4770      	bx	lr

08003bda <_ZN18NumberAnimatorBase10initializeEv>:

void NumberAnimatorBase::initialize()
{

}
 8003bda:	4770      	bx	lr

08003bdc <_ZN18NumberAnimatorBaseD0Ev>:
NumberAnimatorBase::~NumberAnimatorBase()
 8003bdc:	b510      	push	{r4, lr}
 8003bde:	0004      	movs	r4, r0
}
 8003be0:	21dc      	movs	r1, #220	@ 0xdc
 8003be2:	f00d ff90 	bl	8011b06 <_ZdlPvj>
 8003be6:	0020      	movs	r0, r4
 8003be8:	bd10      	pop	{r4, pc}
	...

08003bec <_ZN18NumberAnimatorBaseC1Ev>:
NumberAnimatorBase::NumberAnimatorBase()
 8003bec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003bee:	0004      	movs	r4, r0
          touchable(false),
 8003bf0:	2380      	movs	r3, #128	@ 0x80
 8003bf2:	0007      	movs	r7, r0
        : x(0), y(0), width(0), height(0)
 8003bf4:	2500      	movs	r5, #0
 8003bf6:	0026      	movs	r6, r4
 8003bf8:	005b      	lsls	r3, r3, #1
 8003bfa:	8483      	strh	r3, [r0, #36]	@ 0x24
 8003bfc:	4b1e      	ldr	r3, [pc, #120]	@ (8003c78 <_ZN18NumberAnimatorBaseC1Ev+0x8c>)
 8003bfe:	372c      	adds	r7, #44	@ 0x2c
 8003c00:	3684      	adds	r6, #132	@ 0x84
 8003c02:	6045      	str	r5, [r0, #4]
 8003c04:	6085      	str	r5, [r0, #8]
 8003c06:	60c5      	str	r5, [r0, #12]
 8003c08:	6105      	str	r5, [r0, #16]
          parent(0),
 8003c0a:	6145      	str	r5, [r0, #20]
          nextSibling(0),
 8003c0c:	6185      	str	r5, [r0, #24]
          nextDrawChainElement(0),
 8003c0e:	61c5      	str	r5, [r0, #28]
          cachedAbsX(0),
 8003c10:	6205      	str	r5, [r0, #32]
 8003c12:	6285      	str	r5, [r0, #40]	@ 0x28
 8003c14:	6003      	str	r3, [r0, #0]
 8003c16:	0038      	movs	r0, r7
 8003c18:	f7ff f9ec 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
 8003c1c:	0030      	movs	r0, r6
 8003c1e:	f7ff f9e9 	bl	8002ff4 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEEC1Ev>
        rect.width = width;
 8003c22:	4b16      	ldr	r3, [pc, #88]	@ (8003c7c <_ZN18NumberAnimatorBaseC1Ev+0x90>)
    numberImage0.setXY(0, 11);
 8003c24:	0029      	movs	r1, r5
 8003c26:	0038      	movs	r0, r7
 8003c28:	60a3      	str	r3, [r4, #8]
 8003c2a:	220b      	movs	r2, #11
 8003c2c:	f7ff f9b9 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003c30:	230f      	movs	r3, #15
 8003c32:	466a      	mov	r2, sp
    numberImage0.setBitmap(touchgfx::Bitmap(BITMAP_NUMBERS_ID));
 8003c34:	0038      	movs	r0, r7
 8003c36:	8093      	strh	r3, [r2, #4]
 8003c38:	a901      	add	r1, sp, #4
 8003c3a:	f005 f84a 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003c3e:	0022      	movs	r2, r4
 8003c40:	3254      	adds	r2, #84	@ 0x54
    add(numberImage0);
 8003c42:	0039      	movs	r1, r7
 8003c44:	7015      	strb	r5, [r2, #0]
 8003c46:	0020      	movs	r0, r4
 8003c48:	f003 f963 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    numberImage1.setXY(0, 1515);
 8003c4c:	0029      	movs	r1, r5
 8003c4e:	0030      	movs	r0, r6
 8003c50:	4a0b      	ldr	r2, [pc, #44]	@ (8003c80 <_ZN18NumberAnimatorBaseC1Ev+0x94>)
 8003c52:	f7ff f9a6 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8003c56:	466a      	mov	r2, sp
 8003c58:	230f      	movs	r3, #15
    numberImage1.setBitmap(touchgfx::Bitmap(BITMAP_NUMBERS_ID));
 8003c5a:	0030      	movs	r0, r6
 8003c5c:	8093      	strh	r3, [r2, #4]
 8003c5e:	a901      	add	r1, sp, #4
 8003c60:	f005 f837 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003c64:	0023      	movs	r3, r4
 8003c66:	33ac      	adds	r3, #172	@ 0xac
    add(numberImage1);
 8003c68:	0031      	movs	r1, r6
 8003c6a:	0020      	movs	r0, r4
 8003c6c:	701d      	strb	r5, [r3, #0]
 8003c6e:	f003 f950 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003c72:	0020      	movs	r0, r4
 8003c74:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003c76:	46c0      	nop			@ (mov r8, r8)
 8003c78:	08014c88 	.word	0x08014c88
 8003c7c:	00ac0043 	.word	0x00ac0043
 8003c80:	000005eb 	.word	0x000005eb

08003c84 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003c84:	b530      	push	{r4, r5, lr}
 8003c86:	b085      	sub	sp, #20
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003c88:	466d      	mov	r5, sp
    virtual void setWidth(int16_t width)
 8003c8a:	0004      	movs	r4, r0
        boundingArea = calculateBoundingArea();
 8003c8c:	6803      	ldr	r3, [r0, #0]
 8003c8e:	8101      	strh	r1, [r0, #8]
 8003c90:	3308      	adds	r3, #8
 8003c92:	0001      	movs	r1, r0
 8003c94:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003c96:	0028      	movs	r0, r5
 8003c98:	4798      	blx	r3
 8003c9a:	343c      	adds	r4, #60	@ 0x3c
 8003c9c:	cd0d      	ldmia	r5!, {r0, r2, r3}
 8003c9e:	c40d      	stmia	r4!, {r0, r2, r3}
    }
 8003ca0:	b005      	add	sp, #20
 8003ca2:	bd30      	pop	{r4, r5, pc}

08003ca4 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8003ca4:	b530      	push	{r4, r5, lr}
 8003ca6:	b085      	sub	sp, #20
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003ca8:	466d      	mov	r5, sp
    virtual void setHeight(int16_t height)
 8003caa:	0004      	movs	r4, r0
        boundingArea = calculateBoundingArea();
 8003cac:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8003cae:	8141      	strh	r1, [r0, #10]
 8003cb0:	3308      	adds	r3, #8
 8003cb2:	0001      	movs	r1, r0
 8003cb4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003cb6:	0028      	movs	r0, r5
 8003cb8:	4798      	blx	r3
 8003cba:	343c      	adds	r4, #60	@ 0x3c
 8003cbc:	cd0d      	ldmia	r5!, {r0, r2, r3}
 8003cbe:	c40d      	stmia	r4!, {r0, r2, r3}
    }
 8003cc0:	b005      	add	sp, #20
 8003cc2:	bd30      	pop	{r4, r5, pc}

08003cc4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8003cc4:	2300      	movs	r3, #0
 8003cc6:	8003      	strh	r3, [r0, #0]
 8003cc8:	8043      	strh	r3, [r0, #2]
 8003cca:	8083      	strh	r3, [r0, #4]
 8003ccc:	80c3      	strh	r3, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003cce:	4770      	bx	lr

08003cd0 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003cd0:	3036      	adds	r0, #54	@ 0x36
 8003cd2:	7001      	strb	r1, [r0, #0]
    }
 8003cd4:	4770      	bx	lr

08003cd6 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003cd6:	b570      	push	{r4, r5, r6, lr}
 8003cd8:	0004      	movs	r4, r0
 8003cda:	0015      	movs	r5, r2
    {
        setX(x);
 8003cdc:	6803      	ldr	r3, [r0, #0]
 8003cde:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003ce0:	4798      	blx	r3
        setBaselineY(baselineY);
 8003ce2:	6823      	ldr	r3, [r4, #0]
 8003ce4:	0029      	movs	r1, r5
 8003ce6:	0020      	movs	r0, r4
 8003ce8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003cea:	4798      	blx	r3
    }
 8003cec:	bd70      	pop	{r4, r5, r6, pc}

08003cee <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8003cee:	2000      	movs	r0, #0
 8003cf0:	4770      	bx	lr

08003cf2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
        wc1 = value;
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
 8003cf2:	6c80      	ldr	r0, [r0, #72]	@ 0x48
    }
 8003cf4:	4770      	bx	lr

08003cf6 <_ZN18QRCodeAnimatorBaseD1Ev>:
}

QRCodeAnimatorBase::~QRCodeAnimatorBase()
{

}
 8003cf6:	4770      	bx	lr

08003cf8 <_ZN18QRCodeAnimatorBase10initializeEv>:

void QRCodeAnimatorBase::initialize()
{

}
 8003cf8:	4770      	bx	lr

08003cfa <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003cfa:	4770      	bx	lr

08003cfc <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED1Ev>:
class FadeAnimator : public T
 8003cfc:	4770      	bx	lr

08003cfe <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEED1Ev>:
 8003cfe:	4770      	bx	lr

08003d00 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21setFadeAnimationDelayEt>:
        fadeAnimationDelay = delay;
 8003d00:	3050      	adds	r0, #80	@ 0x50
 8003d02:	8001      	strh	r1, [r0, #0]
    }
 8003d04:	4770      	bx	lr

08003d06 <_ZNK8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21getFadeAnimationDelayEv>:
        return fadeAnimationDelay;
 8003d06:	3050      	adds	r0, #80	@ 0x50
 8003d08:	8800      	ldrh	r0, [r0, #0]
    }
 8003d0a:	4770      	bx	lr

08003d0c <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21setFadeAnimationDelayEt>:
        fadeAnimationDelay = delay;
 8003d0c:	305a      	adds	r0, #90	@ 0x5a
 8003d0e:	8001      	strh	r1, [r0, #0]
    }
 8003d10:	4770      	bx	lr

08003d12 <_ZNK8touchgfx12FadeAnimatorINS_6QRCodeEE21getFadeAnimationDelayEv>:
        return fadeAnimationDelay;
 8003d12:	305a      	adds	r0, #90	@ 0x5a
 8003d14:	8800      	ldrh	r0, [r0, #0]
    }
 8003d16:	4770      	bx	lr

08003d18 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003d18:	b510      	push	{r4, lr}
 8003d1a:	0004      	movs	r4, r0
 8003d1c:	214c      	movs	r1, #76	@ 0x4c
 8003d1e:	f00d fef2 	bl	8011b06 <_ZdlPvj>
 8003d22:	0020      	movs	r0, r4
 8003d24:	bd10      	pop	{r4, pc}

08003d26 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED0Ev>:
class FadeAnimator : public T
 8003d26:	b510      	push	{r4, lr}
 8003d28:	0004      	movs	r4, r0
 8003d2a:	2160      	movs	r1, #96	@ 0x60
 8003d2c:	f00d feeb 	bl	8011b06 <_ZdlPvj>
 8003d30:	0020      	movs	r0, r4
 8003d32:	bd10      	pop	{r4, pc}

08003d34 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEED0Ev>:
 8003d34:	b510      	push	{r4, lr}
 8003d36:	0004      	movs	r4, r0
 8003d38:	216c      	movs	r1, #108	@ 0x6c
 8003d3a:	f00d fee4 	bl	8011b06 <_ZdlPvj>
 8003d3e:	0020      	movs	r0, r4
 8003d40:	bd10      	pop	{r4, pc}
	...

08003d44 <_ZN18QRCodeAnimatorBaseD0Ev>:
QRCodeAnimatorBase::~QRCodeAnimatorBase()
 8003d44:	b510      	push	{r4, lr}
 8003d46:	0004      	movs	r4, r0
}
 8003d48:	4902      	ldr	r1, [pc, #8]	@ (8003d54 <_ZN18QRCodeAnimatorBaseD0Ev+0x10>)
 8003d4a:	f00d fedc 	bl	8011b06 <_ZdlPvj>
 8003d4e:	0020      	movs	r0, r4
 8003d50:	bd10      	pop	{r4, pc}
 8003d52:	46c0      	nop			@ (mov r8, r8)
 8003d54:	000005e4 	.word	0x000005e4

08003d58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003d58:	b510      	push	{r4, lr}
        Widget::invalidateContent();
 8003d5a:	f7ff f8be 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003d5e:	bd10      	pop	{r4, pc}

08003d60 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003d60:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003d62:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003d64:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d66:	4b12      	ldr	r3, [pc, #72]	@ (8003db0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
    virtual void setBaselineY(int16_t baselineY)
 8003d68:	0005      	movs	r5, r0
 8003d6a:	681a      	ldr	r2, [r3, #0]
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003d6c:	b28c      	uxth	r4, r1
 8003d6e:	2a00      	cmp	r2, #0
 8003d70:	d105      	bne.n	8003d7e <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 8003d72:	216c      	movs	r1, #108	@ 0x6c
 8003d74:	4b0f      	ldr	r3, [pc, #60]	@ (8003db4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003d76:	4a10      	ldr	r2, [pc, #64]	@ (8003db8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003d78:	4810      	ldr	r0, [pc, #64]	@ (8003dbc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d7a:	f00e fcf1 	bl	8012760 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003d7e:	4910      	ldr	r1, [pc, #64]	@ (8003dc0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8003d80:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d82:	8809      	ldrh	r1, [r1, #0]
 8003d84:	4299      	cmp	r1, r3
 8003d86:	d804      	bhi.n	8003d92 <_ZN8touchgfx8TextArea12setBaselineYEs+0x32>
 8003d88:	216d      	movs	r1, #109	@ 0x6d
 8003d8a:	4b0e      	ldr	r3, [pc, #56]	@ (8003dc4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003d8c:	4a0a      	ldr	r2, [pc, #40]	@ (8003db8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003d8e:	480b      	ldr	r0, [pc, #44]	@ (8003dbc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003d90:	e7f3      	b.n	8003d7a <_ZN8touchgfx8TextArea12setBaselineYEs+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003d92:	005b      	lsls	r3, r3, #1
 8003d94:	5c9b      	ldrb	r3, [r3, r2]
 8003d96:	4a0c      	ldr	r2, [pc, #48]	@ (8003dc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003d98:	009b      	lsls	r3, r3, #2
 8003d9a:	6812      	ldr	r2, [r2, #0]
 8003d9c:	5898      	ldr	r0, [r3, r2]
 8003d9e:	6803      	ldr	r3, [r0, #0]
 8003da0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003da2:	4798      	blx	r3
 8003da4:	1a21      	subs	r1, r4, r0
 8003da6:	b209      	sxth	r1, r1
 8003da8:	0028      	movs	r0, r5
 8003daa:	47b0      	blx	r6
    }
 8003dac:	bd70      	pop	{r4, r5, r6, pc}
 8003dae:	46c0      	nop			@ (mov r8, r8)
 8003db0:	200035c8 	.word	0x200035c8
 8003db4:	08014d14 	.word	0x08014d14
 8003db8:	08014d56 	.word	0x08014d56
 8003dbc:	08014d91 	.word	0x08014d91
 8003dc0:	200035cc 	.word	0x200035cc
 8003dc4:	08014dd8 	.word	0x08014dd8
 8003dc8:	200035d0 	.word	0x200035d0

08003dcc <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv>:
        if (fadeAnimationRunning)
 8003dcc:	0003      	movs	r3, r0
    virtual void handleTickEvent()
 8003dce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        if (fadeAnimationRunning)
 8003dd0:	334c      	adds	r3, #76	@ 0x4c
 8003dd2:	9301      	str	r3, [sp, #4]
 8003dd4:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8003dd6:	0004      	movs	r4, r0
        if (fadeAnimationRunning)
 8003dd8:	2b00      	cmp	r3, #0
 8003dda:	d047      	beq.n	8003e6c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0xa0>
            fadeAnimationCounter++;
 8003ddc:	0006      	movs	r6, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8003dde:	0003      	movs	r3, r0
            fadeAnimationCounter++;
 8003de0:	364e      	adds	r6, #78	@ 0x4e
 8003de2:	8831      	ldrh	r1, [r6, #0]
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8003de4:	3350      	adds	r3, #80	@ 0x50
            fadeAnimationCounter++;
 8003de6:	3101      	adds	r1, #1
 8003de8:	b289      	uxth	r1, r1
 8003dea:	8031      	strh	r1, [r6, #0]
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8003dec:	8818      	ldrh	r0, [r3, #0]
 8003dee:	4281      	cmp	r1, r0
 8003df0:	d33c      	bcc.n	8003e6c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0xa0>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8003df2:	0022      	movs	r2, r4
 8003df4:	889f      	ldrh	r7, [r3, #4]
 8003df6:	3302      	adds	r3, #2
 8003df8:	9300      	str	r3, [sp, #0]
 8003dfa:	3256      	adds	r2, #86	@ 0x56
 8003dfc:	8812      	ldrh	r2, [r2, #0]
 8003dfe:	1a08      	subs	r0, r1, r0
 8003e00:	1bd2      	subs	r2, r2, r7
 8003e02:	881b      	ldrh	r3, [r3, #0]
 8003e04:	6da5      	ldr	r5, [r4, #88]	@ 0x58
 8003e06:	b212      	sxth	r2, r2
 8003e08:	2100      	movs	r1, #0
 8003e0a:	b280      	uxth	r0, r0
 8003e0c:	47a8      	blx	r5
 8003e0e:	183d      	adds	r5, r7, r0
        return alpha;
 8003e10:	0027      	movs	r7, r4
 8003e12:	3736      	adds	r7, #54	@ 0x36
                if (T::getAlpha() != newAlpha)
 8003e14:	783a      	ldrb	r2, [r7, #0]
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8003e16:	b2ab      	uxth	r3, r5
 8003e18:	b22d      	sxth	r5, r5
                if (T::getAlpha() != newAlpha)
 8003e1a:	42aa      	cmp	r2, r5
 8003e1c:	d005      	beq.n	8003e2a <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0x5e>
                    if (newAlpha == 0)
 8003e1e:	2d00      	cmp	r5, #0
 8003e20:	d125      	bne.n	8003e6e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0xa2>
        Widget::invalidateContent();
 8003e22:	0020      	movs	r0, r4
 8003e24:	f7ff f859 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
        alpha = newAlpha;
 8003e28:	703d      	strb	r5, [r7, #0]
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8003e2a:	0023      	movs	r3, r4
 8003e2c:	9900      	ldr	r1, [sp, #0]
 8003e2e:	3350      	adds	r3, #80	@ 0x50
 8003e30:	881b      	ldrh	r3, [r3, #0]
 8003e32:	8809      	ldrh	r1, [r1, #0]
 8003e34:	8832      	ldrh	r2, [r6, #0]
 8003e36:	185b      	adds	r3, r3, r1
 8003e38:	429a      	cmp	r2, r3
 8003e3a:	d317      	bcc.n	8003e6c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0xa0>
                    fadeAnimationRunning = false;
 8003e3c:	2300      	movs	r3, #0
 8003e3e:	9a01      	ldr	r2, [sp, #4]
 8003e40:	7013      	strb	r3, [r2, #0]
                    fadeAnimationDuration = 0;
 8003e42:	9a00      	ldr	r2, [sp, #0]
 8003e44:	8013      	strh	r3, [r2, #0]
                    Application::getInstance()->unregisterTimerWidget(this);
 8003e46:	f007 f8c1 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 8003e4a:	0021      	movs	r1, r4
 8003e4c:	3004      	adds	r0, #4
 8003e4e:	f007 f8e2 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8003e52:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8003e54:	2800      	cmp	r0, #0
 8003e56:	d009      	beq.n	8003e6c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0xa0>
 8003e58:	6803      	ldr	r3, [r0, #0]
 8003e5a:	68db      	ldr	r3, [r3, #12]
 8003e5c:	4798      	blx	r3
 8003e5e:	2800      	cmp	r0, #0
 8003e60:	d004      	beq.n	8003e6c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0xa0>
                        fadeAnimationEndedCallback->execute(*this);
 8003e62:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8003e64:	0021      	movs	r1, r4
 8003e66:	6803      	ldr	r3, [r0, #0]
 8003e68:	689b      	ldr	r3, [r3, #8]
 8003e6a:	4798      	blx	r3
    }
 8003e6c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8003e6e:	0020      	movs	r0, r4
 8003e70:	703b      	strb	r3, [r7, #0]
 8003e72:	f7ff f832 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003e76:	e7d8      	b.n	8003e2a <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv+0x5e>

08003e78 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003e78:	2201      	movs	r2, #1
 8003e7a:	2300      	movs	r3, #0
 8003e7c:	4252      	negs	r2, r2
 8003e7e:	6003      	str	r3, [r0, #0]
 8003e80:	6042      	str	r2, [r0, #4]
              text(0)
 8003e82:	6083      	str	r3, [r0, #8]
    }
 8003e84:	4770      	bx	lr
	...

08003e88 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003e88:	4b07      	ldr	r3, [pc, #28]	@ (8003ea8 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8003e8a:	6003      	str	r3, [r0, #0]
 8003e8c:	2300      	movs	r3, #0
 8003e8e:	6043      	str	r3, [r0, #4]
 8003e90:	6083      	str	r3, [r0, #8]
 8003e92:	60c3      	str	r3, [r0, #12]
 8003e94:	6103      	str	r3, [r0, #16]
          parent(0),
 8003e96:	6143      	str	r3, [r0, #20]
          nextSibling(0),
 8003e98:	6183      	str	r3, [r0, #24]
          nextDrawChainElement(0),
 8003e9a:	61c3      	str	r3, [r0, #28]
          cachedAbsX(0),
 8003e9c:	6203      	str	r3, [r0, #32]
          touchable(false),
 8003e9e:	3301      	adds	r3, #1
 8003ea0:	33ff      	adds	r3, #255	@ 0xff
 8003ea2:	8483      	strh	r3, [r0, #36]	@ 0x24
    }
 8003ea4:	4770      	bx	lr
 8003ea6:	46c0      	nop			@ (mov r8, r8)
 8003ea8:	08015a94 	.word	0x08015a94

08003eac <_ZN8touchgfx6QRCode19multiplyAlphaColorsEv>:
    uint8_t* drawBitARGB8888(uint8_t* dst, bool on, int pixels) const;
    uint8_t* drawBitARGB8888Blend(uint8_t* dst, bool on, int pixels) const;

    void multiplyAlphaColors()
    {
        alphaR0 = alpha * r0;
 8003eac:	0003      	movs	r3, r0
 8003eae:	0002      	movs	r2, r0
 8003eb0:	3354      	adds	r3, #84	@ 0x54
 8003eb2:	324e      	adds	r2, #78	@ 0x4e
 8003eb4:	781b      	ldrb	r3, [r3, #0]
 8003eb6:	7812      	ldrb	r2, [r2, #0]
 8003eb8:	1d01      	adds	r1, r0, #4
 8003eba:	435a      	muls	r2, r3
 8003ebc:	87ca      	strh	r2, [r1, #62]	@ 0x3e
        alphaR1 = alpha * r1;
 8003ebe:	0002      	movs	r2, r0
 8003ec0:	3251      	adds	r2, #81	@ 0x51
 8003ec2:	7812      	ldrb	r2, [r2, #0]
 8003ec4:	1d81      	adds	r1, r0, #6
 8003ec6:	435a      	muls	r2, r3
 8003ec8:	87ca      	strh	r2, [r1, #62]	@ 0x3e
        alphaG0 = alpha * g0;
 8003eca:	0002      	movs	r2, r0
 8003ecc:	324f      	adds	r2, #79	@ 0x4f
 8003ece:	7812      	ldrb	r2, [r2, #0]
 8003ed0:	3102      	adds	r1, #2
 8003ed2:	435a      	muls	r2, r3
 8003ed4:	87ca      	strh	r2, [r1, #62]	@ 0x3e
        alphaG1 = alpha * g1;
 8003ed6:	0002      	movs	r2, r0
 8003ed8:	3252      	adds	r2, #82	@ 0x52
 8003eda:	7812      	ldrb	r2, [r2, #0]
 8003edc:	3140      	adds	r1, #64	@ 0x40
 8003ede:	435a      	muls	r2, r3
 8003ee0:	800a      	strh	r2, [r1, #0]
        alphaB0 = alpha * b0;
 8003ee2:	0002      	movs	r2, r0
 8003ee4:	3250      	adds	r2, #80	@ 0x50
 8003ee6:	7812      	ldrb	r2, [r2, #0]
 8003ee8:	435a      	muls	r2, r3
 8003eea:	804a      	strh	r2, [r1, #2]
        alphaB1 = alpha * b1;
 8003eec:	0002      	movs	r2, r0
 8003eee:	3253      	adds	r2, #83	@ 0x53
 8003ef0:	7812      	ldrb	r2, [r2, #0]
 8003ef2:	304c      	adds	r0, #76	@ 0x4c
 8003ef4:	4353      	muls	r3, r2
 8003ef6:	8003      	strh	r3, [r0, #0]
    }
 8003ef8:	4770      	bx	lr
	...

08003efc <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003efc:	b510      	push	{r4, lr}
 8003efe:	0004      	movs	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003f00:	2226      	movs	r2, #38	@ 0x26
 8003f02:	2100      	movs	r1, #0
 8003f04:	f00e fe4b 	bl	8012b9e <memset>
class Widget : public Drawable
 8003f08:	0020      	movs	r0, r4
 8003f0a:	f7ff ffbd 	bl	8003e88 <_ZN8touchgfx8DrawableC1Ev>
 8003f0e:	4b09      	ldr	r3, [pc, #36]	@ (8003f34 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
        : typedTextId(id)
 8003f10:	2201      	movs	r2, #1
 8003f12:	6023      	str	r3, [r4, #0]
 8003f14:	4b08      	ldr	r3, [pc, #32]	@ (8003f38 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003f16:	21ff      	movs	r1, #255	@ 0xff
 8003f18:	62a3      	str	r3, [r4, #40]	@ 0x28
        : color(col)
 8003f1a:	2300      	movs	r3, #0
 8003f1c:	4252      	negs	r2, r2
 8003f1e:	0409      	lsls	r1, r1, #16
    }
 8003f20:	0020      	movs	r0, r4
 8003f22:	85a2      	strh	r2, [r4, #44]	@ 0x2c
 8003f24:	6323      	str	r3, [r4, #48]	@ 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003f26:	6361      	str	r1, [r4, #52]	@ 0x34
 8003f28:	8723      	strh	r3, [r4, #56]	@ 0x38
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003f2a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8003f2c:	6422      	str	r2, [r4, #64]	@ 0x40
              text(0)
 8003f2e:	6463      	str	r3, [r4, #68]	@ 0x44
    }
 8003f30:	bd10      	pop	{r4, pc}
 8003f32:	46c0      	nop			@ (mov r8, r8)
 8003f34:	08015874 	.word	0x08015874
 8003f38:	08014810 	.word	0x08014810

08003f3c <_ZN18QRCodeAnimatorBaseC1Ev>:
QRCodeAnimatorBase::QRCodeAnimatorBase()
 8003f3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f3e:	0004      	movs	r4, r0
 8003f40:	b091      	sub	sp, #68	@ 0x44
 8003f42:	f7ff ffa1 	bl	8003e88 <_ZN8touchgfx8DrawableC1Ev>
 8003f46:	4bc3      	ldr	r3, [pc, #780]	@ (8004254 <_ZN18QRCodeAnimatorBaseC1Ev+0x318>)
 8003f48:	2600      	movs	r6, #0
 8003f4a:	6023      	str	r3, [r4, #0]
 8003f4c:	0023      	movs	r3, r4
 8003f4e:	332c      	adds	r3, #44	@ 0x2c
 8003f50:	9308      	str	r3, [sp, #32]
 8003f52:	2301      	movs	r3, #1
 8003f54:	aa08      	add	r2, sp, #32
 8003f56:	425b      	negs	r3, r3
 8003f58:	8313      	strh	r3, [r2, #24]
          fadeAnimationEndedCallback(0)
 8003f5a:	a90e      	add	r1, sp, #56	@ 0x38
 8003f5c:	9808      	ldr	r0, [sp, #32]
 8003f5e:	62a6      	str	r6, [r4, #40]	@ 0x28
 8003f60:	f7ff f82c 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          fadeAnimationRunning(false),
 8003f64:	0022      	movs	r2, r4
          fadeAnimationEndedCallback(0)
 8003f66:	4fbc      	ldr	r7, [pc, #752]	@ (8004258 <_ZN18QRCodeAnimatorBaseC1Ev+0x31c>)
          fadeAnimationRunning(false),
 8003f68:	3255      	adds	r2, #85	@ 0x55
          fadeAnimationEndedCallback(0)
 8003f6a:	62e7      	str	r7, [r4, #44]	@ 0x2c
          fadeAnimationRunning(false),
 8003f6c:	7016      	strb	r6, [r2, #0]
          fadeAnimationCounter(0),
 8003f6e:	3201      	adds	r2, #1
 8003f70:	8016      	strh	r6, [r2, #0]
          fadeAnimationDelay(0),
 8003f72:	8056      	strh	r6, [r2, #2]
 8003f74:	3202      	adds	r2, #2
 8003f76:	2284      	movs	r2, #132	@ 0x84
 8003f78:	0092      	lsls	r2, r2, #2
 8003f7a:	18a5      	adds	r5, r4, r2
          fadeAnimationEndedCallback(0)
 8003f7c:	0028      	movs	r0, r5
 8003f7e:	6666      	str	r6, [r4, #100]	@ 0x64
 8003f80:	f005 f9ba 	bl	80092f8 <_ZN8touchgfx6QRCodeC1Ev>
 8003f84:	2284      	movs	r2, #132	@ 0x84
 8003f86:	4bb5      	ldr	r3, [pc, #724]	@ (800425c <_ZN18QRCodeAnimatorBaseC1Ev+0x320>)
 8003f88:	0092      	lsls	r2, r2, #2
 8003f8a:	50a3      	str	r3, [r4, r2]
          fadeAnimationRunning(false),
 8003f8c:	4ab4      	ldr	r2, [pc, #720]	@ (8004260 <_ZN18QRCodeAnimatorBaseC1Ev+0x324>)
          fadeAnimationEndedCallback(0)
 8003f8e:	a90e      	add	r1, sp, #56	@ 0x38
          fadeAnimationRunning(false),
 8003f90:	18a3      	adds	r3, r4, r2
 8003f92:	701e      	strb	r6, [r3, #0]
          fadeAnimationCounter(0),
 8003f94:	239a      	movs	r3, #154	@ 0x9a
 8003f96:	009b      	lsls	r3, r3, #2
 8003f98:	50e6      	str	r6, [r4, r3]
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	3216      	adds	r2, #22
 8003f9e:	18a2      	adds	r2, r4, r2
 8003fa0:	9206      	str	r2, [sp, #24]
 8003fa2:	425b      	negs	r3, r3
 8003fa4:	aa08      	add	r2, sp, #32
          fadeAnimationEndedCallback(0)
 8003fa6:	66ae      	str	r6, [r5, #104]	@ 0x68
 8003fa8:	8313      	strh	r3, [r2, #24]
 8003faa:	9806      	ldr	r0, [sp, #24]
 8003fac:	f7ff f806 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003fb0:	239f      	movs	r3, #159	@ 0x9f
          fadeAnimationRunning(false),
 8003fb2:	4aac      	ldr	r2, [pc, #688]	@ (8004264 <_ZN18QRCodeAnimatorBaseC1Ev+0x328>)
          fadeAnimationEndedCallback(0)
 8003fb4:	009b      	lsls	r3, r3, #2
 8003fb6:	50e7      	str	r7, [r4, r3]
          fadeAnimationRunning(false),
 8003fb8:	18a3      	adds	r3, r4, r2
          fadeAnimationCounter(0),
 8003fba:	9a06      	ldr	r2, [sp, #24]
          fadeAnimationRunning(false),
 8003fbc:	701e      	strb	r6, [r3, #0]
          fadeAnimationCounter(0),
 8003fbe:	8556      	strh	r6, [r2, #42]	@ 0x2a
          fadeAnimationDelay(0),
 8003fc0:	8596      	strh	r6, [r2, #44]	@ 0x2c
          fadeAnimationEndedCallback(0)
 8003fc2:	6396      	str	r6, [r2, #56]	@ 0x38
 8003fc4:	22ae      	movs	r2, #174	@ 0xae
 8003fc6:	0092      	lsls	r2, r2, #2
 8003fc8:	18a3      	adds	r3, r4, r2
        : TextArea()
 8003fca:	0018      	movs	r0, r3
 8003fcc:	0017      	movs	r7, r2
 8003fce:	9303      	str	r3, [sp, #12]
 8003fd0:	f7ff ff94 	bl	8003efc <_ZN8touchgfx8TextAreaC1Ev>
          fadeAnimationRunning(false),
 8003fd4:	21c1      	movs	r1, #193	@ 0xc1
        : TextAreaWithWildcardBase(), wc1(0)
 8003fd6:	9b03      	ldr	r3, [sp, #12]
 8003fd8:	0089      	lsls	r1, r1, #2
 8003fda:	649e      	str	r6, [r3, #72]	@ 0x48
          fadeAnimationEndedCallback(0)
 8003fdc:	4ba2      	ldr	r3, [pc, #648]	@ (8004268 <_ZN18QRCodeAnimatorBaseC1Ev+0x32c>)
 8003fde:	51e3      	str	r3, [r4, r7]
          fadeAnimationRunning(false),
 8003fe0:	1863      	adds	r3, r4, r1
          fadeAnimationCounter(0),
 8003fe2:	49a2      	ldr	r1, [pc, #648]	@ (800426c <_ZN18QRCodeAnimatorBaseC1Ev+0x330>)
          fadeAnimationRunning(false),
 8003fe4:	701e      	strb	r6, [r3, #0]
          fadeAnimationCounter(0),
 8003fe6:	1863      	adds	r3, r4, r1
          fadeAnimationDelay(0),
 8003fe8:	3102      	adds	r1, #2
          fadeAnimationCounter(0),
 8003fea:	801e      	strh	r6, [r3, #0]
          fadeAnimationDelay(0),
 8003fec:	1863      	adds	r3, r4, r1
 8003fee:	801e      	strh	r6, [r3, #0]
 8003ff0:	3110      	adds	r1, #16
          fadeAnimationEndedCallback(0)
 8003ff2:	9b03      	ldr	r3, [sp, #12]
 8003ff4:	1861      	adds	r1, r4, r1
 8003ff6:	65de      	str	r6, [r3, #92]	@ 0x5c
 8003ff8:	0008      	movs	r0, r1
 8003ffa:	9107      	str	r1, [sp, #28]
 8003ffc:	f7ff ff44 	bl	8003e88 <_ZN8touchgfx8DrawableC1Ev>
 8004000:	22c6      	movs	r2, #198	@ 0xc6
 8004002:	9907      	ldr	r1, [sp, #28]
 8004004:	4b9a      	ldr	r3, [pc, #616]	@ (8004270 <_ZN18QRCodeAnimatorBaseC1Ev+0x334>)
 8004006:	0092      	lsls	r2, r2, #2
 8004008:	50a3      	str	r3, [r4, r2]
 800400a:	628e      	str	r6, [r1, #40]	@ 0x28
 800400c:	4999      	ldr	r1, [pc, #612]	@ (8004274 <_ZN18QRCodeAnimatorBaseC1Ev+0x338>)
 800400e:	1861      	adds	r1, r4, r1
 8004010:	0008      	movs	r0, r1
 8004012:	9104      	str	r1, [sp, #16]
 8004014:	f005 f970 	bl	80092f8 <_ZN8touchgfx6QRCodeC1Ev>
 8004018:	2301      	movs	r3, #1
 800401a:	4997      	ldr	r1, [pc, #604]	@ (8004278 <_ZN18QRCodeAnimatorBaseC1Ev+0x33c>)
 800401c:	425b      	negs	r3, r3
 800401e:	1861      	adds	r1, r4, r1
 8004020:	9109      	str	r1, [sp, #36]	@ 0x24
 8004022:	a908      	add	r1, sp, #32
 8004024:	830b      	strh	r3, [r1, #24]
 8004026:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004028:	a90e      	add	r1, sp, #56	@ 0x38
 800402a:	f7fe ffc7 	bl	8002fbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800402e:	23ae      	movs	r3, #174	@ 0xae
 8004030:	00db      	lsls	r3, r3, #3
 8004032:	001f      	movs	r7, r3
 8004034:	18e0      	adds	r0, r4, r3
 8004036:	9005      	str	r0, [sp, #20]
        : TextArea()
 8004038:	f7ff ff60 	bl	8003efc <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800403c:	4b8f      	ldr	r3, [pc, #572]	@ (800427c <_ZN18QRCodeAnimatorBaseC1Ev+0x340>)
 800403e:	9805      	ldr	r0, [sp, #20]
 8004040:	51e3      	str	r3, [r4, r7]
        rect.width = width;
 8004042:	4b8f      	ldr	r3, [pc, #572]	@ (8004280 <_ZN18QRCodeAnimatorBaseC1Ev+0x344>)
    academyLogo.setXY(0, 89);
 8004044:	2259      	movs	r2, #89	@ 0x59
 8004046:	6486      	str	r6, [r0, #72]	@ 0x48
 8004048:	0031      	movs	r1, r6
 800404a:	9808      	ldr	r0, [sp, #32]
 800404c:	60a3      	str	r3, [r4, #8]
 800404e:	f7fe ffa8 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8004052:	2002      	movs	r0, #2
 8004054:	ab08      	add	r3, sp, #32
 8004056:	8318      	strh	r0, [r3, #24]
    academyLogo.setBitmap(touchgfx::Bitmap(BITMAP_ACADEMYSMALL_ID));
 8004058:	ab0e      	add	r3, sp, #56	@ 0x38
 800405a:	0019      	movs	r1, r3
 800405c:	9808      	ldr	r0, [sp, #32]
 800405e:	f004 fe38 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004062:	0023      	movs	r3, r4
 8004064:	3354      	adds	r3, #84	@ 0x54
 8004066:	701e      	strb	r6, [r3, #0]
    add(academyLogo);
 8004068:	0020      	movs	r0, r4
 800406a:	9908      	ldr	r1, [sp, #32]
 800406c:	f002 ff51 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrCodeMain.setXY(13, 0);
 8004070:	0032      	movs	r2, r6
 8004072:	210d      	movs	r1, #13
 8004074:	0028      	movs	r0, r5
 8004076:	f7fe ff94 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    qrCodeMain.setBuffers(qrBuffer_qrCodeMain, qrScratchBuffer_qrCodeMain);
 800407a:	0022      	movs	r2, r4
 800407c:	0023      	movs	r3, r4
 800407e:	323d      	adds	r2, #61	@ 0x3d
 8004080:	3368      	adds	r3, #104	@ 0x68
 8004082:	32ff      	adds	r2, #255	@ 0xff
        qrCodeData = qrBuffer;
 8004084:	62ab      	str	r3, [r5, #40]	@ 0x28
        qrTempBuffer = tempBuffer;
 8004086:	62ea      	str	r2, [r5, #44]	@ 0x2c
        qrCodeData[0] = 0;
 8004088:	701e      	strb	r6, [r3, #0]
        alpha = newAlpha;
 800408a:	2399      	movs	r3, #153	@ 0x99
 800408c:	4a7d      	ldr	r2, [pc, #500]	@ (8004284 <_ZN18QRCodeAnimatorBaseC1Ev+0x348>)
 800408e:	009b      	lsls	r3, r3, #2
 8004090:	52e2      	strh	r2, [r4, r3]
        multiplyAlphaColors();
 8004092:	0028      	movs	r0, r5
 8004094:	f7ff ff0a 	bl	8003eac <_ZN8touchgfx6QRCode19multiplyAlphaColorsEv>
        qrCodeVersion = version;
 8004098:	2390      	movs	r3, #144	@ 0x90
 800409a:	2106      	movs	r1, #6
 800409c:	009b      	lsls	r3, r3, #2
 800409e:	18e3      	adds	r3, r4, r3
 80040a0:	7019      	strb	r1, [r3, #0]
        sizeOfQRCodeSymbol = version * 4 + 17;
 80040a2:	2329      	movs	r3, #41	@ 0x29
        updateWidthAndHeight();
 80040a4:	0028      	movs	r0, r5
        sizeOfQRCodeSymbol = version * 4 + 17;
 80040a6:	636b      	str	r3, [r5, #52]	@ 0x34
 80040a8:	001f      	movs	r7, r3
        updateWidthAndHeight();
 80040aa:	f005 f983 	bl	80093b4 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>
        scale = newScale;
 80040ae:	2002      	movs	r0, #2
 80040b0:	63a8      	str	r0, [r5, #56]	@ 0x38
        updateWidthAndHeight();
 80040b2:	0028      	movs	r0, r5
 80040b4:	f005 f97e 	bl	80093b4 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>
        eccLevel = level;
 80040b8:	2393      	movs	r3, #147	@ 0x93
 80040ba:	2001      	movs	r0, #1
 80040bc:	009b      	lsls	r3, r3, #2
 80040be:	18e3      	adds	r3, r4, r3
 80040c0:	7018      	strb	r0, [r3, #0]
    qrCodeMain.convertStringToQRCode("SUPPORT.TOUCHGFX.COM");
 80040c2:	4971      	ldr	r1, [pc, #452]	@ (8004288 <_ZN18QRCodeAnimatorBaseC1Ev+0x34c>)
 80040c4:	0028      	movs	r0, r5
 80040c6:	f005 f957 	bl	8009378 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc>
    add(qrCodeMain);
 80040ca:	0029      	movs	r1, r5
 80040cc:	2510      	movs	r5, #16
 80040ce:	0020      	movs	r0, r4
 80040d0:	f002 ff1f 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrCodeMainCircle.setXY(34, 21);
 80040d4:	2215      	movs	r2, #21
 80040d6:	9806      	ldr	r0, [sp, #24]
 80040d8:	2122      	movs	r1, #34	@ 0x22
 80040da:	f7fe ff62 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 80040de:	ab08      	add	r3, sp, #32
 80040e0:	831d      	strh	r5, [r3, #24]
    qrCodeMainCircle.setBitmap(touchgfx::Bitmap(BITMAP_QROVERLAYCIRCLE_ID));
 80040e2:	ad0e      	add	r5, sp, #56	@ 0x38
 80040e4:	0029      	movs	r1, r5
 80040e6:	25a9      	movs	r5, #169	@ 0xa9
 80040e8:	9806      	ldr	r0, [sp, #24]
 80040ea:	00ad      	lsls	r5, r5, #2
 80040ec:	f004 fdf1 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80040f0:	1963      	adds	r3, r4, r5
    add(qrCodeMainCircle);
 80040f2:	0020      	movs	r0, r4
 80040f4:	9906      	ldr	r1, [sp, #24]
 80040f6:	701e      	strb	r6, [r3, #0]
 80040f8:	f002 ff0b 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrCodeMainText.setPosition(41, 20, 27, 41);
 80040fc:	003b      	movs	r3, r7
 80040fe:	0039      	movs	r1, r7
 8004100:	9700      	str	r7, [sp, #0]
 8004102:	9803      	ldr	r0, [sp, #12]
 8004104:	2214      	movs	r2, #20
 8004106:	3b0e      	subs	r3, #14
 8004108:	f7ff fbb4 	bl	8003874 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800410c:	25ff      	movs	r5, #255	@ 0xff
        boundingArea = calculateBoundingArea();
 800410e:	22ae      	movs	r2, #174	@ 0xae
        color = newColor;
 8004110:	9b03      	ldr	r3, [sp, #12]
        boundingArea = calculateBoundingArea();
 8004112:	0092      	lsls	r2, r2, #2
        color = newColor;
 8004114:	062d      	lsls	r5, r5, #24
 8004116:	631d      	str	r5, [r3, #48]	@ 0x30
        linespace = space;
 8004118:	869e      	strh	r6, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800411a:	58a3      	ldr	r3, [r4, r2]
 800411c:	ad0a      	add	r5, sp, #40	@ 0x28
 800411e:	3308      	adds	r3, #8
 8004120:	0028      	movs	r0, r5
 8004122:	9903      	ldr	r1, [sp, #12]
 8004124:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004126:	4798      	blx	r3
 8004128:	23bd      	movs	r3, #189	@ 0xbd
 800412a:	002a      	movs	r2, r5
 800412c:	009b      	lsls	r3, r3, #2
 800412e:	18e3      	adds	r3, r4, r3
 8004130:	ca83      	ldmia	r2!, {r0, r1, r7}
 8004132:	c383      	stmia	r3!, {r0, r1, r7}
    qrCodeMainTextBuffer[0] = 0;
 8004134:	4b55      	ldr	r3, [pc, #340]	@ (800428c <_ZN18QRCodeAnimatorBaseC1Ev+0x350>)
        wc1 = value;
 8004136:	9a03      	ldr	r2, [sp, #12]
 8004138:	52e6      	strh	r6, [r4, r3]
    qrCodeMainText.setWildcard(qrCodeMainTextBuffer);
 800413a:	18e3      	adds	r3, r4, r3
 800413c:	6493      	str	r3, [r2, #72]	@ 0x48
 800413e:	4b54      	ldr	r3, [pc, #336]	@ (8004290 <_ZN18QRCodeAnimatorBaseC1Ev+0x354>)
    qrCodeMainText.setTypedText(touchgfx::TypedText(T_QRCODEID));
 8004140:	0010      	movs	r0, r2
 8004142:	930e      	str	r3, [sp, #56]	@ 0x38
 8004144:	9306      	str	r3, [sp, #24]
 8004146:	ab08      	add	r3, sp, #32
 8004148:	839e      	strh	r6, [r3, #28]
 800414a:	ab0e      	add	r3, sp, #56	@ 0x38
 800414c:	0019      	movs	r1, r3
 800414e:	f004 fcf3 	bl	8008b38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 8004152:	4b50      	ldr	r3, [pc, #320]	@ (8004294 <_ZN18QRCodeAnimatorBaseC1Ev+0x358>)
    add(qrCodeMainText);
 8004154:	0020      	movs	r0, r4
 8004156:	18e3      	adds	r3, r4, r3
 8004158:	9903      	ldr	r1, [sp, #12]
 800415a:	701e      	strb	r6, [r3, #0]
 800415c:	f002 fed9 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrViewPort.setPosition(13, 0, 0, 82);
 8004160:	2352      	movs	r3, #82	@ 0x52
 8004162:	0032      	movs	r2, r6
 8004164:	9807      	ldr	r0, [sp, #28]
 8004166:	9300      	str	r3, [sp, #0]
 8004168:	210d      	movs	r1, #13
 800416a:	0033      	movs	r3, r6
 800416c:	f7ff fb82 	bl	8003874 <_ZN8touchgfx8Drawable11setPositionEssss>
    qrCodeAnimationOverlay.setXY(0, 0);
 8004170:	0031      	movs	r1, r6
 8004172:	0032      	movs	r2, r6
 8004174:	9804      	ldr	r0, [sp, #16]
 8004176:	f7fe ff14 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    qrCodeAnimationOverlay.setBuffers(qrBuffer_qrCodeAnimationOverlay, qrScratchBuffer_qrCodeAnimationOverlay);
 800417a:	23d1      	movs	r3, #209	@ 0xd1
        qrCodeData = qrBuffer;
 800417c:	9f04      	ldr	r7, [sp, #16]
 800417e:	009b      	lsls	r3, r3, #2
 8004180:	18e3      	adds	r3, r4, r3
 8004182:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004184:	2383      	movs	r3, #131	@ 0x83
 8004186:	00db      	lsls	r3, r3, #3
 8004188:	18e3      	adds	r3, r4, r3
        qrTempBuffer = tempBuffer;
 800418a:	62fb      	str	r3, [r7, #44]	@ 0x2c
        qrCodeData[0] = 0;
 800418c:	23d1      	movs	r3, #209	@ 0xd1
        qrCodeVersion = version;
 800418e:	2206      	movs	r2, #6
        sizeOfQRCodeSymbol = version * 4 + 17;
 8004190:	2729      	movs	r7, #41	@ 0x29
        qrCodeData[0] = 0;
 8004192:	009b      	lsls	r3, r3, #2
 8004194:	54e6      	strb	r6, [r4, r3]
        qrCodeVersion = version;
 8004196:	4b40      	ldr	r3, [pc, #256]	@ (8004298 <_ZN18QRCodeAnimatorBaseC1Ev+0x35c>)
 8004198:	18e3      	adds	r3, r4, r3
 800419a:	701a      	strb	r2, [r3, #0]
        sizeOfQRCodeSymbol = version * 4 + 17;
 800419c:	9b04      	ldr	r3, [sp, #16]
        updateWidthAndHeight();
 800419e:	0018      	movs	r0, r3
        sizeOfQRCodeSymbol = version * 4 + 17;
 80041a0:	635f      	str	r7, [r3, #52]	@ 0x34
        updateWidthAndHeight();
 80041a2:	f005 f907 	bl	80093b4 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>
        scale = newScale;
 80041a6:	2002      	movs	r0, #2
 80041a8:	9b04      	ldr	r3, [sp, #16]
 80041aa:	6398      	str	r0, [r3, #56]	@ 0x38
        updateWidthAndHeight();
 80041ac:	0018      	movs	r0, r3
 80041ae:	f005 f901 	bl	80093b4 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>
        eccLevel = level;
 80041b2:	23a5      	movs	r3, #165	@ 0xa5
 80041b4:	2001      	movs	r0, #1
 80041b6:	00db      	lsls	r3, r3, #3
 80041b8:	18e3      	adds	r3, r4, r3
 80041ba:	7018      	strb	r0, [r3, #0]
    qrCodeAnimationOverlay.convertStringToQRCode("test");
 80041bc:	4937      	ldr	r1, [pc, #220]	@ (800429c <_ZN18QRCodeAnimatorBaseC1Ev+0x360>)
 80041be:	9804      	ldr	r0, [sp, #16]
 80041c0:	f005 f8da 	bl	8009378 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc>
    qrViewPort.add(qrCodeAnimationOverlay);
 80041c4:	9904      	ldr	r1, [sp, #16]
 80041c6:	9807      	ldr	r0, [sp, #28]
 80041c8:	f002 fea3 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrCodeAnimationOverlayCircle.setXY(21, 21);
 80041cc:	2215      	movs	r2, #21
 80041ce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041d0:	0011      	movs	r1, r2
 80041d2:	f7fe fee6 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 80041d6:	2210      	movs	r2, #16
 80041d8:	a808      	add	r0, sp, #32
 80041da:	8302      	strh	r2, [r0, #24]
    qrCodeAnimationOverlayCircle.setBitmap(touchgfx::Bitmap(BITMAP_QROVERLAYCIRCLE_ID));
 80041dc:	a80e      	add	r0, sp, #56	@ 0x38
 80041de:	0001      	movs	r1, r0
 80041e0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041e2:	f004 fd76 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    qrViewPort.add(qrCodeAnimationOverlayCircle);
 80041e6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80041e8:	9807      	ldr	r0, [sp, #28]
 80041ea:	f002 fe92 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrCodeAnimationOverlayText.setPosition(28, 20, 27, 41);
 80041ee:	9805      	ldr	r0, [sp, #20]
 80041f0:	231b      	movs	r3, #27
 80041f2:	2214      	movs	r2, #20
 80041f4:	211c      	movs	r1, #28
 80041f6:	9700      	str	r7, [sp, #0]
 80041f8:	f7ff fb3c 	bl	8003874 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80041fc:	21ae      	movs	r1, #174	@ 0xae
        color = newColor;
 80041fe:	22ff      	movs	r2, #255	@ 0xff
        boundingArea = calculateBoundingArea();
 8004200:	00c9      	lsls	r1, r1, #3
 8004202:	5863      	ldr	r3, [r4, r1]
        color = newColor;
 8004204:	9805      	ldr	r0, [sp, #20]
 8004206:	0612      	lsls	r2, r2, #24
        boundingArea = calculateBoundingArea();
 8004208:	3308      	adds	r3, #8
 800420a:	0001      	movs	r1, r0
        color = newColor;
 800420c:	6302      	str	r2, [r0, #48]	@ 0x30
        linespace = space;
 800420e:	8686      	strh	r6, [r0, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 8004210:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004212:	0028      	movs	r0, r5
 8004214:	4798      	blx	r3
 8004216:	002a      	movs	r2, r5
 8004218:	4b21      	ldr	r3, [pc, #132]	@ (80042a0 <_ZN18QRCodeAnimatorBaseC1Ev+0x364>)
 800421a:	18e3      	adds	r3, r4, r3
 800421c:	ca23      	ldmia	r2!, {r0, r1, r5}
 800421e:	c323      	stmia	r3!, {r0, r1, r5}
    qrCodeAnimationOverlayTextBuffer[0] = 0;
 8004220:	23ba      	movs	r3, #186	@ 0xba
 8004222:	9a05      	ldr	r2, [sp, #20]
 8004224:	00db      	lsls	r3, r3, #3
 8004226:	52e6      	strh	r6, [r4, r3]
    qrCodeAnimationOverlayText.setWildcard(qrCodeAnimationOverlayTextBuffer);
 8004228:	18e3      	adds	r3, r4, r3
 800422a:	6493      	str	r3, [r2, #72]	@ 0x48
 800422c:	9b06      	ldr	r3, [sp, #24]
    qrCodeAnimationOverlayText.setTypedText(touchgfx::TypedText(T_QRCODEID));
 800422e:	0010      	movs	r0, r2
 8004230:	930e      	str	r3, [sp, #56]	@ 0x38
 8004232:	ab08      	add	r3, sp, #32
 8004234:	839e      	strh	r6, [r3, #28]
 8004236:	a90e      	add	r1, sp, #56	@ 0x38
 8004238:	f004 fc7e 	bl	8008b38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    qrViewPort.add(qrCodeAnimationOverlayText);
 800423c:	9905      	ldr	r1, [sp, #20]
 800423e:	9807      	ldr	r0, [sp, #28]
 8004240:	f002 fe67 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(qrViewPort);
 8004244:	0020      	movs	r0, r4
 8004246:	9907      	ldr	r1, [sp, #28]
 8004248:	f002 fe63 	bl	8006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800424c:	0020      	movs	r0, r4
 800424e:	b011      	add	sp, #68	@ 0x44
 8004250:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004252:	46c0      	nop			@ (mov r8, r8)
 8004254:	08014fd0 	.word	0x08014fd0
 8004258:	0801468c 	.word	0x0801468c
 800425c:	08014ec8 	.word	0x08014ec8
 8004260:	00000266 	.word	0x00000266
 8004264:	000002a5 	.word	0x000002a5
 8004268:	08014f38 	.word	0x08014f38
 800426c:	00000306 	.word	0x00000306
 8004270:	080157b4 	.word	0x080157b4
 8004274:	000004ec 	.word	0x000004ec
 8004278:	00000544 	.word	0x00000544
 800427c:	08014e38 	.word	0x08014e38
 8004280:	0092006c 	.word	0x0092006c
 8004284:	ffffff00 	.word	0xffffff00
 8004288:	08014e16 	.word	0x08014e16
 800428c:	000005bc 	.word	0x000005bc
 8004290:	08014810 	.word	0x08014810
 8004294:	000002ee 	.word	0x000002ee
 8004298:	0000051c 	.word	0x0000051c
 800429c:	08014e2b 	.word	0x08014e2b
 80042a0:	000005ac 	.word	0x000005ac

080042a4 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv>:
        if (fadeAnimationRunning)
 80042a4:	0003      	movs	r3, r0
    void nextFadeAnimationStep()
 80042a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        if (fadeAnimationRunning)
 80042a8:	3356      	adds	r3, #86	@ 0x56
 80042aa:	9301      	str	r3, [sp, #4]
 80042ac:	781b      	ldrb	r3, [r3, #0]
    void nextFadeAnimationStep()
 80042ae:	0004      	movs	r4, r0
        if (fadeAnimationRunning)
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	d04e      	beq.n	8004352 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0xae>
            fadeAnimationCounter++;
 80042b4:	0006      	movs	r6, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80042b6:	0003      	movs	r3, r0
            fadeAnimationCounter++;
 80042b8:	3658      	adds	r6, #88	@ 0x58
 80042ba:	8831      	ldrh	r1, [r6, #0]
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80042bc:	335a      	adds	r3, #90	@ 0x5a
            fadeAnimationCounter++;
 80042be:	3101      	adds	r1, #1
 80042c0:	b289      	uxth	r1, r1
 80042c2:	8031      	strh	r1, [r6, #0]
            if (fadeAnimationCounter >= fadeAnimationDelay)
 80042c4:	8818      	ldrh	r0, [r3, #0]
 80042c6:	4281      	cmp	r1, r0
 80042c8:	d343      	bcc.n	8004352 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0xae>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 80042ca:	0022      	movs	r2, r4
 80042cc:	0025      	movs	r5, r4
 80042ce:	3304      	adds	r3, #4
 80042d0:	881b      	ldrh	r3, [r3, #0]
 80042d2:	3260      	adds	r2, #96	@ 0x60
 80042d4:	9300      	str	r3, [sp, #0]
 80042d6:	9f00      	ldr	r7, [sp, #0]
 80042d8:	8812      	ldrh	r2, [r2, #0]
 80042da:	1a08      	subs	r0, r1, r0
 80042dc:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 80042de:	1bd2      	subs	r2, r2, r7
 80042e0:	355c      	adds	r5, #92	@ 0x5c
 80042e2:	000f      	movs	r7, r1
 80042e4:	882b      	ldrh	r3, [r5, #0]
 80042e6:	b212      	sxth	r2, r2
 80042e8:	2100      	movs	r1, #0
 80042ea:	b280      	uxth	r0, r0
 80042ec:	47b8      	blx	r7
        return alpha;
 80042ee:	0027      	movs	r7, r4
 80042f0:	9b00      	ldr	r3, [sp, #0]
 80042f2:	3754      	adds	r7, #84	@ 0x54
 80042f4:	1818      	adds	r0, r3, r0
                if (T::getAlpha() != newAlpha)
 80042f6:	783a      	ldrb	r2, [r7, #0]
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 80042f8:	b283      	uxth	r3, r0
 80042fa:	b200      	sxth	r0, r0
                if (T::getAlpha() != newAlpha)
 80042fc:	4282      	cmp	r2, r0
 80042fe:	d009      	beq.n	8004314 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0x70>
                    if (newAlpha == 0)
 8004300:	2800      	cmp	r0, #0
 8004302:	d127      	bne.n	8004354 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0xb0>
                        T::invalidateContent();
 8004304:	0020      	movs	r0, r4
 8004306:	f7fe fde8 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
        alpha = newAlpha;
 800430a:	4b19      	ldr	r3, [pc, #100]	@ (8004370 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0xcc>)
        multiplyAlphaColors();
 800430c:	0020      	movs	r0, r4
        alpha = newAlpha;
 800430e:	803b      	strh	r3, [r7, #0]
        multiplyAlphaColors();
 8004310:	f7ff fdcc 	bl	8003eac <_ZN8touchgfx6QRCode19multiplyAlphaColorsEv>
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8004314:	0023      	movs	r3, r4
 8004316:	335a      	adds	r3, #90	@ 0x5a
 8004318:	881b      	ldrh	r3, [r3, #0]
 800431a:	8829      	ldrh	r1, [r5, #0]
 800431c:	8832      	ldrh	r2, [r6, #0]
 800431e:	185b      	adds	r3, r3, r1
 8004320:	429a      	cmp	r2, r3
 8004322:	d316      	bcc.n	8004352 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0xae>
                    fadeAnimationRunning = false;
 8004324:	2300      	movs	r3, #0
 8004326:	9a01      	ldr	r2, [sp, #4]
 8004328:	7013      	strb	r3, [r2, #0]
                    fadeAnimationDuration = 0;
 800432a:	802b      	strh	r3, [r5, #0]
                    Application::getInstance()->unregisterTimerWidget(this);
 800432c:	f006 fe4e 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 8004330:	0021      	movs	r1, r4
 8004332:	3004      	adds	r0, #4
 8004334:	f006 fe6f 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8004338:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 800433a:	2800      	cmp	r0, #0
 800433c:	d009      	beq.n	8004352 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0xae>
 800433e:	6803      	ldr	r3, [r0, #0]
 8004340:	68db      	ldr	r3, [r3, #12]
 8004342:	4798      	blx	r3
 8004344:	2800      	cmp	r0, #0
 8004346:	d004      	beq.n	8004352 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0xae>
                        fadeAnimationEndedCallback->execute(*this);
 8004348:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 800434a:	0021      	movs	r1, r4
 800434c:	6803      	ldr	r3, [r0, #0]
 800434e:	689b      	ldr	r3, [r3, #8]
 8004350:	4798      	blx	r3
                    }
                }
            }
        }
    }
 8004352:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
        ialpha = 0xFF - newAlpha;
 8004354:	0022      	movs	r2, r4
                        T::setAlpha((uint8_t)newAlpha);
 8004356:	b2db      	uxtb	r3, r3
        alpha = newAlpha;
 8004358:	703b      	strb	r3, [r7, #0]
        ialpha = 0xFF - newAlpha;
 800435a:	43db      	mvns	r3, r3
 800435c:	3255      	adds	r2, #85	@ 0x55
        multiplyAlphaColors();
 800435e:	0020      	movs	r0, r4
        ialpha = 0xFF - newAlpha;
 8004360:	7013      	strb	r3, [r2, #0]
        multiplyAlphaColors();
 8004362:	f7ff fda3 	bl	8003eac <_ZN8touchgfx6QRCode19multiplyAlphaColorsEv>
                        T::invalidateContent();
 8004366:	0020      	movs	r0, r4
 8004368:	f7fe fdb7 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800436c:	e7d2      	b.n	8004314 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv+0x70>
 800436e:	46c0      	nop			@ (mov r8, r8)
 8004370:	ffffff00 	.word	0xffffff00

08004374 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004374:	b510      	push	{r4, lr}
        nextFadeAnimationStep();
 8004376:	f7ff ff95 	bl	80042a4 <_ZN8touchgfx12FadeAnimatorINS_6QRCodeEE21nextFadeAnimationStepEv>
    }
 800437a:	bd10      	pop	{r4, pc}

0800437c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_NotoSans_Regular_34_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::UnmappedDataFont& getFont_NotoSans_Regular_34_4bpp();

touchgfx::UnmappedDataFont& getFont_NotoSans_Regular_34_4bpp()
{
    static touchgfx::UnmappedDataFont NotoSans_Regular_34_4bpp(glyphs_NotoSans_Regular_34_4bpp, unicodelist_NotoSans_Regular_34_4bpp, 11, 34, 34, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_34_4bpp, kerning_NotoSans_Regular_34_4bpp, 63, 0, 0, 0);
 800437c:	4770      	bx	lr
	...

08004380 <_Z32getFont_NotoSans_Regular_34_4bppv>:
{
 8004380:	b530      	push	{r4, r5, lr}
    static touchgfx::UnmappedDataFont NotoSans_Regular_34_4bpp(glyphs_NotoSans_Regular_34_4bpp, unicodelist_NotoSans_Regular_34_4bpp, 11, 34, 34, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_34_4bpp, kerning_NotoSans_Regular_34_4bpp, 63, 0, 0, 0);
 8004382:	4d16      	ldr	r5, [pc, #88]	@ (80043dc <_Z32getFont_NotoSans_Regular_34_4bppv+0x5c>)
{
 8004384:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::UnmappedDataFont NotoSans_Regular_34_4bpp(glyphs_NotoSans_Regular_34_4bpp, unicodelist_NotoSans_Regular_34_4bpp, 11, 34, 34, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_34_4bpp, kerning_NotoSans_Regular_34_4bpp, 63, 0, 0, 0);
 8004386:	0028      	movs	r0, r5
 8004388:	f00d fbc1 	bl	8011b0e <__cxa_guard_acquire>
 800438c:	4c14      	ldr	r4, [pc, #80]	@ (80043e0 <_Z32getFont_NotoSans_Regular_34_4bppv+0x60>)
 800438e:	2800      	cmp	r0, #0
 8004390:	d020      	beq.n	80043d4 <_Z32getFont_NotoSans_Regular_34_4bppv+0x54>
 8004392:	203f      	movs	r0, #63	@ 0x3f
 8004394:	900a      	str	r0, [sp, #40]	@ 0x28
 8004396:	4813      	ldr	r0, [pc, #76]	@ (80043e4 <_Z32getFont_NotoSans_Regular_34_4bppv+0x64>)
 8004398:	2300      	movs	r3, #0
 800439a:	9009      	str	r0, [sp, #36]	@ 0x24
 800439c:	4812      	ldr	r0, [pc, #72]	@ (80043e8 <_Z32getFont_NotoSans_Regular_34_4bppv+0x68>)
 800439e:	930d      	str	r3, [sp, #52]	@ 0x34
 80043a0:	9008      	str	r0, [sp, #32]
 80043a2:	2001      	movs	r0, #1
 80043a4:	930c      	str	r3, [sp, #48]	@ 0x30
 80043a6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80043a8:	9307      	str	r3, [sp, #28]
 80043aa:	9306      	str	r3, [sp, #24]
 80043ac:	9005      	str	r0, [sp, #20]
 80043ae:	9303      	str	r3, [sp, #12]
 80043b0:	3003      	adds	r0, #3
 80043b2:	9302      	str	r3, [sp, #8]
 80043b4:	3322      	adds	r3, #34	@ 0x22
 80043b6:	4a0d      	ldr	r2, [pc, #52]	@ (80043ec <_Z32getFont_NotoSans_Regular_34_4bppv+0x6c>)
 80043b8:	490d      	ldr	r1, [pc, #52]	@ (80043f0 <_Z32getFont_NotoSans_Regular_34_4bppv+0x70>)
 80043ba:	9004      	str	r0, [sp, #16]
 80043bc:	9301      	str	r3, [sp, #4]
 80043be:	9300      	str	r3, [sp, #0]
 80043c0:	0020      	movs	r0, r4
 80043c2:	3b17      	subs	r3, #23
 80043c4:	f000 f91c 	bl	8004600 <_ZN8touchgfx16UnmappedDataFontC1EPKNS_9GlyphNodeEPKtttthhhhhhPKPKhPKNS_11KerningNodeEttS5_PKNS_24FontContextualFormsTableE>
 80043c8:	480a      	ldr	r0, [pc, #40]	@ (80043f4 <_Z32getFont_NotoSans_Regular_34_4bppv+0x74>)
 80043ca:	f00e f9e7 	bl	801279c <atexit>
 80043ce:	0028      	movs	r0, r5
 80043d0:	f00d fbaa 	bl	8011b28 <__cxa_guard_release>
    return NotoSans_Regular_34_4bpp;
}
 80043d4:	0020      	movs	r0, r4
 80043d6:	b00f      	add	sp, #60	@ 0x3c
 80043d8:	bd30      	pop	{r4, r5, pc}
 80043da:	46c0      	nop			@ (mov r8, r8)
 80043dc:	20003510 	.word	0x20003510
 80043e0:	20003514 	.word	0x20003514
 80043e4:	080161b8 	.word	0x080161b8
 80043e8:	080161bc 	.word	0x080161bc
 80043ec:	080161c0 	.word	0x080161c0
 80043f0:	90086130 	.word	0x90086130
 80043f4:	0800437d 	.word	0x0800437d

080043f8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80043f8:	b40e      	push	{r1, r2, r3}
 80043fa:	b503      	push	{r0, r1, lr}
 80043fc:	ab03      	add	r3, sp, #12
 80043fe:	cb04      	ldmia	r3!, {r2}
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004400:	2100      	movs	r1, #0
    va_start(pArg, text);
 8004402:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004404:	f007 fe1c 	bl	800c040 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004408:	b002      	add	sp, #8
 800440a:	bc08      	pop	{r3}
 800440c:	b003      	add	sp, #12
 800440e:	4718      	bx	r3

08004410 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004410:	b40c      	push	{r2, r3}
 8004412:	b507      	push	{r0, r1, r2, lr}
 8004414:	ab04      	add	r3, sp, #16
 8004416:	cb04      	ldmia	r3!, {r2}
    va_list pArg;
    va_start(pArg, text);
 8004418:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800441a:	f007 fe11 	bl	800c040 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800441e:	b003      	add	sp, #12
 8004420:	bc08      	pop	{r3}
 8004422:	b002      	add	sp, #8
 8004424:	4718      	bx	r3
	...

08004428 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004428:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800442a:	b570      	push	{r4, r5, r6, lr}
 800442c:	0004      	movs	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800442e:	2b00      	cmp	r3, #0
 8004430:	d02e      	beq.n	8004490 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x68>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004432:	0005      	movs	r5, r0
 8004434:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8004436:	3522      	adds	r5, #34	@ 0x22
 8004438:	2b00      	cmp	r3, #0
 800443a:	d105      	bne.n	8004448 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800443c:	21c5      	movs	r1, #197	@ 0xc5
 800443e:	4b16      	ldr	r3, [pc, #88]	@ (8004498 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004440:	4a16      	ldr	r2, [pc, #88]	@ (800449c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004442:	4817      	ldr	r0, [pc, #92]	@ (80044a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004444:	f00e f98c 	bl	8012760 <__assert_func>
            return buffer[pos];
 8004448:	8aab      	ldrh	r3, [r5, #20]
 800444a:	005b      	lsls	r3, r3, #1
 800444c:	5b5b      	ldrh	r3, [r3, r5]
 800444e:	2b00      	cmp	r3, #0
 8004450:	d01e      	beq.n	8004490 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x68>
    {
        substituteGlyphs();
 8004452:	f009 fa17 	bl	800d884 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004456:	8aeb      	ldrh	r3, [r5, #22]
 8004458:	2b01      	cmp	r3, #1
 800445a:	d804      	bhi.n	8004466 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x3e>
 800445c:	21cb      	movs	r1, #203	@ 0xcb
 800445e:	4b11      	ldr	r3, [pc, #68]	@ (80044a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004460:	4a11      	ldr	r2, [pc, #68]	@ (80044a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004462:	480f      	ldr	r0, [pc, #60]	@ (80044a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004464:	e7ee      	b.n	8004444 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x1c>
            const uint16_t index = pos + offset;
 8004466:	8aaa      	ldrh	r2, [r5, #20]
 8004468:	1c53      	adds	r3, r2, #1
 800446a:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800446c:	0019      	movs	r1, r3
 800446e:	2b09      	cmp	r3, #9
 8004470:	d900      	bls.n	8004474 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4c>
 8004472:	390a      	subs	r1, #10
 8004474:	0049      	lsls	r1, r1, #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004476:	480d      	ldr	r0, [pc, #52]	@ (80044ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x84>)
 8004478:	5a69      	ldrh	r1, [r5, r1]
 800447a:	4281      	cmp	r1, r0
 800447c:	d108      	bne.n	8004490 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x68>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800447e:	0052      	lsls	r2, r2, #1
 8004480:	18a2      	adds	r2, r4, r2
            return buffer[pos];
 8004482:	8c51      	ldrh	r1, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004484:	2b09      	cmp	r3, #9
 8004486:	d900      	bls.n	800448a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x62>
 8004488:	2300      	movs	r3, #0
 800448a:	005b      	lsls	r3, r3, #1
 800448c:	52e9      	strh	r1, [r5, r3]
            buffer[pos] = newChar;
 800448e:	8450      	strh	r0, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004490:	0020      	movs	r0, r4
 8004492:	f009 f8ec 	bl	800d66e <_ZN8touchgfx12TextProvider11getNextCharEv>
}
 8004496:	bd70      	pop	{r4, r5, r6, pc}
 8004498:	0801505c 	.word	0x0801505c
 800449c:	08015065 	.word	0x08015065
 80044a0:	08015110 	.word	0x08015110
 80044a4:	0801515a 	.word	0x0801515a
 80044a8:	08015168 	.word	0x08015168
 80044ac:	0000093f 	.word	0x0000093f

080044b0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 80044b0:	b510      	push	{r4, lr}
    fillInputBuffer();
 80044b2:	f009 f8a3 	bl	800d5fc <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 80044b6:	bd10      	pop	{r4, pc}

080044b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80044b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80044ba:	9203      	str	r2, [sp, #12]
 80044bc:	001a      	movs	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80044be:	ab0a      	add	r3, sp, #40	@ 0x28
 80044c0:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80044c2:	9301      	str	r3, [sp, #4]
 80044c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
{
 80044c6:	9102      	str	r1, [sp, #8]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80044c8:	9300      	str	r3, [sp, #0]
 80044ca:	a902      	add	r1, sp, #8
 80044cc:	9b08      	ldr	r3, [sp, #32]
 80044ce:	f006 f905 	bl	800a6dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80044d2:	b007      	add	sp, #28
 80044d4:	bd00      	pop	{pc}
	...

080044d8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80044d8:	b570      	push	{r4, r5, r6, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80044da:	2800      	cmp	r0, #0
 80044dc:	d124      	bne.n	8004528 <_ZN8touchgfx5Texts11setLanguageEt+0x50>
    {
        if (languagesArray[id] != 0)
 80044de:	4b13      	ldr	r3, [pc, #76]	@ (800452c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80044e0:	4813      	ldr	r0, [pc, #76]	@ (8004530 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80044e2:	681b      	ldr	r3, [r3, #0]
 80044e4:	4913      	ldr	r1, [pc, #76]	@ (8004534 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d016      	beq.n	8004518 <_ZN8touchgfx5Texts11setLanguageEt+0x40>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80044ea:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80044ec:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80044ee:	189a      	adds	r2, r3, r2
 80044f0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80044f2:	685a      	ldr	r2, [r3, #4]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80044f4:	191c      	adds	r4, r3, r4
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80044f6:	189a      	adds	r2, r3, r2
 80044f8:	600a      	str	r2, [r1, #0]
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80044fa:	2200      	movs	r2, #0
 80044fc:	4b0e      	ldr	r3, [pc, #56]	@ (8004538 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80044fe:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004500:	f000 f838 	bl	8004574 <_ZN17TypedTextDatabase8getFontsEv>
 8004504:	0005      	movs	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004506:	f000 f833 	bl	8004570 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800450a:	4b0c      	ldr	r3, [pc, #48]	@ (800453c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800450c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800450e:	4b0c      	ldr	r3, [pc, #48]	@ (8004540 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004510:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004512:	4b0c      	ldr	r3, [pc, #48]	@ (8004544 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004514:	8018      	strh	r0, [r3, #0]
    }
}
 8004516:	e007      	b.n	8004528 <_ZN8touchgfx5Texts11setLanguageEt+0x50>
            currentLanguagePtr = texts_all_languages;
 8004518:	4b0b      	ldr	r3, [pc, #44]	@ (8004548 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800451a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800451c:	4b0b      	ldr	r3, [pc, #44]	@ (800454c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800451e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004520:	4b0b      	ldr	r3, [pc, #44]	@ (8004550 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
 8004522:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004524:	2c00      	cmp	r4, #0
 8004526:	d1e8      	bne.n	80044fa <_ZN8touchgfx5Texts11setLanguageEt+0x22>
}
 8004528:	bd70      	pop	{r4, r5, r6, pc}
 800452a:	46c0      	nop			@ (mov r8, r8)
 800452c:	20003550 	.word	0x20003550
 8004530:	20003548 	.word	0x20003548
 8004534:	20003544 	.word	0x20003544
 8004538:	2000354c 	.word	0x2000354c
 800453c:	200035c8 	.word	0x200035c8
 8004540:	200035d0 	.word	0x200035d0
 8004544:	200035cc 	.word	0x200035cc
 8004548:	080161dc 	.word	0x080161dc
 800454c:	080161d8 	.word	0x080161d8
 8004550:	080161e0 	.word	0x080161e0

08004554 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004554:	4b04      	ldr	r3, [pc, #16]	@ (8004568 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004556:	4a05      	ldr	r2, [pc, #20]	@ (800456c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	0089      	lsls	r1, r1, #2
 800455c:	58cb      	ldr	r3, [r1, r3]
 800455e:	6810      	ldr	r0, [r2, #0]
 8004560:	005b      	lsls	r3, r3, #1
 8004562:	18c0      	adds	r0, r0, r3
}
 8004564:	4770      	bx	lr
 8004566:	46c0      	nop			@ (mov r8, r8)
 8004568:	20003544 	.word	0x20003544
 800456c:	20003548 	.word	0x20003548

08004570 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004570:	2001      	movs	r0, #1
 8004572:	4770      	bx	lr

08004574 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
 8004574:	4800      	ldr	r0, [pc, #0]	@ (8004578 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
}
 8004576:	4770      	bx	lr
 8004578:	20003554 	.word	0x20003554

0800457c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 0:
        touchgfx_fonts[0] = &(getFont_NotoSans_Regular_34_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800457c:	b510      	push	{r4, lr}
    &(getFont_NotoSans_Regular_34_4bpp())
 800457e:	f7ff feff 	bl	8004380 <_Z32getFont_NotoSans_Regular_34_4bppv>
};
 8004582:	4b01      	ldr	r3, [pc, #4]	@ (8004588 <_GLOBAL__sub_I_touchgfx_fonts+0xc>)
 8004584:	6018      	str	r0, [r3, #0]
} // namespace TypedTextDatabase
 8004586:	bd10      	pop	{r4, pc}
 8004588:	20003554 	.word	0x20003554

0800458c <_ZNK8touchgfx16UnmappedDataFont12getGSUBTableEv>:
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
 800458c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    }
 800458e:	4770      	bx	lr

08004590 <_ZNK8touchgfx16UnmappedDataFont23getContextualFormsTableEv>:
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
 8004590:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
    }
 8004592:	4770      	bx	lr

08004594 <_ZNK8touchgfx16UnmappedDataFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* UnmappedDataFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphDataList;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004594:	888b      	ldrh	r3, [r1, #4]
{
 8004596:	b510      	push	{r4, lr}
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004598:	0adb      	lsrs	r3, r3, #11
 800459a:	009a      	lsls	r2, r3, #2
 800459c:	6a00      	ldr	r0, [r0, #32]
 800459e:	884b      	ldrh	r3, [r1, #2]
 80045a0:	880c      	ldrh	r4, [r1, #0]
 80045a2:	5810      	ldr	r0, [r2, r0]
 80045a4:	041b      	lsls	r3, r3, #16
 80045a6:	4323      	orrs	r3, r4
 80045a8:	18c0      	adds	r0, r0, r3
}
 80045aa:	bd10      	pop	{r4, pc}

080045ac <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t UnmappedDataFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80045ac:	0003      	movs	r3, r0
 80045ae:	b530      	push	{r4, r5, lr}
    if (!glyph || glyph->kerningTableSize == 0)
    {
        return 0;
 80045b0:	1e10      	subs	r0, r2, #0
    if (!glyph || glyph->kerningTableSize == 0)
 80045b2:	d012      	beq.n	80045da <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
 80045b4:	7b14      	ldrb	r4, [r2, #12]
        return 0;
 80045b6:	1e20      	subs	r0, r4, #0
    if (!glyph || glyph->kerningTableSize == 0)
 80045b8:	d00f      	beq.n	80045da <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80045ba:	25e0      	movs	r5, #224	@ 0xe0
 80045bc:	7b50      	ldrb	r0, [r2, #13]
 80045be:	00ed      	lsls	r5, r5, #3
 80045c0:	7ad2      	ldrb	r2, [r2, #11]
 80045c2:	0200      	lsls	r0, r0, #8
 80045c4:	4028      	ands	r0, r5
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80045c6:	4302      	orrs	r2, r0
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80045c8:	0020      	movs	r0, r4
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80045ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045cc:	0092      	lsls	r2, r2, #2
 80045ce:	189b      	adds	r3, r3, r2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80045d0:	881a      	ldrh	r2, [r3, #0]
 80045d2:	428a      	cmp	r2, r1
 80045d4:	d102      	bne.n	80045dc <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE+0x30>
        {
            return kerndata->distance;
 80045d6:	2002      	movs	r0, #2
 80045d8:	5618      	ldrsb	r0, [r3, r0]
        {
            break;
        }
    }
    return 0;
}
 80045da:	bd30      	pop	{r4, r5, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80045dc:	428a      	cmp	r2, r1
 80045de:	d805      	bhi.n	80045ec <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE+0x40>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80045e0:	3801      	subs	r0, #1
 80045e2:	b280      	uxth	r0, r0
 80045e4:	3304      	adds	r3, #4
 80045e6:	2800      	cmp	r0, #0
 80045e8:	d1f2      	bne.n	80045d0 <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE+0x24>
 80045ea:	e7f6      	b.n	80045da <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        return 0;
 80045ec:	2000      	movs	r0, #0
 80045ee:	e7f4      	b.n	80045da <_ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE+0x2e>

080045f0 <_ZN8touchgfx16UnmappedDataFontD1Ev>:
class UnmappedDataFont : public Font
 80045f0:	4770      	bx	lr

080045f2 <_ZN8touchgfx16UnmappedDataFontD0Ev>:
 80045f2:	b510      	push	{r4, lr}
 80045f4:	0004      	movs	r4, r0
 80045f6:	2130      	movs	r1, #48	@ 0x30
 80045f8:	f00d fa85 	bl	8011b06 <_ZdlPvj>
 80045fc:	0020      	movs	r0, r4
 80045fe:	bd10      	pop	{r4, pc}

08004600 <_ZN8touchgfx16UnmappedDataFontC1EPKNS_9GlyphNodeEPKtttthhhhhhPKPKhPKNS_11KerningNodeEttS5_PKNS_24FontContextualFormsTableE>:
UnmappedDataFont::UnmappedDataFont(const GlyphNode* glyphs, const uint16_t* unicodeList, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataList, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004600:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004602:	b087      	sub	sp, #28
 8004604:	9204      	str	r2, [sp, #16]
 8004606:	aa0c      	add	r2, sp, #48	@ 0x30
 8004608:	8812      	ldrh	r2, [r2, #0]
 800460a:	9305      	str	r3, [sp, #20]
 800460c:	4694      	mov	ip, r2
     * @param  maxRight       The maximum right extend for a glyph in the font.
     * @param  fallbackChar   The fallback character for the typography in case no glyph is available.
     * @param  ellipsisChar The ellipsis character used for truncating long texts.
     */
    Font(uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar)
        : fontHeight(height),
 800460e:	4663      	mov	r3, ip
 8004610:	aa0d      	add	r2, sp, #52	@ 0x34
 8004612:	8817      	ldrh	r7, [r2, #0]
 8004614:	aa0e      	add	r2, sp, #56	@ 0x38
          baselineHeight(baseline),
 8004616:	80c7      	strh	r7, [r0, #6]
          pixelsAboveTop(pixAboveTop),
          pixelsBelowBottom(pixBelowBottom),
          bPerPixel(bitsPerPixel),
 8004618:	277f      	movs	r7, #127	@ 0x7f
 800461a:	7812      	ldrb	r2, [r2, #0]
        : fontHeight(height),
 800461c:	8083      	strh	r3, [r0, #4]
 800461e:	9200      	str	r2, [sp, #0]
 8004620:	aa0f      	add	r2, sp, #60	@ 0x3c
 8004622:	7812      	ldrb	r2, [r2, #0]
          pixelsAboveTop(pixAboveTop),
 8004624:	9b00      	ldr	r3, [sp, #0]
 8004626:	9201      	str	r2, [sp, #4]
 8004628:	aa10      	add	r2, sp, #64	@ 0x40
 800462a:	7812      	ldrb	r2, [r2, #0]
 800462c:	7203      	strb	r3, [r0, #8]
 800462e:	9202      	str	r2, [sp, #8]
 8004630:	aa11      	add	r2, sp, #68	@ 0x44
 8004632:	7816      	ldrb	r6, [r2, #0]
 8004634:	aa12      	add	r2, sp, #72	@ 0x48
 8004636:	7812      	ldrb	r2, [r2, #0]
          pixelsBelowBottom(pixBelowBottom),
 8004638:	9b01      	ldr	r3, [sp, #4]
 800463a:	9203      	str	r2, [sp, #12]
 800463c:	aa13      	add	r2, sp, #76	@ 0x4c
 800463e:	7815      	ldrb	r5, [r2, #0]
 8004640:	aa16      	add	r2, sp, #88	@ 0x58
 8004642:	8814      	ldrh	r4, [r2, #0]
 8004644:	aa17      	add	r2, sp, #92	@ 0x5c
 8004646:	8812      	ldrh	r2, [r2, #0]
 8004648:	7243      	strb	r3, [r0, #9]
          bPerPixel(bitsPerPixel),
 800464a:	9b02      	ldr	r3, [sp, #8]
          bAlignRow(byteAlignRow),
          maxPixelsLeft(maxLeft),
          maxPixelsRight(maxRight),
          fallbackCharacter(fallbackChar),
          ellipsisCharacter(ellipsisChar)
 800464c:	8202      	strh	r2, [r0, #16]
          bPerPixel(bitsPerPixel),
 800464e:	401f      	ands	r7, r3
      arabicTable(formsTable)
 8004650:	4a0b      	ldr	r2, [pc, #44]	@ (8004680 <_ZN8touchgfx16UnmappedDataFontC1EPKNS_9GlyphNodeEPKtttthhhhhhPKPKhPKNS_11KerningNodeEttS5_PKNS_24FontContextualFormsTableE+0x80>)
          maxPixelsLeft(maxLeft),
 8004652:	9b03      	ldr	r3, [sp, #12]
          bPerPixel(bitsPerPixel),
 8004654:	01f6      	lsls	r6, r6, #7
 8004656:	433e      	orrs	r6, r7
          maxPixelsLeft(maxLeft),
 8004658:	72c3      	strb	r3, [r0, #11]
          bPerPixel(bitsPerPixel),
 800465a:	7286      	strb	r6, [r0, #10]
          maxPixelsRight(maxRight),
 800465c:	7305      	strb	r5, [r0, #12]
          fallbackCharacter(fallbackChar),
 800465e:	81c4      	strh	r4, [r0, #14]
 8004660:	6002      	str	r2, [r0, #0]
      glyphList(glyphs),
 8004662:	6141      	str	r1, [r0, #20]
      listSize(numGlyphs),
 8004664:	9b05      	ldr	r3, [sp, #20]
 8004666:	8303      	strh	r3, [r0, #24]
      unicodes(unicodeList),
 8004668:	9b04      	ldr	r3, [sp, #16]
 800466a:	61c3      	str	r3, [r0, #28]
      glyphDataList(glyphDataList),
 800466c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800466e:	6203      	str	r3, [r0, #32]
      kerningData(kerningList),
 8004670:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004672:	6243      	str	r3, [r0, #36]	@ 0x24
      gsubTable(gsubData),
 8004674:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8004676:	6283      	str	r3, [r0, #40]	@ 0x28
      arabicTable(formsTable)
 8004678:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800467a:	62c3      	str	r3, [r0, #44]	@ 0x2c
}
 800467c:	b007      	add	sp, #28
 800467e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004680:	08015244 	.word	0x08015244

08004684 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt>:

int UnmappedDataFont::lookupUnicode(uint16_t unicode) const
{
 8004684:	b570      	push	{r4, r5, r6, lr}
    int32_t min = 0;
    int32_t max = listSize - 1;

    int32_t mid = min + (unicode - unicodes[min]); // Linear up from [min].unicode
 8004686:	69c4      	ldr	r4, [r0, #28]
    int32_t max = listSize - 1;
 8004688:	8b03      	ldrh	r3, [r0, #24]
    int32_t mid = min + (unicode - unicodes[min]); // Linear up from [min].unicode
 800468a:	8820      	ldrh	r0, [r4, #0]
    int32_t max = listSize - 1;
 800468c:	3b01      	subs	r3, #1
    int32_t mid = min + (unicode - unicodes[min]); // Linear up from [min].unicode
 800468e:	1a08      	subs	r0, r1, r0
    if (mid < min)
 8004690:	d40f      	bmi.n	80046b2 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2e>
    {
        // Unicode < unicodes[min] => not found
        return -1;
    }
    if (mid > max)
 8004692:	4298      	cmp	r0, r3
 8004694:	dd0a      	ble.n	80046ac <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x28>
    {
        // Linear up ends too high
        mid = max - (unicodes[max] - unicode); // Linear down from [max].unicode
 8004696:	005a      	lsls	r2, r3, #1
 8004698:	5b10      	ldrh	r0, [r2, r4]
 800469a:	1a40      	subs	r0, r0, r1
 800469c:	1a18      	subs	r0, r3, r0
        if (mid > max)
 800469e:	4283      	cmp	r3, r0
 80046a0:	db07      	blt.n	80046b2 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2e>
        {
            // Unicode > unicodes[max] => not found
            return -1;
        }
        if (mid < min)
 80046a2:	2800      	cmp	r0, #0
 80046a4:	da02      	bge.n	80046ac <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x28>
        {
            // Linear down ends too low, take the middle element
            mid = (min + max) / 2;
 80046a6:	0fd8      	lsrs	r0, r3, #31
 80046a8:	18c0      	adds	r0, r0, r3
 80046aa:	1040      	asrs	r0, r0, #1
{
 80046ac:	2200      	movs	r2, #0
        }
    }
    while (min <= max)
 80046ae:	429a      	cmp	r2, r3
 80046b0:	dd02      	ble.n	80046b8 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x34>
        return -1;
 80046b2:	2001      	movs	r0, #1
 80046b4:	4240      	negs	r0, r0
                mid = (min + max) / 2;
            }
        }
    }
    return -1;
}
 80046b6:	bd70      	pop	{r4, r5, r6, pc}
        if (unicode == unicodes[mid])
 80046b8:	0045      	lsls	r5, r0, #1
 80046ba:	5b66      	ldrh	r6, [r4, r5]
 80046bc:	428e      	cmp	r6, r1
 80046be:	d0fa      	beq.n	80046b6 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x32>
        if (unicode < unicodes[mid])
 80046c0:	d90e      	bls.n	80046e0 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x5c>
            max = mid - 1;
 80046c2:	1e43      	subs	r3, r0, #1
            if (max < min)
 80046c4:	429a      	cmp	r2, r3
 80046c6:	dcf4      	bgt.n	80046b2 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2e>
            mid = max - (unicodes[max] - unicode);
 80046c8:	1965      	adds	r5, r4, r5
 80046ca:	3d02      	subs	r5, #2
 80046cc:	8828      	ldrh	r0, [r5, #0]
 80046ce:	1a40      	subs	r0, r0, r1
 80046d0:	1a18      	subs	r0, r3, r0
            if (mid > max)
 80046d2:	4283      	cmp	r3, r0
 80046d4:	dbed      	blt.n	80046b2 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2e>
            if (mid < min)
 80046d6:	4282      	cmp	r2, r0
 80046d8:	dde9      	ble.n	80046ae <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2a>
                mid = (min + max) / 2;
 80046da:	1898      	adds	r0, r3, r2
 80046dc:	1040      	asrs	r0, r0, #1
 80046de:	e7e6      	b.n	80046ae <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2a>
            min = mid + 1;
 80046e0:	1c42      	adds	r2, r0, #1
            if (min > max)
 80046e2:	4293      	cmp	r3, r2
 80046e4:	dbe5      	blt.n	80046b2 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2e>
            mid = min + (unicode - unicodes[min]);
 80046e6:	1965      	adds	r5, r4, r5
 80046e8:	8868      	ldrh	r0, [r5, #2]
 80046ea:	1a08      	subs	r0, r1, r0
 80046ec:	1880      	adds	r0, r0, r2
            if (mid < min)
 80046ee:	4282      	cmp	r2, r0
 80046f0:	dcdf      	bgt.n	80046b2 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2e>
            if (mid > max)
 80046f2:	4283      	cmp	r3, r0
 80046f4:	dadb      	bge.n	80046ae <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x2a>
 80046f6:	e7f0      	b.n	80046da <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt+0x56>

080046f8 <_ZNK8touchgfx16UnmappedDataFont8getGlyphEtRPKhRh>:
{
 80046f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80046fa:	0004      	movs	r4, r0
 80046fc:	0016      	movs	r6, r2
 80046fe:	9301      	str	r3, [sp, #4]
    int index = lookupUnicode(unicode);
 8004700:	f7ff ffc0 	bl	8004684 <_ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt>
 8004704:	0001      	movs	r1, r0
    return 0;
 8004706:	2000      	movs	r0, #0
    if (index != -1)
 8004708:	1c4b      	adds	r3, r1, #1
 800470a:	d019      	beq.n	8004740 <_ZNK8touchgfx16UnmappedDataFont8getGlyphEtRPKhRh+0x48>
    }

    static touchgfx::FlashDataReader* getFlashReader()
    {
        return fontFlashReader;
 800470c:	4b0d      	ldr	r3, [pc, #52]	@ (8004744 <_ZNK8touchgfx16UnmappedDataFont8getGlyphEtRPKhRh+0x4c>)
 800470e:	6818      	ldr	r0, [r3, #0]
        if (flashReader)
 8004710:	2800      	cmp	r0, #0
 8004712:	d015      	beq.n	8004740 <_ZNK8touchgfx16UnmappedDataFont8getGlyphEtRPKhRh+0x48>
            flashReader->copyData(glyphList + index, &glyphNodeBuffer, sizeof(GlyphNode));
 8004714:	230e      	movs	r3, #14
 8004716:	4359      	muls	r1, r3
 8004718:	6962      	ldr	r2, [r4, #20]
 800471a:	4d0b      	ldr	r5, [pc, #44]	@ (8004748 <_ZNK8touchgfx16UnmappedDataFont8getGlyphEtRPKhRh+0x50>)
 800471c:	1851      	adds	r1, r2, r1
 800471e:	6802      	ldr	r2, [r0, #0]
 8004720:	68d7      	ldr	r7, [r2, #12]
 8004722:	002a      	movs	r2, r5
 8004724:	47b8      	blx	r7
            pixelData = getPixelData(const_cast<const GlyphNode*>(&glyphNodeBuffer));
 8004726:	6823      	ldr	r3, [r4, #0]
 8004728:	0029      	movs	r1, r5
 800472a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800472c:	0020      	movs	r0, r4
 800472e:	4798      	blx	r3
            bitsPerPixel = getBitsPerPixel();
 8004730:	6823      	ldr	r3, [r4, #0]
            pixelData = getPixelData(const_cast<const GlyphNode*>(&glyphNodeBuffer));
 8004732:	6030      	str	r0, [r6, #0]
            bitsPerPixel = getBitsPerPixel();
 8004734:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004736:	0020      	movs	r0, r4
 8004738:	4798      	blx	r3
 800473a:	9b01      	ldr	r3, [sp, #4]
 800473c:	7018      	strb	r0, [r3, #0]
            return &glyphNodeBuffer;
 800473e:	0028      	movs	r0, r5
}
 8004740:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004742:	46c0      	nop			@ (mov r8, r8)
 8004744:	2000350c 	.word	0x2000350c
 8004748:	20003558 	.word	0x20003558

0800474c <_ZN14CircleAnimatorD1Ev>:
 800474c:	b510      	push	{r4, lr}
 800474e:	0004      	movs	r4, r0
 8004750:	4b02      	ldr	r3, [pc, #8]	@ (800475c <_ZN14CircleAnimatorD1Ev+0x10>)
 8004752:	6003      	str	r3, [r0, #0]
 8004754:	f7fe fb99 	bl	8002e8a <_ZN18CircleAnimatorBaseD1Ev>
 8004758:	0020      	movs	r0, r4
 800475a:	bd10      	pop	{r4, pc}
 800475c:	080152ac 	.word	0x080152ac

08004760 <_ZN14CircleAnimatorD0Ev>:
 8004760:	b510      	push	{r4, lr}
 8004762:	0004      	movs	r4, r0
 8004764:	f7ff fff2 	bl	800474c <_ZN14CircleAnimatorD1Ev>
 8004768:	21d8      	movs	r1, #216	@ 0xd8
 800476a:	0020      	movs	r0, r4
 800476c:	0089      	lsls	r1, r1, #2
 800476e:	f00d f9ca 	bl	8011b06 <_ZdlPvj>
 8004772:	0020      	movs	r0, r4
 8004774:	bd10      	pop	{r4, pc}

08004776 <_ZN14CircleAnimator22isFadeAnimationRunningEv>:
        return fadeAnimationRunning;
 8004776:	23d0      	movs	r3, #208	@ 0xd0
 8004778:	009b      	lsls	r3, r3, #2
 800477a:	58c3      	ldr	r3, [r0, r3]
 800477c:	3344      	adds	r3, #68	@ 0x44
    running = false;
}

bool CircleAnimator::isFadeAnimationRunning()
{
    return circles[0]->isFadeAnimationRunning();
 800477e:	7818      	ldrb	r0, [r3, #0]
}
 8004780:	4770      	bx	lr
	...

08004784 <_ZN14CircleAnimator15getCircleStartXEi>:

int CircleAnimator::getCircleStartX(int circleIndex)
{
 8004784:	b570      	push	{r4, r5, r6, lr}
 8004786:	0004      	movs	r4, r0
 8004788:	0008      	movs	r0, r1
    return static_cast<int>((getWidth() / 2) + (cos((PI / 8.0f) * circleIndex) * placementCircleRadius) - circleRadius);
 800478a:	f7fc fd0d 	bl	80011a8 <__aeabi_i2f>
 800478e:	4913      	ldr	r1, [pc, #76]	@ (80047dc <_ZN14CircleAnimator15getCircleStartXEi+0x58>)
 8004790:	f7fc fa08 	bl	8000ba4 <__aeabi_fmul>
  using ::cos;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  cos(float __x)
  { return __builtin_cosf(__x); }
 8004794:	f00d f9de 	bl	8011b54 <cosf>
 8004798:	2208      	movs	r2, #8
 800479a:	5ea3      	ldrsh	r3, [r4, r2]
 800479c:	1c05      	adds	r5, r0, #0
 800479e:	0fd8      	lsrs	r0, r3, #31
 80047a0:	18c0      	adds	r0, r0, r3
 80047a2:	1040      	asrs	r0, r0, #1
 80047a4:	f7fc fd00 	bl	80011a8 <__aeabi_i2f>
 80047a8:	23cd      	movs	r3, #205	@ 0xcd
 80047aa:	009b      	lsls	r3, r3, #2
 80047ac:	1c06      	adds	r6, r0, #0
 80047ae:	58e0      	ldr	r0, [r4, r3]
 80047b0:	f7fc fcfa 	bl	80011a8 <__aeabi_i2f>
 80047b4:	1c29      	adds	r1, r5, #0
 80047b6:	f7fc f9f5 	bl	8000ba4 <__aeabi_fmul>
 80047ba:	1c01      	adds	r1, r0, #0
 80047bc:	1c30      	adds	r0, r6, #0
 80047be:	f7fb fe81 	bl	80004c4 <__aeabi_fadd>
 80047c2:	23ce      	movs	r3, #206	@ 0xce
 80047c4:	009b      	lsls	r3, r3, #2
 80047c6:	1c05      	adds	r5, r0, #0
 80047c8:	58e0      	ldr	r0, [r4, r3]
 80047ca:	f7fc fced 	bl	80011a8 <__aeabi_i2f>
 80047ce:	1c01      	adds	r1, r0, #0
 80047d0:	1c28      	adds	r0, r5, #0
 80047d2:	f7fc fb25 	bl	8000e20 <__aeabi_fsub>
 80047d6:	f7fc fcc7 	bl	8001168 <__aeabi_f2iz>
}
 80047da:	bd70      	pop	{r4, r5, r6, pc}
 80047dc:	3ec90fdb 	.word	0x3ec90fdb

080047e0 <_ZN14CircleAnimator15getCircleStartYEi>:

int CircleAnimator::getCircleStartY(int circleIndex)
{
 80047e0:	b570      	push	{r4, r5, r6, lr}
 80047e2:	0004      	movs	r4, r0
 80047e4:	0008      	movs	r0, r1
    return static_cast<int>((getHeight() / 2) - (sin((PI / 8.0f) * circleIndex) * placementCircleRadius) - circleRadius);
 80047e6:	f7fc fcdf 	bl	80011a8 <__aeabi_i2f>
 80047ea:	4913      	ldr	r1, [pc, #76]	@ (8004838 <_ZN14CircleAnimator15getCircleStartYEi+0x58>)
 80047ec:	f7fc f9da 	bl	8000ba4 <__aeabi_fmul>
  using ::sin;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  sin(float __x)
  { return __builtin_sinf(__x); }
 80047f0:	f00d f9e4 	bl	8011bbc <sinf>
 80047f4:	220a      	movs	r2, #10
 80047f6:	5ea3      	ldrsh	r3, [r4, r2]
 80047f8:	1c05      	adds	r5, r0, #0
 80047fa:	0fd8      	lsrs	r0, r3, #31
 80047fc:	18c0      	adds	r0, r0, r3
 80047fe:	1040      	asrs	r0, r0, #1
 8004800:	f7fc fcd2 	bl	80011a8 <__aeabi_i2f>
 8004804:	23cd      	movs	r3, #205	@ 0xcd
 8004806:	009b      	lsls	r3, r3, #2
 8004808:	1c06      	adds	r6, r0, #0
 800480a:	58e0      	ldr	r0, [r4, r3]
 800480c:	f7fc fccc 	bl	80011a8 <__aeabi_i2f>
 8004810:	1c29      	adds	r1, r5, #0
 8004812:	f7fc f9c7 	bl	8000ba4 <__aeabi_fmul>
 8004816:	1c01      	adds	r1, r0, #0
 8004818:	1c30      	adds	r0, r6, #0
 800481a:	f7fc fb01 	bl	8000e20 <__aeabi_fsub>
 800481e:	23ce      	movs	r3, #206	@ 0xce
 8004820:	009b      	lsls	r3, r3, #2
 8004822:	1c05      	adds	r5, r0, #0
 8004824:	58e0      	ldr	r0, [r4, r3]
 8004826:	f7fc fcbf 	bl	80011a8 <__aeabi_i2f>
 800482a:	1c01      	adds	r1, r0, #0
 800482c:	1c28      	adds	r0, r5, #0
 800482e:	f7fc faf7 	bl	8000e20 <__aeabi_fsub>
 8004832:	f7fc fc99 	bl	8001168 <__aeabi_f2iz>
}
 8004836:	bd70      	pop	{r4, r5, r6, pc}
 8004838:	3ec90fdb 	.word	0x3ec90fdb

0800483c <_ZN14CircleAnimator14resetAnimationEv>:
{
 800483c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    tickCounter = -1;
 800483e:	23ca      	movs	r3, #202	@ 0xca
 8004840:	2201      	movs	r2, #1
{
 8004842:	0004      	movs	r4, r0
    for (int i = 0; i < NUMBER_OF_CIRCLES; i++)
 8004844:	2500      	movs	r5, #0
    tickCounter = -1;
 8004846:	009b      	lsls	r3, r3, #2
 8004848:	4252      	negs	r2, r2
 800484a:	50c2      	str	r2, [r0, r3]
    for (int i = 0; i < NUMBER_OF_CIRCLES; i++)
 800484c:	3318      	adds	r3, #24
 800484e:	18c6      	adds	r6, r0, r3
        circles[i]->moveTo(getCircleStartX(i), getCircleStartY(i));
 8004850:	6837      	ldr	r7, [r6, #0]
 8004852:	0029      	movs	r1, r5
 8004854:	683b      	ldr	r3, [r7, #0]
 8004856:	0020      	movs	r0, r4
 8004858:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800485a:	9300      	str	r3, [sp, #0]
 800485c:	f7ff ff92 	bl	8004784 <_ZN14CircleAnimator15getCircleStartXEi>
 8004860:	0029      	movs	r1, r5
 8004862:	9001      	str	r0, [sp, #4]
 8004864:	0020      	movs	r0, r4
 8004866:	f7ff ffbb 	bl	80047e0 <_ZN14CircleAnimator15getCircleStartYEi>
 800486a:	466b      	mov	r3, sp
 800486c:	b202      	sxth	r2, r0
 800486e:	2104      	movs	r1, #4
 8004870:	5e59      	ldrsh	r1, [r3, r1]
 8004872:	0038      	movs	r0, r7
 8004874:	9b00      	ldr	r3, [sp, #0]
 8004876:	4798      	blx	r3
 8004878:	2200      	movs	r2, #0
 800487a:	ce08      	ldmia	r6!, {r3}
    for (int i = 0; i < NUMBER_OF_CIRCLES; i++)
 800487c:	3501      	adds	r5, #1
 800487e:	3328      	adds	r3, #40	@ 0x28
 8004880:	701a      	strb	r2, [r3, #0]
 8004882:	2d08      	cmp	r5, #8
 8004884:	d1e4      	bne.n	8004850 <_ZN14CircleAnimator14resetAnimationEv+0x14>
 8004886:	3454      	adds	r4, #84	@ 0x54
 8004888:	7022      	strb	r2, [r4, #0]
}
 800488a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

0800488c <_ZN14CircleAnimatorC1Ev>:
CircleAnimator::CircleAnimator()
 800488c:	b510      	push	{r4, lr}
 800488e:	0004      	movs	r4, r0
 8004890:	f7fe fbd0 	bl	8003034 <_ZN18CircleAnimatorBaseC1Ev>
 8004894:	4b21      	ldr	r3, [pc, #132]	@ (800491c <_ZN14CircleAnimatorC1Ev+0x90>)
    animationDurationCircleDisplacement = 8;
 8004896:	2208      	movs	r2, #8
CircleAnimator::CircleAnimator()
 8004898:	6023      	str	r3, [r4, #0]
    animationDurationCircleDisplacement = 8;
 800489a:	23cc      	movs	r3, #204	@ 0xcc
 800489c:	009b      	lsls	r3, r3, #2
 800489e:	50e2      	str	r2, [r4, r3]
    animationDuration = NUMBER_OF_CIRCLES * animationDurationCircleDisplacement;
 80048a0:	3b04      	subs	r3, #4
 80048a2:	3238      	adds	r2, #56	@ 0x38
 80048a4:	50e2      	str	r2, [r4, r3]
        return rect.width;
 80048a6:	0022      	movs	r2, r4
 80048a8:	3268      	adds	r2, #104	@ 0x68
 80048aa:	2308      	movs	r3, #8
 80048ac:	5ed1      	ldrsh	r1, [r2, r3]
    placementCircleRadius = (getWidth() - circle0.getWidth() - 4) / 2;
 80048ae:	2008      	movs	r0, #8
 80048b0:	5e23      	ldrsh	r3, [r4, r0]
 80048b2:	1a5b      	subs	r3, r3, r1
 80048b4:	3b04      	subs	r3, #4
 80048b6:	0fd8      	lsrs	r0, r3, #31
 80048b8:	18c3      	adds	r3, r0, r3
 80048ba:	20cd      	movs	r0, #205	@ 0xcd
 80048bc:	105b      	asrs	r3, r3, #1
 80048be:	0080      	lsls	r0, r0, #2
 80048c0:	5023      	str	r3, [r4, r0]
    circleRadius = circle0.getWidth() / 2;
 80048c2:	0fcb      	lsrs	r3, r1, #31
 80048c4:	185b      	adds	r3, r3, r1
 80048c6:	21ce      	movs	r1, #206	@ 0xce
 80048c8:	105b      	asrs	r3, r3, #1
 80048ca:	0089      	lsls	r1, r1, #2
 80048cc:	5063      	str	r3, [r4, r1]
    circles[0] = &circle0;
 80048ce:	23d0      	movs	r3, #208	@ 0xd0
 80048d0:	009b      	lsls	r3, r3, #2
 80048d2:	50e2      	str	r2, [r4, r3]
    circles[1] = &circle1;
 80048d4:	3258      	adds	r2, #88	@ 0x58
 80048d6:	3304      	adds	r3, #4
 80048d8:	50e2      	str	r2, [r4, r3]
    circles[2] = &circle2;
 80048da:	3258      	adds	r2, #88	@ 0x58
 80048dc:	3304      	adds	r3, #4
 80048de:	50e2      	str	r2, [r4, r3]
    circles[3] = &circle3;
 80048e0:	3258      	adds	r2, #88	@ 0x58
 80048e2:	3304      	adds	r3, #4
 80048e4:	50e2      	str	r2, [r4, r3]
    circles[4] = &circle4;
 80048e6:	3258      	adds	r2, #88	@ 0x58
 80048e8:	3304      	adds	r3, #4
 80048ea:	50e2      	str	r2, [r4, r3]
    circles[5] = &circle5;
 80048ec:	3b31      	subs	r3, #49	@ 0x31
 80048ee:	3bff      	subs	r3, #255	@ 0xff
 80048f0:	18e2      	adds	r2, r4, r3
 80048f2:	3335      	adds	r3, #53	@ 0x35
 80048f4:	33ff      	adds	r3, #255	@ 0xff
 80048f6:	50e2      	str	r2, [r4, r3]
    circles[6] = &circle6;
 80048f8:	3bdc      	subs	r3, #220	@ 0xdc
 80048fa:	18e2      	adds	r2, r4, r3
 80048fc:	33e0      	adds	r3, #224	@ 0xe0
 80048fe:	50e2      	str	r2, [r4, r3]
    circles[7] = &circle7;
 8004900:	3b88      	subs	r3, #136	@ 0x88
 8004902:	18e2      	adds	r2, r4, r3
 8004904:	338c      	adds	r3, #140	@ 0x8c
 8004906:	50e2      	str	r2, [r4, r3]
    resetAnimation();
 8004908:	0020      	movs	r0, r4
 800490a:	f7ff ff97 	bl	800483c <_ZN14CircleAnimator14resetAnimationEv>
    running = false;
 800490e:	23cf      	movs	r3, #207	@ 0xcf
 8004910:	2200      	movs	r2, #0
 8004912:	009b      	lsls	r3, r3, #2
}
 8004914:	0020      	movs	r0, r4
    running = false;
 8004916:	54e2      	strb	r2, [r4, r3]
}
 8004918:	bd10      	pop	{r4, pc}
 800491a:	46c0      	nop			@ (mov r8, r8)
 800491c:	080152ac 	.word	0x080152ac

08004920 <_ZN14CircleAnimator13getCircleEndXEi>:

int CircleAnimator::getCircleEndX(int circleIndex)
{
 8004920:	b510      	push	{r4, lr}
    return getCircleStartX(circleIndex + NUMBER_OF_CIRCLES);
 8004922:	3108      	adds	r1, #8
 8004924:	f7ff ff2e 	bl	8004784 <_ZN14CircleAnimator15getCircleStartXEi>
}
 8004928:	bd10      	pop	{r4, pc}

0800492a <_ZN14CircleAnimator13getCircleEndYEi>:

int CircleAnimator::getCircleEndY(int circleIndex)
{
 800492a:	b510      	push	{r4, lr}
    return getCircleStartY(circleIndex + NUMBER_OF_CIRCLES);
 800492c:	3108      	adds	r1, #8
 800492e:	f7ff ff57 	bl	80047e0 <_ZN14CircleAnimator15getCircleStartYEi>
}
 8004932:	bd10      	pop	{r4, pc}

08004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>:
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
 8004934:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004936:	001e      	movs	r6, r3
        if (!moveAnimationRunning)
 8004938:	0003      	movs	r3, r0
 800493a:	3329      	adds	r3, #41	@ 0x29
 800493c:	781b      	ldrb	r3, [r3, #0]
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
 800493e:	0004      	movs	r4, r0
 8004940:	000d      	movs	r5, r1
 8004942:	0017      	movs	r7, r2
        if (!moveAnimationRunning)
 8004944:	2b00      	cmp	r3, #0
 8004946:	d105      	bne.n	8004954 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0x20>
            Application::getInstance()->registerTimerWidget(this);
 8004948:	f006 fb40 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800494c:	0021      	movs	r1, r4
 800494e:	3004      	adds	r0, #4
 8004950:	f006 fc20 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        moveAnimationCounter = 0;
 8004954:	2300      	movs	r3, #0
 8004956:	8563      	strh	r3, [r4, #42]	@ 0x2a
        return rect.x;
 8004958:	2304      	movs	r3, #4
 800495a:	5ee1      	ldrsh	r1, [r4, r3]
        moveAnimationStartX = T::getX();
 800495c:	6863      	ldr	r3, [r4, #4]
        moveAnimationDuration = duration;
 800495e:	85e6      	strh	r6, [r4, #46]	@ 0x2e
        moveAnimationStartX = T::getX();
 8004960:	6323      	str	r3, [r4, #48]	@ 0x30
        moveAnimationXEquation = xProgressionEquation;
 8004962:	9b08      	ldr	r3, [sp, #32]
        moveAnimationEndY = endY;
 8004964:	86e7      	strh	r7, [r4, #54]	@ 0x36
        moveAnimationXEquation = xProgressionEquation;
 8004966:	63a3      	str	r3, [r4, #56]	@ 0x38
        moveAnimationYEquation = yProgressionEquation;
 8004968:	9b09      	ldr	r3, [sp, #36]	@ 0x24
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800496a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
        moveAnimationYEquation = yProgressionEquation;
 800496c:	63e3      	str	r3, [r4, #60]	@ 0x3c
        moveAnimationRunning = true;
 800496e:	0023      	movs	r3, r4
 8004970:	3329      	adds	r3, #41	@ 0x29
 8004972:	9301      	str	r3, [sp, #4]
 8004974:	2301      	movs	r3, #1
 8004976:	9a01      	ldr	r2, [sp, #4]
        moveAnimationEndX = endX;
 8004978:	86a5      	strh	r5, [r4, #52]	@ 0x34
        moveAnimationRunning = true;
 800497a:	7013      	strb	r3, [r2, #0]
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800497c:	2f00      	cmp	r7, #0
 800497e:	d13c      	bne.n	80049fa <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xc6>
            if (moveAnimationCounter >= moveAnimationDelay)
 8004980:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
            moveAnimationCounter++;
 8004982:	8563      	strh	r3, [r4, #42]	@ 0x2a
            if (moveAnimationCounter >= moveAnimationDelay)
 8004984:	429a      	cmp	r2, r3
 8004986:	d838      	bhi.n	80049fa <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xc6>
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8004988:	1a9b      	subs	r3, r3, r2
 800498a:	b29b      	uxth	r3, r3
 800498c:	9300      	str	r3, [sp, #0]
 800498e:	1a6a      	subs	r2, r5, r1
 8004990:	0033      	movs	r3, r6
 8004992:	0039      	movs	r1, r7
 8004994:	9d08      	ldr	r5, [sp, #32]
 8004996:	b212      	sxth	r2, r2
 8004998:	9800      	ldr	r0, [sp, #0]
 800499a:	47a8      	blx	r5
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800499c:	8e61      	ldrh	r1, [r4, #50]	@ 0x32
 800499e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80049a0:	8de3      	ldrh	r3, [r4, #46]	@ 0x2e
 80049a2:	1a52      	subs	r2, r2, r1
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80049a4:	0006      	movs	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 80049a6:	0039      	movs	r1, r7
 80049a8:	b212      	sxth	r2, r2
 80049aa:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 80049ac:	9800      	ldr	r0, [sp, #0]
 80049ae:	47a8      	blx	r5
                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 80049b0:	8e62      	ldrh	r2, [r4, #50]	@ 0x32
 80049b2:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
 80049b4:	1812      	adds	r2, r2, r0
 80049b6:	1989      	adds	r1, r1, r6
 80049b8:	b212      	sxth	r2, r2
 80049ba:	b209      	sxth	r1, r1
 80049bc:	0020      	movs	r0, r4
 80049be:	f7fe fa4f 	bl	8002e60 <_ZN8touchgfx8Drawable6moveToEss>
                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 80049c2:	8da3      	ldrh	r3, [r4, #44]	@ 0x2c
 80049c4:	8de1      	ldrh	r1, [r4, #46]	@ 0x2e
 80049c6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80049c8:	185b      	adds	r3, r3, r1
 80049ca:	429a      	cmp	r2, r3
 80049cc:	d315      	bcc.n	80049fa <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xc6>
                    moveAnimationRunning = false;
 80049ce:	9b01      	ldr	r3, [sp, #4]
 80049d0:	701f      	strb	r7, [r3, #0]
                    moveAnimationCounter = 0;
 80049d2:	8567      	strh	r7, [r4, #42]	@ 0x2a
                    Application::getInstance()->unregisterTimerWidget(this);
 80049d4:	f006 fafa 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 80049d8:	0021      	movs	r1, r4
 80049da:	3004      	adds	r0, #4
 80049dc:	f006 fb1b 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 80049e0:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80049e2:	2800      	cmp	r0, #0
 80049e4:	d009      	beq.n	80049fa <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xc6>
 80049e6:	6803      	ldr	r3, [r0, #0]
 80049e8:	68db      	ldr	r3, [r3, #12]
 80049ea:	4798      	blx	r3
 80049ec:	2800      	cmp	r0, #0
 80049ee:	d004      	beq.n	80049fa <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_+0xc6>
                        moveAnimationEndedCallback->execute(*this);
 80049f0:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80049f2:	0021      	movs	r1, r4
 80049f4:	6803      	ldr	r3, [r0, #0]
 80049f6:	689b      	ldr	r3, [r3, #8]
 80049f8:	4798      	blx	r3
    }
 80049fa:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

080049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 80049fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80049fe:	b085      	sub	sp, #20
 8004a00:	9302      	str	r3, [sp, #8]
        if (!fadeAnimationRunning)
 8004a02:	0003      	movs	r3, r0
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8004a04:	9100      	str	r1, [sp, #0]
 8004a06:	9201      	str	r2, [sp, #4]
        if (!fadeAnimationRunning)
 8004a08:	3344      	adds	r3, #68	@ 0x44
 8004a0a:	781b      	ldrb	r3, [r3, #0]
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8004a0c:	0004      	movs	r4, r0
        if (!fadeAnimationRunning)
 8004a0e:	2b00      	cmp	r3, #0
 8004a10:	d105      	bne.n	8004a1e <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0x22>
            Application::getInstance()->registerTimerWidget(this);
 8004a12:	f006 fadb 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 8004a16:	0021      	movs	r1, r4
 8004a18:	3004      	adds	r0, #4
 8004a1a:	f006 fbbb 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 8004a1e:	0022      	movs	r2, r4
 8004a20:	2300      	movs	r3, #0
        return alpha;
 8004a22:	0027      	movs	r7, r4
 8004a24:	3208      	adds	r2, #8
 8004a26:	87d3      	strh	r3, [r2, #62]	@ 0x3e
        fadeAnimationStartAlpha = T::getAlpha();
 8004a28:	0023      	movs	r3, r4
        fadeAnimationEndAlpha = endAlpha;
 8004a2a:	9900      	ldr	r1, [sp, #0]
 8004a2c:	3728      	adds	r7, #40	@ 0x28
 8004a2e:	783d      	ldrb	r5, [r7, #0]
        fadeAnimationStartAlpha = T::getAlpha();
 8004a30:	334c      	adds	r3, #76	@ 0x4c
        fadeAnimationEndAlpha = endAlpha;
 8004a32:	8059      	strh	r1, [r3, #2]
        fadeAnimationDuration = duration;
 8004a34:	9901      	ldr	r1, [sp, #4]
        fadeAnimationStartAlpha = T::getAlpha();
 8004a36:	801d      	strh	r5, [r3, #0]
        fadeAnimationDuration = duration;
 8004a38:	3b02      	subs	r3, #2
 8004a3a:	8019      	strh	r1, [r3, #0]
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8004a3c:	9b02      	ldr	r3, [sp, #8]
        fadeAnimationRunning = true;
 8004a3e:	0026      	movs	r6, r4
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8004a40:	6523      	str	r3, [r4, #80]	@ 0x50
        fadeAnimationRunning = true;
 8004a42:	2301      	movs	r3, #1
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8004a44:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
        fadeAnimationRunning = true;
 8004a46:	3644      	adds	r6, #68	@ 0x44
 8004a48:	9603      	str	r6, [sp, #12]
 8004a4a:	7033      	strb	r3, [r6, #0]
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8004a4c:	2900      	cmp	r1, #0
 8004a4e:	d13e      	bne.n	8004ace <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0xd2>
            fadeAnimationCounter++;
 8004a50:	87d3      	strh	r3, [r2, #62]	@ 0x3e
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8004a52:	3240      	adds	r2, #64	@ 0x40
 8004a54:	8810      	ldrh	r0, [r2, #0]
 8004a56:	4298      	cmp	r0, r3
 8004a58:	d839      	bhi.n	8004ace <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0xd2>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8004a5a:	9a00      	ldr	r2, [sp, #0]
 8004a5c:	1a18      	subs	r0, r3, r0
 8004a5e:	1b52      	subs	r2, r2, r5
 8004a60:	9b01      	ldr	r3, [sp, #4]
 8004a62:	9e02      	ldr	r6, [sp, #8]
 8004a64:	b280      	uxth	r0, r0
 8004a66:	47b0      	blx	r6
 8004a68:	783a      	ldrb	r2, [r7, #0]
 8004a6a:	182d      	adds	r5, r5, r0
 8004a6c:	b2ab      	uxth	r3, r5
 8004a6e:	b22d      	sxth	r5, r5
                if (T::getAlpha() != newAlpha)
 8004a70:	42aa      	cmp	r2, r5
 8004a72:	d00a      	beq.n	8004a8a <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0x8e>
                    if (newAlpha == 0)
 8004a74:	2d00      	cmp	r5, #0
 8004a76:	d12c      	bne.n	8004ad2 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0xd6>
        if (alpha > 0)
 8004a78:	2a00      	cmp	r2, #0
 8004a7a:	d002      	beq.n	8004a82 <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0x86>
            Widget::invalidateContent();
 8004a7c:	0020      	movs	r0, r4
 8004a7e:	f7fe fa2c 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
        alpha = newAlpha;
 8004a82:	0023      	movs	r3, r4
 8004a84:	2200      	movs	r2, #0
 8004a86:	3328      	adds	r3, #40	@ 0x28
 8004a88:	701a      	strb	r2, [r3, #0]
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8004a8a:	0023      	movs	r3, r4
 8004a8c:	0022      	movs	r2, r4
 8004a8e:	3308      	adds	r3, #8
 8004a90:	8fd9      	ldrh	r1, [r3, #62]	@ 0x3e
 8004a92:	324a      	adds	r2, #74	@ 0x4a
 8004a94:	3340      	adds	r3, #64	@ 0x40
 8004a96:	881b      	ldrh	r3, [r3, #0]
 8004a98:	8810      	ldrh	r0, [r2, #0]
 8004a9a:	181b      	adds	r3, r3, r0
 8004a9c:	4299      	cmp	r1, r3
 8004a9e:	d316      	bcc.n	8004ace <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0xd2>
                    fadeAnimationRunning = false;
 8004aa0:	2300      	movs	r3, #0
 8004aa2:	9903      	ldr	r1, [sp, #12]
 8004aa4:	700b      	strb	r3, [r1, #0]
                    fadeAnimationDuration = 0;
 8004aa6:	8013      	strh	r3, [r2, #0]
                    Application::getInstance()->unregisterTimerWidget(this);
 8004aa8:	f006 fa90 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 8004aac:	0021      	movs	r1, r4
 8004aae:	3004      	adds	r0, #4
 8004ab0:	f006 fab1 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8004ab4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8004ab6:	2800      	cmp	r0, #0
 8004ab8:	d009      	beq.n	8004ace <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0xd2>
 8004aba:	6803      	ldr	r3, [r0, #0]
 8004abc:	68db      	ldr	r3, [r3, #12]
 8004abe:	4798      	blx	r3
 8004ac0:	2800      	cmp	r0, #0
 8004ac2:	d004      	beq.n	8004ace <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0xd2>
                        fadeAnimationEndedCallback->execute(*this);
 8004ac4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8004ac6:	0021      	movs	r1, r4
 8004ac8:	6803      	ldr	r3, [r0, #0]
 8004aca:	689b      	ldr	r3, [r3, #8]
 8004acc:	4798      	blx	r3
    }
 8004ace:	b005      	add	sp, #20
 8004ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
                        T::setAlpha((uint8_t)newAlpha);
 8004ad2:	b2db      	uxtb	r3, r3
 8004ad4:	703b      	strb	r3, [r7, #0]
        if (alpha > 0)
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d0d7      	beq.n	8004a8a <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0x8e>
            Widget::invalidateContent();
 8004ada:	0020      	movs	r0, r4
 8004adc:	f7fe f9fd 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8004ae0:	e7d3      	b.n	8004a8a <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE+0x8e>
	...

08004ae4 <_ZN14CircleAnimator15handleTickEventEv>:
    if (!running)
 8004ae4:	23cf      	movs	r3, #207	@ 0xcf
{
 8004ae6:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (!running)
 8004ae8:	009b      	lsls	r3, r3, #2
 8004aea:	5cc3      	ldrb	r3, [r0, r3]
{
 8004aec:	0004      	movs	r4, r0
 8004aee:	b087      	sub	sp, #28
    if (!running)
 8004af0:	2b00      	cmp	r3, #0
 8004af2:	d007      	beq.n	8004b04 <_ZN14CircleAnimator15handleTickEventEv+0x20>
    if (tickCounter < -1)
 8004af4:	26ca      	movs	r6, #202	@ 0xca
 8004af6:	00b6      	lsls	r6, r6, #2
 8004af8:	5983      	ldr	r3, [r0, r6]
    for (int i = 0; i < NUMBER_OF_CIRCLES; i++)
 8004afa:	2500      	movs	r5, #0
        tickCounter++;
 8004afc:	1c5a      	adds	r2, r3, #1
 8004afe:	5182      	str	r2, [r0, r6]
    if (tickCounter < -1)
 8004b00:	3301      	adds	r3, #1
 8004b02:	da01      	bge.n	8004b08 <_ZN14CircleAnimator15handleTickEventEv+0x24>
}
 8004b04:	b007      	add	sp, #28
 8004b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if (tickCounter % animationDuration == i * animationDurationCircleDisplacement)
 8004b08:	23cb      	movs	r3, #203	@ 0xcb
 8004b0a:	009b      	lsls	r3, r3, #2
 8004b0c:	58e7      	ldr	r7, [r4, r3]
 8004b0e:	59a0      	ldr	r0, [r4, r6]
 8004b10:	0039      	movs	r1, r7
 8004b12:	f7fb fc97 	bl	8000444 <__aeabi_idivmod>
 8004b16:	23cc      	movs	r3, #204	@ 0xcc
 8004b18:	009b      	lsls	r3, r3, #2
 8004b1a:	58e3      	ldr	r3, [r4, r3]
 8004b1c:	436b      	muls	r3, r5
 8004b1e:	4299      	cmp	r1, r3
 8004b20:	d11d      	bne.n	8004b5e <_ZN14CircleAnimator15handleTickEventEv+0x7a>
                circles[i]->startMoveAnimation(getCircleEndX(i), getCircleEndY(i), animationDuration, easingEq, easingEq);
 8004b22:	23d0      	movs	r3, #208	@ 0xd0
 8004b24:	009b      	lsls	r3, r3, #2
 8004b26:	00aa      	lsls	r2, r5, #2
 8004b28:	18e3      	adds	r3, r4, r3
 8004b2a:	589b      	ldr	r3, [r3, r2]
 8004b2c:	0029      	movs	r1, r5
 8004b2e:	9303      	str	r3, [sp, #12]
 8004b30:	b2bb      	uxth	r3, r7
 8004b32:	9304      	str	r3, [sp, #16]
 8004b34:	4f2f      	ldr	r7, [pc, #188]	@ (8004bf4 <_ZN14CircleAnimator15handleTickEventEv+0x110>)
            if ((tickCounter / animationDuration) % 2 == 0)
 8004b36:	07c0      	lsls	r0, r0, #31
 8004b38:	d452      	bmi.n	8004be0 <_ZN14CircleAnimator15handleTickEventEv+0xfc>
                circles[i]->startMoveAnimation(getCircleEndX(i), getCircleEndY(i), animationDuration, easingEq, easingEq);
 8004b3a:	0020      	movs	r0, r4
 8004b3c:	f7ff fef0 	bl	8004920 <_ZN14CircleAnimator13getCircleEndXEi>
 8004b40:	0029      	movs	r1, r5
 8004b42:	9005      	str	r0, [sp, #20]
 8004b44:	0020      	movs	r0, r4
 8004b46:	f7ff fef0 	bl	800492a <_ZN14CircleAnimator13getCircleEndYEi>
                circles[i]->startMoveAnimation(getCircleStartX(i), getCircleStartY(i), animationDuration, easingEq, easingEq);
 8004b4a:	466b      	mov	r3, sp
 8004b4c:	b202      	sxth	r2, r0
 8004b4e:	2114      	movs	r1, #20
 8004b50:	5e59      	ldrsh	r1, [r3, r1]
 8004b52:	9803      	ldr	r0, [sp, #12]
 8004b54:	9b04      	ldr	r3, [sp, #16]
 8004b56:	9701      	str	r7, [sp, #4]
 8004b58:	9700      	str	r7, [sp, #0]
 8004b5a:	f7ff feeb 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
    for (int i = 0; i < NUMBER_OF_CIRCLES; i++)
 8004b5e:	3501      	adds	r5, #1
 8004b60:	2d08      	cmp	r5, #8
 8004b62:	d1d1      	bne.n	8004b08 <_ZN14CircleAnimator15handleTickEventEv+0x24>
    int fadeAnimationDurationTotal = animationDuration * 11;
 8004b64:	23cb      	movs	r3, #203	@ 0xcb
 8004b66:	009b      	lsls	r3, r3, #2
 8004b68:	58e1      	ldr	r1, [r4, r3]
 8004b6a:	230b      	movs	r3, #11
 8004b6c:	4359      	muls	r1, r3
 8004b6e:	23ca      	movs	r3, #202	@ 0xca
 8004b70:	009b      	lsls	r3, r3, #2
 8004b72:	58e0      	ldr	r0, [r4, r3]
 8004b74:	f7fb fc66 	bl	8000444 <__aeabi_idivmod>
 8004b78:	1e0d      	subs	r5, r1, #0
    if (tickCounter % fadeAnimationDurationTotal == 0)
 8004b7a:	d1c3      	bne.n	8004b04 <_ZN14CircleAnimator15handleTickEventEv+0x20>
        int newAlpha = ((tickCounter / fadeAnimationDurationTotal) % 2 == 1) ? 0 : 255;
 8004b7c:	4b1e      	ldr	r3, [pc, #120]	@ (8004bf8 <_ZN14CircleAnimator15handleTickEventEv+0x114>)
 8004b7e:	4018      	ands	r0, r3
 8004b80:	d504      	bpl.n	8004b8c <_ZN14CircleAnimator15handleTickEventEv+0xa8>
 8004b82:	2302      	movs	r3, #2
 8004b84:	3801      	subs	r0, #1
 8004b86:	425b      	negs	r3, r3
 8004b88:	4318      	orrs	r0, r3
 8004b8a:	3001      	adds	r0, #1
 8004b8c:	2801      	cmp	r0, #1
 8004b8e:	d000      	beq.n	8004b92 <_ZN14CircleAnimator15handleTickEventEv+0xae>
 8004b90:	25ff      	movs	r5, #255	@ 0xff
        for (int i = 1; i < NUMBER_OF_CIRCLES; i++)
 8004b92:	23d1      	movs	r3, #209	@ 0xd1
 8004b94:	2601      	movs	r6, #1
 8004b96:	009b      	lsls	r3, r3, #2
 8004b98:	18e7      	adds	r7, r4, r3
            circles[i]->setFadeAnimationDelay(animationDuration * i);
 8004b9a:	23cb      	movs	r3, #203	@ 0xcb
 8004b9c:	009b      	lsls	r3, r3, #2
 8004b9e:	58e1      	ldr	r1, [r4, r3]
 8004ba0:	6838      	ldr	r0, [r7, #0]
 8004ba2:	4371      	muls	r1, r6
 8004ba4:	6803      	ldr	r3, [r0, #0]
 8004ba6:	b289      	uxth	r1, r1
 8004ba8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004baa:	4798      	blx	r3
            circles[i]->startFadeAnimation(newAlpha, animationDuration);
 8004bac:	22cb      	movs	r2, #203	@ 0xcb
 8004bae:	0092      	lsls	r2, r2, #2
 8004bb0:	58a2      	ldr	r2, [r4, r2]
 8004bb2:	b2e9      	uxtb	r1, r5
 8004bb4:	4b11      	ldr	r3, [pc, #68]	@ (8004bfc <_ZN14CircleAnimator15handleTickEventEv+0x118>)
 8004bb6:	cf01      	ldmia	r7!, {r0}
 8004bb8:	b292      	uxth	r2, r2
        for (int i = 1; i < NUMBER_OF_CIRCLES; i++)
 8004bba:	3601      	adds	r6, #1
            circles[i]->startFadeAnimation(newAlpha, animationDuration);
 8004bbc:	9103      	str	r1, [sp, #12]
 8004bbe:	f7ff ff1d 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
        for (int i = 1; i < NUMBER_OF_CIRCLES; i++)
 8004bc2:	2e08      	cmp	r6, #8
 8004bc4:	d1e9      	bne.n	8004b9a <_ZN14CircleAnimator15handleTickEventEv+0xb6>
        if (tickCounter > 40)
 8004bc6:	23ca      	movs	r3, #202	@ 0xca
 8004bc8:	009b      	lsls	r3, r3, #2
 8004bca:	58e3      	ldr	r3, [r4, r3]
 8004bcc:	2b28      	cmp	r3, #40	@ 0x28
 8004bce:	dd99      	ble.n	8004b04 <_ZN14CircleAnimator15handleTickEventEv+0x20>
        alpha = newAlpha;
 8004bd0:	0020      	movs	r0, r4
 8004bd2:	9b03      	ldr	r3, [sp, #12]
 8004bd4:	3454      	adds	r4, #84	@ 0x54
 8004bd6:	302c      	adds	r0, #44	@ 0x2c
 8004bd8:	7023      	strb	r3, [r4, #0]
            lines.invalidate();
 8004bda:	f007 fb75 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004bde:	e791      	b.n	8004b04 <_ZN14CircleAnimator15handleTickEventEv+0x20>
                circles[i]->startMoveAnimation(getCircleStartX(i), getCircleStartY(i), animationDuration, easingEq, easingEq);
 8004be0:	0020      	movs	r0, r4
 8004be2:	f7ff fdcf 	bl	8004784 <_ZN14CircleAnimator15getCircleStartXEi>
 8004be6:	0029      	movs	r1, r5
 8004be8:	9005      	str	r0, [sp, #20]
 8004bea:	0020      	movs	r0, r4
 8004bec:	f7ff fdf8 	bl	80047e0 <_ZN14CircleAnimator15getCircleStartYEi>
 8004bf0:	e7ab      	b.n	8004b4a <_ZN14CircleAnimator15handleTickEventEv+0x66>
 8004bf2:	46c0      	nop			@ (mov r8, r8)
 8004bf4:	0800cd3d 	.word	0x0800cd3d
 8004bf8:	80000001 	.word	0x80000001
 8004bfc:	0800cccd 	.word	0x0800cccd

08004c00 <_ZN14CircleAnimator20startFadeInAnimationEv>:
{
 8004c00:	b510      	push	{r4, lr}
 8004c02:	0004      	movs	r4, r0
    resetAnimation();
 8004c04:	f7ff fe1a 	bl	800483c <_ZN14CircleAnimator14resetAnimationEv>
    tickCounter = -20;
 8004c08:	23ca      	movs	r3, #202	@ 0xca
 8004c0a:	2214      	movs	r2, #20
 8004c0c:	009b      	lsls	r3, r3, #2
 8004c0e:	4252      	negs	r2, r2
 8004c10:	50e2      	str	r2, [r4, r3]
        fadeAnimationDelay = delay;
 8004c12:	0023      	movs	r3, r4
 8004c14:	0020      	movs	r0, r4
 8004c16:	33b0      	adds	r3, #176	@ 0xb0
 8004c18:	3228      	adds	r2, #40	@ 0x28
 8004c1a:	801a      	strh	r2, [r3, #0]
    circle0.startFadeAnimation(255, 10);
 8004c1c:	21ff      	movs	r1, #255	@ 0xff
 8004c1e:	4b05      	ldr	r3, [pc, #20]	@ (8004c34 <_ZN14CircleAnimator20startFadeInAnimationEv+0x34>)
 8004c20:	3068      	adds	r0, #104	@ 0x68
 8004c22:	3a0a      	subs	r2, #10
 8004c24:	f7ff feea 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
    running = true;
 8004c28:	23cf      	movs	r3, #207	@ 0xcf
 8004c2a:	2201      	movs	r2, #1
 8004c2c:	009b      	lsls	r3, r3, #2
 8004c2e:	54e2      	strb	r2, [r4, r3]
}
 8004c30:	bd10      	pop	{r4, pc}
 8004c32:	46c0      	nop			@ (mov r8, r8)
 8004c34:	0800cccd 	.word	0x0800cccd

08004c38 <_ZN14CircleAnimator21startFadeOutAnimationEv>:
    for (int i = 0; i < NUMBER_OF_CIRCLES; i++)
 8004c38:	23d0      	movs	r3, #208	@ 0xd0
{
 8004c3a:	b570      	push	{r4, r5, r6, lr}
 8004c3c:	0004      	movs	r4, r0
 8004c3e:	009b      	lsls	r3, r3, #2
 8004c40:	18c5      	adds	r5, r0, r3
 8004c42:	3320      	adds	r3, #32
 8004c44:	18c6      	adds	r6, r0, r3
        circles[i]->setFadeAnimationDelay(0);
 8004c46:	6828      	ldr	r0, [r5, #0]
 8004c48:	2100      	movs	r1, #0
 8004c4a:	6803      	ldr	r3, [r0, #0]
 8004c4c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004c4e:	4798      	blx	r3
        circles[i]->startFadeAnimation(0, Constants::FADE_DURATION);
 8004c50:	cd01      	ldmia	r5!, {r0}
 8004c52:	2214      	movs	r2, #20
 8004c54:	2100      	movs	r1, #0
 8004c56:	4b08      	ldr	r3, [pc, #32]	@ (8004c78 <_ZN14CircleAnimator21startFadeOutAnimationEv+0x40>)
 8004c58:	f7ff fed0 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
    for (int i = 0; i < NUMBER_OF_CIRCLES; i++)
 8004c5c:	42b5      	cmp	r5, r6
 8004c5e:	d1f2      	bne.n	8004c46 <_ZN14CircleAnimator21startFadeOutAnimationEv+0xe>
 8004c60:	0023      	movs	r3, r4
 8004c62:	2500      	movs	r5, #0
 8004c64:	0020      	movs	r0, r4
 8004c66:	3354      	adds	r3, #84	@ 0x54
 8004c68:	701d      	strb	r5, [r3, #0]
 8004c6a:	302c      	adds	r0, #44	@ 0x2c
    lines.invalidate();
 8004c6c:	f007 fb2c 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
    running = false;
 8004c70:	23cf      	movs	r3, #207	@ 0xcf
 8004c72:	009b      	lsls	r3, r3, #2
 8004c74:	54e5      	strb	r5, [r4, r3]
}
 8004c76:	bd70      	pop	{r4, r5, r6, pc}
 8004c78:	0800cccd 	.word	0x0800cccd

08004c7c <_ZN14CircleAnimator10initializeEv>:
{
 8004c7c:	b510      	push	{r4, lr}
 8004c7e:	0004      	movs	r4, r0
    CircleAnimatorBase::initialize();
 8004c80:	f7fe f904 	bl	8002e8c <_ZN18CircleAnimatorBase10initializeEv>
    Application::getInstance()->registerTimerWidget(this);
 8004c84:	f006 f9a2 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 8004c88:	0021      	movs	r1, r4
 8004c8a:	3004      	adds	r0, #4
 8004c8c:	f006 fa82 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
}
 8004c90:	bd10      	pop	{r4, pc}

08004c92 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004c92:	4770      	bx	lr

08004c94 <_ZN19FrontendApplicationD0Ev>:
 8004c94:	21ae      	movs	r1, #174	@ 0xae
 8004c96:	b510      	push	{r4, lr}
 8004c98:	0004      	movs	r4, r0
 8004c9a:	0049      	lsls	r1, r1, #1
 8004c9c:	f00c ff33 	bl	8011b06 <_ZdlPvj>
 8004ca0:	0020      	movs	r0, r4
 8004ca2:	bd10      	pop	{r4, pc}

08004ca4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
    {
        model.tick();
 8004ca4:	0003      	movs	r3, r0
    virtual void handleTickEvent()
 8004ca6:	b510      	push	{r4, lr}
 8004ca8:	0004      	movs	r4, r0
        model.tick();
 8004caa:	33fc      	adds	r3, #252	@ 0xfc
 8004cac:	6dd8      	ldr	r0, [r3, #92]	@ 0x5c
 8004cae:	f000 fcfc 	bl	80056aa <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004cb2:	0020      	movs	r0, r4
 8004cb4:	f006 fa36 	bl	800b124 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8004cb8:	bd10      	pop	{r4, pc}
	...

08004cbc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004cbc:	b510      	push	{r4, lr}
 8004cbe:	0004      	movs	r4, r0
    : FrontendApplicationBase(m, heap)
 8004cc0:	f7fe fc78 	bl	80035b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004cc4:	4b01      	ldr	r3, [pc, #4]	@ (8004ccc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8004cc6:	0020      	movs	r0, r4
    : FrontendApplicationBase(m, heap)
 8004cc8:	6023      	str	r3, [r4, #0]
}
 8004cca:	bd10      	pop	{r4, pc}
 8004ccc:	08015340 	.word	0x08015340

08004cd0 <_ZN13ImageAnimator15handleTickEventEv>:
    startMoveAnimation(touchgfxAcademy);
}

void ImageAnimator::handleTickEvent()
{
    tickCounter++;
 8004cd0:	22c8      	movs	r2, #200	@ 0xc8
 8004cd2:	0052      	lsls	r2, r2, #1
 8004cd4:	5883      	ldr	r3, [r0, r2]
 8004cd6:	3301      	adds	r3, #1
 8004cd8:	5083      	str	r3, [r0, r2]
        return moveAnimationRunning;
 8004cda:	0002      	movs	r2, r0
 8004cdc:	3255      	adds	r2, #85	@ 0x55

    if (image1.isMoveAnimationRunning())
 8004cde:	7812      	ldrb	r2, [r2, #0]
 8004ce0:	2a00      	cmp	r2, #0
 8004ce2:	d02a      	beq.n	8004d3a <_ZN13ImageAnimator15handleTickEventEv+0x6a>
    {
        // Trick to only move one image at each tick so that the rendering
        // can be done on time and no tearing appears on the screen
        const uint16_t NO_DELAY = 0;
        const uint16_t LARGE_DELAY = 1000;
        image1.setMoveAnimationDelay(((tickCounter % 4) == 0) ? NO_DELAY : LARGE_DELAY);
 8004ce4:	2203      	movs	r2, #3
 8004ce6:	401a      	ands	r2, r3
 8004ce8:	4251      	negs	r1, r2
 8004cea:	414a      	adcs	r2, r1
 8004cec:	4915      	ldr	r1, [pc, #84]	@ (8004d44 <_ZN13ImageAnimator15handleTickEventEv+0x74>)
 8004cee:	4252      	negs	r2, r2
 8004cf0:	400a      	ands	r2, r1
 8004cf2:	21fa      	movs	r1, #250	@ 0xfa
 8004cf4:	0089      	lsls	r1, r1, #2
 8004cf6:	1852      	adds	r2, r2, r1
        moveAnimationDelay = delay;
 8004cf8:	0001      	movs	r1, r0
 8004cfa:	3158      	adds	r1, #88	@ 0x58
 8004cfc:	800a      	strh	r2, [r1, #0]
        image2.setMoveAnimationDelay(((tickCounter % 4) == 1) ? NO_DELAY : LARGE_DELAY);
 8004cfe:	4a12      	ldr	r2, [pc, #72]	@ (8004d48 <_ZN13ImageAnimator15handleTickEventEv+0x78>)
 8004d00:	4013      	ands	r3, r2
 8004d02:	d504      	bpl.n	8004d0e <_ZN13ImageAnimator15handleTickEventEv+0x3e>
 8004d04:	2204      	movs	r2, #4
 8004d06:	3b01      	subs	r3, #1
 8004d08:	4252      	negs	r2, r2
 8004d0a:	4313      	orrs	r3, r2
 8004d0c:	3301      	adds	r3, #1
 8004d0e:	2200      	movs	r2, #0
 8004d10:	2b01      	cmp	r3, #1
 8004d12:	d001      	beq.n	8004d18 <_ZN13ImageAnimator15handleTickEventEv+0x48>
 8004d14:	22fa      	movs	r2, #250	@ 0xfa
 8004d16:	0092      	lsls	r2, r2, #2
 8004d18:	0001      	movs	r1, r0
 8004d1a:	3135      	adds	r1, #53	@ 0x35
 8004d1c:	31ff      	adds	r1, #255	@ 0xff
 8004d1e:	858a      	strh	r2, [r1, #44]	@ 0x2c
        image3.setMoveAnimationDelay(((tickCounter % 4) == 2) ? NO_DELAY : LARGE_DELAY);
 8004d20:	2200      	movs	r2, #0
 8004d22:	2b02      	cmp	r3, #2
 8004d24:	d001      	beq.n	8004d2a <_ZN13ImageAnimator15handleTickEventEv+0x5a>
 8004d26:	22fa      	movs	r2, #250	@ 0xfa
 8004d28:	0092      	lsls	r2, r2, #2
 8004d2a:	0001      	movs	r1, r0
 8004d2c:	3184      	adds	r1, #132	@ 0x84
 8004d2e:	858a      	strh	r2, [r1, #44]	@ 0x2c
        image4.setMoveAnimationDelay(((tickCounter % 4) == 3) ? NO_DELAY : LARGE_DELAY);
 8004d30:	2b03      	cmp	r3, #3
 8004d32:	d103      	bne.n	8004d3c <_ZN13ImageAnimator15handleTickEventEv+0x6c>
 8004d34:	2300      	movs	r3, #0
 8004d36:	30dc      	adds	r0, #220	@ 0xdc
 8004d38:	8583      	strh	r3, [r0, #44]	@ 0x2c
    }
}
 8004d3a:	4770      	bx	lr
        image4.setMoveAnimationDelay(((tickCounter % 4) == 3) ? NO_DELAY : LARGE_DELAY);
 8004d3c:	23fa      	movs	r3, #250	@ 0xfa
 8004d3e:	009b      	lsls	r3, r3, #2
 8004d40:	e7f9      	b.n	8004d36 <_ZN13ImageAnimator15handleTickEventEv+0x66>
 8004d42:	46c0      	nop			@ (mov r8, r8)
 8004d44:	fffffc18 	.word	0xfffffc18
 8004d48:	80000003 	.word	0x80000003

08004d4c <_ZN8touchgfx8CallbackI13ImageAnimatorRKNS_12MoveAnimatorINS_5ImageEEEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004d4c:	4770      	bx	lr

08004d4e <_ZN8touchgfx8CallbackI13ImageAnimatorRKNS_12MoveAnimatorINS_5ImageEEEvvE7executeES6_>:
    virtual void execute(T1 t1)
 8004d4e:	0003      	movs	r3, r0
 8004d50:	b510      	push	{r4, lr}
        (pobject->*pmemfun)(t1);
 8004d52:	68c2      	ldr	r2, [r0, #12]
 8004d54:	6840      	ldr	r0, [r0, #4]
 8004d56:	1054      	asrs	r4, r2, #1
 8004d58:	689b      	ldr	r3, [r3, #8]
 8004d5a:	1900      	adds	r0, r0, r4
 8004d5c:	07d2      	lsls	r2, r2, #31
 8004d5e:	d501      	bpl.n	8004d64 <_ZN8touchgfx8CallbackI13ImageAnimatorRKNS_12MoveAnimatorINS_5ImageEEEvvE7executeES6_+0x16>
 8004d60:	6802      	ldr	r2, [r0, #0]
 8004d62:	58d3      	ldr	r3, [r2, r3]
 8004d64:	4798      	blx	r3
    }
 8004d66:	bd10      	pop	{r4, pc}

08004d68 <_ZNK8touchgfx8CallbackI13ImageAnimatorRKNS_12MoveAnimatorINS_5ImageEEEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004d68:	6842      	ldr	r2, [r0, #4]
    virtual bool isValid() const
 8004d6a:	0003      	movs	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8004d6c:	1e10      	subs	r0, r2, #0
 8004d6e:	d005      	beq.n	8004d7c <_ZNK8touchgfx8CallbackI13ImageAnimatorRKNS_12MoveAnimatorINS_5ImageEEEvvE7isValidEv+0x14>
 8004d70:	689a      	ldr	r2, [r3, #8]
 8004d72:	2001      	movs	r0, #1
 8004d74:	2a00      	cmp	r2, #0
 8004d76:	d101      	bne.n	8004d7c <_ZNK8touchgfx8CallbackI13ImageAnimatorRKNS_12MoveAnimatorINS_5ImageEEEvvE7isValidEv+0x14>
 8004d78:	68db      	ldr	r3, [r3, #12]
 8004d7a:	4018      	ands	r0, r3
    }
 8004d7c:	4770      	bx	lr

08004d7e <_ZN8touchgfx8CallbackI13ImageAnimatorRKNS_12MoveAnimatorINS_5ImageEEEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004d7e:	b510      	push	{r4, lr}
 8004d80:	0004      	movs	r4, r0
 8004d82:	2110      	movs	r1, #16
 8004d84:	f00c febf 	bl	8011b06 <_ZdlPvj>
 8004d88:	0020      	movs	r0, r4
 8004d8a:	bd10      	pop	{r4, pc}

08004d8c <_ZN13ImageAnimatorD1Ev>:
 8004d8c:	b510      	push	{r4, lr}
 8004d8e:	0004      	movs	r4, r0
 8004d90:	4b02      	ldr	r3, [pc, #8]	@ (8004d9c <_ZN13ImageAnimatorD1Ev+0x10>)
 8004d92:	6003      	str	r3, [r0, #0]
 8004d94:	f7fe fc4a 	bl	800362c <_ZN17ImageAnimatorBaseD1Ev>
 8004d98:	0020      	movs	r0, r4
 8004d9a:	bd10      	pop	{r4, pc}
 8004d9c:	080153ac 	.word	0x080153ac

08004da0 <_ZN13ImageAnimatorD0Ev>:
 8004da0:	b510      	push	{r4, lr}
 8004da2:	0004      	movs	r4, r0
 8004da4:	f7ff fff2 	bl	8004d8c <_ZN13ImageAnimatorD1Ev>
 8004da8:	21d4      	movs	r1, #212	@ 0xd4
 8004daa:	0020      	movs	r0, r4
 8004dac:	0049      	lsls	r1, r1, #1
 8004dae:	f00c feaa 	bl	8011b06 <_ZdlPvj>
 8004db2:	0020      	movs	r0, r4
 8004db4:	bd10      	pop	{r4, pc}
	...

08004db8 <_ZN13ImageAnimatorC1Ev>:
ImageAnimator::ImageAnimator() :
 8004db8:	b510      	push	{r4, lr}
 8004dba:	0004      	movs	r4, r0
    imageCallback(this, &ImageAnimator::imageCallbackHandler)
 8004dbc:	f7fe fc52 	bl	8003664 <_ZN17ImageAnimatorBaseC1Ev>
 8004dc0:	4b0c      	ldr	r3, [pc, #48]	@ (8004df4 <_ZN13ImageAnimatorC1Ev+0x3c>)
    tickCounter(0),
 8004dc2:	22c8      	movs	r2, #200	@ 0xc8
    imageCallback(this, &ImageAnimator::imageCallbackHandler)
 8004dc4:	6023      	str	r3, [r4, #0]
    tickCounter(0),
 8004dc6:	2300      	movs	r3, #0
    active(true),
 8004dc8:	2101      	movs	r1, #1
    tickCounter(0),
 8004dca:	0052      	lsls	r2, r2, #1
 8004dcc:	50a3      	str	r3, [r4, r2]
    animatingOut(false),
 8004dce:	3204      	adds	r2, #4
 8004dd0:	52a3      	strh	r3, [r4, r2]
    active(true),
 8004dd2:	3202      	adds	r2, #2
 8004dd4:	54a1      	strb	r1, [r4, r2]
        : pobject(pObject), pmemfun(pmemfun_1)
 8004dd6:	4a08      	ldr	r2, [pc, #32]	@ (8004df8 <_ZN13ImageAnimatorC1Ev+0x40>)
 8004dd8:	3198      	adds	r1, #152	@ 0x98
 8004dda:	31ff      	adds	r1, #255	@ 0xff
 8004ddc:	5062      	str	r2, [r4, r1]
 8004dde:	1862      	adds	r2, r4, r1
 8004de0:	6054      	str	r4, [r2, #4]
 8004de2:	4a06      	ldr	r2, [pc, #24]	@ (8004dfc <_ZN13ImageAnimatorC1Ev+0x44>)
 8004de4:	3108      	adds	r1, #8
 8004de6:	5062      	str	r2, [r4, r1]
 8004de8:	22d2      	movs	r2, #210	@ 0xd2
 8004dea:	0052      	lsls	r2, r2, #1
}
 8004dec:	0020      	movs	r0, r4
 8004dee:	50a3      	str	r3, [r4, r2]
 8004df0:	bd10      	pop	{r4, pc}
 8004df2:	46c0      	nop			@ (mov r8, r8)
 8004df4:	080153ac 	.word	0x080153ac
 8004df8:	08015394 	.word	0x08015394
 8004dfc:	080050cb 	.word	0x080050cb

08004e00 <_ZN13ImageAnimator26isAnimateToMenuItemRunningEv>:
        return moveAnimationRunning;
 8004e00:	3055      	adds	r0, #85	@ 0x55
    }
}

bool ImageAnimator::isAnimateToMenuItemRunning()
{
    return image1.isMoveAnimationRunning();
 8004e02:	7800      	ldrb	r0, [r0, #0]
}
 8004e04:	4770      	bx	lr

08004e06 <_ZN13ImageAnimator23getCurrentAnimatorImageEv>:

ImageAnimator::ImageAnimatorImages ImageAnimator::getCurrentAnimatorImage()
{
    return targetImage;
 8004e06:	2396      	movs	r3, #150	@ 0x96
 8004e08:	33ff      	adds	r3, #255	@ 0xff
 8004e0a:	5cc0      	ldrb	r0, [r0, r3]
}
 8004e0c:	4770      	bx	lr

08004e0e <_ZN13ImageAnimator22setFadeAnimiationDelayEt>:
 8004e0e:	0003      	movs	r3, r0
 8004e10:	3374      	adds	r3, #116	@ 0x74
 8004e12:	8019      	strh	r1, [r3, #0]
 8004e14:	3309      	adds	r3, #9
 8004e16:	33ff      	adds	r3, #255	@ 0xff
 8004e18:	3025      	adds	r0, #37	@ 0x25
 8004e1a:	8019      	strh	r1, [r3, #0]
 8004e1c:	30ff      	adds	r0, #255	@ 0xff
 8004e1e:	3bb0      	subs	r3, #176	@ 0xb0
 8004e20:	8019      	strh	r1, [r3, #0]
 8004e22:	8001      	strh	r1, [r0, #0]
{
    image1.setFadeAnimationDelay(delay);
    image2.setFadeAnimationDelay(delay);
    image3.setFadeAnimationDelay(delay);
    image4.setFadeAnimationDelay(delay);
}
 8004e24:	4770      	bx	lr

08004e26 <_ZN13ImageAnimator22isFadeAnimationRunningEv>:
        return fadeAnimationRunning;
 8004e26:	3021      	adds	r0, #33	@ 0x21
 8004e28:	30ff      	adds	r0, #255	@ 0xff

bool ImageAnimator::isFadeAnimationRunning()
{
    return image4.isFadeAnimationRunning();
 8004e2a:	7800      	ldrb	r0, [r0, #0]
}
 8004e2c:	4770      	bx	lr

08004e2e <_ZN13ImageAnimator8isActiveEv>:

bool ImageAnimator::isActive()
{
    return active;
 8004e2e:	23cb      	movs	r3, #203	@ 0xcb
 8004e30:	005b      	lsls	r3, r3, #1
 8004e32:	5cc0      	ldrb	r0, [r0, r3]
}
 8004e34:	4770      	bx	lr
	...

08004e38 <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE>:
{
 8004e38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e3a:	0004      	movs	r4, r0
 8004e3c:	0023      	movs	r3, r4
 8004e3e:	3355      	adds	r3, #85	@ 0x55
    if (!isAnimateToMenuItemRunning())
 8004e40:	781b      	ldrb	r3, [r3, #0]
{
 8004e42:	b085      	sub	sp, #20
 8004e44:	302c      	adds	r0, #44	@ 0x2c
    if (!isAnimateToMenuItemRunning())
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	d138      	bne.n	8004ebc <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE+0x84>
        targetImage = image;
 8004e4a:	2396      	movs	r3, #150	@ 0x96
 8004e4c:	33ff      	adds	r3, #255	@ 0xff
 8004e4e:	54e1      	strb	r1, [r4, r3]
        return rect.y;
 8004e50:	2332      	movs	r3, #50	@ 0x32
 8004e52:	5ee2      	ldrsh	r2, [r4, r3]
            image4.startMoveAnimation(image4.getX(), DISPLAY_HEIGHT, ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e54:	0023      	movs	r3, r4
 8004e56:	33dc      	adds	r3, #220	@ 0xdc
 8004e58:	9303      	str	r3, [sp, #12]
        if (animatingOut)
 8004e5a:	23ca      	movs	r3, #202	@ 0xca
            image2.startMoveAnimation(-image2.getWidth(), image2.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e5c:	0026      	movs	r6, r4
            image3.startMoveAnimation(image3.getX(), -image3.getHeight(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e5e:	0027      	movs	r7, r4
        if (animatingOut)
 8004e60:	005b      	lsls	r3, r3, #1
 8004e62:	5ce3      	ldrb	r3, [r4, r3]
            image2.startMoveAnimation(-image2.getWidth(), image2.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e64:	3635      	adds	r6, #53	@ 0x35
 8004e66:	36ff      	adds	r6, #255	@ 0xff
            image3.startMoveAnimation(image3.getX(), -image3.getHeight(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e68:	3784      	adds	r7, #132	@ 0x84
        if (animatingOut)
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d028      	beq.n	8004ec0 <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE+0x88>
            image1.startMoveAnimation(DISPLAY_WIDTH, image1.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e6e:	4c27      	ldr	r4, [pc, #156]	@ (8004f0c <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE+0xd4>)
 8004e70:	2332      	movs	r3, #50	@ 0x32
 8004e72:	21f0      	movs	r1, #240	@ 0xf0
 8004e74:	9401      	str	r4, [sp, #4]
 8004e76:	9400      	str	r4, [sp, #0]
 8004e78:	f7ff fd5c 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
            image2.startMoveAnimation(-image2.getWidth(), image2.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e7c:	8931      	ldrh	r1, [r6, #8]
 8004e7e:	2306      	movs	r3, #6
 8004e80:	5ef2      	ldrsh	r2, [r6, r3]
 8004e82:	4249      	negs	r1, r1
 8004e84:	2332      	movs	r3, #50	@ 0x32
 8004e86:	0030      	movs	r0, r6
 8004e88:	b209      	sxth	r1, r1
 8004e8a:	9401      	str	r4, [sp, #4]
 8004e8c:	9400      	str	r4, [sp, #0]
 8004e8e:	f7ff fd51 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
            image3.startMoveAnimation(image3.getX(), -image3.getHeight(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004e92:	897a      	ldrh	r2, [r7, #10]
 8004e94:	2304      	movs	r3, #4
 8004e96:	5ef9      	ldrsh	r1, [r7, r3]
 8004e98:	4252      	negs	r2, r2
 8004e9a:	2332      	movs	r3, #50	@ 0x32
 8004e9c:	b212      	sxth	r2, r2
 8004e9e:	0038      	movs	r0, r7
 8004ea0:	9401      	str	r4, [sp, #4]
 8004ea2:	9400      	str	r4, [sp, #0]
 8004ea4:	f7ff fd46 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
            image4.startMoveAnimation(image4.getX(), DISPLAY_HEIGHT, ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseIn, touchgfx::EasingEquations::cubicEaseIn);
 8004ea8:	9b03      	ldr	r3, [sp, #12]
 8004eaa:	22f0      	movs	r2, #240	@ 0xf0
 8004eac:	2104      	movs	r1, #4
 8004eae:	5e59      	ldrsh	r1, [r3, r1]
 8004eb0:	2332      	movs	r3, #50	@ 0x32
 8004eb2:	9401      	str	r4, [sp, #4]
 8004eb4:	9400      	str	r4, [sp, #0]
            image4.startMoveAnimation(image4.getX(), image2.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseOut, touchgfx::EasingEquations::cubicEaseOut);
 8004eb6:	9803      	ldr	r0, [sp, #12]
 8004eb8:	f7ff fd3c 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
}
 8004ebc:	b005      	add	sp, #20
 8004ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
            image1.startMoveAnimation(image4.getX(), image1.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseOut, touchgfx::EasingEquations::cubicEaseOut);
 8004ec0:	4d13      	ldr	r5, [pc, #76]	@ (8004f10 <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE+0xd8>)
 8004ec2:	9b03      	ldr	r3, [sp, #12]
 8004ec4:	2104      	movs	r1, #4
 8004ec6:	5e59      	ldrsh	r1, [r3, r1]
 8004ec8:	2332      	movs	r3, #50	@ 0x32
 8004eca:	9501      	str	r5, [sp, #4]
 8004ecc:	9500      	str	r5, [sp, #0]
 8004ece:	f7ff fd31 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
            image2.startMoveAnimation(image3.getX(), image2.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseOut, touchgfx::EasingEquations::cubicEaseOut);
 8004ed2:	2306      	movs	r3, #6
 8004ed4:	5ef2      	ldrsh	r2, [r6, r3]
 8004ed6:	2304      	movs	r3, #4
 8004ed8:	5ef9      	ldrsh	r1, [r7, r3]
 8004eda:	0030      	movs	r0, r6
 8004edc:	2332      	movs	r3, #50	@ 0x32
 8004ede:	9501      	str	r5, [sp, #4]
 8004ee0:	9500      	str	r5, [sp, #0]
 8004ee2:	f7ff fd27 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
            image3.startMoveAnimation(image3.getX(), image1.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseOut, touchgfx::EasingEquations::cubicEaseOut);
 8004ee6:	2332      	movs	r3, #50	@ 0x32
 8004ee8:	5ee2      	ldrsh	r2, [r4, r3]
 8004eea:	2304      	movs	r3, #4
 8004eec:	5ef9      	ldrsh	r1, [r7, r3]
 8004eee:	0038      	movs	r0, r7
 8004ef0:	2332      	movs	r3, #50	@ 0x32
 8004ef2:	9501      	str	r5, [sp, #4]
 8004ef4:	9500      	str	r5, [sp, #0]
 8004ef6:	f7ff fd1d 	bl	8004934 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE18startMoveAnimationEsstPFstsstES4_>
            image4.startMoveAnimation(image4.getX(), image2.getY(), ICON_ANIMATION_DURATION, touchgfx::EasingEquations::cubicEaseOut, touchgfx::EasingEquations::cubicEaseOut);
 8004efa:	2306      	movs	r3, #6
 8004efc:	5ef2      	ldrsh	r2, [r6, r3]
 8004efe:	9b03      	ldr	r3, [sp, #12]
 8004f00:	2104      	movs	r1, #4
 8004f02:	5e59      	ldrsh	r1, [r3, r1]
 8004f04:	2332      	movs	r3, #50	@ 0x32
 8004f06:	9501      	str	r5, [sp, #4]
 8004f08:	9500      	str	r5, [sp, #0]
 8004f0a:	e7d4      	b.n	8004eb6 <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE+0x7e>
 8004f0c:	0800cb09 	.word	0x0800cb09
 8004f10:	0800cb83 	.word	0x0800cb83

08004f14 <_ZN13ImageAnimator21animateToNextMenuItemEv>:
    return targetImage;
 8004f14:	2396      	movs	r3, #150	@ 0x96
{
 8004f16:	b510      	push	{r4, lr}
    return targetImage;
 8004f18:	33ff      	adds	r3, #255	@ 0xff
{
 8004f1a:	0004      	movs	r4, r0
    startMoveAnimation((ImageAnimatorImages)((getCurrentAnimatorImage() + 1) % NUMBER_OF_IMAGES));
 8004f1c:	5cc0      	ldrb	r0, [r0, r3]
 8004f1e:	2103      	movs	r1, #3
 8004f20:	3001      	adds	r0, #1
 8004f22:	f7fb fa8f 	bl	8000444 <__aeabi_idivmod>
 8004f26:	0020      	movs	r0, r4
 8004f28:	b2c9      	uxtb	r1, r1
 8004f2a:	f7ff ff85 	bl	8004e38 <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE>
}
 8004f2e:	bd10      	pop	{r4, pc}

08004f30 <_ZN13ImageAnimator18startFadeAnimationEv>:
{
 8004f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f32:	0003      	movs	r3, r0
 8004f34:	3321      	adds	r3, #33	@ 0x21
 8004f36:	33ff      	adds	r3, #255	@ 0xff
    if (!isFadeAnimationRunning())
 8004f38:	781b      	ldrb	r3, [r3, #0]
{
 8004f3a:	0004      	movs	r4, r0
    if (!isFadeAnimationRunning())
 8004f3c:	2b00      	cmp	r3, #0
 8004f3e:	d127      	bne.n	8004f90 <_ZN13ImageAnimator18startFadeAnimationEv+0x60>
        int targetAlpha = active ? 0 : 255;
 8004f40:	27cb      	movs	r7, #203	@ 0xcb
 8004f42:	007f      	lsls	r7, r7, #1
 8004f44:	5dc5      	ldrb	r5, [r0, r7]
        image1.startFadeAnimation(targetAlpha, Constants::FADE_DURATION);
 8004f46:	4e13      	ldr	r6, [pc, #76]	@ (8004f94 <_ZN13ImageAnimator18startFadeAnimationEv+0x64>)
        int targetAlpha = active ? 0 : 255;
 8004f48:	426b      	negs	r3, r5
 8004f4a:	415d      	adcs	r5, r3
 8004f4c:	426d      	negs	r5, r5
        image1.startFadeAnimation(targetAlpha, Constants::FADE_DURATION);
 8004f4e:	b2ed      	uxtb	r5, r5
 8004f50:	0033      	movs	r3, r6
 8004f52:	2214      	movs	r2, #20
 8004f54:	0029      	movs	r1, r5
 8004f56:	302c      	adds	r0, #44	@ 0x2c
 8004f58:	f7ff fd50 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
        image2.startFadeAnimation(targetAlpha, Constants::FADE_DURATION);
 8004f5c:	0020      	movs	r0, r4
 8004f5e:	3035      	adds	r0, #53	@ 0x35
 8004f60:	0033      	movs	r3, r6
 8004f62:	2214      	movs	r2, #20
 8004f64:	0029      	movs	r1, r5
 8004f66:	30ff      	adds	r0, #255	@ 0xff
 8004f68:	f7ff fd48 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
        image3.startFadeAnimation(targetAlpha, Constants::FADE_DURATION);
 8004f6c:	0020      	movs	r0, r4
 8004f6e:	0033      	movs	r3, r6
 8004f70:	2214      	movs	r2, #20
 8004f72:	0029      	movs	r1, r5
 8004f74:	3084      	adds	r0, #132	@ 0x84
 8004f76:	f7ff fd41 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
        image4.startFadeAnimation(targetAlpha, Constants::FADE_DURATION);
 8004f7a:	0020      	movs	r0, r4
 8004f7c:	0033      	movs	r3, r6
 8004f7e:	2214      	movs	r2, #20
 8004f80:	0029      	movs	r1, r5
 8004f82:	30dc      	adds	r0, #220	@ 0xdc
 8004f84:	f7ff fd3a 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
        active = !active;
 8004f88:	2301      	movs	r3, #1
 8004f8a:	5de2      	ldrb	r2, [r4, r7]
 8004f8c:	4053      	eors	r3, r2
 8004f8e:	55e3      	strb	r3, [r4, r7]
}
 8004f90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f92:	46c0      	nop			@ (mov r8, r8)
 8004f94:	0800cccd 	.word	0x0800cccd

08004f98 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE19cancelMoveAnimationEv>:
    void cancelMoveAnimation()
 8004f98:	b570      	push	{r4, r5, r6, lr}
        if (moveAnimationRunning)
 8004f9a:	0005      	movs	r5, r0
 8004f9c:	3529      	adds	r5, #41	@ 0x29
 8004f9e:	782b      	ldrb	r3, [r5, #0]
    void cancelMoveAnimation()
 8004fa0:	0004      	movs	r4, r0
        if (moveAnimationRunning)
 8004fa2:	2b00      	cmp	r3, #0
 8004fa4:	d007      	beq.n	8004fb6 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE19cancelMoveAnimationEv+0x1e>
            Application::getInstance()->unregisterTimerWidget(this);
 8004fa6:	f006 f811 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 8004faa:	0021      	movs	r1, r4
 8004fac:	3004      	adds	r0, #4
 8004fae:	f006 f832 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
            moveAnimationRunning = false;
 8004fb2:	2300      	movs	r3, #0
 8004fb4:	702b      	strb	r3, [r5, #0]
    }
 8004fb6:	bd70      	pop	{r4, r5, r6, pc}

08004fb8 <_ZN13ImageAnimator10initializeEv>:
{
 8004fb8:	b510      	push	{r4, lr}
 8004fba:	0004      	movs	r4, r0
    ImageAnimatorBase::initialize();
 8004fbc:	f7fe fb37 	bl	800362e <_ZN17ImageAnimatorBase10initializeEv>
    Application::getInstance()->registerTimerWidget(this);
 8004fc0:	f006 f804 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 8004fc4:	0021      	movs	r1, r4
 8004fc6:	3004      	adds	r0, #4
 8004fc8:	f006 f8e4 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
    image1.setMoveAnimationEndedAction(imageCallback);
 8004fcc:	0023      	movs	r3, r4
 8004fce:	3399      	adds	r3, #153	@ 0x99
 8004fd0:	33ff      	adds	r3, #255	@ 0xff
    startMoveAnimation(touchgfxAcademy);
 8004fd2:	2100      	movs	r1, #0
 8004fd4:	0020      	movs	r0, r4
        moveAnimationEndedCallback = &callback;
 8004fd6:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8004fd8:	f7ff ff2e 	bl	8004e38 <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE>
}
 8004fdc:	bd10      	pop	{r4, pc}

08004fde <_ZN13ImageAnimator11changeImageENS_19ImageAnimatorImagesE>:
void ImageAnimator::changeImage(ImageAnimatorImages newImage)
{
    switch (newImage)
    {
    case touchgfxAcademy:
        image1.setBitmap(BITMAP_ACADEMYTOPRIGHT_ID);
 8004fde:	0003      	movs	r3, r0
{
 8004fe0:	b5f0      	push	{r4, r5, r6, r7, lr}
        image2.setBitmap(BITMAP_ACADEMYBOTTOMLEFT_ID);
 8004fe2:	0007      	movs	r7, r0
{
 8004fe4:	b087      	sub	sp, #28
        image1.setBitmap(BITMAP_ACADEMYTOPRIGHT_ID);
 8004fe6:	332c      	adds	r3, #44	@ 0x2c
 8004fe8:	9301      	str	r3, [sp, #4]
        image3.setBitmap(BITMAP_ACADEMYTOPLEFT_ID);
 8004fea:	3358      	adds	r3, #88	@ 0x58
        image2.setBitmap(BITMAP_ACADEMYBOTTOMLEFT_ID);
 8004fec:	3735      	adds	r7, #53	@ 0x35
        image3.setBitmap(BITMAP_ACADEMYTOPLEFT_ID);
 8004fee:	9302      	str	r3, [sp, #8]
        image4.setBitmap(BITMAP_ACADEMYBOTTOMRIGHT_ID);
 8004ff0:	3358      	adds	r3, #88	@ 0x58
{
 8004ff2:	0004      	movs	r4, r0
 8004ff4:	000e      	movs	r6, r1
        image2.setBitmap(BITMAP_ACADEMYBOTTOMLEFT_ID);
 8004ff6:	37ff      	adds	r7, #255	@ 0xff
        image4.setBitmap(BITMAP_ACADEMYBOTTOMRIGHT_ID);
 8004ff8:	9303      	str	r3, [sp, #12]
    switch (newImage)
 8004ffa:	2901      	cmp	r1, #1
 8004ffc:	d03b      	beq.n	8005076 <_ZN13ImageAnimator11changeImageENS_19ImageAnimatorImagesE+0x98>
 8004ffe:	2902      	cmp	r1, #2
 8005000:	d04e      	beq.n	80050a0 <_ZN13ImageAnimator11changeImageENS_19ImageAnimatorImagesE+0xc2>
 8005002:	2900      	cmp	r1, #0
 8005004:	d117      	bne.n	8005036 <_ZN13ImageAnimator11changeImageENS_19ImageAnimatorImagesE+0x58>
 8005006:	2304      	movs	r3, #4
 8005008:	ad05      	add	r5, sp, #20
 800500a:	802b      	strh	r3, [r5, #0]
        image1.setBitmap(BITMAP_ACADEMYTOPRIGHT_ID);
 800500c:	0029      	movs	r1, r5
 800500e:	9801      	ldr	r0, [sp, #4]
 8005010:	f003 fe5f 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        image2.setBitmap(BITMAP_ACADEMYBOTTOMLEFT_ID);
 8005014:	0029      	movs	r1, r5
 8005016:	0038      	movs	r0, r7
 8005018:	802e      	strh	r6, [r5, #0]
 800501a:	f003 fe5a 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800501e:	2303      	movs	r3, #3
        image3.setBitmap(BITMAP_ACADEMYTOPLEFT_ID);
 8005020:	0029      	movs	r1, r5
 8005022:	802b      	strh	r3, [r5, #0]
 8005024:	9802      	ldr	r0, [sp, #8]
 8005026:	f003 fe54 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800502a:	2301      	movs	r3, #1
        break;
    case circleAnimationsLogo:
        image1.setBitmap(BITMAP_TEXTSCROLLINGTOPRIGHT_ID);
        image2.setBitmap(BITMAP_TEXTSCROLLINGBOTTOMLEFT_ID);
        image3.setBitmap(BITMAP_TEXTSCROLLINGTOPLEFT_ID);
        image4.setBitmap(BITMAP_TEXTSCROLLINGBOTTOMRIGHT_ID);
 800502c:	0029      	movs	r1, r5
 800502e:	9803      	ldr	r0, [sp, #12]
 8005030:	802b      	strh	r3, [r5, #0]
 8005032:	f003 fe4e 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        break;
    default:
        break;
    }

    image1.setXY(DISPLAY_WIDTH, DISPLAY_HEIGHT / 2 - image1.getHeight());
 8005036:	2578      	movs	r5, #120	@ 0x78
 8005038:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800503a:	9801      	ldr	r0, [sp, #4]
 800503c:	1aaa      	subs	r2, r5, r2
 800503e:	21f0      	movs	r1, #240	@ 0xf0
 8005040:	b212      	sxth	r2, r2
 8005042:	f7fd ffae 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setXY(-image2.getWidth(), DISPLAY_HEIGHT / 2);
 8005046:	8939      	ldrh	r1, [r7, #8]
 8005048:	002a      	movs	r2, r5
 800504a:	4249      	negs	r1, r1
 800504c:	0038      	movs	r0, r7
        return rect.height;
 800504e:	3484      	adds	r4, #132	@ 0x84
 8005050:	b209      	sxth	r1, r1
 8005052:	f7fd ffa6 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setXY(DISPLAY_WIDTH / 2 - image3.getWidth(), -image3.getHeight());
 8005056:	8962      	ldrh	r2, [r4, #10]
 8005058:	8921      	ldrh	r1, [r4, #8]
 800505a:	4252      	negs	r2, r2
 800505c:	1a69      	subs	r1, r5, r1
 800505e:	9802      	ldr	r0, [sp, #8]
 8005060:	b212      	sxth	r2, r2
 8005062:	b209      	sxth	r1, r1
 8005064:	f7fd ff9d 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
    image4.setXY(DISPLAY_WIDTH / 2, DISPLAY_HEIGHT);
 8005068:	22f0      	movs	r2, #240	@ 0xf0
 800506a:	0029      	movs	r1, r5
 800506c:	9803      	ldr	r0, [sp, #12]
 800506e:	f7fd ff98 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
}
 8005072:	b007      	add	sp, #28
 8005074:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005076:	231c      	movs	r3, #28
 8005078:	ad05      	add	r5, sp, #20
        image1.setBitmap(BITMAP_XLOGOTOPRIGHT_ID);
 800507a:	0029      	movs	r1, r5
 800507c:	9801      	ldr	r0, [sp, #4]
 800507e:	802b      	strh	r3, [r5, #0]
 8005080:	f003 fe27 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005084:	2319      	movs	r3, #25
        image2.setBitmap(BITMAP_XLOGOBOTTOMLEFT_ID);
 8005086:	0029      	movs	r1, r5
 8005088:	0038      	movs	r0, r7
 800508a:	802b      	strh	r3, [r5, #0]
 800508c:	f003 fe21 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005090:	231b      	movs	r3, #27
        image3.setBitmap(BITMAP_XLOGOTOPLEFT_ID);
 8005092:	0029      	movs	r1, r5
 8005094:	802b      	strh	r3, [r5, #0]
 8005096:	9802      	ldr	r0, [sp, #8]
 8005098:	f003 fe1b 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800509c:	231a      	movs	r3, #26
 800509e:	e7c5      	b.n	800502c <_ZN13ImageAnimator11changeImageENS_19ImageAnimatorImagesE+0x4e>
 80050a0:	2315      	movs	r3, #21
 80050a2:	ad05      	add	r5, sp, #20
        image1.setBitmap(BITMAP_TEXTSCROLLINGTOPRIGHT_ID);
 80050a4:	0029      	movs	r1, r5
 80050a6:	9801      	ldr	r0, [sp, #4]
 80050a8:	802b      	strh	r3, [r5, #0]
 80050aa:	f003 fe12 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80050ae:	2312      	movs	r3, #18
        image2.setBitmap(BITMAP_TEXTSCROLLINGBOTTOMLEFT_ID);
 80050b0:	0029      	movs	r1, r5
 80050b2:	0038      	movs	r0, r7
 80050b4:	802b      	strh	r3, [r5, #0]
 80050b6:	f003 fe0c 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80050ba:	2314      	movs	r3, #20
        image3.setBitmap(BITMAP_TEXTSCROLLINGTOPLEFT_ID);
 80050bc:	0029      	movs	r1, r5
 80050be:	802b      	strh	r3, [r5, #0]
 80050c0:	9802      	ldr	r0, [sp, #8]
 80050c2:	f003 fe06 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80050c6:	2313      	movs	r3, #19
 80050c8:	e7b0      	b.n	800502c <_ZN13ImageAnimator11changeImageENS_19ImageAnimatorImagesE+0x4e>

080050ca <_ZN13ImageAnimator20imageCallbackHandlerERKN8touchgfx12MoveAnimatorINS0_5ImageEEE>:

void ImageAnimator::imageCallbackHandler(const MoveAnimator<touchgfx::Image>& src)
{
    if (animatingOut)
 80050ca:	23ca      	movs	r3, #202	@ 0xca
{
 80050cc:	b570      	push	{r4, r5, r6, lr}
    if (animatingOut)
 80050ce:	005b      	lsls	r3, r3, #1
 80050d0:	5cc2      	ldrb	r2, [r0, r3]
{
 80050d2:	0004      	movs	r4, r0
    if (animatingOut)
 80050d4:	2a00      	cmp	r2, #0
 80050d6:	d010      	beq.n	80050fa <_ZN13ImageAnimator20imageCallbackHandlerERKN8touchgfx12MoveAnimatorINS0_5ImageEEE+0x30>
    {
        animatingOut = false;
 80050d8:	2200      	movs	r2, #0

        changeImage(targetImage);
 80050da:	2596      	movs	r5, #150	@ 0x96
        animatingOut = false;
 80050dc:	54c2      	strb	r2, [r0, r3]
        changeImage(targetImage);
 80050de:	35ff      	adds	r5, #255	@ 0xff
 80050e0:	5d41      	ldrb	r1, [r0, r5]
 80050e2:	f7ff ff7c 	bl	8004fde <_ZN13ImageAnimator11changeImageENS_19ImageAnimatorImagesE>
        startMoveAnimation(targetImage);
 80050e6:	0020      	movs	r0, r4
 80050e8:	5d61      	ldrb	r1, [r4, r5]
 80050ea:	f7ff fea5 	bl	8004e38 <_ZN13ImageAnimator18startMoveAnimationENS_19ImageAnimatorImagesE>
        emitImageIsOutCallback();
 80050ee:	6823      	ldr	r3, [r4, #0]
 80050f0:	0020      	movs	r0, r4
 80050f2:	338c      	adds	r3, #140	@ 0x8c
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	4798      	blx	r3
        image1.cancelMoveAnimation();
        image2.cancelMoveAnimation();
        image3.cancelMoveAnimation();
        image4.cancelMoveAnimation();
    }
}
 80050f8:	bd70      	pop	{r4, r5, r6, pc}
        animatingOut = true;
 80050fa:	2201      	movs	r2, #1
 80050fc:	54c2      	strb	r2, [r0, r3]
        image1.cancelMoveAnimation();
 80050fe:	302c      	adds	r0, #44	@ 0x2c
 8005100:	f7ff ff4a 	bl	8004f98 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE19cancelMoveAnimationEv>
        image2.cancelMoveAnimation();
 8005104:	0020      	movs	r0, r4
 8005106:	3035      	adds	r0, #53	@ 0x35
 8005108:	30ff      	adds	r0, #255	@ 0xff
 800510a:	f7ff ff45 	bl	8004f98 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE19cancelMoveAnimationEv>
        image3.cancelMoveAnimation();
 800510e:	0020      	movs	r0, r4
 8005110:	3084      	adds	r0, #132	@ 0x84
 8005112:	f7ff ff41 	bl	8004f98 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE19cancelMoveAnimationEv>
        image4.cancelMoveAnimation();
 8005116:	0020      	movs	r0, r4
 8005118:	30dc      	adds	r0, #220	@ 0xdc
 800511a:	f7ff ff3d 	bl	8004f98 <_ZN8touchgfx12MoveAnimatorINS_5ImageEE19cancelMoveAnimationEv>
}
 800511e:	e7eb      	b.n	80050f8 <_ZN13ImageAnimator20imageCallbackHandlerERKN8touchgfx12MoveAnimatorINS0_5ImageEEE+0x2e>

08005120 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {}
 8005120:	4770      	bx	lr

08005122 <_ZThn4_N13MainPresenterD1Ev>:
 8005122:	3804      	subs	r0, #4
 8005124:	4770      	bx	lr

08005126 <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 8005126:	4770      	bx	lr

08005128 <_ZN13MainPresenterD0Ev>:
 8005128:	b510      	push	{r4, lr}
 800512a:	0004      	movs	r4, r0
 800512c:	2110      	movs	r1, #16
 800512e:	f00c fcea 	bl	8011b06 <_ZdlPvj>
 8005132:	0020      	movs	r0, r4
 8005134:	bd10      	pop	{r4, pc}

08005136 <_ZThn4_N13MainPresenterD0Ev>:
 8005136:	b408      	push	{r3}
 8005138:	4b02      	ldr	r3, [pc, #8]	@ (8005144 <_ZThn4_N13MainPresenterD0Ev+0xe>)
 800513a:	469c      	mov	ip, r3
 800513c:	3804      	subs	r0, #4
 800513e:	bc08      	pop	{r3}
 8005140:	4760      	bx	ip
 8005142:	46c0      	nop			@ (mov r8, r8)
 8005144:	08005129 	.word	0x08005129

08005148 <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 8005148:	2300      	movs	r3, #0
 800514a:	6083      	str	r3, [r0, #8]
    : view(v)
 800514c:	4b02      	ldr	r3, [pc, #8]	@ (8005158 <_ZN13MainPresenterC1ER8MainView+0x10>)
 800514e:	60c1      	str	r1, [r0, #12]
 8005150:	6003      	str	r3, [r0, #0]
 8005152:	4b02      	ldr	r3, [pc, #8]	@ (800515c <_ZN13MainPresenterC1ER8MainView+0x14>)
 8005154:	6043      	str	r3, [r0, #4]
}
 8005156:	4770      	bx	lr
 8005158:	08015444 	.word	0x08015444
 800515c:	0801545c 	.word	0x0801545c

08005160 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8005160:	4770      	bx	lr
	...

08005164 <_ZN8MainView17nextActionHandlerEv>:
        inactiveThreshold = MENU_THRESHOLD;
    }
}

void MainView::nextActionHandler()
{
 8005164:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    demoNameText.invalidate();
}

void MainView::resetInactiveCounter()
{
    inactiveCounter = 0;
 8005166:	2200      	movs	r2, #0
 8005168:	4b2f      	ldr	r3, [pc, #188]	@ (8005228 <_ZN8MainView17nextActionHandlerEv+0xc4>)
{
 800516a:	0004      	movs	r4, r0
    inactiveCounter = 0;
 800516c:	50c2      	str	r2, [r0, r3]
    if (imageAnimator.isFadeAnimationRunning() ||
 800516e:	4b2f      	ldr	r3, [pc, #188]	@ (800522c <_ZN8MainView17nextActionHandlerEv+0xc8>)
 8005170:	18c6      	adds	r6, r0, r3
 8005172:	0030      	movs	r0, r6
 8005174:	f7ff fe57 	bl	8004e26 <_ZN13ImageAnimator22isFadeAnimationRunningEv>
            numberAnimator0.isFadeAnimationRunning() ||
 8005178:	2800      	cmp	r0, #0
 800517a:	d11b      	bne.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
 800517c:	0025      	movs	r5, r4
 800517e:	3598      	adds	r5, #152	@ 0x98
 8005180:	0028      	movs	r0, r5
 8005182:	f000 fba9 	bl	80058d8 <_ZN14NumberAnimator22isFadeAnimationRunningEv>
    if (imageAnimator.isFadeAnimationRunning() ||
 8005186:	2800      	cmp	r0, #0
 8005188:	d114      	bne.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
            qrCodeAnimator.isFadeAnimationRunning())
 800518a:	23a6      	movs	r3, #166	@ 0xa6
 800518c:	009b      	lsls	r3, r3, #2
 800518e:	18e7      	adds	r7, r4, r3
 8005190:	0038      	movs	r0, r7
 8005192:	f000 fc0d 	bl	80059b0 <_ZN14QRCodeAnimator22isFadeAnimationRunningEv>
            numberAnimator0.isFadeAnimationRunning() ||
 8005196:	2800      	cmp	r0, #0
 8005198:	d10c      	bne.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
    if (imageAnimator.isActive())
 800519a:	0030      	movs	r0, r6
 800519c:	f7ff fe47 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 80051a0:	2800      	cmp	r0, #0
 80051a2:	d008      	beq.n	80051b6 <_ZN8MainView17nextActionHandlerEv+0x52>
        if (imageAnimator.isAnimateToMenuItemRunning())
 80051a4:	0030      	movs	r0, r6
 80051a6:	f7ff fe2b 	bl	8004e00 <_ZN13ImageAnimator26isAnimateToMenuItemRunningEv>
 80051aa:	2800      	cmp	r0, #0
 80051ac:	d102      	bne.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
        imageAnimator.animateToNextMenuItem();
 80051ae:	0030      	movs	r0, r6
 80051b0:	f7ff feb0 	bl	8004f14 <_ZN13ImageAnimator21animateToNextMenuItemEv>
}
 80051b4:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
        switch (imageAnimator.getCurrentAnimatorImage())
 80051b6:	0030      	movs	r0, r6
 80051b8:	f7ff fe25 	bl	8004e06 <_ZN13ImageAnimator23getCurrentAnimatorImageEv>
 80051bc:	2800      	cmp	r0, #0
 80051be:	d02f      	beq.n	8005220 <_ZN8MainView17nextActionHandlerEv+0xbc>
 80051c0:	2801      	cmp	r0, #1
 80051c2:	d1f7      	bne.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
            if (!numberAnimator0.isAnimating() && !numberAnimator0.isFadeAnimationRunning())
 80051c4:	0028      	movs	r0, r5
 80051c6:	f000 fb84 	bl	80058d2 <_ZN14NumberAnimator11isAnimatingEv>
 80051ca:	2800      	cmp	r0, #0
 80051cc:	d1f2      	bne.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
 80051ce:	0028      	movs	r0, r5
 80051d0:	f000 fb82 	bl	80058d8 <_ZN14NumberAnimator22isFadeAnimationRunningEv>
 80051d4:	2800      	cmp	r0, #0
 80051d6:	d1ed      	bne.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
                int duration = numberAnimator0.getAnimateOnEveryTick() ? 300 : 150;
 80051d8:	0028      	movs	r0, r5
 80051da:	f000 fb80 	bl	80058de <_ZN14NumberAnimator21getAnimateOnEveryTickEv>
 80051de:	2696      	movs	r6, #150	@ 0x96
 80051e0:	2800      	cmp	r0, #0
 80051e2:	d000      	beq.n	80051e6 <_ZN8MainView17nextActionHandlerEv+0x82>
 80051e4:	19b6      	adds	r6, r6, r6
                numberAnimator1.setAnimationDelay(0);
 80051e6:	3499      	adds	r4, #153	@ 0x99
                numberAnimator0.setAnimationDelay(0);
 80051e8:	0028      	movs	r0, r5
                numberAnimator1.setAnimationDelay(0);
 80051ea:	34ff      	adds	r4, #255	@ 0xff
                numberAnimator0.setAnimationDelay(0);
 80051ec:	2100      	movs	r1, #0
 80051ee:	f000 fb4e 	bl	800588e <_ZN14NumberAnimator17setAnimationDelayEt>
                numberAnimator1.setAnimationDelay(0);
 80051f2:	0020      	movs	r0, r4
 80051f4:	2100      	movs	r1, #0
 80051f6:	f000 fb4a 	bl	800588e <_ZN14NumberAnimator17setAnimationDelayEt>
                numberAnimator0.animateNumbers(7, duration, EasingEquations::cubicEaseOut, EasingEquations::backEaseInOut);
 80051fa:	4f0d      	ldr	r7, [pc, #52]	@ (8005230 <_ZN8MainView17nextActionHandlerEv+0xcc>)
 80051fc:	4b0d      	ldr	r3, [pc, #52]	@ (8005234 <_ZN8MainView17nextActionHandlerEv+0xd0>)
 80051fe:	b2b6      	uxth	r6, r6
 8005200:	0032      	movs	r2, r6
 8005202:	0028      	movs	r0, r5
 8005204:	9300      	str	r3, [sp, #0]
 8005206:	2107      	movs	r1, #7
 8005208:	003b      	movs	r3, r7
 800520a:	f000 fb43 	bl	8005894 <_ZN14NumberAnimator14animateNumbersEitPFstsstES1_>
                numberAnimator1.animateNumbers(33, duration, EasingEquations::cubicEaseOut, EasingEquations::cubicEaseInOut);
 800520e:	4b0a      	ldr	r3, [pc, #40]	@ (8005238 <_ZN8MainView17nextActionHandlerEv+0xd4>)
 8005210:	0032      	movs	r2, r6
 8005212:	9300      	str	r3, [sp, #0]
 8005214:	2121      	movs	r1, #33	@ 0x21
 8005216:	003b      	movs	r3, r7
 8005218:	0020      	movs	r0, r4
 800521a:	f000 fb3b 	bl	8005894 <_ZN14NumberAnimator14animateNumbersEitPFstsstES1_>
 800521e:	e7c9      	b.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
            qrCodeAnimator.animateToNextQR();
 8005220:	0038      	movs	r0, r7
 8005222:	f000 fbae 	bl	8005982 <_ZN14QRCodeAnimator15animateToNextQREv>
            break;
 8005226:	e7c5      	b.n	80051b4 <_ZN8MainView17nextActionHandlerEv+0x50>
 8005228:	00000f3c 	.word	0x00000f3c
 800522c:	00000898 	.word	0x00000898
 8005230:	0800cb83 	.word	0x0800cb83
 8005234:	0800ca21 	.word	0x0800ca21
 8005238:	0800cc11 	.word	0x0800cc11

0800523c <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 800523c:	b510      	push	{r4, lr}
 800523e:	0004      	movs	r4, r0
 8005240:	4b02      	ldr	r3, [pc, #8]	@ (800524c <_ZN8MainViewD1Ev+0x10>)
 8005242:	6003      	str	r3, [r0, #0]
 8005244:	f7fe fad8 	bl	80037f8 <_ZN12MainViewBaseD1Ev>
 8005248:	0020      	movs	r0, r4
 800524a:	bd10      	pop	{r4, pc}
 800524c:	08015520 	.word	0x08015520

08005250 <_ZN8MainViewD0Ev>:
 8005250:	b510      	push	{r4, lr}
 8005252:	0004      	movs	r4, r0
 8005254:	f7ff fff2 	bl	800523c <_ZN8MainViewD1Ev>
 8005258:	0020      	movs	r0, r4
 800525a:	4902      	ldr	r1, [pc, #8]	@ (8005264 <_ZN8MainViewD0Ev+0x14>)
 800525c:	f00c fc53 	bl	8011b06 <_ZdlPvj>
 8005260:	0020      	movs	r0, r4
 8005262:	bd10      	pop	{r4, pc}
 8005264:	00000f44 	.word	0x00000f44

08005268 <_ZN8MainView16handleClickEventERKN8touchgfx10ClickEventE>:
    if (event.getType() == ClickEvent::RELEASED)
 8005268:	790b      	ldrb	r3, [r1, #4]
{
 800526a:	b510      	push	{r4, lr}
    if (event.getType() == ClickEvent::RELEASED)
 800526c:	2b01      	cmp	r3, #1
 800526e:	d10a      	bne.n	8005286 <_ZN8MainView16handleClickEventERKN8touchgfx10ClickEventE+0x1e>
     *
     * @return The x coordinate of this event.
     */
    int16_t getX() const
    {
        return clickX;
 8005270:	2206      	movs	r2, #6
 8005272:	5e8b      	ldrsh	r3, [r1, r2]
        if (event.getX() < 120 && event.getY() < 80)
 8005274:	2b77      	cmp	r3, #119	@ 0x77
 8005276:	dc07      	bgt.n	8005288 <_ZN8MainView16handleClickEventERKN8touchgfx10ClickEventE+0x20>
 8005278:	2208      	movs	r2, #8
 800527a:	5e8b      	ldrsh	r3, [r1, r2]
 800527c:	2b4f      	cmp	r3, #79	@ 0x4f
 800527e:	dc02      	bgt.n	8005286 <_ZN8MainView16handleClickEventERKN8touchgfx10ClickEventE+0x1e>
            selectActionHandler();
 8005280:	6803      	ldr	r3, [r0, #0]
 8005282:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            nextActionHandler();
 8005284:	4798      	blx	r3
}
 8005286:	bd10      	pop	{r4, pc}
        else if (event.getX() > 120 && event.getY() < 100)
 8005288:	2b78      	cmp	r3, #120	@ 0x78
 800528a:	d0fc      	beq.n	8005286 <_ZN8MainView16handleClickEventERKN8touchgfx10ClickEventE+0x1e>
 800528c:	2208      	movs	r2, #8
 800528e:	5e8b      	ldrsh	r3, [r1, r2]
 8005290:	2b63      	cmp	r3, #99	@ 0x63
 8005292:	dcf8      	bgt.n	8005286 <_ZN8MainView16handleClickEventERKN8touchgfx10ClickEventE+0x1e>
            nextActionHandler();
 8005294:	6803      	ldr	r3, [r0, #0]
 8005296:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005298:	e7f4      	b.n	8005284 <_ZN8MainView16handleClickEventERKN8touchgfx10ClickEventE+0x1c>
	...

0800529c <_ZNK8touchgfx6Bitmap5getIdEv>:
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 800529c:	4b06      	ldr	r3, [pc, #24]	@ (80052b8 <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
    BitmapId getId() const
 800529e:	b510      	push	{r4, lr}
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	d105      	bne.n	80052b2 <_ZNK8touchgfx6Bitmap5getIdEv+0x16>
 80052a6:	2194      	movs	r1, #148	@ 0x94
 80052a8:	4b04      	ldr	r3, [pc, #16]	@ (80052bc <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 80052aa:	4a05      	ldr	r2, [pc, #20]	@ (80052c0 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 80052ac:	4805      	ldr	r0, [pc, #20]	@ (80052c4 <_ZNK8touchgfx6Bitmap5getIdEv+0x28>)
 80052ae:	f00d fa57 	bl	8012760 <__assert_func>
        return bitmapId;
 80052b2:	8800      	ldrh	r0, [r0, #0]
    }
 80052b4:	bd10      	pop	{r4, pc}
 80052b6:	46c0      	nop			@ (mov r8, r8)
 80052b8:	20003600 	.word	0x20003600
 80052bc:	08015464 	.word	0x08015464
 80052c0:	080154a0 	.word	0x080154a0
 80052c4:	080154d3 	.word	0x080154d3

080052c8 <_ZN8MainViewC1Ev>:
MainView::MainView() :
 80052c8:	b510      	push	{r4, lr}
 80052ca:	0004      	movs	r4, r0
    inactiveThreshold(MENU_THRESHOLD)
 80052cc:	f7fe fafc 	bl	80038c8 <_ZN12MainViewBaseC1Ev>
    inactiveCounter(0),
 80052d0:	2200      	movs	r2, #0
    inactiveThreshold(MENU_THRESHOLD)
 80052d2:	4b05      	ldr	r3, [pc, #20]	@ (80052e8 <_ZN8MainViewC1Ev+0x20>)
}
 80052d4:	0020      	movs	r0, r4
    inactiveThreshold(MENU_THRESHOLD)
 80052d6:	6023      	str	r3, [r4, #0]
    inactiveCounter(0),
 80052d8:	4b04      	ldr	r3, [pc, #16]	@ (80052ec <_ZN8MainViewC1Ev+0x24>)
 80052da:	50e2      	str	r2, [r4, r3]
    inactiveThreshold(MENU_THRESHOLD)
 80052dc:	2296      	movs	r2, #150	@ 0x96
 80052de:	3304      	adds	r3, #4
 80052e0:	00d2      	lsls	r2, r2, #3
 80052e2:	50e2      	str	r2, [r4, r3]
}
 80052e4:	bd10      	pop	{r4, pc}
 80052e6:	46c0      	nop			@ (mov r8, r8)
 80052e8:	08015520 	.word	0x08015520
 80052ec:	00000f3c 	.word	0x00000f3c

080052f0 <_ZN8MainView11setupScreenEv>:
{
 80052f0:	b510      	push	{r4, lr}
 80052f2:	0004      	movs	r4, r0
    MainViewBase::setupScreen();
 80052f4:	f7fe fa58 	bl	80037a8 <_ZN12MainViewBase11setupScreenEv>
    numberAnimator0.setAnimateOnEvenTick(true);
 80052f8:	0020      	movs	r0, r4
 80052fa:	2101      	movs	r1, #1
 80052fc:	3098      	adds	r0, #152	@ 0x98
 80052fe:	f000 faf1 	bl	80058e4 <_ZN14NumberAnimator20setAnimateOnEvenTickEb>
    numberAnimator1.setAnimateOnEvenTick(false);
 8005302:	0020      	movs	r0, r4
 8005304:	3099      	adds	r0, #153	@ 0x99
 8005306:	2100      	movs	r1, #0
 8005308:	30ff      	adds	r0, #255	@ 0xff
 800530a:	f000 faeb 	bl	80058e4 <_ZN14NumberAnimator20setAnimateOnEvenTickEb>
    nextActionHandler();
 800530e:	6823      	ldr	r3, [r4, #0]
 8005310:	0020      	movs	r0, r4
 8005312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005314:	4798      	blx	r3
}
 8005316:	bd10      	pop	{r4, pc}

08005318 <_ZN8MainView15handleTickEventEv>:
{
 8005318:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (inactiveCounter > inactiveThreshold)
 800531a:	26f4      	movs	r6, #244	@ 0xf4
    inactiveCounter++;
 800531c:	4a56      	ldr	r2, [pc, #344]	@ (8005478 <_ZN8MainView15handleTickEventEv+0x160>)
        if (imageAnimator.isActive())
 800531e:	4957      	ldr	r1, [pc, #348]	@ (800547c <_ZN8MainView15handleTickEventEv+0x164>)
    inactiveCounter++;
 8005320:	5883      	ldr	r3, [r0, r2]
    if (inactiveCounter > inactiveThreshold)
 8005322:	0136      	lsls	r6, r6, #4
    inactiveCounter++;
 8005324:	3301      	adds	r3, #1
 8005326:	5083      	str	r3, [r0, r2]
        if (imageAnimator.isActive())
 8005328:	1845      	adds	r5, r0, r1
    if (inactiveCounter > inactiveThreshold)
 800532a:	5981      	ldr	r1, [r0, r6]
{
 800532c:	0004      	movs	r4, r0
    if (inactiveCounter > inactiveThreshold)
 800532e:	428b      	cmp	r3, r1
 8005330:	dd0c      	ble.n	800534c <_ZN8MainView15handleTickEventEv+0x34>
    inactiveCounter = 0;
 8005332:	2300      	movs	r3, #0
 8005334:	5083      	str	r3, [r0, r2]
        if (imageAnimator.isActive())
 8005336:	0028      	movs	r0, r5
 8005338:	f7ff fd79 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 800533c:	2800      	cmp	r0, #0
 800533e:	d036      	beq.n	80053ae <_ZN8MainView15handleTickEventEv+0x96>
            imageAnimator.animateToNextMenuItem();
 8005340:	0028      	movs	r0, r5
 8005342:	f7ff fde7 	bl	8004f14 <_ZN13ImageAnimator21animateToNextMenuItemEv>
            inactiveThreshold = 500;
 8005346:	23fa      	movs	r3, #250	@ 0xfa
 8005348:	005b      	lsls	r3, r3, #1
 800534a:	51a3      	str	r3, [r4, r6]
    if (imageAnimator.isActive() && !imageAnimator.isFadeAnimationRunning() && selectText.getBitmapId() == BITMAP_EXIT_TEXT_ID)
 800534c:	0028      	movs	r0, r5
 800534e:	f7ff fd6e 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 8005352:	2800      	cmp	r0, #0
 8005354:	d030      	beq.n	80053b8 <_ZN8MainView15handleTickEventEv+0xa0>
 8005356:	0028      	movs	r0, r5
 8005358:	f7ff fd65 	bl	8004e26 <_ZN13ImageAnimator22isFadeAnimationRunningEv>
 800535c:	2800      	cmp	r0, #0
 800535e:	d12b      	bne.n	80053b8 <_ZN8MainView15handleTickEventEv+0xa0>
        return bitmap.getId();
 8005360:	4b47      	ldr	r3, [pc, #284]	@ (8005480 <_ZN8MainView15handleTickEventEv+0x168>)
 8005362:	18e6      	adds	r6, r4, r3
 8005364:	4b47      	ldr	r3, [pc, #284]	@ (8005484 <_ZN8MainView15handleTickEventEv+0x16c>)
 8005366:	18e0      	adds	r0, r4, r3
 8005368:	f7ff ff98 	bl	800529c <_ZNK8touchgfx6Bitmap5getIdEv>
 800536c:	280c      	cmp	r0, #12
 800536e:	d123      	bne.n	80053b8 <_ZN8MainView15handleTickEventEv+0xa0>
        : bitmapId(id)
 8005370:	230b      	movs	r3, #11
 8005372:	a901      	add	r1, sp, #4
        selectText.setBitmap(BITMAP_EXIT_TEXT_ID);
 8005374:	0030      	movs	r0, r6
 8005376:	800b      	strh	r3, [r1, #0]
 8005378:	f003 fcab 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        selectText.invalidate();
 800537c:	0030      	movs	r0, r6
 800537e:	f006 ffa3 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (imageAnimator.isActive() && !demoNameText.isVisible())
 8005382:	0028      	movs	r0, r5
 8005384:	f7ff fd53 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 8005388:	2800      	cmp	r0, #0
 800538a:	d004      	beq.n	8005396 <_ZN8MainView15handleTickEventEv+0x7e>
        return visible;
 800538c:	4b3e      	ldr	r3, [pc, #248]	@ (8005488 <_ZN8MainView15handleTickEventEv+0x170>)
 800538e:	18e3      	adds	r3, r4, r3
 8005390:	7fda      	ldrb	r2, [r3, #31]
 8005392:	2a00      	cmp	r2, #0
 8005394:	d025      	beq.n	80053e2 <_ZN8MainView15handleTickEventEv+0xca>
    else if (!imageAnimator.isActive() && demoNameText.isVisible())
 8005396:	0028      	movs	r0, r5
 8005398:	f7ff fd49 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 800539c:	2800      	cmp	r0, #0
 800539e:	d127      	bne.n	80053f0 <_ZN8MainView15handleTickEventEv+0xd8>
 80053a0:	4b39      	ldr	r3, [pc, #228]	@ (8005488 <_ZN8MainView15handleTickEventEv+0x170>)
 80053a2:	18e3      	adds	r3, r4, r3
 80053a4:	7fda      	ldrb	r2, [r3, #31]
 80053a6:	2a00      	cmp	r2, #0
 80053a8:	d022      	beq.n	80053f0 <_ZN8MainView15handleTickEventEv+0xd8>
        visible = vis;
 80053aa:	77d8      	strb	r0, [r3, #31]
 80053ac:	e01b      	b.n	80053e6 <_ZN8MainView15handleTickEventEv+0xce>
            nextActionHandler();
 80053ae:	6823      	ldr	r3, [r4, #0]
 80053b0:	0020      	movs	r0, r4
 80053b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053b4:	4798      	blx	r3
 80053b6:	e7c9      	b.n	800534c <_ZN8MainView15handleTickEventEv+0x34>
    else if (!imageAnimator.isActive() && !imageAnimator.isFadeAnimationRunning() && selectText.getBitmapId() == BITMAP_ENTER_TEXT_ID)
 80053b8:	0028      	movs	r0, r5
 80053ba:	f7ff fd38 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 80053be:	2800      	cmp	r0, #0
 80053c0:	d1df      	bne.n	8005382 <_ZN8MainView15handleTickEventEv+0x6a>
 80053c2:	0028      	movs	r0, r5
 80053c4:	f7ff fd2f 	bl	8004e26 <_ZN13ImageAnimator22isFadeAnimationRunningEv>
 80053c8:	2800      	cmp	r0, #0
 80053ca:	d1da      	bne.n	8005382 <_ZN8MainView15handleTickEventEv+0x6a>
 80053cc:	4b2c      	ldr	r3, [pc, #176]	@ (8005480 <_ZN8MainView15handleTickEventEv+0x168>)
 80053ce:	18e6      	adds	r6, r4, r3
 80053d0:	4b2c      	ldr	r3, [pc, #176]	@ (8005484 <_ZN8MainView15handleTickEventEv+0x16c>)
 80053d2:	18e0      	adds	r0, r4, r3
 80053d4:	f7ff ff62 	bl	800529c <_ZNK8touchgfx6Bitmap5getIdEv>
 80053d8:	280b      	cmp	r0, #11
 80053da:	d1d2      	bne.n	8005382 <_ZN8MainView15handleTickEventEv+0x6a>
 80053dc:	230c      	movs	r3, #12
 80053de:	a901      	add	r1, sp, #4
 80053e0:	e7c8      	b.n	8005374 <_ZN8MainView15handleTickEventEv+0x5c>
 80053e2:	2201      	movs	r2, #1
 80053e4:	77da      	strb	r2, [r3, #31]
        demoNameText.invalidate();
 80053e6:	23f0      	movs	r3, #240	@ 0xf0
 80053e8:	011b      	lsls	r3, r3, #4
 80053ea:	18e0      	adds	r0, r4, r3
 80053ec:	f006 ff6c 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (numberAnimator0.isAnimating() && nextIcon.isVisible())
 80053f0:	0027      	movs	r7, r4
 80053f2:	3798      	adds	r7, #152	@ 0x98
 80053f4:	0038      	movs	r0, r7
 80053f6:	f000 fa6c 	bl	80058d2 <_ZN14NumberAnimator11isAnimatingEv>
 80053fa:	2800      	cmp	r0, #0
 80053fc:	d004      	beq.n	8005408 <_ZN8MainView15handleTickEventEv+0xf0>
        return visible;
 80053fe:	4b23      	ldr	r3, [pc, #140]	@ (800548c <_ZN8MainView15handleTickEventEv+0x174>)
 8005400:	18e6      	adds	r6, r4, r3
 8005402:	7ff3      	ldrb	r3, [r6, #31]
 8005404:	2b00      	cmp	r3, #0
 8005406:	d115      	bne.n	8005434 <_ZN8MainView15handleTickEventEv+0x11c>
    else if (!numberAnimator0.isAnimating() && !nextIcon.isVisible() && imageAnimator.getCurrentAnimatorImage() == ImageAnimator::touchgfxLogo)
 8005408:	0038      	movs	r0, r7
 800540a:	f000 fa62 	bl	80058d2 <_ZN14NumberAnimator11isAnimatingEv>
 800540e:	2800      	cmp	r0, #0
 8005410:	d01e      	beq.n	8005450 <_ZN8MainView15handleTickEventEv+0x138>
    else if (!imageAnimator.isActive() && imageAnimator.getCurrentAnimatorImage() == ImageAnimator::circleAnimationsLogo && nextIcon.isVisible())
 8005412:	0028      	movs	r0, r5
 8005414:	f7ff fd0b 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 8005418:	1e06      	subs	r6, r0, #0
 800541a:	d118      	bne.n	800544e <_ZN8MainView15handleTickEventEv+0x136>
 800541c:	0028      	movs	r0, r5
 800541e:	f7ff fcf2 	bl	8004e06 <_ZN13ImageAnimator23getCurrentAnimatorImageEv>
 8005422:	2802      	cmp	r0, #2
 8005424:	d113      	bne.n	800544e <_ZN8MainView15handleTickEventEv+0x136>
 8005426:	4b19      	ldr	r3, [pc, #100]	@ (800548c <_ZN8MainView15handleTickEventEv+0x174>)
 8005428:	18e3      	adds	r3, r4, r3
 800542a:	7fda      	ldrb	r2, [r3, #31]
 800542c:	2a00      	cmp	r2, #0
 800542e:	d00e      	beq.n	800544e <_ZN8MainView15handleTickEventEv+0x136>
        visible = vis;
 8005430:	77de      	strb	r6, [r3, #31]
 8005432:	e008      	b.n	8005446 <_ZN8MainView15handleTickEventEv+0x12e>
 8005434:	2500      	movs	r5, #0
 8005436:	4b16      	ldr	r3, [pc, #88]	@ (8005490 <_ZN8MainView15handleTickEventEv+0x178>)
 8005438:	18e3      	adds	r3, r4, r3
 800543a:	77dd      	strb	r5, [r3, #31]
        selectText.invalidate();
 800543c:	4b10      	ldr	r3, [pc, #64]	@ (8005480 <_ZN8MainView15handleTickEventEv+0x168>)
 800543e:	18e0      	adds	r0, r4, r3
 8005440:	f006 ff42 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8005444:	77f5      	strb	r5, [r6, #31]
        nextIcon.invalidate();
 8005446:	4b13      	ldr	r3, [pc, #76]	@ (8005494 <_ZN8MainView15handleTickEventEv+0x17c>)
 8005448:	18e0      	adds	r0, r4, r3
 800544a:	f006 ff3d 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800544e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
        return visible;
 8005450:	4b0e      	ldr	r3, [pc, #56]	@ (800548c <_ZN8MainView15handleTickEventEv+0x174>)
 8005452:	18e7      	adds	r7, r4, r3
    else if (!numberAnimator0.isAnimating() && !nextIcon.isVisible() && imageAnimator.getCurrentAnimatorImage() == ImageAnimator::touchgfxLogo)
 8005454:	7ffb      	ldrb	r3, [r7, #31]
 8005456:	2b00      	cmp	r3, #0
 8005458:	d1db      	bne.n	8005412 <_ZN8MainView15handleTickEventEv+0xfa>
 800545a:	0028      	movs	r0, r5
 800545c:	f7ff fcd3 	bl	8004e06 <_ZN13ImageAnimator23getCurrentAnimatorImageEv>
 8005460:	0006      	movs	r6, r0
 8005462:	2801      	cmp	r0, #1
 8005464:	d1d5      	bne.n	8005412 <_ZN8MainView15handleTickEventEv+0xfa>
        visible = vis;
 8005466:	4b0a      	ldr	r3, [pc, #40]	@ (8005490 <_ZN8MainView15handleTickEventEv+0x178>)
 8005468:	18e3      	adds	r3, r4, r3
 800546a:	77d8      	strb	r0, [r3, #31]
        selectText.invalidate();
 800546c:	4b04      	ldr	r3, [pc, #16]	@ (8005480 <_ZN8MainView15handleTickEventEv+0x168>)
 800546e:	18e0      	adds	r0, r4, r3
 8005470:	f006 ff2a 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8005474:	77fe      	strb	r6, [r7, #31]
        nextIcon.invalidate();
 8005476:	e7e6      	b.n	8005446 <_ZN8MainView15handleTickEventEv+0x12e>
 8005478:	00000f3c 	.word	0x00000f3c
 800547c:	00000898 	.word	0x00000898
 8005480:	00000ea8 	.word	0x00000ea8
 8005484:	00000ece 	.word	0x00000ece
 8005488:	00000f06 	.word	0x00000f06
 800548c:	00000eda 	.word	0x00000eda
 8005490:	00000eae 	.word	0x00000eae
 8005494:	00000ed4 	.word	0x00000ed4

08005498 <_ZN8MainView19selectActionHandlerEv>:
    inactiveCounter = 0;
 8005498:	2200      	movs	r2, #0
{
 800549a:	b5f0      	push	{r4, r5, r6, r7, lr}
    inactiveCounter = 0;
 800549c:	4b66      	ldr	r3, [pc, #408]	@ (8005638 <_ZN8MainView19selectActionHandlerEv+0x1a0>)
{
 800549e:	0004      	movs	r4, r0
    inactiveCounter = 0;
 80054a0:	50c2      	str	r2, [r0, r3]
    if (imageAnimator.isFadeAnimationRunning() ||
 80054a2:	4b66      	ldr	r3, [pc, #408]	@ (800563c <_ZN8MainView19selectActionHandlerEv+0x1a4>)
{
 80054a4:	b085      	sub	sp, #20
    if (imageAnimator.isFadeAnimationRunning() ||
 80054a6:	18c5      	adds	r5, r0, r3
 80054a8:	0028      	movs	r0, r5
 80054aa:	f7ff fcbc 	bl	8004e26 <_ZN13ImageAnimator22isFadeAnimationRunningEv>
            qrCodeAnimator.isFadeAnimationRunning() ||
 80054ae:	2800      	cmp	r0, #0
 80054b0:	d171      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
            numberAnimator0.isFadeAnimationRunning() ||
 80054b2:	0026      	movs	r6, r4
 80054b4:	3698      	adds	r6, #152	@ 0x98
 80054b6:	0030      	movs	r0, r6
 80054b8:	f000 fa0e 	bl	80058d8 <_ZN14NumberAnimator22isFadeAnimationRunningEv>
    if (imageAnimator.isFadeAnimationRunning() ||
 80054bc:	2800      	cmp	r0, #0
 80054be:	d16a      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
            qrCodeAnimator.isFadeAnimationRunning() ||
 80054c0:	23a6      	movs	r3, #166	@ 0xa6
 80054c2:	009b      	lsls	r3, r3, #2
 80054c4:	18e7      	adds	r7, r4, r3
 80054c6:	0038      	movs	r0, r7
 80054c8:	f000 fa72 	bl	80059b0 <_ZN14QRCodeAnimator22isFadeAnimationRunningEv>
            numberAnimator0.isFadeAnimationRunning() ||
 80054cc:	2800      	cmp	r0, #0
 80054ce:	d162      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
            circleAnimator.isFadeAnimationRunning())
 80054d0:	23a4      	movs	r3, #164	@ 0xa4
 80054d2:	011b      	lsls	r3, r3, #4
 80054d4:	18e3      	adds	r3, r4, r3
 80054d6:	0018      	movs	r0, r3
 80054d8:	9302      	str	r3, [sp, #8]
 80054da:	f7ff f94c 	bl	8004776 <_ZN14CircleAnimator22isFadeAnimationRunningEv>
            qrCodeAnimator.isFadeAnimationRunning() ||
 80054de:	2800      	cmp	r0, #0
 80054e0:	d159      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
    if (imageAnimator.isActive())
 80054e2:	0028      	movs	r0, r5
 80054e4:	f7ff fca3 	bl	8004e2e <_ZN13ImageAnimator8isActiveEv>
 80054e8:	2800      	cmp	r0, #0
 80054ea:	d056      	beq.n	800559a <_ZN8MainView19selectActionHandlerEv+0x102>
        if (imageAnimator.isAnimateToMenuItemRunning())
 80054ec:	0028      	movs	r0, r5
 80054ee:	f7ff fc87 	bl	8004e00 <_ZN13ImageAnimator26isAnimateToMenuItemRunningEv>
 80054f2:	9003      	str	r0, [sp, #12]
 80054f4:	2800      	cmp	r0, #0
 80054f6:	d14e      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
        imageAnimator.setFadeAnimiationDelay(0);
 80054f8:	0001      	movs	r1, r0
 80054fa:	0028      	movs	r0, r5
 80054fc:	f7ff fc87 	bl	8004e0e <_ZN13ImageAnimator22setFadeAnimiationDelayEt>
        imageAnimator.startFadeAnimation();
 8005500:	0028      	movs	r0, r5
 8005502:	f7ff fd15 	bl	8004f30 <_ZN13ImageAnimator18startFadeAnimationEv>
        switch (imageAnimator.getCurrentAnimatorImage())
 8005506:	0028      	movs	r0, r5
 8005508:	f7ff fc7d 	bl	8004e06 <_ZN13ImageAnimator23getCurrentAnimatorImageEv>
 800550c:	2801      	cmp	r0, #1
 800550e:	d00c      	beq.n	800552a <_ZN8MainView19selectActionHandlerEv+0x92>
 8005510:	2802      	cmp	r0, #2
 8005512:	d030      	beq.n	8005576 <_ZN8MainView19selectActionHandlerEv+0xde>
 8005514:	2800      	cmp	r0, #0
 8005516:	d13e      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
            qrCodeAnimator.startFadeAnimation();
 8005518:	0038      	movs	r0, r7
 800551a:	f000 fb6d 	bl	8005bf8 <_ZN14QRCodeAnimator18startFadeAnimationEv>
            inactiveThreshold = QR_THRESHOLD;
 800551e:	23f4      	movs	r3, #244	@ 0xf4
 8005520:	2296      	movs	r2, #150	@ 0x96
 8005522:	011b      	lsls	r3, r3, #4
            inactiveThreshold = NUMBER_THRESHOLD;
 8005524:	0092      	lsls	r2, r2, #2
        inactiveThreshold = MENU_THRESHOLD;
 8005526:	50e2      	str	r2, [r4, r3]
 8005528:	e035      	b.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
            numberAnimator1.startFadeAnimation();
 800552a:	0027      	movs	r7, r4
 800552c:	3799      	adds	r7, #153	@ 0x99
 800552e:	37ff      	adds	r7, #255	@ 0xff
            numberAnimator0.startFadeAnimation();
 8005530:	0030      	movs	r0, r6
 8005532:	f000 f9db 	bl	80058ec <_ZN14NumberAnimator18startFadeAnimationEv>
            numberAnimator1.startFadeAnimation();
 8005536:	0038      	movs	r0, r7
 8005538:	f000 f9d8 	bl	80058ec <_ZN14NumberAnimator18startFadeAnimationEv>
            numberAnimator0.setAnimationDelay(15);
 800553c:	210f      	movs	r1, #15
 800553e:	0030      	movs	r0, r6
 8005540:	f000 f9a5 	bl	800588e <_ZN14NumberAnimator17setAnimationDelayEt>
            numberAnimator1.setAnimationDelay(15);
 8005544:	210f      	movs	r1, #15
 8005546:	0038      	movs	r0, r7
 8005548:	f000 f9a1 	bl	800588e <_ZN14NumberAnimator17setAnimationDelayEt>
            numberAnimator0.animateNumbers(7, 150, EasingEquations::cubicEaseOut, EasingEquations::backEaseInOut);
 800554c:	4d3c      	ldr	r5, [pc, #240]	@ (8005640 <_ZN8MainView19selectActionHandlerEv+0x1a8>)
 800554e:	4b3d      	ldr	r3, [pc, #244]	@ (8005644 <_ZN8MainView19selectActionHandlerEv+0x1ac>)
 8005550:	2296      	movs	r2, #150	@ 0x96
 8005552:	2107      	movs	r1, #7
 8005554:	0030      	movs	r0, r6
 8005556:	9300      	str	r3, [sp, #0]
 8005558:	002b      	movs	r3, r5
 800555a:	f000 f99b 	bl	8005894 <_ZN14NumberAnimator14animateNumbersEitPFstsstES1_>
            numberAnimator1.animateNumbers(33, 150, EasingEquations::cubicEaseOut, EasingEquations::cubicEaseInOut);
 800555e:	4b3a      	ldr	r3, [pc, #232]	@ (8005648 <_ZN8MainView19selectActionHandlerEv+0x1b0>)
 8005560:	2296      	movs	r2, #150	@ 0x96
 8005562:	9300      	str	r3, [sp, #0]
 8005564:	2121      	movs	r1, #33	@ 0x21
 8005566:	002b      	movs	r3, r5
 8005568:	0038      	movs	r0, r7
 800556a:	f000 f993 	bl	8005894 <_ZN14NumberAnimator14animateNumbersEitPFstsstES1_>
            inactiveThreshold = NUMBER_THRESHOLD;
 800556e:	23f4      	movs	r3, #244	@ 0xf4
 8005570:	22c8      	movs	r2, #200	@ 0xc8
 8005572:	011b      	lsls	r3, r3, #4
 8005574:	e7d6      	b.n	8005524 <_ZN8MainView19selectActionHandlerEv+0x8c>
            circleAnimator.startFadeInAnimation();
 8005576:	9802      	ldr	r0, [sp, #8]
 8005578:	f7ff fb42 	bl	8004c00 <_ZN14CircleAnimator20startFadeInAnimationEv>
            inactiveThreshold = -1;
 800557c:	23f4      	movs	r3, #244	@ 0xf4
 800557e:	2201      	movs	r2, #1
 8005580:	011b      	lsls	r3, r3, #4
 8005582:	4252      	negs	r2, r2
 8005584:	50e2      	str	r2, [r4, r3]
 8005586:	4b31      	ldr	r3, [pc, #196]	@ (800564c <_ZN8MainView19selectActionHandlerEv+0x1b4>)
 8005588:	9a03      	ldr	r2, [sp, #12]
 800558a:	18e3      	adds	r3, r4, r3
 800558c:	77da      	strb	r2, [r3, #31]
            nextIcon.invalidate();
 800558e:	4b30      	ldr	r3, [pc, #192]	@ (8005650 <_ZN8MainView19selectActionHandlerEv+0x1b8>)
 8005590:	18e0      	adds	r0, r4, r3
 8005592:	f006 fe99 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005596:	b005      	add	sp, #20
 8005598:	bdf0      	pop	{r4, r5, r6, r7, pc}
        switch (imageAnimator.getCurrentAnimatorImage())
 800559a:	0028      	movs	r0, r5
 800559c:	f7ff fc33 	bl	8004e06 <_ZN13ImageAnimator23getCurrentAnimatorImageEv>
 80055a0:	2801      	cmp	r0, #1
 80055a2:	d01c      	beq.n	80055de <_ZN8MainView19selectActionHandlerEv+0x146>
 80055a4:	2802      	cmp	r0, #2
 80055a6:	d034      	beq.n	8005612 <_ZN8MainView19selectActionHandlerEv+0x17a>
 80055a8:	2800      	cmp	r0, #0
 80055aa:	d113      	bne.n	80055d4 <_ZN8MainView19selectActionHandlerEv+0x13c>
            if (!qrCodeAnimator.isAnimationRunning() && !qrCodeAnimator.isFadeAnimationRunning())
 80055ac:	0038      	movs	r0, r7
 80055ae:	f000 f9f8 	bl	80059a2 <_ZN14QRCodeAnimator18isAnimationRunningEv>
 80055b2:	2800      	cmp	r0, #0
 80055b4:	d1ef      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
 80055b6:	0038      	movs	r0, r7
 80055b8:	f000 f9fa 	bl	80059b0 <_ZN14QRCodeAnimator22isFadeAnimationRunningEv>
 80055bc:	2800      	cmp	r0, #0
 80055be:	d1ea      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
                imageAnimator.startFadeAnimation();
 80055c0:	0028      	movs	r0, r5
 80055c2:	f7ff fcb5 	bl	8004f30 <_ZN13ImageAnimator18startFadeAnimationEv>
                imageAnimator.setFadeAnimiationDelay(Constants::FADE_DURATION);
 80055c6:	0028      	movs	r0, r5
 80055c8:	2114      	movs	r1, #20
 80055ca:	f7ff fc20 	bl	8004e0e <_ZN13ImageAnimator22setFadeAnimiationDelayEt>
                qrCodeAnimator.startFadeAnimation();
 80055ce:	0038      	movs	r0, r7
 80055d0:	f000 fb12 	bl	8005bf8 <_ZN14QRCodeAnimator18startFadeAnimationEv>
        inactiveThreshold = MENU_THRESHOLD;
 80055d4:	23f4      	movs	r3, #244	@ 0xf4
 80055d6:	2296      	movs	r2, #150	@ 0x96
 80055d8:	011b      	lsls	r3, r3, #4
 80055da:	00d2      	lsls	r2, r2, #3
 80055dc:	e7a3      	b.n	8005526 <_ZN8MainView19selectActionHandlerEv+0x8e>
            if (!numberAnimator0.isAnimating() && !numberAnimator0.isFadeAnimationRunning())
 80055de:	0030      	movs	r0, r6
 80055e0:	f000 f977 	bl	80058d2 <_ZN14NumberAnimator11isAnimatingEv>
 80055e4:	2800      	cmp	r0, #0
 80055e6:	d1d6      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
 80055e8:	0030      	movs	r0, r6
 80055ea:	f000 f975 	bl	80058d8 <_ZN14NumberAnimator22isFadeAnimationRunningEv>
 80055ee:	2800      	cmp	r0, #0
 80055f0:	d1d1      	bne.n	8005596 <_ZN8MainView19selectActionHandlerEv+0xfe>
                imageAnimator.startFadeAnimation();
 80055f2:	0028      	movs	r0, r5
 80055f4:	f7ff fc9c 	bl	8004f30 <_ZN13ImageAnimator18startFadeAnimationEv>
                imageAnimator.setFadeAnimiationDelay(Constants::FADE_DURATION);
 80055f8:	2114      	movs	r1, #20
 80055fa:	0028      	movs	r0, r5
 80055fc:	f7ff fc07 	bl	8004e0e <_ZN13ImageAnimator22setFadeAnimiationDelayEt>
                numberAnimator0.startFadeAnimation();
 8005600:	0030      	movs	r0, r6
 8005602:	f000 f973 	bl	80058ec <_ZN14NumberAnimator18startFadeAnimationEv>
                numberAnimator1.startFadeAnimation();
 8005606:	0020      	movs	r0, r4
 8005608:	3099      	adds	r0, #153	@ 0x99
 800560a:	30ff      	adds	r0, #255	@ 0xff
 800560c:	f000 f96e 	bl	80058ec <_ZN14NumberAnimator18startFadeAnimationEv>
            break;
 8005610:	e7e0      	b.n	80055d4 <_ZN8MainView19selectActionHandlerEv+0x13c>
            imageAnimator.startFadeAnimation();
 8005612:	0028      	movs	r0, r5
 8005614:	f7ff fc8c 	bl	8004f30 <_ZN13ImageAnimator18startFadeAnimationEv>
            imageAnimator.setFadeAnimiationDelay(Constants::FADE_DURATION);
 8005618:	2114      	movs	r1, #20
 800561a:	0028      	movs	r0, r5
 800561c:	f7ff fbf7 	bl	8004e0e <_ZN13ImageAnimator22setFadeAnimiationDelayEt>
            circleAnimator.startFadeOutAnimation();
 8005620:	9802      	ldr	r0, [sp, #8]
 8005622:	f7ff fb09 	bl	8004c38 <_ZN14CircleAnimator21startFadeOutAnimationEv>
 8005626:	2201      	movs	r2, #1
 8005628:	4b08      	ldr	r3, [pc, #32]	@ (800564c <_ZN8MainView19selectActionHandlerEv+0x1b4>)
 800562a:	18e3      	adds	r3, r4, r3
 800562c:	77da      	strb	r2, [r3, #31]
            nextIcon.invalidate();
 800562e:	4b08      	ldr	r3, [pc, #32]	@ (8005650 <_ZN8MainView19selectActionHandlerEv+0x1b8>)
 8005630:	18e0      	adds	r0, r4, r3
 8005632:	f006 fe49 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
            break;
 8005636:	e7cd      	b.n	80055d4 <_ZN8MainView19selectActionHandlerEv+0x13c>
 8005638:	00000f3c 	.word	0x00000f3c
 800563c:	00000898 	.word	0x00000898
 8005640:	0800cb83 	.word	0x0800cb83
 8005644:	0800ca21 	.word	0x0800ca21
 8005648:	0800cc11 	.word	0x0800cc11
 800564c:	00000eda 	.word	0x00000eda
 8005650:	00000ed4 	.word	0x00000ed4

08005654 <_ZN8MainView14updateDemoNameEv>:
    switch (imageAnimator.getCurrentAnimatorImage())
 8005654:	4b11      	ldr	r3, [pc, #68]	@ (800569c <_ZN8MainView14updateDemoNameEv+0x48>)
{
 8005656:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005658:	0004      	movs	r4, r0
    switch (imageAnimator.getCurrentAnimatorImage())
 800565a:	18c0      	adds	r0, r0, r3
 800565c:	f7ff fbd3 	bl	8004e06 <_ZN13ImageAnimator23getCurrentAnimatorImageEv>
        demoNameText.setBitmap(BITMAP_TITLE_QR_ID);
 8005660:	23f0      	movs	r3, #240	@ 0xf0
 8005662:	011b      	lsls	r3, r3, #4
 8005664:	18e5      	adds	r5, r4, r3
    switch (imageAnimator.getCurrentAnimatorImage())
 8005666:	2801      	cmp	r0, #1
 8005668:	d011      	beq.n	800568e <_ZN8MainView14updateDemoNameEv+0x3a>
 800566a:	2802      	cmp	r0, #2
 800566c:	d012      	beq.n	8005694 <_ZN8MainView14updateDemoNameEv+0x40>
 800566e:	2800      	cmp	r0, #0
 8005670:	d105      	bne.n	800567e <_ZN8MainView14updateDemoNameEv+0x2a>
 8005672:	2318      	movs	r3, #24
 8005674:	a901      	add	r1, sp, #4
        demoNameText.setBitmap(BITMAP_TITLE_CIRCLE_ID);
 8005676:	0028      	movs	r0, r5
 8005678:	800b      	strh	r3, [r1, #0]
 800567a:	f003 fb2a 	bl	8008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800567e:	4b08      	ldr	r3, [pc, #32]	@ (80056a0 <_ZN8MainView14updateDemoNameEv+0x4c>)
    demoNameText.invalidate();
 8005680:	0028      	movs	r0, r5
 8005682:	18e4      	adds	r4, r4, r3
 8005684:	2301      	movs	r3, #1
 8005686:	77e3      	strb	r3, [r4, #31]
 8005688:	f006 fe1e 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800568c:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
 800568e:	2317      	movs	r3, #23
 8005690:	a901      	add	r1, sp, #4
 8005692:	e7f0      	b.n	8005676 <_ZN8MainView14updateDemoNameEv+0x22>
 8005694:	2316      	movs	r3, #22
 8005696:	a901      	add	r1, sp, #4
 8005698:	e7ed      	b.n	8005676 <_ZN8MainView14updateDemoNameEv+0x22>
 800569a:	46c0      	nop			@ (mov r8, r8)
 800569c:	00000898 	.word	0x00000898
 80056a0:	00000f06 	.word	0x00000f06

080056a4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80056a4:	2300      	movs	r3, #0
 80056a6:	6003      	str	r3, [r0, #0]
{

}
 80056a8:	4770      	bx	lr

080056aa <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80056aa:	4770      	bx	lr

080056ac <_ZN14NumberAnimatorD1Ev>:
 80056ac:	b510      	push	{r4, lr}
 80056ae:	0004      	movs	r4, r0
 80056b0:	4b02      	ldr	r3, [pc, #8]	@ (80056bc <_ZN14NumberAnimatorD1Ev+0x10>)
 80056b2:	6003      	str	r3, [r0, #0]
 80056b4:	f7fe fa90 	bl	8003bd8 <_ZN18NumberAnimatorBaseD1Ev>
 80056b8:	0020      	movs	r0, r4
 80056ba:	bd10      	pop	{r4, pc}
 80056bc:	08015560 	.word	0x08015560

080056c0 <_ZN14NumberAnimatorD0Ev>:
 80056c0:	b510      	push	{r4, lr}
 80056c2:	0004      	movs	r4, r0
 80056c4:	f7ff fff2 	bl	80056ac <_ZN14NumberAnimatorD1Ev>
 80056c8:	2180      	movs	r1, #128	@ 0x80
 80056ca:	0020      	movs	r0, r4
 80056cc:	0049      	lsls	r1, r1, #1
 80056ce:	f00c fa1a 	bl	8011b06 <_ZdlPvj>
 80056d2:	0020      	movs	r0, r4
 80056d4:	bd10      	pop	{r4, pc}
	...

080056d8 <_ZN14NumberAnimator15handleTickEventEv>:
    Application::getInstance()->registerTimerWidget(this);
}

void NumberAnimator::handleTickEvent()
{
    tickCounter++;
 80056d8:	0002      	movs	r2, r0
{
 80056da:	b5f0      	push	{r4, r5, r6, r7, lr}
    tickCounter++;
 80056dc:	32e0      	adds	r2, #224	@ 0xe0
 80056de:	6813      	ldr	r3, [r2, #0]
{
 80056e0:	0004      	movs	r4, r0
    tickCounter++;
 80056e2:	3301      	adds	r3, #1
 80056e4:	6013      	str	r3, [r2, #0]

    // Mechanism to only update the widget in either even or odd ticks. This is used to
    // ensure that only one of two NumberAnimators will update for a given tick
    if ((animateOnEven && (tickCounter % 2 == 1)) || (!animateOnEven && (tickCounter % 2 == 0)))
 80056e6:	3204      	adds	r2, #4
 80056e8:	7812      	ldrb	r2, [r2, #0]
{
 80056ea:	b085      	sub	sp, #20
    if ((animateOnEven && (tickCounter % 2 == 1)) || (!animateOnEven && (tickCounter % 2 == 0)))
 80056ec:	2a00      	cmp	r2, #0
 80056ee:	d00b      	beq.n	8005708 <_ZN14NumberAnimator15handleTickEventEv+0x30>
 80056f0:	4a42      	ldr	r2, [pc, #264]	@ (80057fc <_ZN14NumberAnimator15handleTickEventEv+0x124>)
 80056f2:	4013      	ands	r3, r2
 80056f4:	d504      	bpl.n	8005700 <_ZN14NumberAnimator15handleTickEventEv+0x28>
 80056f6:	2202      	movs	r2, #2
 80056f8:	3b01      	subs	r3, #1
 80056fa:	4252      	negs	r2, r2
 80056fc:	4313      	orrs	r3, r2
 80056fe:	3301      	adds	r3, #1
 8005700:	2b01      	cmp	r3, #1
 8005702:	d103      	bne.n	800570c <_ZN14NumberAnimator15handleTickEventEv+0x34>
                moveAnimationCounter = 0;
                Application::getInstance()->unregisterTimerWidget(this);
            }
        }
    }
}
 8005704:	b005      	add	sp, #20
 8005706:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if ((animateOnEven && (tickCounter % 2 == 1)) || (!animateOnEven && (tickCounter % 2 == 0)))
 8005708:	07db      	lsls	r3, r3, #31
 800570a:	d5fb      	bpl.n	8005704 <_ZN14NumberAnimator15handleTickEventEv+0x2c>
    if (moveAnimationRunning)
 800570c:	0023      	movs	r3, r4
 800570e:	33e6      	adds	r3, #230	@ 0xe6
 8005710:	781b      	ldrb	r3, [r3, #0]
 8005712:	2b00      	cmp	r3, #0
 8005714:	d0f6      	beq.n	8005704 <_ZN14NumberAnimator15handleTickEventEv+0x2c>
        moveAnimationCounter++;
 8005716:	0023      	movs	r3, r4
 8005718:	33e8      	adds	r3, #232	@ 0xe8
 800571a:	881d      	ldrh	r5, [r3, #0]
        if (moveAnimationCounter >= moveAnimationDelay)
 800571c:	8859      	ldrh	r1, [r3, #2]
        moveAnimationCounter++;
 800571e:	3501      	adds	r5, #1
 8005720:	b2ad      	uxth	r5, r5
 8005722:	801d      	strh	r5, [r3, #0]
        if (moveAnimationCounter >= moveAnimationDelay)
 8005724:	3302      	adds	r3, #2
 8005726:	428d      	cmp	r5, r1
 8005728:	d3ec      	bcc.n	8005704 <_ZN14NumberAnimator15handleTickEventEv+0x2c>
        return rect.y;
 800572a:	3b66      	subs	r3, #102	@ 0x66
            if (numberImage1.getY() < 0)
 800572c:	2206      	movs	r2, #6
 800572e:	5e9b      	ldrsh	r3, [r3, r2]
 8005730:	2b00      	cmp	r3, #0
 8005732:	da0a      	bge.n	800574a <_ZN14NumberAnimator15handleTickEventEv+0x72>
                moveAnimationStartY += numberImage0.getHeight();
 8005734:	0020      	movs	r0, r4
 8005736:	30f0      	adds	r0, #240	@ 0xf0
 8005738:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800573a:	8802      	ldrh	r2, [r0, #0]
 800573c:	189a      	adds	r2, r3, r2
 800573e:	8002      	strh	r2, [r0, #0]
                moveAnimationEndY += numberImage0.getHeight();
 8005740:	0022      	movs	r2, r4
 8005742:	32f4      	adds	r2, #244	@ 0xf4
 8005744:	8810      	ldrh	r0, [r2, #0]
 8005746:	181b      	adds	r3, r3, r0
 8005748:	8013      	strh	r3, [r2, #0]
            int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800574a:	0023      	movs	r3, r4
 800574c:	1a6d      	subs	r5, r5, r1
 800574e:	0022      	movs	r2, r4
 8005750:	0021      	movs	r1, r4
 8005752:	33ec      	adds	r3, #236	@ 0xec
 8005754:	9301      	str	r3, [sp, #4]
 8005756:	31ee      	adds	r1, #238	@ 0xee
 8005758:	32f2      	adds	r2, #242	@ 0xf2
 800575a:	881b      	ldrh	r3, [r3, #0]
 800575c:	8812      	ldrh	r2, [r2, #0]
 800575e:	9102      	str	r1, [sp, #8]
 8005760:	8809      	ldrh	r1, [r1, #0]
 8005762:	b2ad      	uxth	r5, r5
 8005764:	1a52      	subs	r2, r2, r1
 8005766:	0021      	movs	r1, r4
 8005768:	31f8      	adds	r1, #248	@ 0xf8
 800576a:	680e      	ldr	r6, [r1, #0]
 800576c:	0028      	movs	r0, r5
 800576e:	2100      	movs	r1, #0
 8005770:	b212      	sxth	r2, r2
 8005772:	47b0      	blx	r6
            int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8005774:	0022      	movs	r2, r4
 8005776:	0026      	movs	r6, r4
            int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8005778:	9003      	str	r0, [sp, #12]
            int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800577a:	36f0      	adds	r6, #240	@ 0xf0
 800577c:	32f4      	adds	r2, #244	@ 0xf4
 800577e:	8831      	ldrh	r1, [r6, #0]
 8005780:	8812      	ldrh	r2, [r2, #0]
 8005782:	9b01      	ldr	r3, [sp, #4]
 8005784:	1a52      	subs	r2, r2, r1
 8005786:	0021      	movs	r1, r4
 8005788:	31fc      	adds	r1, #252	@ 0xfc
 800578a:	680f      	ldr	r7, [r1, #0]
 800578c:	0028      	movs	r0, r5
 800578e:	2100      	movs	r1, #0
 8005790:	881b      	ldrh	r3, [r3, #0]
 8005792:	b212      	sxth	r2, r2
 8005794:	47b8      	blx	r7
            numberImage0.moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8005796:	466b      	mov	r3, sp
 8005798:	b287      	uxth	r7, r0
 800579a:	0020      	movs	r0, r4
 800579c:	899d      	ldrh	r5, [r3, #12]
 800579e:	9b02      	ldr	r3, [sp, #8]
 80057a0:	8832      	ldrh	r2, [r6, #0]
 80057a2:	8819      	ldrh	r1, [r3, #0]
 80057a4:	18ba      	adds	r2, r7, r2
 80057a6:	1869      	adds	r1, r5, r1
 80057a8:	b212      	sxth	r2, r2
 80057aa:	b209      	sxth	r1, r1
 80057ac:	302c      	adds	r0, #44	@ 0x2c
 80057ae:	f7fd fb57 	bl	8002e60 <_ZN8touchgfx8Drawable6moveToEss>
            numberImage1.moveTo(moveAnimationStartX + deltaX, numberImage0.getHeight() + moveAnimationStartY + deltaY);
 80057b2:	0020      	movs	r0, r4
 80057b4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80057b6:	8832      	ldrh	r2, [r6, #0]
 80057b8:	3084      	adds	r0, #132	@ 0x84
 80057ba:	189a      	adds	r2, r3, r2
 80057bc:	9b02      	ldr	r3, [sp, #8]
 80057be:	18ba      	adds	r2, r7, r2
 80057c0:	8819      	ldrh	r1, [r3, #0]
 80057c2:	b212      	sxth	r2, r2
 80057c4:	1869      	adds	r1, r5, r1
 80057c6:	b209      	sxth	r1, r1
 80057c8:	f7fd fb4a 	bl	8002e60 <_ZN8touchgfx8Drawable6moveToEss>
            if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 80057cc:	0023      	movs	r3, r4
 80057ce:	0022      	movs	r2, r4
 80057d0:	9801      	ldr	r0, [sp, #4]
 80057d2:	33ea      	adds	r3, #234	@ 0xea
 80057d4:	881b      	ldrh	r3, [r3, #0]
 80057d6:	8800      	ldrh	r0, [r0, #0]
 80057d8:	32e8      	adds	r2, #232	@ 0xe8
 80057da:	8811      	ldrh	r1, [r2, #0]
 80057dc:	181b      	adds	r3, r3, r0
 80057de:	4299      	cmp	r1, r3
 80057e0:	d200      	bcs.n	80057e4 <_ZN14NumberAnimator15handleTickEventEv+0x10c>
 80057e2:	e78f      	b.n	8005704 <_ZN14NumberAnimator15handleTickEventEv+0x2c>
                moveAnimationRunning = false;
 80057e4:	0021      	movs	r1, r4
 80057e6:	2300      	movs	r3, #0
 80057e8:	31e6      	adds	r1, #230	@ 0xe6
 80057ea:	700b      	strb	r3, [r1, #0]
                moveAnimationCounter = 0;
 80057ec:	8013      	strh	r3, [r2, #0]
                Application::getInstance()->unregisterTimerWidget(this);
 80057ee:	f005 fbed 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 80057f2:	0021      	movs	r1, r4
 80057f4:	3004      	adds	r0, #4
 80057f6:	f005 fc0e 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    }
 80057fa:	e783      	b.n	8005704 <_ZN14NumberAnimator15handleTickEventEv+0x2c>
 80057fc:	80000001 	.word	0x80000001

08005800 <_ZN14NumberAnimatorC1Ev>:
NumberAnimator::NumberAnimator() :
 8005800:	b510      	push	{r4, lr}
 8005802:	0004      	movs	r4, r0
    moveAnimationYEquation()
 8005804:	f7fe f9f2 	bl	8003bec <_ZN18NumberAnimatorBaseC1Ev>
 8005808:	4b09      	ldr	r3, [pc, #36]	@ (8005830 <_ZN14NumberAnimatorC1Ev+0x30>)
    currentNumber(0),
 800580a:	0022      	movs	r2, r4
    moveAnimationYEquation()
 800580c:	6023      	str	r3, [r4, #0]
    animateOnEven(true),
 800580e:	2101      	movs	r1, #1
    currentNumber(0),
 8005810:	2300      	movs	r3, #0
 8005812:	32dc      	adds	r2, #220	@ 0xdc
 8005814:	6013      	str	r3, [r2, #0]
    tickCounter(0),
 8005816:	6053      	str	r3, [r2, #4]
    animateOnEven(true),
 8005818:	8111      	strh	r1, [r2, #8]
    moveAnimationRunning(false),
 800581a:	7293      	strb	r3, [r2, #10]
}
 800581c:	0020      	movs	r0, r4
    moveAnimationCounter(0),
 800581e:	320c      	adds	r2, #12
 8005820:	6013      	str	r3, [r2, #0]
    moveAnimationDuration(0),
 8005822:	6053      	str	r3, [r2, #4]
    moveAnimationStartY(0),
 8005824:	6093      	str	r3, [r2, #8]
    moveAnimationEndY(0),
 8005826:	8193      	strh	r3, [r2, #12]
    moveAnimationXEquation(),
 8005828:	6113      	str	r3, [r2, #16]
    moveAnimationYEquation()
 800582a:	6153      	str	r3, [r2, #20]
}
 800582c:	bd10      	pop	{r4, pc}
 800582e:	46c0      	nop			@ (mov r8, r8)
 8005830:	08015560 	.word	0x08015560

08005834 <_ZN14NumberAnimator18startMoveAnimationEsstPFstsstES1_>:

void NumberAnimator::startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
{
 8005834:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    if (!moveAnimationRunning)
 8005836:	0007      	movs	r7, r0
{
 8005838:	9201      	str	r2, [sp, #4]
    if (!moveAnimationRunning)
 800583a:	37e6      	adds	r7, #230	@ 0xe6
{
 800583c:	001d      	movs	r5, r3
    if (!moveAnimationRunning)
 800583e:	783b      	ldrb	r3, [r7, #0]
{
 8005840:	0004      	movs	r4, r0
 8005842:	000e      	movs	r6, r1
    if (!moveAnimationRunning)
 8005844:	2b00      	cmp	r3, #0
 8005846:	d105      	bne.n	8005854 <_ZN14NumberAnimator18startMoveAnimationEsstPFstsstES1_+0x20>
    {
        Application::getInstance()->registerTimerWidget(this);
 8005848:	f005 fbc0 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800584c:	0021      	movs	r1, r4
 800584e:	3004      	adds	r0, #4
 8005850:	f005 fca0 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
    }

    moveAnimationCounter = 0;
 8005854:	0023      	movs	r3, r4
 8005856:	2200      	movs	r2, #0
 8005858:	33e8      	adds	r3, #232	@ 0xe8
 800585a:	801a      	strh	r2, [r3, #0]
    moveAnimationStartX = numberImage0.getX();
 800585c:	8e22      	ldrh	r2, [r4, #48]	@ 0x30
    moveAnimationStartY = numberImage0.getY();
    moveAnimationEndX = endX;
    moveAnimationEndY = endY;
    moveAnimationDuration = duration;
 800585e:	3304      	adds	r3, #4
    moveAnimationStartX = numberImage0.getX();
 8005860:	805a      	strh	r2, [r3, #2]
    moveAnimationStartY = numberImage0.getY();
 8005862:	8e62      	ldrh	r2, [r4, #50]	@ 0x32
    moveAnimationEndX = endX;
 8005864:	80de      	strh	r6, [r3, #6]
    moveAnimationStartY = numberImage0.getY();
 8005866:	809a      	strh	r2, [r3, #4]
    moveAnimationEndY = endY;
 8005868:	9a01      	ldr	r2, [sp, #4]
 800586a:	811a      	strh	r2, [r3, #8]
    moveAnimationXEquation = xProgressionEquation;
 800586c:	9a08      	ldr	r2, [sp, #32]
    moveAnimationDuration = duration;
 800586e:	801d      	strh	r5, [r3, #0]
    moveAnimationXEquation = xProgressionEquation;
 8005870:	60da      	str	r2, [r3, #12]
    moveAnimationYEquation = yProgressionEquation;
 8005872:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005874:	611a      	str	r2, [r3, #16]

    moveAnimationRunning = true;
 8005876:	2301      	movs	r3, #1
 8005878:	703b      	strb	r3, [r7, #0]

    if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800587a:	0023      	movs	r3, r4
 800587c:	33ea      	adds	r3, #234	@ 0xea
 800587e:	881b      	ldrh	r3, [r3, #0]
 8005880:	431d      	orrs	r5, r3
 8005882:	d103      	bne.n	800588c <_ZN14NumberAnimator18startMoveAnimationEsstPFstsstES1_+0x58>
    {
        handleTickEvent(); // Set end position and shut down
 8005884:	6823      	ldr	r3, [r4, #0]
 8005886:	0020      	movs	r0, r4
 8005888:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800588a:	4798      	blx	r3
    }
}
 800588c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

0800588e <_ZN14NumberAnimator17setAnimationDelayEt>:

void NumberAnimator::setAnimationDelay(uint16_t delay)
{
    moveAnimationDelay = delay;
 800588e:	30ea      	adds	r0, #234	@ 0xea
 8005890:	8001      	strh	r1, [r0, #0]
}
 8005892:	4770      	bx	lr

08005894 <_ZN14NumberAnimator14animateNumbersEitPFstsstES1_>:
    int numbersToMove = (number > currentNumber) ? number - currentNumber : 10 + number - currentNumber;
    animateNumbers(numbersToMove, duration, xProgressionEquation, yProgressionEquation);
}

void NumberAnimator::animateNumbers(int number, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
{
 8005894:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005896:	0004      	movs	r4, r0
 8005898:	0010      	movs	r0, r2
    if (!moveAnimationRunning)
 800589a:	0022      	movs	r2, r4
 800589c:	32e6      	adds	r2, #230	@ 0xe6
 800589e:	7812      	ldrb	r2, [r2, #0]
{
 80058a0:	000d      	movs	r5, r1
    if (!moveAnimationRunning)
 80058a2:	2a00      	cmp	r2, #0
 80058a4:	d114      	bne.n	80058d0 <_ZN14NumberAnimator14animateNumbersEitPFstsstES1_+0x3c>
    {
        startMoveAnimation(numberImage0.getX(), numberImage0.getY() - (number * 153), duration, xProgressionEquation, yProgressionEquation);
 80058a6:	3a99      	subs	r2, #153	@ 0x99
 80058a8:	434a      	muls	r2, r1
 80058aa:	8e61      	ldrh	r1, [r4, #50]	@ 0x32
 80058ac:	188a      	adds	r2, r1, r2
 80058ae:	2630      	movs	r6, #48	@ 0x30
 80058b0:	5fa1      	ldrsh	r1, [r4, r6]
 80058b2:	9e06      	ldr	r6, [sp, #24]
 80058b4:	b212      	sxth	r2, r2
 80058b6:	9300      	str	r3, [sp, #0]
 80058b8:	9601      	str	r6, [sp, #4]
 80058ba:	0003      	movs	r3, r0
 80058bc:	0020      	movs	r0, r4
        currentNumber = (currentNumber + number) % 10;
 80058be:	34dc      	adds	r4, #220	@ 0xdc
        startMoveAnimation(numberImage0.getX(), numberImage0.getY() - (number * 153), duration, xProgressionEquation, yProgressionEquation);
 80058c0:	f7ff ffb8 	bl	8005834 <_ZN14NumberAnimator18startMoveAnimationEsstPFstsstES1_>
        currentNumber = (currentNumber + number) % 10;
 80058c4:	6820      	ldr	r0, [r4, #0]
 80058c6:	210a      	movs	r1, #10
 80058c8:	1828      	adds	r0, r5, r0
 80058ca:	f7fa fdbb 	bl	8000444 <__aeabi_idivmod>
 80058ce:	6021      	str	r1, [r4, #0]
    }
}
 80058d0:	bd73      	pop	{r0, r1, r4, r5, r6, pc}

080058d2 <_ZN14NumberAnimator11isAnimatingEv>:
    return currentNumber;
}

bool NumberAnimator::isAnimating()
{
    return moveAnimationRunning;
 80058d2:	30e6      	adds	r0, #230	@ 0xe6
 80058d4:	7800      	ldrb	r0, [r0, #0]
}
 80058d6:	4770      	bx	lr

080058d8 <_ZN14NumberAnimator22isFadeAnimationRunningEv>:
 80058d8:	30c8      	adds	r0, #200	@ 0xc8
    }
}

bool NumberAnimator::isFadeAnimationRunning()
{
    return numberImage1.isFadeAnimationRunning();
 80058da:	7800      	ldrb	r0, [r0, #0]
}
 80058dc:	4770      	bx	lr

080058de <_ZN14NumberAnimator21getAnimateOnEveryTickEv>:

bool NumberAnimator::getAnimateOnEveryTick()
{
    return animateOnEveryTick;
 80058de:	30e5      	adds	r0, #229	@ 0xe5
 80058e0:	7800      	ldrb	r0, [r0, #0]
}
 80058e2:	4770      	bx	lr

080058e4 <_ZN14NumberAnimator20setAnimateOnEvenTickEb>:

void NumberAnimator::setAnimateOnEvenTick(bool even)
{
    animateOnEven = even;
 80058e4:	30e4      	adds	r0, #228	@ 0xe4
 80058e6:	7001      	strb	r1, [r0, #0]
}
 80058e8:	4770      	bx	lr
	...

080058ec <_ZN14NumberAnimator18startFadeAnimationEv>:
 80058ec:	0003      	movs	r3, r0
{
 80058ee:	b570      	push	{r4, r5, r6, lr}
 80058f0:	33c8      	adds	r3, #200	@ 0xc8
    if (!isFadeAnimationRunning() && !isAnimating())
 80058f2:	781b      	ldrb	r3, [r3, #0]
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d11d      	bne.n	8005934 <_ZN14NumberAnimator18startFadeAnimationEv+0x48>
    return moveAnimationRunning;
 80058f8:	0003      	movs	r3, r0
 80058fa:	33e6      	adds	r3, #230	@ 0xe6
    if (!isFadeAnimationRunning() && !isAnimating())
 80058fc:	781c      	ldrb	r4, [r3, #0]
 80058fe:	2c00      	cmp	r4, #0
 8005900:	d118      	bne.n	8005934 <_ZN14NumberAnimator18startFadeAnimationEv+0x48>
        return alpha;
 8005902:	3b3a      	subs	r3, #58	@ 0x3a
        const uint8_t END_ALPHA = !numberImage1.getAlpha() ? 255 : 0;
 8005904:	781b      	ldrb	r3, [r3, #0]
 8005906:	2b00      	cmp	r3, #0
 8005908:	d015      	beq.n	8005936 <_ZN14NumberAnimator18startFadeAnimationEv+0x4a>
        const uint8_t FADE_DELAY = END_ALPHA == 255 ? Constants::FADE_DURATION : 0;
 800590a:	0023      	movs	r3, r4
        fadeAnimationDelay = delay;
 800590c:	0002      	movs	r2, r0
 800590e:	0005      	movs	r5, r0
        numberImage0.startFadeAnimation(END_ALPHA, Constants::FADE_DURATION);
 8005910:	4e0a      	ldr	r6, [pc, #40]	@ (800593c <_ZN14NumberAnimator18startFadeAnimationEv+0x50>)
 8005912:	3274      	adds	r2, #116	@ 0x74
 8005914:	8013      	strh	r3, [r2, #0]
 8005916:	3258      	adds	r2, #88	@ 0x58
 8005918:	8013      	strh	r3, [r2, #0]
 800591a:	0021      	movs	r1, r4
 800591c:	0033      	movs	r3, r6
 800591e:	2214      	movs	r2, #20
 8005920:	302c      	adds	r0, #44	@ 0x2c
 8005922:	3584      	adds	r5, #132	@ 0x84
 8005924:	f7ff f86a 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
        numberImage1.startFadeAnimation(END_ALPHA, Constants::FADE_DURATION);
 8005928:	0033      	movs	r3, r6
 800592a:	2214      	movs	r2, #20
 800592c:	0021      	movs	r1, r4
 800592e:	0028      	movs	r0, r5
 8005930:	f7ff f864 	bl	80049fc <_ZN8touchgfx12FadeAnimatorINS_12MoveAnimatorINS_5ImageEEEE18startFadeAnimationEhtPFstsstE>
}
 8005934:	bd70      	pop	{r4, r5, r6, pc}
        const uint8_t END_ALPHA = !numberImage1.getAlpha() ? 255 : 0;
 8005936:	24ff      	movs	r4, #255	@ 0xff
        const uint8_t FADE_DELAY = END_ALPHA == 255 ? Constants::FADE_DURATION : 0;
 8005938:	2314      	movs	r3, #20
 800593a:	e7e7      	b.n	800590c <_ZN14NumberAnimator18startFadeAnimationEv+0x20>
 800593c:	0800cccd 	.word	0x0800cccd

08005940 <_ZN14NumberAnimator10initializeEv>:
{
 8005940:	b510      	push	{r4, lr}
 8005942:	0004      	movs	r4, r0
    NumberAnimatorBase::initialize();
 8005944:	f7fe f949 	bl	8003bda <_ZN18NumberAnimatorBase10initializeEv>
    Application::getInstance()->registerTimerWidget(this);
 8005948:	f005 fb40 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 800594c:	0021      	movs	r1, r4
 800594e:	3004      	adds	r0, #4
 8005950:	f005 fc20 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
}
 8005954:	bd10      	pop	{r4, pc}
	...

08005958 <_ZN14QRCodeAnimatorD1Ev>:
 8005958:	b510      	push	{r4, lr}
 800595a:	0004      	movs	r4, r0
 800595c:	4b02      	ldr	r3, [pc, #8]	@ (8005968 <_ZN14QRCodeAnimatorD1Ev+0x10>)
 800595e:	6003      	str	r3, [r0, #0]
 8005960:	f7fe f9c9 	bl	8003cf6 <_ZN18QRCodeAnimatorBaseD1Ev>
 8005964:	0020      	movs	r0, r4
 8005966:	bd10      	pop	{r4, pc}
 8005968:	080156ac 	.word	0x080156ac

0800596c <_ZN14QRCodeAnimatorD0Ev>:
 800596c:	b510      	push	{r4, lr}
 800596e:	0004      	movs	r4, r0
 8005970:	f7ff fff2 	bl	8005958 <_ZN14QRCodeAnimatorD1Ev>
 8005974:	21c0      	movs	r1, #192	@ 0xc0
 8005976:	0020      	movs	r0, r4
 8005978:	00c9      	lsls	r1, r1, #3
 800597a:	f00c f8c4 	bl	8011b06 <_ZdlPvj>
 800597e:	0020      	movs	r0, r4
 8005980:	bd10      	pop	{r4, pc}

08005982 <_ZN14QRCodeAnimator15animateToNextQREv>:
    }
}

bool QRCodeAnimator::isAnimationRunning()
{
    return animationTick >= 0;
 8005982:	23be      	movs	r3, #190	@ 0xbe
 8005984:	00db      	lsls	r3, r3, #3
    if (!isAnimationRunning())
 8005986:	58c2      	ldr	r2, [r0, r3]
{
 8005988:	b510      	push	{r4, lr}
 800598a:	0004      	movs	r4, r0
    if (!isAnimationRunning())
 800598c:	2a00      	cmp	r2, #0
 800598e:	da07      	bge.n	80059a0 <_ZN14QRCodeAnimator15animateToNextQREv+0x1e>
        animationTick = 0;
 8005990:	2200      	movs	r2, #0
 8005992:	50c2      	str	r2, [r0, r3]
        Application::getInstance()->registerTimerWidget(this);
 8005994:	f005 fb1a 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 8005998:	0021      	movs	r1, r4
 800599a:	3004      	adds	r0, #4
 800599c:	f005 fbfa 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
}
 80059a0:	bd10      	pop	{r4, pc}

080059a2 <_ZN14QRCodeAnimator18isAnimationRunningEv>:
    return animationTick >= 0;
 80059a2:	23be      	movs	r3, #190	@ 0xbe
 80059a4:	00db      	lsls	r3, r3, #3
 80059a6:	58c0      	ldr	r0, [r0, r3]
 80059a8:	43c0      	mvns	r0, r0
 80059aa:	0fc0      	lsrs	r0, r0, #31
}
 80059ac:	4770      	bx	lr
	...

080059b0 <_ZN14QRCodeAnimator22isFadeAnimationRunningEv>:
        return fadeAnimationRunning;
 80059b0:	4b01      	ldr	r3, [pc, #4]	@ (80059b8 <_ZN14QRCodeAnimator22isFadeAnimationRunningEv+0x8>)
 80059b2:	18c0      	adds	r0, r0, r3
    }
}

bool QRCodeAnimator::isFadeAnimationRunning()
{
    return qrCodeMain.isFadeAnimationRunning();
 80059b4:	7800      	ldrb	r0, [r0, #0]
}
 80059b6:	4770      	bx	lr
 80059b8:	00000266 	.word	0x00000266

080059bc <_ZN14QRCodeAnimator28updateCurrentStringToDisplayEv>:

void QRCodeAnimator::updateCurrentStringToDisplay()
{
 80059bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    currentStringDisplaying = (currentStringDisplaying + 1) % numberOfUrls;
 80059be:	27bf      	movs	r7, #191	@ 0xbf
 80059c0:	00ff      	lsls	r7, r7, #3
{
 80059c2:	0004      	movs	r4, r0
    currentStringDisplaying = (currentStringDisplaying + 1) % numberOfUrls;
 80059c4:	59c0      	ldr	r0, [r0, r7]
 80059c6:	2103      	movs	r1, #3
 80059c8:	3001      	adds	r0, #1
 80059ca:	f7fa fd3b 	bl	8000444 <__aeabi_idivmod>
 80059ce:	000d      	movs	r5, r1
 80059d0:	51e1      	str	r1, [r4, r7]
    nextStringToDisplay = (currentStringDisplaying + 1) % numberOfUrls;
 80059d2:	1c48      	adds	r0, r1, #1
 80059d4:	2103      	movs	r1, #3
 80059d6:	f7fa fd35 	bl	8000444 <__aeabi_idivmod>

    qrCodeMain.convertStringToQRCode(urls[currentStringDisplaying]);
 80059da:	2384      	movs	r3, #132	@ 0x84
 80059dc:	3579      	adds	r5, #121	@ 0x79
 80059de:	35ff      	adds	r5, #255	@ 0xff
    nextStringToDisplay = (currentStringDisplaying + 1) % numberOfUrls;
 80059e0:	4e15      	ldr	r6, [pc, #84]	@ (8005a38 <_ZN14QRCodeAnimator28updateCurrentStringToDisplayEv+0x7c>)
    qrCodeMain.convertStringToQRCode(urls[currentStringDisplaying]);
 80059e2:	009b      	lsls	r3, r3, #2
 80059e4:	00ad      	lsls	r5, r5, #2
 80059e6:	18e3      	adds	r3, r4, r3
 80059e8:	1965      	adds	r5, r4, r5
    nextStringToDisplay = (currentStringDisplaying + 1) % numberOfUrls;
 80059ea:	51a1      	str	r1, [r4, r6]
    qrCodeMain.convertStringToQRCode(urls[currentStringDisplaying]);
 80059ec:	0018      	movs	r0, r3
 80059ee:	6869      	ldr	r1, [r5, #4]
 80059f0:	9301      	str	r3, [sp, #4]
 80059f2:	f003 fcc1 	bl	8009378 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc>
    qrCodeAnimationOverlay.convertStringToQRCode(urls[nextStringToDisplay]);
 80059f6:	59a3      	ldr	r3, [r4, r6]
 80059f8:	4a10      	ldr	r2, [pc, #64]	@ (8005a3c <_ZN14QRCodeAnimator28updateCurrentStringToDisplayEv+0x80>)
 80059fa:	3379      	adds	r3, #121	@ 0x79
 80059fc:	33ff      	adds	r3, #255	@ 0xff
 80059fe:	009b      	lsls	r3, r3, #2
 8005a00:	18e3      	adds	r3, r4, r3
 8005a02:	6859      	ldr	r1, [r3, #4]
 8005a04:	18a0      	adds	r0, r4, r2
 8005a06:	f003 fcb7 	bl	8009378 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc>

    Unicode::snprintf(qrCodeMainTextBuffer, QRCODEMAINTEXT_SIZE, "%i", currentStringDisplaying + 1);
 8005a0a:	4d0d      	ldr	r5, [pc, #52]	@ (8005a40 <_ZN14QRCodeAnimator28updateCurrentStringToDisplayEv+0x84>)
 8005a0c:	59e3      	ldr	r3, [r4, r7]
 8005a0e:	4a0d      	ldr	r2, [pc, #52]	@ (8005a44 <_ZN14QRCodeAnimator28updateCurrentStringToDisplayEv+0x88>)
 8005a10:	210a      	movs	r1, #10
 8005a12:	18a0      	adds	r0, r4, r2
 8005a14:	3301      	adds	r3, #1
 8005a16:	002a      	movs	r2, r5
 8005a18:	f008 fd85 	bl	800e526 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(qrCodeAnimationOverlayTextBuffer, QRCODEANIMATIONOVERLAYTEXT_SIZE, "%i", nextStringToDisplay + 1);
 8005a1c:	22ba      	movs	r2, #186	@ 0xba
 8005a1e:	59a3      	ldr	r3, [r4, r6]
 8005a20:	00d2      	lsls	r2, r2, #3
 8005a22:	210a      	movs	r1, #10
 8005a24:	3301      	adds	r3, #1
 8005a26:	18a0      	adds	r0, r4, r2
 8005a28:	002a      	movs	r2, r5
 8005a2a:	f008 fd7c 	bl	800e526 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

    qrCodeMain.invalidate();
 8005a2e:	9801      	ldr	r0, [sp, #4]
 8005a30:	f006 fc4a 	bl	800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005a34:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8005a36:	46c0      	nop			@ (mov r8, r8)
 8005a38:	000005fc 	.word	0x000005fc
 8005a3c:	000004ec 	.word	0x000004ec
 8005a40:	080155ec 	.word	0x080155ec
 8005a44:	000005bc 	.word	0x000005bc

08005a48 <_ZN14QRCodeAnimatorC1Ev>:
QRCodeAnimator::QRCodeAnimator()
 8005a48:	b510      	push	{r4, lr}
 8005a4a:	0004      	movs	r4, r0
 8005a4c:	f7fe fa76 	bl	8003f3c <_ZN18QRCodeAnimatorBaseC1Ev>
 8005a50:	4b0e      	ldr	r3, [pc, #56]	@ (8005a8c <_ZN14QRCodeAnimatorC1Ev+0x44>)
    animationTick = -1;
 8005a52:	2201      	movs	r2, #1
QRCodeAnimator::QRCodeAnimator()
 8005a54:	6023      	str	r3, [r4, #0]
    animationTick = -1;
 8005a56:	23be      	movs	r3, #190	@ 0xbe
    animationDuration = 30;
 8005a58:	211e      	movs	r1, #30
    animationTick = -1;
 8005a5a:	4252      	negs	r2, r2
 8005a5c:	00db      	lsls	r3, r3, #3
 8005a5e:	50e2      	str	r2, [r4, r3]
    animationDuration = 30;
 8005a60:	4b0b      	ldr	r3, [pc, #44]	@ (8005a90 <_ZN14QRCodeAnimatorC1Ev+0x48>)
    updateCurrentStringToDisplay();
 8005a62:	0020      	movs	r0, r4
    animationDuration = 30;
 8005a64:	50e1      	str	r1, [r4, r3]
    urls[0] = "https://support.touchgfx.com/academy/academy-introduction";
 8005a66:	4b0b      	ldr	r3, [pc, #44]	@ (8005a94 <_ZN14QRCodeAnimatorC1Ev+0x4c>)
 8005a68:	490b      	ldr	r1, [pc, #44]	@ (8005a98 <_ZN14QRCodeAnimatorC1Ev+0x50>)
 8005a6a:	5063      	str	r3, [r4, r1]
    urls[1] = "https://support.touchgfx.com/academy/category/tutorials";
 8005a6c:	4b0b      	ldr	r3, [pc, #44]	@ (8005a9c <_ZN14QRCodeAnimatorC1Ev+0x54>)
 8005a6e:	3104      	adds	r1, #4
 8005a70:	5063      	str	r3, [r4, r1]
    urls[2] = "https://support.touchgfx.com/academy/how-to/how-to-introduction";
 8005a72:	4b0b      	ldr	r3, [pc, #44]	@ (8005aa0 <_ZN14QRCodeAnimatorC1Ev+0x58>)
 8005a74:	490b      	ldr	r1, [pc, #44]	@ (8005aa4 <_ZN14QRCodeAnimatorC1Ev+0x5c>)
 8005a76:	5063      	str	r3, [r4, r1]
    currentStringDisplaying = -1;
 8005a78:	23bf      	movs	r3, #191	@ 0xbf
 8005a7a:	00db      	lsls	r3, r3, #3
 8005a7c:	50e2      	str	r2, [r4, r3]
    nextStringToDisplay = 0;
 8005a7e:	2200      	movs	r2, #0
 8005a80:	4b09      	ldr	r3, [pc, #36]	@ (8005aa8 <_ZN14QRCodeAnimatorC1Ev+0x60>)
 8005a82:	50e2      	str	r2, [r4, r3]
    updateCurrentStringToDisplay();
 8005a84:	f7ff ff9a 	bl	80059bc <_ZN14QRCodeAnimator28updateCurrentStringToDisplayEv>
}
 8005a88:	0020      	movs	r0, r4
 8005a8a:	bd10      	pop	{r4, pc}
 8005a8c:	080156ac 	.word	0x080156ac
 8005a90:	000005f4 	.word	0x000005f4
 8005a94:	080155ef 	.word	0x080155ef
 8005a98:	000005e4 	.word	0x000005e4
 8005a9c:	08015629 	.word	0x08015629
 8005aa0:	08015661 	.word	0x08015661
 8005aa4:	000005ec 	.word	0x000005ec
 8005aa8:	000005fc 	.word	0x000005fc

08005aac <_ZN14QRCodeAnimator15handleTickEventEv>:
{
 8005aac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    return animationTick >= 0;
 8005aae:	26be      	movs	r6, #190	@ 0xbe
 8005ab0:	00f6      	lsls	r6, r6, #3
{
 8005ab2:	0004      	movs	r4, r0
    return animationTick >= 0;
 8005ab4:	5980      	ldr	r0, [r0, r6]
    if (isAnimationRunning())
 8005ab6:	2800      	cmp	r0, #0
 8005ab8:	db23      	blt.n	8005b02 <_ZN14QRCodeAnimator15handleTickEventEv+0x56>
        if (animationTick <= animationDuration)
 8005aba:	22c6      	movs	r2, #198	@ 0xc6
 8005abc:	4b19      	ldr	r3, [pc, #100]	@ (8005b24 <_ZN14QRCodeAnimator15handleTickEventEv+0x78>)
 8005abe:	0092      	lsls	r2, r2, #2
 8005ac0:	58e3      	ldr	r3, [r4, r3]
 8005ac2:	18a5      	adds	r5, r4, r2
 8005ac4:	4283      	cmp	r3, r0
 8005ac6:	db1d      	blt.n	8005b04 <_ZN14QRCodeAnimator15handleTickEventEv+0x58>
        return rect.width;
 8005ac8:	4a17      	ldr	r2, [pc, #92]	@ (8005b28 <_ZN14QRCodeAnimator15handleTickEventEv+0x7c>)
            int16_t currentWidthToDisplay = EasingEquations::cubicEaseOut(animationTick, 0, qrCodeAnimationOverlay.getWidth(), animationDuration);
 8005aca:	b29b      	uxth	r3, r3
 8005acc:	18a2      	adds	r2, r4, r2
 8005ace:	2108      	movs	r1, #8
 8005ad0:	5e52      	ldrsh	r2, [r2, r1]
 8005ad2:	b280      	uxth	r0, r0
 8005ad4:	2100      	movs	r1, #0
 8005ad6:	f007 f854 	bl	800cb82 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8005ada:	2208      	movs	r2, #8
 8005adc:	5eab      	ldrsh	r3, [r5, r2]
        return rect.height;
 8005ade:	210a      	movs	r1, #10
 8005ae0:	5e6a      	ldrsh	r2, [r5, r1]
 8005ae2:	4669      	mov	r1, sp
 8005ae4:	466f      	mov	r7, sp
 8005ae6:	800b      	strh	r3, [r1, #0]
 8005ae8:	2100      	movs	r1, #0
        rect.width = width;
 8005aea:	8128      	strh	r0, [r5, #8]
            Rect r = Rect(oldWidth, 0, currentWidthToDisplay - oldWidth, qrViewPort.getHeight());
 8005aec:	1ac0      	subs	r0, r0, r3
 8005aee:	8079      	strh	r1, [r7, #2]
 8005af0:	80b8      	strh	r0, [r7, #4]
            qrViewPort.invalidateRect(r);
 8005af2:	4669      	mov	r1, sp
 8005af4:	0028      	movs	r0, r5
 8005af6:	80fa      	strh	r2, [r7, #6]
 8005af8:	f006 fc30 	bl	800c35c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>
            animationTick++;
 8005afc:	59a3      	ldr	r3, [r4, r6]
 8005afe:	3301      	adds	r3, #1
 8005b00:	51a3      	str	r3, [r4, r6]
}
 8005b02:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
            animationTick = -1;
 8005b04:	2301      	movs	r3, #1
 8005b06:	425b      	negs	r3, r3
 8005b08:	51a3      	str	r3, [r4, r6]
 8005b0a:	2300      	movs	r3, #0
            updateCurrentStringToDisplay();
 8005b0c:	0020      	movs	r0, r4
 8005b0e:	812b      	strh	r3, [r5, #8]
 8005b10:	f7ff ff54 	bl	80059bc <_ZN14QRCodeAnimator28updateCurrentStringToDisplayEv>
            Application::getInstance()->unregisterTimerWidget(this);
 8005b14:	f005 fa5a 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 8005b18:	0021      	movs	r1, r4
 8005b1a:	3004      	adds	r0, #4
 8005b1c:	f005 fa7b 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
}
 8005b20:	e7ef      	b.n	8005b02 <_ZN14QRCodeAnimator15handleTickEventEv+0x56>
 8005b22:	46c0      	nop			@ (mov r8, r8)
 8005b24:	000005f4 	.word	0x000005f4
 8005b28:	000004ec 	.word	0x000004ec

08005b2c <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8005b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
        if (!fadeAnimationRunning)
 8005b2e:	0007      	movs	r7, r0
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8005b30:	b085      	sub	sp, #20
 8005b32:	9202      	str	r2, [sp, #8]
 8005b34:	9303      	str	r3, [sp, #12]
        if (!fadeAnimationRunning)
 8005b36:	3729      	adds	r7, #41	@ 0x29
 8005b38:	783b      	ldrb	r3, [r7, #0]
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8005b3a:	0004      	movs	r4, r0
 8005b3c:	000d      	movs	r5, r1
        if (!fadeAnimationRunning)
 8005b3e:	2b00      	cmp	r3, #0
 8005b40:	d105      	bne.n	8005b4e <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0x22>
            Application::getInstance()->registerTimerWidget(this);
 8005b42:	f005 fa43 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 8005b46:	0021      	movs	r1, r4
 8005b48:	3004      	adds	r0, #4
 8005b4a:	f005 fb23 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 8005b4e:	2300      	movs	r3, #0
 8005b50:	0026      	movs	r6, r4
 8005b52:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8005b54:	3628      	adds	r6, #40	@ 0x28
 8005b56:	7833      	ldrb	r3, [r6, #0]
        fadeAnimationEndAlpha = endAlpha;
 8005b58:	8665      	strh	r5, [r4, #50]	@ 0x32
        fadeAnimationStartAlpha = T::getAlpha();
 8005b5a:	8623      	strh	r3, [r4, #48]	@ 0x30
 8005b5c:	9301      	str	r3, [sp, #4]
        fadeAnimationDuration = duration;
 8005b5e:	9b02      	ldr	r3, [sp, #8]
 8005b60:	85e3      	strh	r3, [r4, #46]	@ 0x2e
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8005b62:	9b03      	ldr	r3, [sp, #12]
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8005b64:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8005b66:	6363      	str	r3, [r4, #52]	@ 0x34
        fadeAnimationRunning = true;
 8005b68:	2301      	movs	r3, #1
 8005b6a:	703b      	strb	r3, [r7, #0]
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8005b6c:	2900      	cmp	r1, #0
 8005b6e:	d139      	bne.n	8005be4 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0xb8>
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8005b70:	8da0      	ldrh	r0, [r4, #44]	@ 0x2c
            fadeAnimationCounter++;
 8005b72:	8563      	strh	r3, [r4, #42]	@ 0x2a
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8005b74:	4298      	cmp	r0, r3
 8005b76:	d835      	bhi.n	8005be4 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0xb8>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8005b78:	002a      	movs	r2, r5
 8005b7a:	9d01      	ldr	r5, [sp, #4]
 8005b7c:	1a18      	subs	r0, r3, r0
 8005b7e:	1b52      	subs	r2, r2, r5
 8005b80:	9b02      	ldr	r3, [sp, #8]
 8005b82:	9d03      	ldr	r5, [sp, #12]
 8005b84:	b280      	uxth	r0, r0
 8005b86:	47a8      	blx	r5
 8005b88:	9b01      	ldr	r3, [sp, #4]
 8005b8a:	7832      	ldrb	r2, [r6, #0]
 8005b8c:	181d      	adds	r5, r3, r0
 8005b8e:	b2ab      	uxth	r3, r5
 8005b90:	b22d      	sxth	r5, r5
                if (T::getAlpha() != newAlpha)
 8005b92:	42aa      	cmp	r2, r5
 8005b94:	d00a      	beq.n	8005bac <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0x80>
                    if (newAlpha == 0)
 8005b96:	2d00      	cmp	r5, #0
 8005b98:	d126      	bne.n	8005be8 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0xbc>
        if (alpha > 0)
 8005b9a:	2a00      	cmp	r2, #0
 8005b9c:	d002      	beq.n	8005ba4 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0x78>
            Widget::invalidateContent();
 8005b9e:	0020      	movs	r0, r4
 8005ba0:	f7fd f99b 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
        alpha = newAlpha;
 8005ba4:	0023      	movs	r3, r4
 8005ba6:	2200      	movs	r2, #0
 8005ba8:	3328      	adds	r3, #40	@ 0x28
 8005baa:	701a      	strb	r2, [r3, #0]
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8005bac:	8da3      	ldrh	r3, [r4, #44]	@ 0x2c
 8005bae:	8de1      	ldrh	r1, [r4, #46]	@ 0x2e
 8005bb0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8005bb2:	185b      	adds	r3, r3, r1
 8005bb4:	429a      	cmp	r2, r3
 8005bb6:	d315      	bcc.n	8005be4 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0xb8>
                    fadeAnimationRunning = false;
 8005bb8:	2300      	movs	r3, #0
 8005bba:	703b      	strb	r3, [r7, #0]
                    fadeAnimationDuration = 0;
 8005bbc:	85e3      	strh	r3, [r4, #46]	@ 0x2e
                    Application::getInstance()->unregisterTimerWidget(this);
 8005bbe:	f005 fa05 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 8005bc2:	0021      	movs	r1, r4
 8005bc4:	3004      	adds	r0, #4
 8005bc6:	f005 fa26 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8005bca:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8005bcc:	2800      	cmp	r0, #0
 8005bce:	d009      	beq.n	8005be4 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0xb8>
 8005bd0:	6803      	ldr	r3, [r0, #0]
 8005bd2:	68db      	ldr	r3, [r3, #12]
 8005bd4:	4798      	blx	r3
 8005bd6:	2800      	cmp	r0, #0
 8005bd8:	d004      	beq.n	8005be4 <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0xb8>
                        fadeAnimationEndedCallback->execute(*this);
 8005bda:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8005bdc:	0021      	movs	r1, r4
 8005bde:	6803      	ldr	r3, [r0, #0]
 8005be0:	689b      	ldr	r3, [r3, #8]
 8005be2:	4798      	blx	r3
    }
 8005be4:	b005      	add	sp, #20
 8005be6:	bdf0      	pop	{r4, r5, r6, r7, pc}
                        T::setAlpha((uint8_t)newAlpha);
 8005be8:	b2db      	uxtb	r3, r3
 8005bea:	7033      	strb	r3, [r6, #0]
        if (alpha > 0)
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	d0dd      	beq.n	8005bac <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0x80>
            Widget::invalidateContent();
 8005bf0:	0020      	movs	r0, r4
 8005bf2:	f7fd f972 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8005bf6:	e7d9      	b.n	8005bac <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE+0x80>

08005bf8 <_ZN14QRCodeAnimator18startFadeAnimationEv>:
{
 8005bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
        return fadeAnimationRunning;
 8005bfa:	4b68      	ldr	r3, [pc, #416]	@ (8005d9c <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1a4>)
 8005bfc:	0004      	movs	r4, r0
 8005bfe:	18c3      	adds	r3, r0, r3
    if (!isFadeAnimationRunning())
 8005c00:	781b      	ldrb	r3, [r3, #0]
{
 8005c02:	b085      	sub	sp, #20
    if (!isFadeAnimationRunning())
 8005c04:	2b00      	cmp	r3, #0
 8005c06:	d000      	beq.n	8005c0a <_ZN14QRCodeAnimator18startFadeAnimationEv+0x12>
 8005c08:	e0bd      	b.n	8005d86 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x18e>
        return alpha;
 8005c0a:	2299      	movs	r2, #153	@ 0x99
 8005c0c:	0092      	lsls	r2, r2, #2
 8005c0e:	1882      	adds	r2, r0, r2
        const uint8_t END_ALPHA = (qrCodeMain.getAlpha() > 0) ? 0 : 255;
 8005c10:	7812      	ldrb	r2, [r2, #0]
 8005c12:	2a00      	cmp	r2, #0
 8005c14:	d100      	bne.n	8005c18 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x20>
 8005c16:	e0b8      	b.n	8005d8a <_ZN14QRCodeAnimator18startFadeAnimationEv+0x192>
 8005c18:	9301      	str	r3, [sp, #4]
        fadeAnimationDelay = delay;
 8005c1a:	4a61      	ldr	r2, [pc, #388]	@ (8005da0 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1a8>)
        fadeAnimationDuration = duration;
 8005c1c:	2714      	movs	r7, #20
        fadeAnimationDelay = delay;
 8005c1e:	18a2      	adds	r2, r4, r2
 8005c20:	8013      	strh	r3, [r2, #0]
 8005c22:	0022      	movs	r2, r4
 8005c24:	3258      	adds	r2, #88	@ 0x58
 8005c26:	8013      	strh	r3, [r2, #0]
 8005c28:	229f      	movs	r2, #159	@ 0x9f
 8005c2a:	0092      	lsls	r2, r2, #2
 8005c2c:	18a2      	adds	r2, r4, r2
 8005c2e:	8593      	strh	r3, [r2, #44]	@ 0x2c
 8005c30:	9203      	str	r2, [sp, #12]
 8005c32:	22c2      	movs	r2, #194	@ 0xc2
 8005c34:	0092      	lsls	r2, r2, #2
 8005c36:	18a2      	adds	r2, r4, r2
 8005c38:	8013      	strh	r3, [r2, #0]
            Application::getInstance()->registerTimerWidget(this);
 8005c3a:	f005 f9c7 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 8005c3e:	2384      	movs	r3, #132	@ 0x84
 8005c40:	009b      	lsls	r3, r3, #2
 8005c42:	18e5      	adds	r5, r4, r3
 8005c44:	0029      	movs	r1, r5
 8005c46:	3004      	adds	r0, #4
 8005c48:	f005 faa4 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 8005c4c:	239a      	movs	r3, #154	@ 0x9a
 8005c4e:	2200      	movs	r2, #0
 8005c50:	009b      	lsls	r3, r3, #2
 8005c52:	18e3      	adds	r3, r4, r3
 8005c54:	801a      	strh	r2, [r3, #0]
 8005c56:	2399      	movs	r3, #153	@ 0x99
 8005c58:	009b      	lsls	r3, r3, #2
 8005c5a:	18e3      	adds	r3, r4, r3
        fadeAnimationStartAlpha = T::getAlpha();
 8005c5c:	781a      	ldrb	r2, [r3, #0]
 8005c5e:	4b51      	ldr	r3, [pc, #324]	@ (8005da4 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1ac>)
        academyLogo.startFadeAnimation(END_ALPHA, Constants::FADE_DURATION);
 8005c60:	0020      	movs	r0, r4
 8005c62:	18e3      	adds	r3, r4, r3
 8005c64:	801a      	strh	r2, [r3, #0]
        fadeAnimationEndAlpha = endAlpha;
 8005c66:	466b      	mov	r3, sp
 8005c68:	2204      	movs	r2, #4
 8005c6a:	5e9b      	ldrsh	r3, [r3, r2]
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8005c6c:	4e4e      	ldr	r6, [pc, #312]	@ (8005da8 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1b0>)
        fadeAnimationEndAlpha = endAlpha;
 8005c6e:	9302      	str	r3, [sp, #8]
 8005c70:	239c      	movs	r3, #156	@ 0x9c
 8005c72:	9a02      	ldr	r2, [sp, #8]
 8005c74:	009b      	lsls	r3, r3, #2
 8005c76:	18e3      	adds	r3, r4, r3
 8005c78:	801a      	strh	r2, [r3, #0]
        fadeAnimationDuration = duration;
 8005c7a:	239b      	movs	r3, #155	@ 0x9b
        fadeAnimationRunning = true;
 8005c7c:	2201      	movs	r2, #1
        fadeAnimationDuration = duration;
 8005c7e:	009b      	lsls	r3, r3, #2
 8005c80:	18e3      	adds	r3, r4, r3
 8005c82:	801f      	strh	r7, [r3, #0]
        fadeAnimationRunning = true;
 8005c84:	4b45      	ldr	r3, [pc, #276]	@ (8005d9c <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1a4>)
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8005c86:	666e      	str	r6, [r5, #100]	@ 0x64
        fadeAnimationRunning = true;
 8005c88:	18e3      	adds	r3, r4, r3
 8005c8a:	701a      	strb	r2, [r3, #0]
 8005c8c:	9901      	ldr	r1, [sp, #4]
 8005c8e:	0033      	movs	r3, r6
 8005c90:	003a      	movs	r2, r7
 8005c92:	302c      	adds	r0, #44	@ 0x2c
 8005c94:	f7ff ff4a 	bl	8005b2c <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE>
        qrCodeMainCircle.startFadeAnimation(END_ALPHA, Constants::FADE_DURATION);
 8005c98:	0033      	movs	r3, r6
 8005c9a:	003a      	movs	r2, r7
 8005c9c:	9901      	ldr	r1, [sp, #4]
 8005c9e:	9803      	ldr	r0, [sp, #12]
 8005ca0:	f7ff ff44 	bl	8005b2c <_ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE>
        qrCodeMainText.startFadeAnimation(END_ALPHA, Constants::FADE_DURATION);
 8005ca4:	23ae      	movs	r3, #174	@ 0xae
 8005ca6:	009b      	lsls	r3, r3, #2
 8005ca8:	18e5      	adds	r5, r4, r3
        if (!fadeAnimationRunning)
 8005caa:	334c      	adds	r3, #76	@ 0x4c
 8005cac:	18e3      	adds	r3, r4, r3
 8005cae:	781b      	ldrb	r3, [r3, #0]
 8005cb0:	2b00      	cmp	r3, #0
 8005cb2:	d105      	bne.n	8005cc0 <_ZN14QRCodeAnimator18startFadeAnimationEv+0xc8>
            Application::getInstance()->registerTimerWidget(this);
 8005cb4:	f005 f98a 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 8005cb8:	0029      	movs	r1, r5
 8005cba:	3004      	adds	r0, #4
 8005cbc:	f005 fa6a 	bl	800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 8005cc0:	4b3a      	ldr	r3, [pc, #232]	@ (8005dac <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1b4>)
        fadeAnimationRunning = true;
 8005cc2:	2001      	movs	r0, #1
        fadeAnimationCounter = 0;
 8005cc4:	469c      	mov	ip, r3
 8005cc6:	44a4      	add	ip, r4
 8005cc8:	2300      	movs	r3, #0
 8005cca:	4662      	mov	r2, ip
 8005ccc:	8013      	strh	r3, [r2, #0]
        return alpha;
 8005cce:	4b38      	ldr	r3, [pc, #224]	@ (8005db0 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1b8>)
        fadeAnimationEndAlpha = endAlpha;
 8005cd0:	9a02      	ldr	r2, [sp, #8]
 8005cd2:	18e6      	adds	r6, r4, r3
 8005cd4:	7837      	ldrb	r7, [r6, #0]
        fadeAnimationStartAlpha = T::getAlpha();
 8005cd6:	331e      	adds	r3, #30
 8005cd8:	18e3      	adds	r3, r4, r3
 8005cda:	801f      	strh	r7, [r3, #0]
        fadeAnimationEndAlpha = endAlpha;
 8005cdc:	4b35      	ldr	r3, [pc, #212]	@ (8005db4 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1bc>)
 8005cde:	18e3      	adds	r3, r4, r3
 8005ce0:	801a      	strh	r2, [r3, #0]
        fadeAnimationDuration = duration;
 8005ce2:	2314      	movs	r3, #20
 8005ce4:	4a34      	ldr	r2, [pc, #208]	@ (8005db8 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1c0>)
 8005ce6:	18a2      	adds	r2, r4, r2
 8005ce8:	8013      	strh	r3, [r2, #0]
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8005cea:	4a2f      	ldr	r2, [pc, #188]	@ (8005da8 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1b0>)
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8005cec:	6d29      	ldr	r1, [r5, #80]	@ 0x50
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8005cee:	65aa      	str	r2, [r5, #88]	@ 0x58
        fadeAnimationRunning = true;
 8005cf0:	22c1      	movs	r2, #193	@ 0xc1
 8005cf2:	0092      	lsls	r2, r2, #2
 8005cf4:	18a2      	adds	r2, r4, r2
 8005cf6:	9202      	str	r2, [sp, #8]
 8005cf8:	7010      	strb	r0, [r2, #0]
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8005cfa:	2900      	cmp	r1, #0
 8005cfc:	d143      	bne.n	8005d86 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x18e>
            fadeAnimationCounter++;
 8005cfe:	4662      	mov	r2, ip
 8005d00:	8010      	strh	r0, [r2, #0]
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8005d02:	22c2      	movs	r2, #194	@ 0xc2
 8005d04:	0092      	lsls	r2, r2, #2
 8005d06:	18a2      	adds	r2, r4, r2
 8005d08:	8812      	ldrh	r2, [r2, #0]
 8005d0a:	4694      	mov	ip, r2
 8005d0c:	4282      	cmp	r2, r0
 8005d0e:	d83a      	bhi.n	8005d86 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x18e>
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8005d10:	4663      	mov	r3, ip
 8005d12:	9a01      	ldr	r2, [sp, #4]
 8005d14:	1ac0      	subs	r0, r0, r3
 8005d16:	1bd2      	subs	r2, r2, r7
 8005d18:	2314      	movs	r3, #20
 8005d1a:	b280      	uxth	r0, r0
 8005d1c:	f006 ffd6 	bl	800cccc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>
                if (T::getAlpha() != newAlpha)
 8005d20:	7832      	ldrb	r2, [r6, #0]
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8005d22:	183f      	adds	r7, r7, r0
 8005d24:	b2bb      	uxth	r3, r7
 8005d26:	b23f      	sxth	r7, r7
                if (T::getAlpha() != newAlpha)
 8005d28:	42ba      	cmp	r2, r7
 8005d2a:	d005      	beq.n	8005d38 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x140>
                    if (newAlpha == 0)
 8005d2c:	2f00      	cmp	r7, #0
 8005d2e:	d130      	bne.n	8005d92 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x19a>
        Widget::invalidateContent();
 8005d30:	0028      	movs	r0, r5
 8005d32:	f7fd f8d2 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
        alpha = newAlpha;
 8005d36:	7037      	strb	r7, [r6, #0]
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8005d38:	23ae      	movs	r3, #174	@ 0xae
 8005d3a:	009b      	lsls	r3, r3, #2
 8005d3c:	18e6      	adds	r6, r4, r3
 8005d3e:	4b1b      	ldr	r3, [pc, #108]	@ (8005dac <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1b4>)
 8005d40:	491d      	ldr	r1, [pc, #116]	@ (8005db8 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x1c0>)
 8005d42:	18e3      	adds	r3, r4, r3
 8005d44:	881a      	ldrh	r2, [r3, #0]
 8005d46:	23c2      	movs	r3, #194	@ 0xc2
 8005d48:	009b      	lsls	r3, r3, #2
 8005d4a:	18e3      	adds	r3, r4, r3
 8005d4c:	1864      	adds	r4, r4, r1
 8005d4e:	881b      	ldrh	r3, [r3, #0]
 8005d50:	8821      	ldrh	r1, [r4, #0]
 8005d52:	185b      	adds	r3, r3, r1
 8005d54:	429a      	cmp	r2, r3
 8005d56:	d316      	bcc.n	8005d86 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x18e>
                    fadeAnimationRunning = false;
 8005d58:	2300      	movs	r3, #0
 8005d5a:	9a02      	ldr	r2, [sp, #8]
 8005d5c:	7013      	strb	r3, [r2, #0]
                    fadeAnimationDuration = 0;
 8005d5e:	8023      	strh	r3, [r4, #0]
                    Application::getInstance()->unregisterTimerWidget(this);
 8005d60:	f005 f934 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 8005d64:	0029      	movs	r1, r5
 8005d66:	3004      	adds	r0, #4
 8005d68:	f005 f955 	bl	800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8005d6c:	6df0      	ldr	r0, [r6, #92]	@ 0x5c
 8005d6e:	2800      	cmp	r0, #0
 8005d70:	d009      	beq.n	8005d86 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x18e>
 8005d72:	6803      	ldr	r3, [r0, #0]
 8005d74:	68db      	ldr	r3, [r3, #12]
 8005d76:	4798      	blx	r3
 8005d78:	2800      	cmp	r0, #0
 8005d7a:	d004      	beq.n	8005d86 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x18e>
                        fadeAnimationEndedCallback->execute(*this);
 8005d7c:	6df0      	ldr	r0, [r6, #92]	@ 0x5c
 8005d7e:	0029      	movs	r1, r5
 8005d80:	6803      	ldr	r3, [r0, #0]
 8005d82:	689b      	ldr	r3, [r3, #8]
 8005d84:	4798      	blx	r3
}
 8005d86:	b005      	add	sp, #20
 8005d88:	bdf0      	pop	{r4, r5, r6, r7, pc}
        const uint8_t END_ALPHA = (qrCodeMain.getAlpha() > 0) ? 0 : 255;
 8005d8a:	23ff      	movs	r3, #255	@ 0xff
 8005d8c:	9301      	str	r3, [sp, #4]
        const uint8_t FADE_DELAY = END_ALPHA == 255 ? Constants::FADE_DURATION : 0;
 8005d8e:	3beb      	subs	r3, #235	@ 0xeb
 8005d90:	e743      	b.n	8005c1a <_ZN14QRCodeAnimator18startFadeAnimationEv+0x22>
 8005d92:	0028      	movs	r0, r5
 8005d94:	7033      	strb	r3, [r6, #0]
 8005d96:	f7fd f8a0 	bl	8002eda <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8005d9a:	e7cd      	b.n	8005d38 <_ZN14QRCodeAnimator18startFadeAnimationEv+0x140>
 8005d9c:	00000266 	.word	0x00000266
 8005da0:	0000026a 	.word	0x0000026a
 8005da4:	0000026e 	.word	0x0000026e
 8005da8:	0800cccd 	.word	0x0800cccd
 8005dac:	00000306 	.word	0x00000306
 8005db0:	000002ee 	.word	0x000002ee
 8005db4:	0000030e 	.word	0x0000030e
 8005db8:	0000030a 	.word	0x0000030a

08005dbc <_ZN14QRCodeAnimator10initializeEv>:
{
 8005dbc:	b510      	push	{r4, lr}
    QRCodeAnimatorBase::initialize();
 8005dbe:	f7fd ff9b 	bl	8003cf8 <_ZN18QRCodeAnimatorBase10initializeEv>
}
 8005dc2:	bd10      	pop	{r4, pc}

08005dc4 <SystemInit>:
{
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8005dc4:	4770      	bx	lr
	...

08005dc8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8005dc8:	b570      	push	{r4, r5, r6, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/ 
  if ((uint32_t)uwTickFreq != 0U)
 8005dca:	4b10      	ldr	r3, [pc, #64]	@ (8005e0c <HAL_InitTick+0x44>)
{
 8005dcc:	0005      	movs	r5, r0
  if ((uint32_t)uwTickFreq != 0U)
 8005dce:	7819      	ldrb	r1, [r3, #0]
 8005dd0:	2900      	cmp	r1, #0
 8005dd2:	d101      	bne.n	8005dd8 <HAL_InitTick+0x10>
        status = HAL_ERROR;
      }
    }
    else
    {
      status = HAL_ERROR;
 8005dd4:	2001      	movs	r0, #1
    status = HAL_ERROR;
  }

  /* Return function status */
  return status;
}
 8005dd6:	bd70      	pop	{r4, r5, r6, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /(uint32_t)uwTickFreq)) == 0U)
 8005dd8:	20fa      	movs	r0, #250	@ 0xfa
 8005dda:	0080      	lsls	r0, r0, #2
 8005ddc:	f7fa f9c2 	bl	8000164 <__udivsi3>
 8005de0:	4c0b      	ldr	r4, [pc, #44]	@ (8005e10 <HAL_InitTick+0x48>)
 8005de2:	0001      	movs	r1, r0
 8005de4:	6820      	ldr	r0, [r4, #0]
 8005de6:	f7fa f9bd 	bl	8000164 <__udivsi3>
 8005dea:	f000 f88f 	bl	8005f0c <HAL_SYSTICK_Config>
 8005dee:	1e04      	subs	r4, r0, #0
 8005df0:	d1f0      	bne.n	8005dd4 <HAL_InitTick+0xc>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8005df2:	2d03      	cmp	r5, #3
 8005df4:	d8ee      	bhi.n	8005dd4 <HAL_InitTick+0xc>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8005df6:	0002      	movs	r2, r0
 8005df8:	2001      	movs	r0, #1
 8005dfa:	0029      	movs	r1, r5
 8005dfc:	4240      	negs	r0, r0
 8005dfe:	f000 f84f 	bl	8005ea0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8005e02:	4b04      	ldr	r3, [pc, #16]	@ (8005e14 <HAL_InitTick+0x4c>)
 8005e04:	0020      	movs	r0, r4
 8005e06:	601d      	str	r5, [r3, #0]
  return status;
 8005e08:	e7e5      	b.n	8005dd6 <HAL_InitTick+0xe>
 8005e0a:	46c0      	nop			@ (mov r8, r8)
 8005e0c:	20000010 	.word	0x20000010
 8005e10:	2000000c 	.word	0x2000000c
 8005e14:	20000014 	.word	0x20000014

08005e18 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005e18:	2380      	movs	r3, #128	@ 0x80
 8005e1a:	4a08      	ldr	r2, [pc, #32]	@ (8005e3c <HAL_Init+0x24>)
 8005e1c:	005b      	lsls	r3, r3, #1
 8005e1e:	6811      	ldr	r1, [r2, #0]
{
 8005e20:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005e22:	430b      	orrs	r3, r1
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8005e24:	2000      	movs	r0, #0
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005e26:	6013      	str	r3, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8005e28:	f7ff ffce 	bl	8005dc8 <HAL_InitTick>
 8005e2c:	1e04      	subs	r4, r0, #0
 8005e2e:	d103      	bne.n	8005e38 <HAL_Init+0x20>
  HAL_MspInit();
 8005e30:	f7fc f828 	bl	8001e84 <HAL_MspInit>
}
 8005e34:	0020      	movs	r0, r4
 8005e36:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8005e38:	2401      	movs	r4, #1
 8005e3a:	e7fb      	b.n	8005e34 <HAL_Init+0x1c>
 8005e3c:	40022000 	.word	0x40022000

08005e40 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8005e40:	4a03      	ldr	r2, [pc, #12]	@ (8005e50 <HAL_IncTick+0x10>)
 8005e42:	4b04      	ldr	r3, [pc, #16]	@ (8005e54 <HAL_IncTick+0x14>)
 8005e44:	6811      	ldr	r1, [r2, #0]
 8005e46:	781b      	ldrb	r3, [r3, #0]
 8005e48:	185b      	adds	r3, r3, r1
 8005e4a:	6013      	str	r3, [r2, #0]
}
 8005e4c:	4770      	bx	lr
 8005e4e:	46c0      	nop			@ (mov r8, r8)
 8005e50:	20003568 	.word	0x20003568
 8005e54:	20000010 	.word	0x20000010

08005e58 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005e58:	4b01      	ldr	r3, [pc, #4]	@ (8005e60 <HAL_GetTick+0x8>)
 8005e5a:	6818      	ldr	r0, [r3, #0]
}
 8005e5c:	4770      	bx	lr
 8005e5e:	46c0      	nop			@ (mov r8, r8)
 8005e60:	20003568 	.word	0x20003568

08005e64 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005e64:	b570      	push	{r4, r5, r6, lr}
 8005e66:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005e68:	f7ff fff6 	bl	8005e58 <HAL_GetTick>
 8005e6c:	0005      	movs	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005e6e:	1c63      	adds	r3, r4, #1
 8005e70:	d002      	beq.n	8005e78 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8005e72:	4b04      	ldr	r3, [pc, #16]	@ (8005e84 <HAL_Delay+0x20>)
 8005e74:	781b      	ldrb	r3, [r3, #0]
 8005e76:	18e4      	adds	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8005e78:	f7ff ffee 	bl	8005e58 <HAL_GetTick>
 8005e7c:	1b40      	subs	r0, r0, r5
 8005e7e:	42a0      	cmp	r0, r4
 8005e80:	d3fa      	bcc.n	8005e78 <HAL_Delay+0x14>
  {
  }
}
 8005e82:	bd70      	pop	{r4, r5, r6, pc}
 8005e84:	20000010 	.word	0x20000010

08005e88 <HAL_SYSCFG_StrobeDBattpinsConfig>:
void HAL_SYSCFG_StrobeDBattpinsConfig(uint32_t ConfigDeadBattery)
{
  assert_param(IS_SYSCFG_DBATT_CONFIG(ConfigDeadBattery));

  /* Change strobe configuration of GPIO depending on UCPDx dead battery settings */
  MODIFY_REG(SYSCFG->CFGR1, (SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE), ConfigDeadBattery);
 8005e88:	4a03      	ldr	r2, [pc, #12]	@ (8005e98 <HAL_SYSCFG_StrobeDBattpinsConfig+0x10>)
 8005e8a:	4904      	ldr	r1, [pc, #16]	@ (8005e9c <HAL_SYSCFG_StrobeDBattpinsConfig+0x14>)
 8005e8c:	6813      	ldr	r3, [r2, #0]
 8005e8e:	400b      	ands	r3, r1
 8005e90:	4303      	orrs	r3, r0
 8005e92:	6013      	str	r3, [r2, #0]
}
 8005e94:	4770      	bx	lr
 8005e96:	46c0      	nop			@ (mov r8, r8)
 8005e98:	40010000 	.word	0x40010000
 8005e9c:	fffff9ff 	.word	0xfffff9ff

08005ea0 <HAL_NVIC_SetPriority>:
  *         with stm32g0xx devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8005ea0:	b510      	push	{r4, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8005ea2:	24ff      	movs	r4, #255	@ 0xff
 8005ea4:	2203      	movs	r2, #3
 8005ea6:	000b      	movs	r3, r1
 8005ea8:	0021      	movs	r1, r4
 8005eaa:	4002      	ands	r2, r0
 8005eac:	00d2      	lsls	r2, r2, #3
 8005eae:	4091      	lsls	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8005eb0:	019b      	lsls	r3, r3, #6
 8005eb2:	4023      	ands	r3, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8005eb4:	43c9      	mvns	r1, r1
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8005eb6:	4093      	lsls	r3, r2
  if ((int32_t)(IRQn) >= 0)
 8005eb8:	2800      	cmp	r0, #0
 8005eba:	db0a      	blt.n	8005ed2 <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8005ebc:	24c0      	movs	r4, #192	@ 0xc0
 8005ebe:	4a0b      	ldr	r2, [pc, #44]	@ (8005eec <HAL_NVIC_SetPriority+0x4c>)
 8005ec0:	0880      	lsrs	r0, r0, #2
 8005ec2:	0080      	lsls	r0, r0, #2
 8005ec4:	1880      	adds	r0, r0, r2
 8005ec6:	00a4      	lsls	r4, r4, #2
 8005ec8:	5902      	ldr	r2, [r0, r4]
 8005eca:	400a      	ands	r2, r1
 8005ecc:	4313      	orrs	r3, r2
 8005ece:	5103      	str	r3, [r0, r4]
  UNUSED(SubPriority);

  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn, PreemptPriority);
}
 8005ed0:	bd10      	pop	{r4, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8005ed2:	220f      	movs	r2, #15
 8005ed4:	4010      	ands	r0, r2
 8005ed6:	3808      	subs	r0, #8
 8005ed8:	4a05      	ldr	r2, [pc, #20]	@ (8005ef0 <HAL_NVIC_SetPriority+0x50>)
 8005eda:	0880      	lsrs	r0, r0, #2
 8005edc:	0080      	lsls	r0, r0, #2
 8005ede:	1880      	adds	r0, r0, r2
 8005ee0:	69c2      	ldr	r2, [r0, #28]
 8005ee2:	4011      	ands	r1, r2
 8005ee4:	4319      	orrs	r1, r3
 8005ee6:	61c1      	str	r1, [r0, #28]
 8005ee8:	e7f2      	b.n	8005ed0 <HAL_NVIC_SetPriority+0x30>
 8005eea:	46c0      	nop			@ (mov r8, r8)
 8005eec:	e000e100 	.word	0xe000e100
 8005ef0:	e000ed00 	.word	0xe000ed00

08005ef4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005ef4:	2800      	cmp	r0, #0
 8005ef6:	db05      	blt.n	8005f04 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005ef8:	231f      	movs	r3, #31
 8005efa:	4018      	ands	r0, r3
 8005efc:	3b1e      	subs	r3, #30
 8005efe:	4083      	lsls	r3, r0
 8005f00:	4a01      	ldr	r2, [pc, #4]	@ (8005f08 <HAL_NVIC_EnableIRQ+0x14>)
 8005f02:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005f04:	4770      	bx	lr
 8005f06:	46c0      	nop			@ (mov r8, r8)
 8005f08:	e000e100 	.word	0xe000e100

08005f0c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8005f0c:	2280      	movs	r2, #128	@ 0x80
 8005f0e:	1e43      	subs	r3, r0, #1
 8005f10:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8005f12:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8005f14:	4293      	cmp	r3, r2
 8005f16:	d20d      	bcs.n	8005f34 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8005f18:	21c0      	movs	r1, #192	@ 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8005f1a:	4a07      	ldr	r2, [pc, #28]	@ (8005f38 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8005f1c:	4807      	ldr	r0, [pc, #28]	@ (8005f3c <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8005f1e:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8005f20:	6a03      	ldr	r3, [r0, #32]
 8005f22:	0609      	lsls	r1, r1, #24
 8005f24:	021b      	lsls	r3, r3, #8
 8005f26:	0a1b      	lsrs	r3, r3, #8
 8005f28:	430b      	orrs	r3, r1
 8005f2a:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8005f2c:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8005f2e:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8005f30:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8005f32:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
  return SysTick_Config(TicksNumb);
}
 8005f34:	4770      	bx	lr
 8005f36:	46c0      	nop			@ (mov r8, r8)
 8005f38:	e000e010 	.word	0xe000e010
 8005f3c:	e000ed00 	.word	0xe000ed00

08005f40 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005f40:	b510      	push	{r4, lr}
 8005f42:	1e04      	subs	r4, r0, #0
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005f44:	d101      	bne.n	8005f4a <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8005f46:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8005f48:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005f4a:	7f43      	ldrb	r3, [r0, #29]
 8005f4c:	b2da      	uxtb	r2, r3
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d102      	bne.n	8005f58 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8005f52:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8005f54:	f7fb ffb0 	bl	8001eb8 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8005f58:	2302      	movs	r3, #2
 8005f5a:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8005f5c:	7923      	ldrb	r3, [r4, #4]
 8005f5e:	2b00      	cmp	r3, #0
 8005f60:	d11c      	bne.n	8005f9c <HAL_CRC_Init+0x5c>
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8005f62:	2118      	movs	r1, #24
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8005f64:	6823      	ldr	r3, [r4, #0]
 8005f66:	4a12      	ldr	r2, [pc, #72]	@ (8005fb0 <HAL_CRC_Init+0x70>)
 8005f68:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8005f6a:	689a      	ldr	r2, [r3, #8]
 8005f6c:	438a      	bics	r2, r1
 8005f6e:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8005f70:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8005f72:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8005f74:	2a00      	cmp	r2, #0
 8005f76:	d119      	bne.n	8005fac <HAL_CRC_Init+0x6c>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8005f78:	3a01      	subs	r2, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005f7a:	2160      	movs	r1, #96	@ 0x60
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005f7c:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005f7e:	689a      	ldr	r2, [r3, #8]
  return HAL_OK;
 8005f80:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005f82:	438a      	bics	r2, r1
 8005f84:	6961      	ldr	r1, [r4, #20]
 8005f86:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005f88:	2180      	movs	r1, #128	@ 0x80
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005f8a:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005f8c:	689a      	ldr	r2, [r3, #8]
 8005f8e:	438a      	bics	r2, r1
 8005f90:	69a1      	ldr	r1, [r4, #24]
 8005f92:	430a      	orrs	r2, r1
 8005f94:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8005f96:	2301      	movs	r3, #1
 8005f98:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8005f9a:	e7d5      	b.n	8005f48 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8005f9c:	0020      	movs	r0, r4
 8005f9e:	68e2      	ldr	r2, [r4, #12]
 8005fa0:	68a1      	ldr	r1, [r4, #8]
 8005fa2:	f000 f807 	bl	8005fb4 <HAL_CRCEx_Polynomial_Set>
 8005fa6:	2800      	cmp	r0, #0
 8005fa8:	d0e2      	beq.n	8005f70 <HAL_CRC_Init+0x30>
 8005faa:	e7cc      	b.n	8005f46 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005fac:	6922      	ldr	r2, [r4, #16]
 8005fae:	e7e4      	b.n	8005f7a <HAL_CRC_Init+0x3a>
 8005fb0:	04c11db7 	.word	0x04c11db7

08005fb4 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8005fb4:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8005fb6:	2501      	movs	r5, #1
{
 8005fb8:	0004      	movs	r4, r0
 8005fba:	0028      	movs	r0, r5
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8005fbc:	4229      	tst	r1, r5
 8005fbe:	d00f      	beq.n	8005fe0 <HAL_CRCEx_Polynomial_Set+0x2c>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8005fc0:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8005fc2:	3b01      	subs	r3, #1
 8005fc4:	d322      	bcc.n	800600c <HAL_CRCEx_Polynomial_Set+0x58>
 8005fc6:	0008      	movs	r0, r1
 8005fc8:	40d8      	lsrs	r0, r3
 8005fca:	4228      	tst	r0, r5
 8005fcc:	d0f9      	beq.n	8005fc2 <HAL_CRCEx_Polynomial_Set+0xe>
    {
    }

    switch (PolyLength)
 8005fce:	2a10      	cmp	r2, #16
 8005fd0:	d015      	beq.n	8005ffe <HAL_CRCEx_Polynomial_Set+0x4a>
 8005fd2:	2a10      	cmp	r2, #16
 8005fd4:	d805      	bhi.n	8005fe2 <HAL_CRCEx_Polynomial_Set+0x2e>
 8005fd6:	2a00      	cmp	r2, #0
 8005fd8:	d008      	beq.n	8005fec <HAL_CRCEx_Polynomial_Set+0x38>
 8005fda:	2001      	movs	r0, #1
 8005fdc:	2a08      	cmp	r2, #8
 8005fde:	d012      	beq.n	8006006 <HAL_CRCEx_Polynomial_Set+0x52>
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
 8005fe0:	bd30      	pop	{r4, r5, pc}
    switch (PolyLength)
 8005fe2:	2001      	movs	r0, #1
 8005fe4:	2a18      	cmp	r2, #24
 8005fe6:	d1fb      	bne.n	8005fe0 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_7B)
 8005fe8:	2b06      	cmp	r3, #6
 8005fea:	d8f9      	bhi.n	8005fe0 <HAL_CRCEx_Polynomial_Set+0x2c>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8005fec:	6820      	ldr	r0, [r4, #0]
 8005fee:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8005ff0:	2118      	movs	r1, #24
 8005ff2:	6883      	ldr	r3, [r0, #8]
 8005ff4:	438b      	bics	r3, r1
 8005ff6:	4313      	orrs	r3, r2
 8005ff8:	6083      	str	r3, [r0, #8]
 8005ffa:	2000      	movs	r0, #0
 8005ffc:	e7f0      	b.n	8005fe0 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_8B)
 8005ffe:	2001      	movs	r0, #1
 8006000:	2b07      	cmp	r3, #7
 8006002:	d9f3      	bls.n	8005fec <HAL_CRCEx_Polynomial_Set+0x38>
 8006004:	e7ec      	b.n	8005fe0 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
 8006006:	2b0f      	cmp	r3, #15
 8006008:	d8ea      	bhi.n	8005fe0 <HAL_CRCEx_Polynomial_Set+0x2c>
 800600a:	e7ef      	b.n	8005fec <HAL_CRCEx_Polynomial_Set+0x38>
    switch (PolyLength)
 800600c:	2001      	movs	r0, #1
 800600e:	2a10      	cmp	r2, #16
 8006010:	d1df      	bne.n	8005fd2 <HAL_CRCEx_Polynomial_Set+0x1e>
 8006012:	e7e5      	b.n	8005fe0 <HAL_CRCEx_Polynomial_Set+0x2c>

08006014 <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
  *             the configuration information for the specified DMA Channel.
  * @retval None
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8006014:	b510      	push	{r4, lr}
 8006016:	0004      	movs	r4, r0
    /* Prepare channel_number used for DMAmuxChannelStatusMask computation */
    channel_number = (((((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U) + 7U);
  }
#else
  /* Associate a DMA Channel to a DMAMUX channel */
  hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)(uint32_t)((uint32_t)DMAMUX1_Channel0 + ((hdma->ChannelIndex >> 2U) * ((uint32_t)DMAMUX1_Channel1 - (uint32_t)DMAMUX1_Channel0)));
 8006018:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800601a:	4a09      	ldr	r2, [pc, #36]	@ (8006040 <DMA_CalcDMAMUXChannelBaseAndMask+0x2c>)
 800601c:	089b      	lsrs	r3, r3, #2
 800601e:	189b      	adds	r3, r3, r2
 8006020:	009b      	lsls	r3, r3, #2
 8006022:	6443      	str	r3, [r0, #68]	@ 0x44

  /* Prepare channel_number used for DMAmuxChannelStatusMask computation */
  channel_number = (((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U;
 8006024:	6800      	ldr	r0, [r0, #0]
 8006026:	2114      	movs	r1, #20
 8006028:	b2c0      	uxtb	r0, r0
 800602a:	3808      	subs	r0, #8
 800602c:	f7fa f89a 	bl	8000164 <__udivsi3>
#endif /* DMA2 */

  /* Initialize the field DMAmuxChannelStatus to DMAMUX1_ChannelStatus base */
  hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8006030:	4b04      	ldr	r3, [pc, #16]	@ (8006044 <DMA_CalcDMAMUXChannelBaseAndMask+0x30>)
 8006032:	64a3      	str	r3, [r4, #72]	@ 0x48

  /* Initialize the field DMAmuxChannelStatusMask with the corresponding index of the DMAMUX channel selected for the current ChannelIndex */
  hdma->DMAmuxChannelStatusMask = 1UL << (channel_number & 0x1FU);
 8006034:	231f      	movs	r3, #31
 8006036:	4018      	ands	r0, r3
 8006038:	3b1e      	subs	r3, #30
 800603a:	4083      	lsls	r3, r0
 800603c:	64e3      	str	r3, [r4, #76]	@ 0x4c
}
 800603e:	bd10      	pop	{r4, pc}
 8006040:	10008200 	.word	0x10008200
 8006044:	40020880 	.word	0x40020880

08006048 <HAL_DMA_Init>:
{
 8006048:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800604a:	0004      	movs	r4, r0
    return HAL_ERROR;
 800604c:	2001      	movs	r0, #1
  if (hdma == NULL)
 800604e:	2c00      	cmp	r4, #0
 8006050:	d046      	beq.n	80060e0 <HAL_DMA_Init+0x98>
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8006052:	6825      	ldr	r5, [r4, #0]
 8006054:	4b25      	ldr	r3, [pc, #148]	@ (80060ec <HAL_DMA_Init+0xa4>)
 8006056:	2114      	movs	r1, #20
 8006058:	18e8      	adds	r0, r5, r3
 800605a:	f7fa f883 	bl	8000164 <__udivsi3>
  hdma->State = HAL_DMA_STATE_BUSY;
 800605e:	2302      	movs	r3, #2
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8006060:	0080      	lsls	r0, r0, #2
  hdma->State = HAL_DMA_STATE_BUSY;
 8006062:	1da6      	adds	r6, r4, #6
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8006064:	6420      	str	r0, [r4, #64]	@ 0x40
  hdma->State = HAL_DMA_STATE_BUSY;
 8006066:	77f3      	strb	r3, [r6, #31]
  CLEAR_BIT(hdma->Instance->CCR, (DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8006068:	682b      	ldr	r3, [r5, #0]
 800606a:	4a21      	ldr	r2, [pc, #132]	@ (80060f0 <HAL_DMA_Init+0xa8>)
  SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 800606c:	68a7      	ldr	r7, [r4, #8]
  CLEAR_BIT(hdma->Instance->CCR, (DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 800606e:	4013      	ands	r3, r2
 8006070:	602b      	str	r3, [r5, #0]
  SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 8006072:	68e3      	ldr	r3, [r4, #12]
 8006074:	6921      	ldr	r1, [r4, #16]
 8006076:	433b      	orrs	r3, r7
 8006078:	430b      	orrs	r3, r1
 800607a:	6961      	ldr	r1, [r4, #20]
 800607c:	682a      	ldr	r2, [r5, #0]
 800607e:	430b      	orrs	r3, r1
 8006080:	69a1      	ldr	r1, [r4, #24]
  DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8006082:	0020      	movs	r0, r4
  SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 8006084:	430b      	orrs	r3, r1
 8006086:	69e1      	ldr	r1, [r4, #28]
 8006088:	430b      	orrs	r3, r1
 800608a:	6a21      	ldr	r1, [r4, #32]
 800608c:	430b      	orrs	r3, r1
 800608e:	4313      	orrs	r3, r2
 8006090:	602b      	str	r3, [r5, #0]
  DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8006092:	f7ff ffbf 	bl	8006014 <DMA_CalcDMAMUXChannelBaseAndMask>
  if (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 8006096:	2380      	movs	r3, #128	@ 0x80
 8006098:	01db      	lsls	r3, r3, #7
 800609a:	429f      	cmp	r7, r3
 800609c:	d101      	bne.n	80060a2 <HAL_DMA_Init+0x5a>
    hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 800609e:	2300      	movs	r3, #0
 80060a0:	6063      	str	r3, [r4, #4]
  hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 80060a2:	233f      	movs	r3, #63	@ 0x3f
 80060a4:	6862      	ldr	r2, [r4, #4]
 80060a6:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80060a8:	4013      	ands	r3, r2
 80060aa:	600b      	str	r3, [r1, #0]
  hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80060ac:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 80060ae:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
  if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 80060b0:	3a01      	subs	r2, #1
  hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80060b2:	6048      	str	r0, [r1, #4]
  if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 80060b4:	2a03      	cmp	r2, #3
 80060b6:	d814      	bhi.n	80060e2 <HAL_DMA_Init+0x9a>
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;

  /* DMA Channels are connected to DMAMUX1 request generator blocks*/
  hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 80060b8:	4a0e      	ldr	r2, [pc, #56]	@ (80060f4 <HAL_DMA_Init+0xac>)

  hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 80060ba:	480f      	ldr	r0, [pc, #60]	@ (80060f8 <HAL_DMA_Init+0xb0>)
  hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 80060bc:	1899      	adds	r1, r3, r2

  /* here "Request" is either DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR3, i.e. <= 4*/
  hdma->DMAmuxRequestGenStatusMask = 1UL << ((request - 1U) & 0x3U);
 80060be:	2201      	movs	r2, #1
 80060c0:	3b01      	subs	r3, #1
 80060c2:	409a      	lsls	r2, r3
 80060c4:	65a2      	str	r2, [r4, #88]	@ 0x58
 80060c6:	0013      	movs	r3, r2
    hdma->DMAmuxRequestGen->RGCR = 0U;
 80060c8:	2200      	movs	r2, #0
  hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 80060ca:	0089      	lsls	r1, r1, #2
 80060cc:	6521      	str	r1, [r4, #80]	@ 0x50
  hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 80060ce:	6560      	str	r0, [r4, #84]	@ 0x54
    hdma->DMAmuxRequestGen->RGCR = 0U;
 80060d0:	600a      	str	r2, [r1, #0]
    hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80060d2:	6043      	str	r3, [r0, #4]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80060d4:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80060d6:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80060d8:	63e0      	str	r0, [r4, #60]	@ 0x3c
  __HAL_UNLOCK(hdma);
 80060da:	3405      	adds	r4, #5
  hdma->State = HAL_DMA_STATE_READY;
 80060dc:	77f3      	strb	r3, [r6, #31]
  __HAL_UNLOCK(hdma);
 80060de:	77e0      	strb	r0, [r4, #31]
}
 80060e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hdma->DMAmuxRequestGen = 0U;
 80060e2:	2300      	movs	r3, #0
 80060e4:	6523      	str	r3, [r4, #80]	@ 0x50
    hdma->DMAmuxRequestGenStatus = 0U;
 80060e6:	6563      	str	r3, [r4, #84]	@ 0x54
    hdma->DMAmuxRequestGenStatusMask = 0U;
 80060e8:	65a3      	str	r3, [r4, #88]	@ 0x58
 80060ea:	e7f3      	b.n	80060d4 <HAL_DMA_Init+0x8c>
 80060ec:	bffdfff8 	.word	0xbffdfff8
 80060f0:	ffff800f 	.word	0xffff800f
 80060f4:	1000823f 	.word	0x1000823f
 80060f8:	40020940 	.word	0x40020940

080060fc <HAL_DMA_Abort_IT>:
{
 80060fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hdma->State != HAL_DMA_STATE_BUSY)
 80060fe:	1d81      	adds	r1, r0, #6
 8006100:	7fcb      	ldrb	r3, [r1, #31]
 8006102:	2b02      	cmp	r3, #2
 8006104:	d003      	beq.n	800610e <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8006106:	2304      	movs	r3, #4
 8006108:	63c3      	str	r3, [r0, #60]	@ 0x3c
    status = HAL_ERROR;
 800610a:	2001      	movs	r0, #1
}
 800610c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 800610e:	240e      	movs	r4, #14
 8006110:	6802      	ldr	r2, [r0, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1CU)));
 8006112:	271c      	movs	r7, #28
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8006114:	6813      	ldr	r3, [r2, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8006116:	6c45      	ldr	r5, [r0, #68]	@ 0x44
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8006118:	43a3      	bics	r3, r4
 800611a:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 800611c:	2301      	movs	r3, #1
 800611e:	6814      	ldr	r4, [r2, #0]
 8006120:	439c      	bics	r4, r3
 8006122:	6014      	str	r4, [r2, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8006124:	682a      	ldr	r2, [r5, #0]
 8006126:	4c10      	ldr	r4, [pc, #64]	@ (8006168 <HAL_DMA_Abort_IT+0x6c>)
 8006128:	4022      	ands	r2, r4
 800612a:	602a      	str	r2, [r5, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1CU)));
 800612c:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800612e:	4d0f      	ldr	r5, [pc, #60]	@ (800616c <HAL_DMA_Abort_IT+0x70>)
 8006130:	403a      	ands	r2, r7
 8006132:	4093      	lsls	r3, r2
 8006134:	686e      	ldr	r6, [r5, #4]
 8006136:	4333      	orrs	r3, r6
 8006138:	606b      	str	r3, [r5, #4]
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 800613a:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
 800613c:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 800613e:	605a      	str	r2, [r3, #4]
    if (hdma->DMAmuxRequestGen != 0U)
 8006140:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8006142:	2b00      	cmp	r3, #0
 8006144:	d005      	beq.n	8006152 <HAL_DMA_Abort_IT+0x56>
      hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 8006146:	681a      	ldr	r2, [r3, #0]
 8006148:	4022      	ands	r2, r4
 800614a:	601a      	str	r2, [r3, #0]
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 800614c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800614e:	6d82      	ldr	r2, [r0, #88]	@ 0x58
 8006150:	605a      	str	r2, [r3, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8006152:	2301      	movs	r3, #1
    __HAL_UNLOCK(hdma);
 8006154:	2200      	movs	r2, #0
    hdma->State = HAL_DMA_STATE_READY;
 8006156:	77cb      	strb	r3, [r1, #31]
    __HAL_UNLOCK(hdma);
 8006158:	1d43      	adds	r3, r0, #5
 800615a:	77da      	strb	r2, [r3, #31]
    if (hdma->XferAbortCallback != NULL)
 800615c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800615e:	4293      	cmp	r3, r2
 8006160:	d000      	beq.n	8006164 <HAL_DMA_Abort_IT+0x68>
      hdma->XferAbortCallback(hdma);
 8006162:	4798      	blx	r3
  HAL_StatusTypeDef status = HAL_OK;
 8006164:	2000      	movs	r0, #0
 8006166:	e7d1      	b.n	800610c <HAL_DMA_Abort_IT+0x10>
 8006168:	fffffeff 	.word	0xfffffeff
 800616c:	40020000 	.word	0x40020000

08006170 <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 8006170:	2300      	movs	r3, #0
{
 8006172:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006174:	b085      	sub	sp, #20
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8006176:	680a      	ldr	r2, [r1, #0]
 8006178:	0014      	movs	r4, r2
 800617a:	40dc      	lsrs	r4, r3
 800617c:	d101      	bne.n	8006182 <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  }
}
 800617e:	b005      	add	sp, #20
 8006180:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8006182:	2501      	movs	r5, #1
 8006184:	0014      	movs	r4, r2
 8006186:	409d      	lsls	r5, r3
 8006188:	402c      	ands	r4, r5
 800618a:	9400      	str	r4, [sp, #0]
    if (iocurrent != 0x00u)
 800618c:	422a      	tst	r2, r5
 800618e:	d100      	bne.n	8006192 <HAL_GPIO_Init+0x22>
 8006190:	e091      	b.n	80062b6 <HAL_GPIO_Init+0x146>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006192:	684a      	ldr	r2, [r1, #4]
 8006194:	005f      	lsls	r7, r3, #1
 8006196:	4694      	mov	ip, r2
 8006198:	2203      	movs	r2, #3
 800619a:	4664      	mov	r4, ip
 800619c:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 800619e:	2403      	movs	r4, #3
 80061a0:	40bc      	lsls	r4, r7
 80061a2:	43e4      	mvns	r4, r4
 80061a4:	9401      	str	r4, [sp, #4]
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80061a6:	1e54      	subs	r4, r2, #1
 80061a8:	2c01      	cmp	r4, #1
 80061aa:	d82e      	bhi.n	800620a <HAL_GPIO_Init+0x9a>
        temp = GPIOx->OSPEEDR;
 80061ac:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 80061ae:	9c01      	ldr	r4, [sp, #4]
 80061b0:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 80061b2:	68cc      	ldr	r4, [r1, #12]
 80061b4:	40bc      	lsls	r4, r7
 80061b6:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 80061b8:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 80061ba:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80061bc:	2601      	movs	r6, #1
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80061be:	43ac      	bics	r4, r5
 80061c0:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80061c2:	4664      	mov	r4, ip
 80061c4:	0924      	lsrs	r4, r4, #4
 80061c6:	4034      	ands	r4, r6
 80061c8:	409c      	lsls	r4, r3
 80061ca:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 80061cc:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 80061ce:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 80061d0:	9c01      	ldr	r4, [sp, #4]
 80061d2:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 80061d4:	688c      	ldr	r4, [r1, #8]
 80061d6:	40bc      	lsls	r4, r7
 80061d8:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 80061da:	60c4      	str	r4, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80061dc:	2a02      	cmp	r2, #2
 80061de:	d116      	bne.n	800620e <HAL_GPIO_Init+0x9e>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80061e0:	2507      	movs	r5, #7
 80061e2:	260f      	movs	r6, #15
 80061e4:	401d      	ands	r5, r3
 80061e6:	00ad      	lsls	r5, r5, #2
 80061e8:	40ae      	lsls	r6, r5
        temp = GPIOx->AFR[position >> 3u];
 80061ea:	08dc      	lsrs	r4, r3, #3
 80061ec:	00a4      	lsls	r4, r4, #2
 80061ee:	1904      	adds	r4, r0, r4
 80061f0:	9402      	str	r4, [sp, #8]
 80061f2:	6a24      	ldr	r4, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80061f4:	9603      	str	r6, [sp, #12]
 80061f6:	0026      	movs	r6, r4
 80061f8:	9c03      	ldr	r4, [sp, #12]
 80061fa:	43a6      	bics	r6, r4
 80061fc:	0034      	movs	r4, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 80061fe:	690e      	ldr	r6, [r1, #16]
 8006200:	40ae      	lsls	r6, r5
 8006202:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3u] = temp;
 8006204:	9c02      	ldr	r4, [sp, #8]
 8006206:	6226      	str	r6, [r4, #32]
 8006208:	e001      	b.n	800620e <HAL_GPIO_Init+0x9e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800620a:	2a03      	cmp	r2, #3
 800620c:	d1df      	bne.n	80061ce <HAL_GPIO_Init+0x5e>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800620e:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
 8006210:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8006212:	9d01      	ldr	r5, [sp, #4]
 8006214:	4025      	ands	r5, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8006216:	432a      	orrs	r2, r5
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8006218:	24c0      	movs	r4, #192	@ 0xc0
      GPIOx->MODER = temp;
 800621a:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 800621c:	4662      	mov	r2, ip
 800621e:	02a4      	lsls	r4, r4, #10
 8006220:	4222      	tst	r2, r4
 8006222:	d048      	beq.n	80062b6 <HAL_GPIO_Init+0x146>
        temp = EXTI->EXTICR[position >> 2u];
 8006224:	4a25      	ldr	r2, [pc, #148]	@ (80062bc <HAL_GPIO_Init+0x14c>)
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 8006226:	2503      	movs	r5, #3
        temp = EXTI->EXTICR[position >> 2u];
 8006228:	089c      	lsrs	r4, r3, #2
 800622a:	00a4      	lsls	r4, r4, #2
 800622c:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 800622e:	220f      	movs	r2, #15
 8006230:	401d      	ands	r5, r3
 8006232:	00ed      	lsls	r5, r5, #3
 8006234:	40aa      	lsls	r2, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8006236:	27a0      	movs	r7, #160	@ 0xa0
        temp = EXTI->EXTICR[position >> 2u];
 8006238:	6e26      	ldr	r6, [r4, #96]	@ 0x60
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 800623a:	05ff      	lsls	r7, r7, #23
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 800623c:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 800623e:	2200      	movs	r2, #0
 8006240:	42b8      	cmp	r0, r7
 8006242:	d00c      	beq.n	800625e <HAL_GPIO_Init+0xee>
 8006244:	4f1e      	ldr	r7, [pc, #120]	@ (80062c0 <HAL_GPIO_Init+0x150>)
 8006246:	3201      	adds	r2, #1
 8006248:	42b8      	cmp	r0, r7
 800624a:	d008      	beq.n	800625e <HAL_GPIO_Init+0xee>
 800624c:	4f1d      	ldr	r7, [pc, #116]	@ (80062c4 <HAL_GPIO_Init+0x154>)
 800624e:	3201      	adds	r2, #1
 8006250:	42b8      	cmp	r0, r7
 8006252:	d004      	beq.n	800625e <HAL_GPIO_Init+0xee>
 8006254:	4f1c      	ldr	r7, [pc, #112]	@ (80062c8 <HAL_GPIO_Init+0x158>)
 8006256:	3203      	adds	r2, #3
 8006258:	42b8      	cmp	r0, r7
 800625a:	d100      	bne.n	800625e <HAL_GPIO_Init+0xee>
 800625c:	3a02      	subs	r2, #2
 800625e:	40aa      	lsls	r2, r5
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8006260:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8006262:	4332      	orrs	r2, r6
        EXTI->EXTICR[position >> 2u] = temp;
 8006264:	6622      	str	r2, [r4, #96]	@ 0x60
        temp = EXTI->RTSR1;
 8006266:	4c15      	ldr	r4, [pc, #84]	@ (80062bc <HAL_GPIO_Init+0x14c>)
        temp &= ~(iocurrent);
 8006268:	9a00      	ldr	r2, [sp, #0]
        temp = EXTI->RTSR1;
 800626a:	6826      	ldr	r6, [r4, #0]
          temp |= iocurrent;
 800626c:	9d00      	ldr	r5, [sp, #0]
        temp &= ~(iocurrent);
 800626e:	43d2      	mvns	r2, r2
          temp |= iocurrent;
 8006270:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8006272:	02ff      	lsls	r7, r7, #11
 8006274:	d401      	bmi.n	800627a <HAL_GPIO_Init+0x10a>
        temp &= ~(iocurrent);
 8006276:	0035      	movs	r5, r6
 8006278:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 800627a:	4667      	mov	r7, ip
        EXTI->RTSR1 = temp;
 800627c:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 800627e:	6866      	ldr	r6, [r4, #4]
          temp |= iocurrent;
 8006280:	9d00      	ldr	r5, [sp, #0]
 8006282:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8006284:	02bf      	lsls	r7, r7, #10
 8006286:	d401      	bmi.n	800628c <HAL_GPIO_Init+0x11c>
        temp &= ~(iocurrent);
 8006288:	0035      	movs	r5, r6
 800628a:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800628c:	4667      	mov	r7, ip
        EXTI->FTSR1 = temp;
 800628e:	6065      	str	r5, [r4, #4]
        temp = EXTI->EMR1;
 8006290:	4c0e      	ldr	r4, [pc, #56]	@ (80062cc <HAL_GPIO_Init+0x15c>)
          temp |= iocurrent;
 8006292:	9d00      	ldr	r5, [sp, #0]
        temp = EXTI->EMR1;
 8006294:	6fe6      	ldr	r6, [r4, #124]	@ 0x7c
          temp |= iocurrent;
 8006296:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8006298:	03bf      	lsls	r7, r7, #14
 800629a:	d401      	bmi.n	80062a0 <HAL_GPIO_Init+0x130>
        temp &= ~(iocurrent);
 800629c:	0035      	movs	r5, r6
 800629e:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80062a0:	4667      	mov	r7, ip
        EXTI->EMR1 = temp;
 80062a2:	67e5      	str	r5, [r4, #124]	@ 0x7c
        temp = EXTI->IMR1;
 80062a4:	4c0a      	ldr	r4, [pc, #40]	@ (80062d0 <HAL_GPIO_Init+0x160>)
          temp |= iocurrent;
 80062a6:	9e00      	ldr	r6, [sp, #0]
        temp = EXTI->IMR1;
 80062a8:	6fe5      	ldr	r5, [r4, #124]	@ 0x7c
          temp |= iocurrent;
 80062aa:	432e      	orrs	r6, r5
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80062ac:	03ff      	lsls	r7, r7, #15
 80062ae:	d401      	bmi.n	80062b4 <HAL_GPIO_Init+0x144>
        temp &= ~(iocurrent);
 80062b0:	4015      	ands	r5, r2
 80062b2:	002e      	movs	r6, r5
        EXTI->IMR1 = temp;
 80062b4:	67e6      	str	r6, [r4, #124]	@ 0x7c
    position++;
 80062b6:	3301      	adds	r3, #1
 80062b8:	e75d      	b.n	8006176 <HAL_GPIO_Init+0x6>
 80062ba:	46c0      	nop			@ (mov r8, r8)
 80062bc:	40021800 	.word	0x40021800
 80062c0:	50000400 	.word	0x50000400
 80062c4:	50000800 	.word	0x50000800
 80062c8:	50000c00 	.word	0x50000c00
 80062cc:	40021808 	.word	0x40021808
 80062d0:	40021804 	.word	0x40021804

080062d4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00u)
 80062d4:	6900      	ldr	r0, [r0, #16]
 80062d6:	4008      	ands	r0, r1
 80062d8:	1e43      	subs	r3, r0, #1
 80062da:	4198      	sbcs	r0, r3
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
 80062dc:	b2c0      	uxtb	r0, r0
}
 80062de:	4770      	bx	lr

080062e0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80062e0:	2a00      	cmp	r2, #0
 80062e2:	d001      	beq.n	80062e8 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80062e4:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 80062e6:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 80062e8:	6281      	str	r1, [r0, #40]	@ 0x28
}
 80062ea:	e7fc      	b.n	80062e6 <HAL_GPIO_WritePin+0x6>

080062ec <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80062ec:	6942      	ldr	r2, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80062ee:	0013      	movs	r3, r2
 80062f0:	400b      	ands	r3, r1
 80062f2:	041b      	lsls	r3, r3, #16
 80062f4:	4391      	bics	r1, r2
 80062f6:	430b      	orrs	r3, r1
 80062f8:	6183      	str	r3, [r0, #24]
}
 80062fa:	4770      	bx	lr

080062fc <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80062fc:	b570      	push	{r4, r5, r6, lr}
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0x00u)
 80062fe:	4d08      	ldr	r5, [pc, #32]	@ (8006320 <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 8006300:	0004      	movs	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0x00u)
 8006302:	68eb      	ldr	r3, [r5, #12]
 8006304:	4218      	tst	r0, r3
 8006306:	d002      	beq.n	800630e <HAL_GPIO_EXTI_IRQHandler+0x12>
  {
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8006308:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 800630a:	f7fb fae3 	bl	80018d4 <HAL_GPIO_EXTI_Rising_Callback>
  }

  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0x00u)
 800630e:	692b      	ldr	r3, [r5, #16]
 8006310:	4223      	tst	r3, r4
 8006312:	d003      	beq.n	800631c <HAL_GPIO_EXTI_IRQHandler+0x20>
  {
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8006314:	0020      	movs	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8006316:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8006318:	f7fb fb16 	bl	8001948 <HAL_GPIO_EXTI_Falling_Callback>
  }
}
 800631c:	bd70      	pop	{r4, r5, r6, pc}
 800631e:	46c0      	nop			@ (mov r8, r8)
 8006320:	40021800 	.word	0x40021800

08006324 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        6 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8006324:	b510      	push	{r4, lr}
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Modify voltage scaling range */
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8006326:	4c11      	ldr	r4, [pc, #68]	@ (800636c <HAL_PWREx_ControlVoltageScaling+0x48>)
 8006328:	4911      	ldr	r1, [pc, #68]	@ (8006370 <HAL_PWREx_ControlVoltageScaling+0x4c>)
 800632a:	6823      	ldr	r3, [r4, #0]
{
 800632c:	0002      	movs	r2, r0
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 800632e:	400b      	ands	r3, r1
 8006330:	4303      	orrs	r3, r0
 8006332:	6023      	str	r3, [r4, #0]

  /* In case of Range 1 selected, we need to ensure that main regulator reaches new value */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8006334:	2380      	movs	r3, #128	@ 0x80
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006336:	2000      	movs	r0, #0
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8006338:	009b      	lsls	r3, r3, #2
 800633a:	429a      	cmp	r2, r3
 800633c:	d10e      	bne.n	800635c <HAL_PWREx_ControlVoltageScaling+0x38>
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 800633e:	4b0d      	ldr	r3, [pc, #52]	@ (8006374 <HAL_PWREx_ControlVoltageScaling+0x50>)
 8006340:	490d      	ldr	r1, [pc, #52]	@ (8006378 <HAL_PWREx_ControlVoltageScaling+0x54>)
 8006342:	6818      	ldr	r0, [r3, #0]
 8006344:	2306      	movs	r3, #6
 8006346:	4358      	muls	r0, r3
 8006348:	f7f9 ff0c 	bl	8000164 <__udivsi3>
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 800634c:	2280      	movs	r2, #128	@ 0x80
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 800634e:	1c43      	adds	r3, r0, #1
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8006350:	00d2      	lsls	r2, r2, #3
 8006352:	6961      	ldr	r1, [r4, #20]
 8006354:	0008      	movs	r0, r1
 8006356:	4010      	ands	r0, r2
 8006358:	4211      	tst	r1, r2
 800635a:	d100      	bne.n	800635e <HAL_PWREx_ControlVoltageScaling+0x3a>
}
 800635c:	bd10      	pop	{r4, pc}
      if (wait_loop_index != 0U)
 800635e:	2b00      	cmp	r3, #0
 8006360:	d001      	beq.n	8006366 <HAL_PWREx_ControlVoltageScaling+0x42>
        wait_loop_index--;
 8006362:	3b01      	subs	r3, #1
 8006364:	e7f5      	b.n	8006352 <HAL_PWREx_ControlVoltageScaling+0x2e>
        return HAL_TIMEOUT;
 8006366:	2003      	movs	r0, #3
 8006368:	e7f8      	b.n	800635c <HAL_PWREx_ControlVoltageScaling+0x38>
 800636a:	46c0      	nop			@ (mov r8, r8)
 800636c:	40007000 	.word	0x40007000
 8006370:	fffff9ff 	.word	0xfffff9ff
 8006374:	2000000c 	.word	0x2000000c
 8006378:	000f4240 	.word	0x000f4240

0800637c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to LSE Off
  *         first and then to LSE On or LSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800637c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800637e:	0004      	movs	r4, r0
 8006380:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t temp_sysclksrc;
  uint32_t temp_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006382:	2800      	cmp	r0, #0
 8006384:	d102      	bne.n	800638c <HAL_RCC_OscConfig+0x10>
  {
    return HAL_ERROR;
 8006386:	2001      	movs	r0, #1
        }
      }
    }
  }
  return HAL_OK;
}
 8006388:	b005      	add	sp, #20
 800638a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800638c:	6803      	ldr	r3, [r0, #0]
 800638e:	07db      	lsls	r3, r3, #31
 8006390:	d410      	bmi.n	80063b4 <HAL_RCC_OscConfig+0x38>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006392:	6823      	ldr	r3, [r4, #0]
 8006394:	079b      	lsls	r3, r3, #30
 8006396:	d45c      	bmi.n	8006452 <HAL_RCC_OscConfig+0xd6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006398:	6823      	ldr	r3, [r4, #0]
 800639a:	071b      	lsls	r3, r3, #28
 800639c:	d500      	bpl.n	80063a0 <HAL_RCC_OscConfig+0x24>
 800639e:	e0c1      	b.n	8006524 <HAL_RCC_OscConfig+0x1a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80063a0:	6823      	ldr	r3, [r4, #0]
 80063a2:	075b      	lsls	r3, r3, #29
 80063a4:	d500      	bpl.n	80063a8 <HAL_RCC_OscConfig+0x2c>
 80063a6:	e0f2      	b.n	800658e <HAL_RCC_OscConfig+0x212>
  if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 80063a8:	69e3      	ldr	r3, [r4, #28]
 80063aa:	2b00      	cmp	r3, #0
 80063ac:	d000      	beq.n	80063b0 <HAL_RCC_OscConfig+0x34>
 80063ae:	e179      	b.n	80066a4 <HAL_RCC_OscConfig+0x328>
  return HAL_OK;
 80063b0:	2000      	movs	r0, #0
 80063b2:	e7e9      	b.n	8006388 <HAL_RCC_OscConfig+0xc>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80063b4:	2238      	movs	r2, #56	@ 0x38
 80063b6:	4daf      	ldr	r5, [pc, #700]	@ (8006674 <HAL_RCC_OscConfig+0x2f8>)
 80063b8:	68ab      	ldr	r3, [r5, #8]
 80063ba:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 80063bc:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 80063be:	2b10      	cmp	r3, #16
 80063c0:	d109      	bne.n	80063d6 <HAL_RCC_OscConfig+0x5a>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 80063c2:	43d3      	mvns	r3, r2
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 80063c4:	079b      	lsls	r3, r3, #30
 80063c6:	d108      	bne.n	80063da <HAL_RCC_OscConfig+0x5e>
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80063c8:	682b      	ldr	r3, [r5, #0]
 80063ca:	039b      	lsls	r3, r3, #14
 80063cc:	d5e1      	bpl.n	8006392 <HAL_RCC_OscConfig+0x16>
 80063ce:	6863      	ldr	r3, [r4, #4]
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	d1de      	bne.n	8006392 <HAL_RCC_OscConfig+0x16>
 80063d4:	e7d7      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE))
 80063d6:	2b08      	cmp	r3, #8
 80063d8:	d0f6      	beq.n	80063c8 <HAL_RCC_OscConfig+0x4c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80063da:	2280      	movs	r2, #128	@ 0x80
 80063dc:	6863      	ldr	r3, [r4, #4]
 80063de:	0252      	lsls	r2, r2, #9
 80063e0:	4293      	cmp	r3, r2
 80063e2:	d111      	bne.n	8006408 <HAL_RCC_OscConfig+0x8c>
 80063e4:	682a      	ldr	r2, [r5, #0]
 80063e6:	4313      	orrs	r3, r2
 80063e8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80063ea:	f7ff fd35 	bl	8005e58 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80063ee:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 80063f0:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80063f2:	02bf      	lsls	r7, r7, #10
 80063f4:	682b      	ldr	r3, [r5, #0]
 80063f6:	423b      	tst	r3, r7
 80063f8:	d1cb      	bne.n	8006392 <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80063fa:	f7ff fd2d 	bl	8005e58 <HAL_GetTick>
 80063fe:	1b80      	subs	r0, r0, r6
 8006400:	2864      	cmp	r0, #100	@ 0x64
 8006402:	d9f7      	bls.n	80063f4 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8006404:	2003      	movs	r0, #3
 8006406:	e7bf      	b.n	8006388 <HAL_RCC_OscConfig+0xc>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006408:	21a0      	movs	r1, #160	@ 0xa0
 800640a:	02c9      	lsls	r1, r1, #11
 800640c:	428b      	cmp	r3, r1
 800640e:	d108      	bne.n	8006422 <HAL_RCC_OscConfig+0xa6>
 8006410:	2380      	movs	r3, #128	@ 0x80
 8006412:	6829      	ldr	r1, [r5, #0]
 8006414:	02db      	lsls	r3, r3, #11
 8006416:	430b      	orrs	r3, r1
 8006418:	602b      	str	r3, [r5, #0]
 800641a:	682b      	ldr	r3, [r5, #0]
 800641c:	431a      	orrs	r2, r3
 800641e:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006420:	e7e3      	b.n	80063ea <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006422:	682a      	ldr	r2, [r5, #0]
 8006424:	4994      	ldr	r1, [pc, #592]	@ (8006678 <HAL_RCC_OscConfig+0x2fc>)
 8006426:	400a      	ands	r2, r1
 8006428:	602a      	str	r2, [r5, #0]
 800642a:	682a      	ldr	r2, [r5, #0]
 800642c:	4993      	ldr	r1, [pc, #588]	@ (800667c <HAL_RCC_OscConfig+0x300>)
 800642e:	400a      	ands	r2, r1
 8006430:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006432:	2b00      	cmp	r3, #0
 8006434:	d1d9      	bne.n	80063ea <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8006436:	f7ff fd0f 	bl	8005e58 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 800643a:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 800643c:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 800643e:	02bf      	lsls	r7, r7, #10
 8006440:	682b      	ldr	r3, [r5, #0]
 8006442:	423b      	tst	r3, r7
 8006444:	d0a5      	beq.n	8006392 <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006446:	f7ff fd07 	bl	8005e58 <HAL_GetTick>
 800644a:	1b80      	subs	r0, r0, r6
 800644c:	2864      	cmp	r0, #100	@ 0x64
 800644e:	d9f7      	bls.n	8006440 <HAL_RCC_OscConfig+0xc4>
 8006450:	e7d8      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006452:	2238      	movs	r2, #56	@ 0x38
 8006454:	4d87      	ldr	r5, [pc, #540]	@ (8006674 <HAL_RCC_OscConfig+0x2f8>)
 8006456:	68ab      	ldr	r3, [r5, #8]
 8006458:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 800645a:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 800645c:	2b10      	cmp	r3, #16
 800645e:	d128      	bne.n	80064b2 <HAL_RCC_OscConfig+0x136>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006460:	2103      	movs	r1, #3
 8006462:	400a      	ands	r2, r1
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 8006464:	2a02      	cmp	r2, #2
 8006466:	d126      	bne.n	80064b6 <HAL_RCC_OscConfig+0x13a>
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006468:	682a      	ldr	r2, [r5, #0]
 800646a:	0552      	lsls	r2, r2, #21
 800646c:	d503      	bpl.n	8006476 <HAL_RCC_OscConfig+0xfa>
 800646e:	68e2      	ldr	r2, [r4, #12]
 8006470:	2a00      	cmp	r2, #0
 8006472:	d100      	bne.n	8006476 <HAL_RCC_OscConfig+0xfa>
 8006474:	e787      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006476:	6869      	ldr	r1, [r5, #4]
 8006478:	6962      	ldr	r2, [r4, #20]
 800647a:	4881      	ldr	r0, [pc, #516]	@ (8006680 <HAL_RCC_OscConfig+0x304>)
 800647c:	0212      	lsls	r2, r2, #8
 800647e:	4001      	ands	r1, r0
 8006480:	430a      	orrs	r2, r1
 8006482:	606a      	str	r2, [r5, #4]
        if (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI)
 8006484:	2b00      	cmp	r3, #0
 8006486:	d10c      	bne.n	80064a2 <HAL_RCC_OscConfig+0x126>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8006488:	682b      	ldr	r3, [r5, #0]
 800648a:	4a7e      	ldr	r2, [pc, #504]	@ (8006684 <HAL_RCC_OscConfig+0x308>)
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 800648c:	497e      	ldr	r1, [pc, #504]	@ (8006688 <HAL_RCC_OscConfig+0x30c>)
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 800648e:	4013      	ands	r3, r2
 8006490:	6922      	ldr	r2, [r4, #16]
 8006492:	4313      	orrs	r3, r2
 8006494:	602b      	str	r3, [r5, #0]
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 8006496:	682b      	ldr	r3, [r5, #0]
 8006498:	4a7c      	ldr	r2, [pc, #496]	@ (800668c <HAL_RCC_OscConfig+0x310>)
 800649a:	049b      	lsls	r3, r3, #18
 800649c:	0f5b      	lsrs	r3, r3, #29
 800649e:	40da      	lsrs	r2, r3
 80064a0:	600a      	str	r2, [r1, #0]
        if (HAL_InitTick(uwTickPrio) != HAL_OK)
 80064a2:	4b7b      	ldr	r3, [pc, #492]	@ (8006690 <HAL_RCC_OscConfig+0x314>)
 80064a4:	6818      	ldr	r0, [r3, #0]
 80064a6:	f7ff fc8f 	bl	8005dc8 <HAL_InitTick>
 80064aa:	2800      	cmp	r0, #0
 80064ac:	d100      	bne.n	80064b0 <HAL_RCC_OscConfig+0x134>
 80064ae:	e773      	b.n	8006398 <HAL_RCC_OscConfig+0x1c>
 80064b0:	e769      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI))
 80064b2:	2b00      	cmp	r3, #0
 80064b4:	d0d8      	beq.n	8006468 <HAL_RCC_OscConfig+0xec>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80064b6:	68e3      	ldr	r3, [r4, #12]
 80064b8:	2b00      	cmp	r3, #0
 80064ba:	d020      	beq.n	80064fe <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80064bc:	682b      	ldr	r3, [r5, #0]
 80064be:	4a71      	ldr	r2, [pc, #452]	@ (8006684 <HAL_RCC_OscConfig+0x308>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80064c0:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80064c2:	4013      	ands	r3, r2
 80064c4:	6922      	ldr	r2, [r4, #16]
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80064c6:	00ff      	lsls	r7, r7, #3
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80064c8:	4313      	orrs	r3, r2
 80064ca:	602b      	str	r3, [r5, #0]
        __HAL_RCC_HSI_ENABLE();
 80064cc:	2380      	movs	r3, #128	@ 0x80
 80064ce:	682a      	ldr	r2, [r5, #0]
 80064d0:	005b      	lsls	r3, r3, #1
 80064d2:	4313      	orrs	r3, r2
 80064d4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80064d6:	f7ff fcbf 	bl	8005e58 <HAL_GetTick>
 80064da:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80064dc:	682b      	ldr	r3, [r5, #0]
 80064de:	423b      	tst	r3, r7
 80064e0:	d007      	beq.n	80064f2 <HAL_RCC_OscConfig+0x176>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80064e2:	686a      	ldr	r2, [r5, #4]
 80064e4:	6963      	ldr	r3, [r4, #20]
 80064e6:	4966      	ldr	r1, [pc, #408]	@ (8006680 <HAL_RCC_OscConfig+0x304>)
 80064e8:	021b      	lsls	r3, r3, #8
 80064ea:	400a      	ands	r2, r1
 80064ec:	4313      	orrs	r3, r2
 80064ee:	606b      	str	r3, [r5, #4]
 80064f0:	e752      	b.n	8006398 <HAL_RCC_OscConfig+0x1c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80064f2:	f7ff fcb1 	bl	8005e58 <HAL_GetTick>
 80064f6:	1b80      	subs	r0, r0, r6
 80064f8:	2802      	cmp	r0, #2
 80064fa:	d9ef      	bls.n	80064dc <HAL_RCC_OscConfig+0x160>
 80064fc:	e782      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80064fe:	682b      	ldr	r3, [r5, #0]
 8006500:	4a64      	ldr	r2, [pc, #400]	@ (8006694 <HAL_RCC_OscConfig+0x318>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8006502:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_HSI_DISABLE();
 8006504:	4013      	ands	r3, r2
 8006506:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006508:	f7ff fca6 	bl	8005e58 <HAL_GetTick>
 800650c:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 800650e:	00ff      	lsls	r7, r7, #3
 8006510:	682b      	ldr	r3, [r5, #0]
 8006512:	423b      	tst	r3, r7
 8006514:	d100      	bne.n	8006518 <HAL_RCC_OscConfig+0x19c>
 8006516:	e73f      	b.n	8006398 <HAL_RCC_OscConfig+0x1c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006518:	f7ff fc9e 	bl	8005e58 <HAL_GetTick>
 800651c:	1b80      	subs	r0, r0, r6
 800651e:	2802      	cmp	r0, #2
 8006520:	d9f6      	bls.n	8006510 <HAL_RCC_OscConfig+0x194>
 8006522:	e76f      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8006524:	2238      	movs	r2, #56	@ 0x38
 8006526:	4d53      	ldr	r5, [pc, #332]	@ (8006674 <HAL_RCC_OscConfig+0x2f8>)
 8006528:	68ab      	ldr	r3, [r5, #8]
 800652a:	4013      	ands	r3, r2
 800652c:	2b18      	cmp	r3, #24
 800652e:	d108      	bne.n	8006542 <HAL_RCC_OscConfig+0x1c6>
      if ((((RCC->CSR) & RCC_CSR_LSIRDY) != 0U) && (RCC_OscInitStruct->LSIState == RCC_LSI_OFF))
 8006530:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 8006532:	079b      	lsls	r3, r3, #30
 8006534:	d400      	bmi.n	8006538 <HAL_RCC_OscConfig+0x1bc>
 8006536:	e733      	b.n	80063a0 <HAL_RCC_OscConfig+0x24>
 8006538:	69a3      	ldr	r3, [r4, #24]
 800653a:	2b00      	cmp	r3, #0
 800653c:	d000      	beq.n	8006540 <HAL_RCC_OscConfig+0x1c4>
 800653e:	e72f      	b.n	80063a0 <HAL_RCC_OscConfig+0x24>
 8006540:	e721      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
      if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8006542:	69a2      	ldr	r2, [r4, #24]
 8006544:	2301      	movs	r3, #1
 8006546:	2a00      	cmp	r2, #0
 8006548:	d010      	beq.n	800656c <HAL_RCC_OscConfig+0x1f0>
        __HAL_RCC_LSI_ENABLE();
 800654a:	6e2a      	ldr	r2, [r5, #96]	@ 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 800654c:	2702      	movs	r7, #2
        __HAL_RCC_LSI_ENABLE();
 800654e:	4313      	orrs	r3, r2
 8006550:	662b      	str	r3, [r5, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8006552:	f7ff fc81 	bl	8005e58 <HAL_GetTick>
 8006556:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8006558:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 800655a:	423b      	tst	r3, r7
 800655c:	d000      	beq.n	8006560 <HAL_RCC_OscConfig+0x1e4>
 800655e:	e71f      	b.n	80063a0 <HAL_RCC_OscConfig+0x24>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006560:	f7ff fc7a 	bl	8005e58 <HAL_GetTick>
 8006564:	1b80      	subs	r0, r0, r6
 8006566:	2802      	cmp	r0, #2
 8006568:	d9f6      	bls.n	8006558 <HAL_RCC_OscConfig+0x1dc>
 800656a:	e74b      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_LSI_DISABLE();
 800656c:	6e2a      	ldr	r2, [r5, #96]	@ 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 800656e:	2702      	movs	r7, #2
        __HAL_RCC_LSI_DISABLE();
 8006570:	439a      	bics	r2, r3
 8006572:	662a      	str	r2, [r5, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8006574:	f7ff fc70 	bl	8005e58 <HAL_GetTick>
 8006578:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 800657a:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 800657c:	423b      	tst	r3, r7
 800657e:	d100      	bne.n	8006582 <HAL_RCC_OscConfig+0x206>
 8006580:	e70e      	b.n	80063a0 <HAL_RCC_OscConfig+0x24>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006582:	f7ff fc69 	bl	8005e58 <HAL_GetTick>
 8006586:	1b80      	subs	r0, r0, r6
 8006588:	2802      	cmp	r0, #2
 800658a:	d9f6      	bls.n	800657a <HAL_RCC_OscConfig+0x1fe>
 800658c:	e73a      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 800658e:	2238      	movs	r2, #56	@ 0x38
 8006590:	4d38      	ldr	r5, [pc, #224]	@ (8006674 <HAL_RCC_OscConfig+0x2f8>)
 8006592:	68ab      	ldr	r3, [r5, #8]
 8006594:	4013      	ands	r3, r2
 8006596:	2b20      	cmp	r3, #32
 8006598:	d108      	bne.n	80065ac <HAL_RCC_OscConfig+0x230>
      if ((((RCC->BDCR) & RCC_BDCR_LSERDY) != 0U) && (RCC_OscInitStruct->LSEState == RCC_LSE_OFF))
 800659a:	6deb      	ldr	r3, [r5, #92]	@ 0x5c
 800659c:	079b      	lsls	r3, r3, #30
 800659e:	d400      	bmi.n	80065a2 <HAL_RCC_OscConfig+0x226>
 80065a0:	e702      	b.n	80063a8 <HAL_RCC_OscConfig+0x2c>
 80065a2:	68a3      	ldr	r3, [r4, #8]
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d000      	beq.n	80065aa <HAL_RCC_OscConfig+0x22e>
 80065a8:	e6fe      	b.n	80063a8 <HAL_RCC_OscConfig+0x2c>
 80065aa:	e6ec      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80065ac:	2280      	movs	r2, #128	@ 0x80
    FlagStatus       pwrclkchanged = RESET;
 80065ae:	2100      	movs	r1, #0
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80065b0:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 80065b2:	0552      	lsls	r2, r2, #21
    FlagStatus       pwrclkchanged = RESET;
 80065b4:	9100      	str	r1, [sp, #0]
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80065b6:	4213      	tst	r3, r2
 80065b8:	d108      	bne.n	80065cc <HAL_RCC_OscConfig+0x250>
        __HAL_RCC_PWR_CLK_ENABLE();
 80065ba:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 80065bc:	4313      	orrs	r3, r2
 80065be:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80065c0:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 80065c2:	4013      	ands	r3, r2
 80065c4:	9303      	str	r3, [sp, #12]
 80065c6:	9b03      	ldr	r3, [sp, #12]
        pwrclkchanged = SET;
 80065c8:	2301      	movs	r3, #1
 80065ca:	9300      	str	r3, [sp, #0]
      if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80065cc:	2780      	movs	r7, #128	@ 0x80
 80065ce:	4e32      	ldr	r6, [pc, #200]	@ (8006698 <HAL_RCC_OscConfig+0x31c>)
 80065d0:	007f      	lsls	r7, r7, #1
 80065d2:	6833      	ldr	r3, [r6, #0]
 80065d4:	423b      	tst	r3, r7
 80065d6:	d015      	beq.n	8006604 <HAL_RCC_OscConfig+0x288>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80065d8:	68a3      	ldr	r3, [r4, #8]
 80065da:	2b01      	cmp	r3, #1
 80065dc:	d122      	bne.n	8006624 <HAL_RCC_OscConfig+0x2a8>
 80065de:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
 80065e0:	4313      	orrs	r3, r2
 80065e2:	65eb      	str	r3, [r5, #92]	@ 0x5c
        tickstart = HAL_GetTick();
 80065e4:	f7ff fc38 	bl	8005e58 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80065e8:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 80065ea:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80065ec:	6deb      	ldr	r3, [r5, #92]	@ 0x5c
 80065ee:	423b      	tst	r3, r7
 80065f0:	d038      	beq.n	8006664 <HAL_RCC_OscConfig+0x2e8>
      if (pwrclkchanged == SET)
 80065f2:	9b00      	ldr	r3, [sp, #0]
 80065f4:	2b01      	cmp	r3, #1
 80065f6:	d000      	beq.n	80065fa <HAL_RCC_OscConfig+0x27e>
 80065f8:	e6d6      	b.n	80063a8 <HAL_RCC_OscConfig+0x2c>
        __HAL_RCC_PWR_CLK_DISABLE();
 80065fa:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 80065fc:	4a27      	ldr	r2, [pc, #156]	@ (800669c <HAL_RCC_OscConfig+0x320>)
 80065fe:	4013      	ands	r3, r2
 8006600:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8006602:	e6d1      	b.n	80063a8 <HAL_RCC_OscConfig+0x2c>
        SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8006604:	6833      	ldr	r3, [r6, #0]
 8006606:	433b      	orrs	r3, r7
 8006608:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 800660a:	f7ff fc25 	bl	8005e58 <HAL_GetTick>
 800660e:	9001      	str	r0, [sp, #4]
        while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8006610:	6833      	ldr	r3, [r6, #0]
 8006612:	423b      	tst	r3, r7
 8006614:	d1e0      	bne.n	80065d8 <HAL_RCC_OscConfig+0x25c>
          if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006616:	f7ff fc1f 	bl	8005e58 <HAL_GetTick>
 800661a:	9b01      	ldr	r3, [sp, #4]
 800661c:	1ac0      	subs	r0, r0, r3
 800661e:	2802      	cmp	r0, #2
 8006620:	d9f6      	bls.n	8006610 <HAL_RCC_OscConfig+0x294>
 8006622:	e6ef      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006624:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
 8006626:	2b05      	cmp	r3, #5
 8006628:	d105      	bne.n	8006636 <HAL_RCC_OscConfig+0x2ba>
 800662a:	3b01      	subs	r3, #1
 800662c:	4313      	orrs	r3, r2
 800662e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8006630:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
 8006632:	2301      	movs	r3, #1
 8006634:	e7d4      	b.n	80065e0 <HAL_RCC_OscConfig+0x264>
 8006636:	2101      	movs	r1, #1
 8006638:	438a      	bics	r2, r1
 800663a:	65ea      	str	r2, [r5, #92]	@ 0x5c
 800663c:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
 800663e:	3103      	adds	r1, #3
 8006640:	438a      	bics	r2, r1
 8006642:	65ea      	str	r2, [r5, #92]	@ 0x5c
      if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8006644:	2b00      	cmp	r3, #0
 8006646:	d1cd      	bne.n	80065e4 <HAL_RCC_OscConfig+0x268>
        tickstart = HAL_GetTick();
 8006648:	f7ff fc06 	bl	8005e58 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 800664c:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 800664e:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8006650:	6deb      	ldr	r3, [r5, #92]	@ 0x5c
 8006652:	423b      	tst	r3, r7
 8006654:	d0cd      	beq.n	80065f2 <HAL_RCC_OscConfig+0x276>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006656:	f7ff fbff 	bl	8005e58 <HAL_GetTick>
 800665a:	4b11      	ldr	r3, [pc, #68]	@ (80066a0 <HAL_RCC_OscConfig+0x324>)
 800665c:	1b80      	subs	r0, r0, r6
 800665e:	4298      	cmp	r0, r3
 8006660:	d9f6      	bls.n	8006650 <HAL_RCC_OscConfig+0x2d4>
 8006662:	e6cf      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006664:	f7ff fbf8 	bl	8005e58 <HAL_GetTick>
 8006668:	4b0d      	ldr	r3, [pc, #52]	@ (80066a0 <HAL_RCC_OscConfig+0x324>)
 800666a:	1b80      	subs	r0, r0, r6
 800666c:	4298      	cmp	r0, r3
 800666e:	d9bd      	bls.n	80065ec <HAL_RCC_OscConfig+0x270>
 8006670:	e6c8      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
 8006672:	46c0      	nop			@ (mov r8, r8)
 8006674:	40021000 	.word	0x40021000
 8006678:	fffeffff 	.word	0xfffeffff
 800667c:	fffbffff 	.word	0xfffbffff
 8006680:	ffff80ff 	.word	0xffff80ff
 8006684:	ffffc7ff 	.word	0xffffc7ff
 8006688:	2000000c 	.word	0x2000000c
 800668c:	00f42400 	.word	0x00f42400
 8006690:	20000014 	.word	0x20000014
 8006694:	fffffeff 	.word	0xfffffeff
 8006698:	40007000 	.word	0x40007000
 800669c:	efffffff 	.word	0xefffffff
 80066a0:	00001388 	.word	0x00001388
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80066a4:	2138      	movs	r1, #56	@ 0x38
 80066a6:	4d43      	ldr	r5, [pc, #268]	@ (80067b4 <HAL_RCC_OscConfig+0x438>)
 80066a8:	68aa      	ldr	r2, [r5, #8]
 80066aa:	400a      	ands	r2, r1
 80066ac:	2a10      	cmp	r2, #16
 80066ae:	d053      	beq.n	8006758 <HAL_RCC_OscConfig+0x3dc>
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 80066b0:	4a41      	ldr	r2, [pc, #260]	@ (80067b8 <HAL_RCC_OscConfig+0x43c>)
 80066b2:	2b02      	cmp	r3, #2
 80066b4:	d13a      	bne.n	800672c <HAL_RCC_OscConfig+0x3b0>
        __HAL_RCC_PLL_DISABLE();
 80066b6:	682b      	ldr	r3, [r5, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 80066b8:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 80066ba:	4013      	ands	r3, r2
 80066bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80066be:	f7ff fbcb 	bl	8005e58 <HAL_GetTick>
 80066c2:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 80066c4:	04bf      	lsls	r7, r7, #18
 80066c6:	682b      	ldr	r3, [r5, #0]
 80066c8:	423b      	tst	r3, r7
 80066ca:	d129      	bne.n	8006720 <HAL_RCC_OscConfig+0x3a4>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80066cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80066ce:	6a23      	ldr	r3, [r4, #32]
 80066d0:	68ea      	ldr	r2, [r5, #12]
 80066d2:	430b      	orrs	r3, r1
 80066d4:	4939      	ldr	r1, [pc, #228]	@ (80067bc <HAL_RCC_OscConfig+0x440>)
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80066d6:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80066d8:	400a      	ands	r2, r1
 80066da:	4313      	orrs	r3, r2
 80066dc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80066de:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80066e0:	4313      	orrs	r3, r2
 80066e2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80066e4:	4313      	orrs	r3, r2
 80066e6:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 80066e8:	4313      	orrs	r3, r2
 80066ea:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80066ec:	0212      	lsls	r2, r2, #8
 80066ee:	4313      	orrs	r3, r2
 80066f0:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_ENABLE();
 80066f2:	2380      	movs	r3, #128	@ 0x80
 80066f4:	682a      	ldr	r2, [r5, #0]
 80066f6:	045b      	lsls	r3, r3, #17
 80066f8:	4313      	orrs	r3, r2
 80066fa:	602b      	str	r3, [r5, #0]
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLRCLK);
 80066fc:	2380      	movs	r3, #128	@ 0x80
 80066fe:	68ea      	ldr	r2, [r5, #12]
 8006700:	055b      	lsls	r3, r3, #21
 8006702:	4313      	orrs	r3, r2
 8006704:	60eb      	str	r3, [r5, #12]
        tickstart = HAL_GetTick();
 8006706:	f7ff fba7 	bl	8005e58 <HAL_GetTick>
 800670a:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800670c:	682b      	ldr	r3, [r5, #0]
 800670e:	4233      	tst	r3, r6
 8006710:	d000      	beq.n	8006714 <HAL_RCC_OscConfig+0x398>
 8006712:	e64d      	b.n	80063b0 <HAL_RCC_OscConfig+0x34>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006714:	f7ff fba0 	bl	8005e58 <HAL_GetTick>
 8006718:	1b00      	subs	r0, r0, r4
 800671a:	2802      	cmp	r0, #2
 800671c:	d9f6      	bls.n	800670c <HAL_RCC_OscConfig+0x390>
 800671e:	e671      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006720:	f7ff fb9a 	bl	8005e58 <HAL_GetTick>
 8006724:	1b80      	subs	r0, r0, r6
 8006726:	2802      	cmp	r0, #2
 8006728:	d9cd      	bls.n	80066c6 <HAL_RCC_OscConfig+0x34a>
 800672a:	e66b      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_PLL_DISABLE();
 800672c:	682b      	ldr	r3, [r5, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 800672e:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 8006730:	4013      	ands	r3, r2
 8006732:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006734:	f7ff fb90 	bl	8005e58 <HAL_GetTick>
 8006738:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 800673a:	04b6      	lsls	r6, r6, #18
 800673c:	682b      	ldr	r3, [r5, #0]
 800673e:	4233      	tst	r3, r6
 8006740:	d104      	bne.n	800674c <HAL_RCC_OscConfig+0x3d0>
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLQEN | RCC_PLLCFGR_PLLREN);
 8006742:	68eb      	ldr	r3, [r5, #12]
 8006744:	4a1e      	ldr	r2, [pc, #120]	@ (80067c0 <HAL_RCC_OscConfig+0x444>)
 8006746:	4013      	ands	r3, r2
 8006748:	60eb      	str	r3, [r5, #12]
 800674a:	e631      	b.n	80063b0 <HAL_RCC_OscConfig+0x34>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800674c:	f7ff fb84 	bl	8005e58 <HAL_GetTick>
 8006750:	1b00      	subs	r0, r0, r4
 8006752:	2802      	cmp	r0, #2
 8006754:	d9f2      	bls.n	800673c <HAL_RCC_OscConfig+0x3c0>
 8006756:	e655      	b.n	8006404 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006758:	2b01      	cmp	r3, #1
 800675a:	d100      	bne.n	800675e <HAL_RCC_OscConfig+0x3e2>
 800675c:	e613      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800675e:	2203      	movs	r2, #3
        temp_pllckcfg = RCC->PLLCFGR;
 8006760:	68e8      	ldr	r0, [r5, #12]
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006762:	6a21      	ldr	r1, [r4, #32]
 8006764:	4002      	ands	r2, r0
 8006766:	428a      	cmp	r2, r1
 8006768:	d000      	beq.n	800676c <HAL_RCC_OscConfig+0x3f0>
 800676a:	e60c      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800676c:	2270      	movs	r2, #112	@ 0x70
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800676e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006770:	4002      	ands	r2, r0
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006772:	428a      	cmp	r2, r1
 8006774:	d000      	beq.n	8006778 <HAL_RCC_OscConfig+0x3fc>
 8006776:	e606      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8006778:	21fe      	movs	r1, #254	@ 0xfe
 800677a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800677c:	01c9      	lsls	r1, r1, #7
 800677e:	4001      	ands	r1, r0
 8006780:	0212      	lsls	r2, r2, #8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006782:	4291      	cmp	r1, r2
 8006784:	d000      	beq.n	8006788 <HAL_RCC_OscConfig+0x40c>
 8006786:	e5fe      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006788:	22f8      	movs	r2, #248	@ 0xf8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800678a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800678c:	0392      	lsls	r2, r2, #14
 800678e:	4002      	ands	r2, r0
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8006790:	428a      	cmp	r2, r1
 8006792:	d000      	beq.n	8006796 <HAL_RCC_OscConfig+0x41a>
 8006794:	e5f7      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 8006796:	22e0      	movs	r2, #224	@ 0xe0
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006798:	6b21      	ldr	r1, [r4, #48]	@ 0x30
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 800679a:	0512      	lsls	r2, r2, #20
 800679c:	4002      	ands	r2, r0
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800679e:	428a      	cmp	r2, r1
 80067a0:	d000      	beq.n	80067a4 <HAL_RCC_OscConfig+0x428>
 80067a2:	e5f0      	b.n	8006386 <HAL_RCC_OscConfig+0xa>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 80067a4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != RCC_OscInitStruct->PLL.PLLR))
 80067a6:	0f40      	lsrs	r0, r0, #29
 80067a8:	0740      	lsls	r0, r0, #29
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 80067aa:	1ac0      	subs	r0, r0, r3
 80067ac:	1e43      	subs	r3, r0, #1
 80067ae:	4198      	sbcs	r0, r3
 80067b0:	b2c0      	uxtb	r0, r0
 80067b2:	e5e9      	b.n	8006388 <HAL_RCC_OscConfig+0xc>
 80067b4:	40021000 	.word	0x40021000
 80067b8:	feffffff 	.word	0xfeffffff
 80067bc:	11c1808c 	.word	0x11c1808c
 80067c0:	eefefffc 	.word	0xeefefffc

080067c4 <HAL_RCC_GetSysClockFreq>:
uint32_t HAL_RCC_GetSysClockFreq(void)
{
  uint32_t pllvco, pllsource, pllr, pllm, hsidiv;
  uint32_t sysclockfreq;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80067c4:	2338      	movs	r3, #56	@ 0x38
{
 80067c6:	b570      	push	{r4, r5, r6, lr}
  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80067c8:	4c1d      	ldr	r4, [pc, #116]	@ (8006840 <HAL_RCC_GetSysClockFreq+0x7c>)
 80067ca:	68a2      	ldr	r2, [r4, #8]
 80067cc:	421a      	tst	r2, r3
 80067ce:	d105      	bne.n	80067dc <HAL_RCC_GetSysClockFreq+0x18>
  {
    /* HSISYS can be derived for HSI16 */
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80067d0:	6823      	ldr	r3, [r4, #0]

    /* HSI used as system clock source */
    sysclockfreq = (HSI_VALUE / hsidiv);
 80067d2:	481c      	ldr	r0, [pc, #112]	@ (8006844 <HAL_RCC_GetSysClockFreq+0x80>)
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80067d4:	049b      	lsls	r3, r3, #18
 80067d6:	0f5b      	lsrs	r3, r3, #29
    sysclockfreq = (HSI_VALUE / hsidiv);
 80067d8:	40d8      	lsrs	r0, r3
  {
    sysclockfreq = 0U;
  }

  return sysclockfreq;
}
 80067da:	bd70      	pop	{r4, r5, r6, pc}
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80067dc:	68a2      	ldr	r2, [r4, #8]
 80067de:	401a      	ands	r2, r3
 80067e0:	2a08      	cmp	r2, #8
 80067e2:	d027      	beq.n	8006834 <HAL_RCC_GetSysClockFreq+0x70>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80067e4:	68a2      	ldr	r2, [r4, #8]
 80067e6:	401a      	ands	r2, r3
 80067e8:	2a10      	cmp	r2, #16
 80067ea:	d117      	bne.n	800681c <HAL_RCC_GetSysClockFreq+0x58>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 80067ec:	68e3      	ldr	r3, [r4, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80067ee:	68e1      	ldr	r1, [r4, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 80067f0:	43db      	mvns	r3, r3
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 80067f2:	68e5      	ldr	r5, [r4, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80067f4:	0649      	lsls	r1, r1, #25
 80067f6:	0f49      	lsrs	r1, r1, #29
 80067f8:	326f      	adds	r2, #111	@ 0x6f
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 80067fa:	0a2d      	lsrs	r5, r5, #8
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80067fc:	3101      	adds	r1, #1
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 80067fe:	4015      	ands	r5, r2
    switch (pllsource)
 8006800:	079b      	lsls	r3, r3, #30
 8006802:	d109      	bne.n	8006818 <HAL_RCC_GetSysClockFreq+0x54>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8006804:	4810      	ldr	r0, [pc, #64]	@ (8006848 <HAL_RCC_GetSysClockFreq+0x84>)
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8006806:	f7f9 fcad 	bl	8000164 <__udivsi3>
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 800680a:	68e1      	ldr	r1, [r4, #12]
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 800680c:	4368      	muls	r0, r5
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 800680e:	0f49      	lsrs	r1, r1, #29
 8006810:	3101      	adds	r1, #1
    sysclockfreq = pllvco / pllr;
 8006812:	f7f9 fca7 	bl	8000164 <__udivsi3>
 8006816:	e7e0      	b.n	80067da <HAL_RCC_GetSysClockFreq+0x16>
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8006818:	480a      	ldr	r0, [pc, #40]	@ (8006844 <HAL_RCC_GetSysClockFreq+0x80>)
 800681a:	e7f4      	b.n	8006806 <HAL_RCC_GetSysClockFreq+0x42>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 800681c:	68a2      	ldr	r2, [r4, #8]
 800681e:	401a      	ands	r2, r3
 8006820:	2a20      	cmp	r2, #32
 8006822:	d009      	beq.n	8006838 <HAL_RCC_GetSysClockFreq+0x74>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8006824:	68a2      	ldr	r2, [r4, #8]
    sysclockfreq = 0U;
 8006826:	2000      	movs	r0, #0
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8006828:	4013      	ands	r3, r2
 800682a:	2b18      	cmp	r3, #24
 800682c:	d1d5      	bne.n	80067da <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = LSI_VALUE;
 800682e:	20fa      	movs	r0, #250	@ 0xfa
 8006830:	01c0      	lsls	r0, r0, #7
 8006832:	e7d2      	b.n	80067da <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = HSE_VALUE;
 8006834:	4804      	ldr	r0, [pc, #16]	@ (8006848 <HAL_RCC_GetSysClockFreq+0x84>)
 8006836:	e7d0      	b.n	80067da <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = LSE_VALUE;
 8006838:	2080      	movs	r0, #128	@ 0x80
 800683a:	0200      	lsls	r0, r0, #8
 800683c:	e7cd      	b.n	80067da <HAL_RCC_GetSysClockFreq+0x16>
 800683e:	46c0      	nop			@ (mov r8, r8)
 8006840:	40021000 	.word	0x40021000
 8006844:	00f42400 	.word	0x00f42400
 8006848:	007a1200 	.word	0x007a1200

0800684c <HAL_RCC_ClockConfig>:
{
 800684c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800684e:	0004      	movs	r4, r0
 8006850:	000d      	movs	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8006852:	2800      	cmp	r0, #0
 8006854:	d101      	bne.n	800685a <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 8006856:	2001      	movs	r0, #1
}
 8006858:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800685a:	2707      	movs	r7, #7
 800685c:	4e4a      	ldr	r6, [pc, #296]	@ (8006988 <HAL_RCC_ClockConfig+0x13c>)
 800685e:	6833      	ldr	r3, [r6, #0]
 8006860:	403b      	ands	r3, r7
 8006862:	428b      	cmp	r3, r1
 8006864:	d32a      	bcc.n	80068bc <HAL_RCC_ClockConfig+0x70>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006866:	6822      	ldr	r2, [r4, #0]
 8006868:	0793      	lsls	r3, r2, #30
 800686a:	d43b      	bmi.n	80068e4 <HAL_RCC_ClockConfig+0x98>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800686c:	07d2      	lsls	r2, r2, #31
 800686e:	d448      	bmi.n	8006902 <HAL_RCC_ClockConfig+0xb6>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006870:	2707      	movs	r7, #7
 8006872:	6833      	ldr	r3, [r6, #0]
 8006874:	403b      	ands	r3, r7
 8006876:	42ab      	cmp	r3, r5
 8006878:	d90a      	bls.n	8006890 <HAL_RCC_ClockConfig+0x44>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800687a:	6833      	ldr	r3, [r6, #0]
 800687c:	43bb      	bics	r3, r7
 800687e:	432b      	orrs	r3, r5
 8006880:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8006882:	f7ff fae9 	bl	8005e58 <HAL_GetTick>
 8006886:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8006888:	6833      	ldr	r3, [r6, #0]
 800688a:	403b      	ands	r3, r7
 800688c:	42ab      	cmp	r3, r5
 800688e:	d16b      	bne.n	8006968 <HAL_RCC_ClockConfig+0x11c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006890:	6823      	ldr	r3, [r4, #0]
 8006892:	4d3e      	ldr	r5, [pc, #248]	@ (800698c <HAL_RCC_ClockConfig+0x140>)
 8006894:	075b      	lsls	r3, r3, #29
 8006896:	d46f      	bmi.n	8006978 <HAL_RCC_ClockConfig+0x12c>
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 8006898:	f7ff ff94 	bl	80067c4 <HAL_RCC_GetSysClockFreq>
 800689c:	68ab      	ldr	r3, [r5, #8]
 800689e:	493c      	ldr	r1, [pc, #240]	@ (8006990 <HAL_RCC_ClockConfig+0x144>)
 80068a0:	051b      	lsls	r3, r3, #20
 80068a2:	0f1b      	lsrs	r3, r3, #28
 80068a4:	009b      	lsls	r3, r3, #2
 80068a6:	585b      	ldr	r3, [r3, r1]
 80068a8:	211f      	movs	r1, #31
 80068aa:	400b      	ands	r3, r1
 80068ac:	40d8      	lsrs	r0, r3
 80068ae:	4a39      	ldr	r2, [pc, #228]	@ (8006994 <HAL_RCC_ClockConfig+0x148>)
  return HAL_InitTick(uwTickPrio);
 80068b0:	4b39      	ldr	r3, [pc, #228]	@ (8006998 <HAL_RCC_ClockConfig+0x14c>)
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 80068b2:	6010      	str	r0, [r2, #0]
  return HAL_InitTick(uwTickPrio);
 80068b4:	6818      	ldr	r0, [r3, #0]
 80068b6:	f7ff fa87 	bl	8005dc8 <HAL_InitTick>
 80068ba:	e7cd      	b.n	8006858 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80068bc:	6833      	ldr	r3, [r6, #0]
 80068be:	43bb      	bics	r3, r7
 80068c0:	430b      	orrs	r3, r1
 80068c2:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80068c4:	f7ff fac8 	bl	8005e58 <HAL_GetTick>
 80068c8:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80068ca:	6833      	ldr	r3, [r6, #0]
 80068cc:	403b      	ands	r3, r7
 80068ce:	42ab      	cmp	r3, r5
 80068d0:	d0c9      	beq.n	8006866 <HAL_RCC_ClockConfig+0x1a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80068d2:	f7ff fac1 	bl	8005e58 <HAL_GetTick>
 80068d6:	9b01      	ldr	r3, [sp, #4]
 80068d8:	1ac0      	subs	r0, r0, r3
 80068da:	4b30      	ldr	r3, [pc, #192]	@ (800699c <HAL_RCC_ClockConfig+0x150>)
 80068dc:	4298      	cmp	r0, r3
 80068de:	d9f4      	bls.n	80068ca <HAL_RCC_ClockConfig+0x7e>
        return HAL_TIMEOUT;
 80068e0:	2003      	movs	r0, #3
 80068e2:	e7b9      	b.n	8006858 <HAL_RCC_ClockConfig+0xc>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80068e4:	4929      	ldr	r1, [pc, #164]	@ (800698c <HAL_RCC_ClockConfig+0x140>)
 80068e6:	0753      	lsls	r3, r2, #29
 80068e8:	d504      	bpl.n	80068f4 <HAL_RCC_ClockConfig+0xa8>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 80068ea:	23e0      	movs	r3, #224	@ 0xe0
 80068ec:	6888      	ldr	r0, [r1, #8]
 80068ee:	01db      	lsls	r3, r3, #7
 80068f0:	4303      	orrs	r3, r0
 80068f2:	608b      	str	r3, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80068f4:	688b      	ldr	r3, [r1, #8]
 80068f6:	482a      	ldr	r0, [pc, #168]	@ (80069a0 <HAL_RCC_ClockConfig+0x154>)
 80068f8:	4003      	ands	r3, r0
 80068fa:	68a0      	ldr	r0, [r4, #8]
 80068fc:	4303      	orrs	r3, r0
 80068fe:	608b      	str	r3, [r1, #8]
 8006900:	e7b4      	b.n	800686c <HAL_RCC_ClockConfig+0x20>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006902:	6862      	ldr	r2, [r4, #4]
 8006904:	4f21      	ldr	r7, [pc, #132]	@ (800698c <HAL_RCC_ClockConfig+0x140>)
 8006906:	2a01      	cmp	r2, #1
 8006908:	d119      	bne.n	800693e <HAL_RCC_ClockConfig+0xf2>
      if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 800690a:	683b      	ldr	r3, [r7, #0]
 800690c:	039b      	lsls	r3, r3, #14
 800690e:	d5a2      	bpl.n	8006856 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8006910:	2107      	movs	r1, #7
 8006912:	68bb      	ldr	r3, [r7, #8]
 8006914:	438b      	bics	r3, r1
 8006916:	4313      	orrs	r3, r2
 8006918:	60bb      	str	r3, [r7, #8]
    tickstart = HAL_GetTick();
 800691a:	f7ff fa9d 	bl	8005e58 <HAL_GetTick>
 800691e:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006920:	2338      	movs	r3, #56	@ 0x38
 8006922:	68ba      	ldr	r2, [r7, #8]
 8006924:	401a      	ands	r2, r3
 8006926:	6863      	ldr	r3, [r4, #4]
 8006928:	00db      	lsls	r3, r3, #3
 800692a:	429a      	cmp	r2, r3
 800692c:	d0a0      	beq.n	8006870 <HAL_RCC_ClockConfig+0x24>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800692e:	f7ff fa93 	bl	8005e58 <HAL_GetTick>
 8006932:	9b01      	ldr	r3, [sp, #4]
 8006934:	1ac0      	subs	r0, r0, r3
 8006936:	4b19      	ldr	r3, [pc, #100]	@ (800699c <HAL_RCC_ClockConfig+0x150>)
 8006938:	4298      	cmp	r0, r3
 800693a:	d9f1      	bls.n	8006920 <HAL_RCC_ClockConfig+0xd4>
 800693c:	e7d0      	b.n	80068e0 <HAL_RCC_ClockConfig+0x94>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800693e:	2a02      	cmp	r2, #2
 8006940:	d103      	bne.n	800694a <HAL_RCC_ClockConfig+0xfe>
      if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8006942:	683b      	ldr	r3, [r7, #0]
 8006944:	019b      	lsls	r3, r3, #6
 8006946:	d4e3      	bmi.n	8006910 <HAL_RCC_ClockConfig+0xc4>
 8006948:	e785      	b.n	8006856 <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 800694a:	2a00      	cmp	r2, #0
 800694c:	d103      	bne.n	8006956 <HAL_RCC_ClockConfig+0x10a>
      if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 800694e:	683b      	ldr	r3, [r7, #0]
 8006950:	055b      	lsls	r3, r3, #21
 8006952:	d4dd      	bmi.n	8006910 <HAL_RCC_ClockConfig+0xc4>
 8006954:	e77f      	b.n	8006856 <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_LSI)
 8006956:	2302      	movs	r3, #2
 8006958:	2a03      	cmp	r2, #3
 800695a:	d103      	bne.n	8006964 <HAL_RCC_ClockConfig+0x118>
      if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 800695c:	6e39      	ldr	r1, [r7, #96]	@ 0x60
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 800695e:	4219      	tst	r1, r3
 8006960:	d1d6      	bne.n	8006910 <HAL_RCC_ClockConfig+0xc4>
 8006962:	e778      	b.n	8006856 <HAL_RCC_ClockConfig+0xa>
 8006964:	6df9      	ldr	r1, [r7, #92]	@ 0x5c
 8006966:	e7fa      	b.n	800695e <HAL_RCC_ClockConfig+0x112>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006968:	f7ff fa76 	bl	8005e58 <HAL_GetTick>
 800696c:	9b01      	ldr	r3, [sp, #4]
 800696e:	1ac0      	subs	r0, r0, r3
 8006970:	4b0a      	ldr	r3, [pc, #40]	@ (800699c <HAL_RCC_ClockConfig+0x150>)
 8006972:	4298      	cmp	r0, r3
 8006974:	d988      	bls.n	8006888 <HAL_RCC_ClockConfig+0x3c>
 8006976:	e7b3      	b.n	80068e0 <HAL_RCC_ClockConfig+0x94>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8006978:	68ab      	ldr	r3, [r5, #8]
 800697a:	4a0a      	ldr	r2, [pc, #40]	@ (80069a4 <HAL_RCC_ClockConfig+0x158>)
 800697c:	4013      	ands	r3, r2
 800697e:	68e2      	ldr	r2, [r4, #12]
 8006980:	4313      	orrs	r3, r2
 8006982:	60ab      	str	r3, [r5, #8]
 8006984:	e788      	b.n	8006898 <HAL_RCC_ClockConfig+0x4c>
 8006986:	46c0      	nop			@ (mov r8, r8)
 8006988:	40022000 	.word	0x40022000
 800698c:	40021000 	.word	0x40021000
 8006990:	08015738 	.word	0x08015738
 8006994:	2000000c 	.word	0x2000000c
 8006998:	20000014 	.word	0x20000014
 800699c:	00001388 	.word	0x00001388
 80069a0:	fffff0ff 	.word	0xfffff0ff
 80069a4:	ffff8fff 	.word	0xffff8fff

080069a8 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80069a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069aa:	0004      	movs	r4, r0
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
  {
    return HAL_ERROR;
 80069ac:	2001      	movs	r0, #1
  if (hspi == NULL)
 80069ae:	2c00      	cmp	r4, #0
 80069b0:	d067      	beq.n	8006a82 <HAL_SPI_Init+0xda>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80069b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80069b4:	2b00      	cmp	r3, #0
 80069b6:	d165      	bne.n	8006a84 <HAL_SPI_Init+0xdc>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80069b8:	2282      	movs	r2, #130	@ 0x82
 80069ba:	6861      	ldr	r1, [r4, #4]
 80069bc:	0052      	lsls	r2, r2, #1
 80069be:	4291      	cmp	r1, r2
 80069c0:	d000      	beq.n	80069c4 <HAL_SPI_Init+0x1c>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80069c2:	61e3      	str	r3, [r4, #28]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80069c4:	2300      	movs	r3, #0
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 80069c6:	0025      	movs	r5, r4
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80069c8:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80069ca:	355d      	adds	r5, #93	@ 0x5d
 80069cc:	782b      	ldrb	r3, [r5, #0]
 80069ce:	b2da      	uxtb	r2, r3
 80069d0:	2b00      	cmp	r3, #0
 80069d2:	d105      	bne.n	80069e0 <HAL_SPI_Init+0x38>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80069d4:	0023      	movs	r3, r4
 80069d6:	335c      	adds	r3, #92	@ 0x5c

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80069d8:	0020      	movs	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 80069da:	701a      	strb	r2, [r3, #0]
    HAL_SPI_MspInit(hspi);
 80069dc:	f7fb fa82 	bl	8001ee4 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80069e0:	2302      	movs	r3, #2

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80069e2:	2240      	movs	r2, #64	@ 0x40
  hspi->State = HAL_SPI_STATE_BUSY;
 80069e4:	702b      	strb	r3, [r5, #0]
  __HAL_SPI_DISABLE(hspi);
 80069e6:	6821      	ldr	r1, [r4, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80069e8:	68e6      	ldr	r6, [r4, #12]
  __HAL_SPI_DISABLE(hspi);
 80069ea:	680b      	ldr	r3, [r1, #0]
 80069ec:	4393      	bics	r3, r2
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80069ee:	22e0      	movs	r2, #224	@ 0xe0
  __HAL_SPI_DISABLE(hspi);
 80069f0:	600b      	str	r3, [r1, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80069f2:	00d2      	lsls	r2, r2, #3
 80069f4:	2300      	movs	r3, #0
 80069f6:	4296      	cmp	r6, r2
 80069f8:	d948      	bls.n	8006a8c <HAL_SPI_Init+0xe4>
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80069fa:	22f0      	movs	r2, #240	@ 0xf0
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 80069fc:	0018      	movs	r0, r3
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80069fe:	0112      	lsls	r2, r2, #4
 8006a00:	4296      	cmp	r6, r2
 8006a02:	d000      	beq.n	8006a06 <HAL_SPI_Init+0x5e>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006a04:	62a3      	str	r3, [r4, #40]	@ 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006a06:	2282      	movs	r2, #130	@ 0x82
 8006a08:	2784      	movs	r7, #132	@ 0x84
 8006a0a:	6863      	ldr	r3, [r4, #4]
 8006a0c:	0052      	lsls	r2, r2, #1
 8006a0e:	4013      	ands	r3, r2
 8006a10:	68a2      	ldr	r2, [r4, #8]
 8006a12:	023f      	lsls	r7, r7, #8
 8006a14:	403a      	ands	r2, r7
 8006a16:	2702      	movs	r7, #2
 8006a18:	4313      	orrs	r3, r2
 8006a1a:	6922      	ldr	r2, [r4, #16]
 8006a1c:	69a5      	ldr	r5, [r4, #24]
 8006a1e:	403a      	ands	r2, r7
 8006a20:	4313      	orrs	r3, r2
 8006a22:	2201      	movs	r2, #1
 8006a24:	6967      	ldr	r7, [r4, #20]
 8006a26:	4017      	ands	r7, r2
 8006a28:	433b      	orrs	r3, r7
 8006a2a:	2780      	movs	r7, #128	@ 0x80
 8006a2c:	00bf      	lsls	r7, r7, #2
 8006a2e:	402f      	ands	r7, r5
 8006a30:	433b      	orrs	r3, r7
 8006a32:	69e7      	ldr	r7, [r4, #28]
 8006a34:	3237      	adds	r2, #55	@ 0x37
 8006a36:	4017      	ands	r7, r2
 8006a38:	433b      	orrs	r3, r7
 8006a3a:	6a27      	ldr	r7, [r4, #32]
 8006a3c:	3248      	adds	r2, #72	@ 0x48
 8006a3e:	4017      	ands	r7, r2
 8006a40:	2280      	movs	r2, #128	@ 0x80
 8006a42:	433b      	orrs	r3, r7
 8006a44:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 8006a46:	0192      	lsls	r2, r2, #6
 8006a48:	4017      	ands	r7, r2
 8006a4a:	433b      	orrs	r3, r7
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8006a4c:	2710      	movs	r7, #16
 8006a4e:	2208      	movs	r2, #8
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006a50:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8006a52:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006a54:	0c2d      	lsrs	r5, r5, #16
 8006a56:	403b      	ands	r3, r7
 8006a58:	6b67      	ldr	r7, [r4, #52]	@ 0x34
 8006a5a:	4017      	ands	r7, r2
 8006a5c:	433b      	orrs	r3, r7
 8006a5e:	27f0      	movs	r7, #240	@ 0xf0
 8006a60:	013f      	lsls	r7, r7, #4
 8006a62:	403e      	ands	r6, r7
 8006a64:	4333      	orrs	r3, r6
 8006a66:	2604      	movs	r6, #4
 8006a68:	4035      	ands	r5, r6
 8006a6a:	432b      	orrs	r3, r5
 8006a6c:	4303      	orrs	r3, r0
 8006a6e:	604b      	str	r3, [r1, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006a70:	69cb      	ldr	r3, [r1, #28]
 8006a72:	4808      	ldr	r0, [pc, #32]	@ (8006a94 <HAL_SPI_Init+0xec>)
 8006a74:	4003      	ands	r3, r0
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006a76:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006a78:	61cb      	str	r3, [r1, #28]
  hspi->State     = HAL_SPI_STATE_READY;
 8006a7a:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006a7c:	6620      	str	r0, [r4, #96]	@ 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8006a7e:	345d      	adds	r4, #93	@ 0x5d
 8006a80:	7023      	strb	r3, [r4, #0]

  return HAL_OK;
}
 8006a82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006a84:	2300      	movs	r3, #0
 8006a86:	6123      	str	r3, [r4, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006a88:	6163      	str	r3, [r4, #20]
 8006a8a:	e79b      	b.n	80069c4 <HAL_SPI_Init+0x1c>
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 8006a8c:	2080      	movs	r0, #128	@ 0x80
 8006a8e:	0140      	lsls	r0, r0, #5
 8006a90:	e7b6      	b.n	8006a00 <HAL_SPI_Init+0x58>
 8006a92:	46c0      	nop			@ (mov r8, r8)
 8006a94:	fffff7ff 	.word	0xfffff7ff

08006a98 <HAL_SPI_ErrorCallback>:
  * @brief  SPI error callback.
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
 8006a98:	4770      	bx	lr
	...

08006a9c <HAL_SPI_IRQHandler>:
  uint32_t itsource = hspi->Instance->CR2;
 8006a9c:	6803      	ldr	r3, [r0, #0]
{
 8006a9e:	b530      	push	{r4, r5, lr}
 8006aa0:	0004      	movs	r4, r0
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006aa2:	2041      	movs	r0, #65	@ 0x41
  uint32_t itsource = hspi->Instance->CR2;
 8006aa4:	6859      	ldr	r1, [r3, #4]
  uint32_t itflag   = hspi->Instance->SR;
 8006aa6:	689a      	ldr	r2, [r3, #8]
{
 8006aa8:	b085      	sub	sp, #20
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006aaa:	4010      	ands	r0, r2
 8006aac:	2801      	cmp	r0, #1
 8006aae:	d106      	bne.n	8006abe <HAL_SPI_IRQHandler+0x22>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006ab0:	0648      	lsls	r0, r1, #25
 8006ab2:	d504      	bpl.n	8006abe <HAL_SPI_IRQHandler+0x22>
    hspi->RxISR(hspi);
 8006ab4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
    hspi->TxISR(hspi);
 8006ab6:	0020      	movs	r0, r4
 8006ab8:	4798      	blx	r3
}
 8006aba:	b005      	add	sp, #20
 8006abc:	bd30      	pop	{r4, r5, pc}
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8006abe:	0790      	lsls	r0, r2, #30
 8006ac0:	d503      	bpl.n	8006aca <HAL_SPI_IRQHandler+0x2e>
 8006ac2:	0608      	lsls	r0, r1, #24
 8006ac4:	d501      	bpl.n	8006aca <HAL_SPI_IRQHandler+0x2e>
    hspi->TxISR(hspi);
 8006ac6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8006ac8:	e7f5      	b.n	8006ab6 <HAL_SPI_IRQHandler+0x1a>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8006aca:	20b0      	movs	r0, #176	@ 0xb0
 8006acc:	0040      	lsls	r0, r0, #1
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006ace:	4202      	tst	r2, r0
 8006ad0:	d0f3      	beq.n	8006aba <HAL_SPI_IRQHandler+0x1e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8006ad2:	0688      	lsls	r0, r1, #26
 8006ad4:	d5f1      	bpl.n	8006aba <HAL_SPI_IRQHandler+0x1e>
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006ad6:	0650      	lsls	r0, r2, #25
 8006ad8:	d50f      	bpl.n	8006afa <HAL_SPI_IRQHandler+0x5e>
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006ada:	0020      	movs	r0, r4
 8006adc:	305d      	adds	r0, #93	@ 0x5d
 8006ade:	7800      	ldrb	r0, [r0, #0]
 8006ae0:	2803      	cmp	r0, #3
 8006ae2:	d050      	beq.n	8006b86 <HAL_SPI_IRQHandler+0xea>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006ae4:	2004      	movs	r0, #4
 8006ae6:	6e25      	ldr	r5, [r4, #96]	@ 0x60
 8006ae8:	4328      	orrs	r0, r5
 8006aea:	6620      	str	r0, [r4, #96]	@ 0x60
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006aec:	2000      	movs	r0, #0
 8006aee:	9000      	str	r0, [sp, #0]
 8006af0:	68d8      	ldr	r0, [r3, #12]
 8006af2:	9000      	str	r0, [sp, #0]
 8006af4:	6898      	ldr	r0, [r3, #8]
 8006af6:	9000      	str	r0, [sp, #0]
 8006af8:	9800      	ldr	r0, [sp, #0]
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006afa:	0690      	lsls	r0, r2, #26
 8006afc:	d50c      	bpl.n	8006b18 <HAL_SPI_IRQHandler+0x7c>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006afe:	2001      	movs	r0, #1
 8006b00:	6e25      	ldr	r5, [r4, #96]	@ 0x60
 8006b02:	4328      	orrs	r0, r5
 8006b04:	6620      	str	r0, [r4, #96]	@ 0x60
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006b06:	2000      	movs	r0, #0
 8006b08:	2540      	movs	r5, #64	@ 0x40
 8006b0a:	9002      	str	r0, [sp, #8]
 8006b0c:	6898      	ldr	r0, [r3, #8]
 8006b0e:	9002      	str	r0, [sp, #8]
 8006b10:	6818      	ldr	r0, [r3, #0]
 8006b12:	43a8      	bics	r0, r5
 8006b14:	6018      	str	r0, [r3, #0]
 8006b16:	9802      	ldr	r0, [sp, #8]
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8006b18:	05d2      	lsls	r2, r2, #23
 8006b1a:	d508      	bpl.n	8006b2e <HAL_SPI_IRQHandler+0x92>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006b1c:	2208      	movs	r2, #8
 8006b1e:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8006b20:	4302      	orrs	r2, r0
 8006b22:	6622      	str	r2, [r4, #96]	@ 0x60
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006b24:	2200      	movs	r2, #0
 8006b26:	9203      	str	r2, [sp, #12]
 8006b28:	689a      	ldr	r2, [r3, #8]
 8006b2a:	9203      	str	r2, [sp, #12]
 8006b2c:	9a03      	ldr	r2, [sp, #12]
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006b2e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8006b30:	2a00      	cmp	r2, #0
 8006b32:	d0c2      	beq.n	8006aba <HAL_SPI_IRQHandler+0x1e>
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8006b34:	20e0      	movs	r0, #224	@ 0xe0
 8006b36:	685a      	ldr	r2, [r3, #4]
 8006b38:	4382      	bics	r2, r0
 8006b3a:	605a      	str	r2, [r3, #4]
      hspi->State = HAL_SPI_STATE_READY;
 8006b3c:	0022      	movs	r2, r4
 8006b3e:	38df      	subs	r0, #223	@ 0xdf
 8006b40:	325d      	adds	r2, #93	@ 0x5d
 8006b42:	7010      	strb	r0, [r2, #0]
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8006b44:	3002      	adds	r0, #2
 8006b46:	4201      	tst	r1, r0
 8006b48:	d025      	beq.n	8006b96 <HAL_SPI_IRQHandler+0xfa>
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006b4a:	685a      	ldr	r2, [r3, #4]
 8006b4c:	4382      	bics	r2, r0
        if (hspi->hdmarx != NULL)
 8006b4e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006b50:	605a      	str	r2, [r3, #4]
        if (hspi->hdmarx != NULL)
 8006b52:	2800      	cmp	r0, #0
 8006b54:	d009      	beq.n	8006b6a <HAL_SPI_IRQHandler+0xce>
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8006b56:	4b12      	ldr	r3, [pc, #72]	@ (8006ba0 <HAL_SPI_IRQHandler+0x104>)
 8006b58:	6383      	str	r3, [r0, #56]	@ 0x38
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006b5a:	f7ff facf 	bl	80060fc <HAL_DMA_Abort_IT>
 8006b5e:	2800      	cmp	r0, #0
 8006b60:	d003      	beq.n	8006b6a <HAL_SPI_IRQHandler+0xce>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006b62:	2340      	movs	r3, #64	@ 0x40
 8006b64:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8006b66:	4313      	orrs	r3, r2
 8006b68:	6623      	str	r3, [r4, #96]	@ 0x60
        if (hspi->hdmatx != NULL)
 8006b6a:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006b6c:	2800      	cmp	r0, #0
 8006b6e:	d0a4      	beq.n	8006aba <HAL_SPI_IRQHandler+0x1e>
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006b70:	4b0b      	ldr	r3, [pc, #44]	@ (8006ba0 <HAL_SPI_IRQHandler+0x104>)
 8006b72:	6383      	str	r3, [r0, #56]	@ 0x38
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006b74:	f7ff fac2 	bl	80060fc <HAL_DMA_Abort_IT>
 8006b78:	2800      	cmp	r0, #0
 8006b7a:	d09e      	beq.n	8006aba <HAL_SPI_IRQHandler+0x1e>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006b7c:	2340      	movs	r3, #64	@ 0x40
 8006b7e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8006b80:	4313      	orrs	r3, r2
 8006b82:	6623      	str	r3, [r4, #96]	@ 0x60
 8006b84:	e799      	b.n	8006aba <HAL_SPI_IRQHandler+0x1e>
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006b86:	2200      	movs	r2, #0
 8006b88:	9201      	str	r2, [sp, #4]
 8006b8a:	68da      	ldr	r2, [r3, #12]
 8006b8c:	9201      	str	r2, [sp, #4]
 8006b8e:	689b      	ldr	r3, [r3, #8]
 8006b90:	9301      	str	r3, [sp, #4]
 8006b92:	9b01      	ldr	r3, [sp, #4]
        return;
 8006b94:	e791      	b.n	8006aba <HAL_SPI_IRQHandler+0x1e>
        HAL_SPI_ErrorCallback(hspi);
 8006b96:	0020      	movs	r0, r4
 8006b98:	f7ff ff7e 	bl	8006a98 <HAL_SPI_ErrorCallback>
 8006b9c:	e78d      	b.n	8006aba <HAL_SPI_IRQHandler+0x1e>
 8006b9e:	46c0      	nop			@ (mov r8, r8)
 8006ba0:	08006ba5 	.word	0x08006ba5

08006ba4 <SPI_DMAAbortOnError>:
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006ba4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
  hspi->RxXferCount = 0U;
 8006ba6:	2300      	movs	r3, #0
 8006ba8:	0002      	movs	r2, r0
{
 8006baa:	b510      	push	{r4, lr}
  hspi->RxXferCount = 0U;
 8006bac:	3208      	adds	r2, #8
 8006bae:	87d3      	strh	r3, [r2, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8006bb0:	87c3      	strh	r3, [r0, #62]	@ 0x3e

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006bb2:	f7ff ff71 	bl	8006a98 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006bb6:	bd10      	pop	{r4, pc}

08006bb8 <HAL_TIM_PeriodElapsedCallback>:
/**
  * @brief  Period elapsed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 8006bb8:	4770      	bx	lr

08006bba <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006bba:	4770      	bx	lr

08006bbc <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006bbc:	4770      	bx	lr

08006bbe <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006bbe:	4770      	bx	lr

08006bc0 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006bc0:	4770      	bx	lr
	...

08006bc4 <HAL_TIM_IRQHandler>:
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006bc4:	2202      	movs	r2, #2
  uint32_t itsource = htim->Instance->DIER;
 8006bc6:	6803      	ldr	r3, [r0, #0]
{
 8006bc8:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8006bca:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8006bcc:	691e      	ldr	r6, [r3, #16]
{
 8006bce:	0004      	movs	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006bd0:	4216      	tst	r6, r2
 8006bd2:	d00d      	beq.n	8006bf0 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006bd4:	4215      	tst	r5, r2
 8006bd6:	d00b      	beq.n	8006bf0 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8006bd8:	3a05      	subs	r2, #5
 8006bda:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006bdc:	3204      	adds	r2, #4
 8006bde:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006be0:	699b      	ldr	r3, [r3, #24]
 8006be2:	079b      	lsls	r3, r3, #30
 8006be4:	d100      	bne.n	8006be8 <HAL_TIM_IRQHandler+0x24>
 8006be6:	e07c      	b.n	8006ce2 <HAL_TIM_IRQHandler+0x11e>
          HAL_TIM_IC_CaptureCallback(htim);
 8006be8:	f7ff ffe8 	bl	8006bbc <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006bec:	2300      	movs	r3, #0
 8006bee:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006bf0:	2304      	movs	r3, #4
 8006bf2:	421e      	tst	r6, r3
 8006bf4:	d012      	beq.n	8006c1c <HAL_TIM_IRQHandler+0x58>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006bf6:	421d      	tst	r5, r3
 8006bf8:	d010      	beq.n	8006c1c <HAL_TIM_IRQHandler+0x58>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8006bfa:	2205      	movs	r2, #5
 8006bfc:	6823      	ldr	r3, [r4, #0]
 8006bfe:	4252      	negs	r2, r2
 8006c00:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006c02:	3207      	adds	r2, #7
 8006c04:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006c06:	699a      	ldr	r2, [r3, #24]
 8006c08:	23c0      	movs	r3, #192	@ 0xc0
 8006c0a:	009b      	lsls	r3, r3, #2
        HAL_TIM_IC_CaptureCallback(htim);
 8006c0c:	0020      	movs	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006c0e:	421a      	tst	r2, r3
 8006c10:	d100      	bne.n	8006c14 <HAL_TIM_IRQHandler+0x50>
 8006c12:	e06c      	b.n	8006cee <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006c14:	f7ff ffd2 	bl	8006bbc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c18:	2300      	movs	r3, #0
 8006c1a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006c1c:	2308      	movs	r3, #8
 8006c1e:	421e      	tst	r6, r3
 8006c20:	d00f      	beq.n	8006c42 <HAL_TIM_IRQHandler+0x7e>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006c22:	421d      	tst	r5, r3
 8006c24:	d00d      	beq.n	8006c42 <HAL_TIM_IRQHandler+0x7e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006c26:	2209      	movs	r2, #9
 8006c28:	6823      	ldr	r3, [r4, #0]
 8006c2a:	4252      	negs	r2, r2
 8006c2c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006c2e:	320d      	adds	r2, #13
 8006c30:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006c32:	69db      	ldr	r3, [r3, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8006c34:	0020      	movs	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006c36:	079b      	lsls	r3, r3, #30
 8006c38:	d05f      	beq.n	8006cfa <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006c3a:	f7ff ffbf 	bl	8006bbc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c3e:	2300      	movs	r3, #0
 8006c40:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006c42:	2310      	movs	r3, #16
 8006c44:	421e      	tst	r6, r3
 8006c46:	d011      	beq.n	8006c6c <HAL_TIM_IRQHandler+0xa8>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006c48:	421d      	tst	r5, r3
 8006c4a:	d00f      	beq.n	8006c6c <HAL_TIM_IRQHandler+0xa8>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8006c4c:	2211      	movs	r2, #17
 8006c4e:	6823      	ldr	r3, [r4, #0]
 8006c50:	4252      	negs	r2, r2
 8006c52:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006c54:	3219      	adds	r2, #25
 8006c56:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006c58:	69da      	ldr	r2, [r3, #28]
 8006c5a:	23c0      	movs	r3, #192	@ 0xc0
 8006c5c:	009b      	lsls	r3, r3, #2
        HAL_TIM_IC_CaptureCallback(htim);
 8006c5e:	0020      	movs	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006c60:	421a      	tst	r2, r3
 8006c62:	d050      	beq.n	8006d06 <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_IC_CaptureCallback(htim);
 8006c64:	f7ff ffaa 	bl	8006bbc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c68:	2300      	movs	r3, #0
 8006c6a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006c6c:	2301      	movs	r3, #1
 8006c6e:	421e      	tst	r6, r3
 8006c70:	d008      	beq.n	8006c84 <HAL_TIM_IRQHandler+0xc0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006c72:	421d      	tst	r5, r3
 8006c74:	d006      	beq.n	8006c84 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006c76:	2202      	movs	r2, #2
 8006c78:	6823      	ldr	r3, [r4, #0]
 8006c7a:	4252      	negs	r2, r2
      HAL_TIM_PeriodElapsedCallback(htim);
 8006c7c:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006c7e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006c80:	f7ff ff9a 	bl	8006bb8 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8006c84:	2382      	movs	r3, #130	@ 0x82
 8006c86:	019b      	lsls	r3, r3, #6
 8006c88:	421e      	tst	r6, r3
 8006c8a:	d007      	beq.n	8006c9c <HAL_TIM_IRQHandler+0xd8>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006c8c:	062b      	lsls	r3, r5, #24
 8006c8e:	d505      	bpl.n	8006c9c <HAL_TIM_IRQHandler+0xd8>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8006c90:	6823      	ldr	r3, [r4, #0]
 8006c92:	4a20      	ldr	r2, [pc, #128]	@ (8006d14 <HAL_TIM_IRQHandler+0x150>)
      HAL_TIMEx_BreakCallback(htim);
 8006c94:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8006c96:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006c98:	f000 f8fb 	bl	8006e92 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8006c9c:	05f3      	lsls	r3, r6, #23
 8006c9e:	d507      	bpl.n	8006cb0 <HAL_TIM_IRQHandler+0xec>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006ca0:	062b      	lsls	r3, r5, #24
 8006ca2:	d505      	bpl.n	8006cb0 <HAL_TIM_IRQHandler+0xec>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006ca4:	6823      	ldr	r3, [r4, #0]
 8006ca6:	4a1c      	ldr	r2, [pc, #112]	@ (8006d18 <HAL_TIM_IRQHandler+0x154>)
      HAL_TIMEx_Break2Callback(htim);
 8006ca8:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006caa:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8006cac:	f000 f8f2 	bl	8006e94 <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006cb0:	2340      	movs	r3, #64	@ 0x40
 8006cb2:	421e      	tst	r6, r3
 8006cb4:	d008      	beq.n	8006cc8 <HAL_TIM_IRQHandler+0x104>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006cb6:	421d      	tst	r5, r3
 8006cb8:	d006      	beq.n	8006cc8 <HAL_TIM_IRQHandler+0x104>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006cba:	2241      	movs	r2, #65	@ 0x41
 8006cbc:	6823      	ldr	r3, [r4, #0]
 8006cbe:	4252      	negs	r2, r2
      HAL_TIM_TriggerCallback(htim);
 8006cc0:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006cc2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006cc4:	f7ff ff7c 	bl	8006bc0 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006cc8:	2320      	movs	r3, #32
 8006cca:	421e      	tst	r6, r3
 8006ccc:	d008      	beq.n	8006ce0 <HAL_TIM_IRQHandler+0x11c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006cce:	421d      	tst	r5, r3
 8006cd0:	d006      	beq.n	8006ce0 <HAL_TIM_IRQHandler+0x11c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006cd2:	2221      	movs	r2, #33	@ 0x21
 8006cd4:	6823      	ldr	r3, [r4, #0]
 8006cd6:	4252      	negs	r2, r2
      HAL_TIMEx_CommutCallback(htim);
 8006cd8:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006cda:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8006cdc:	f000 f8d8 	bl	8006e90 <HAL_TIMEx_CommutCallback>
}
 8006ce0:	bd70      	pop	{r4, r5, r6, pc}
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006ce2:	f7ff ff6a 	bl	8006bba <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006ce6:	0020      	movs	r0, r4
 8006ce8:	f7ff ff69 	bl	8006bbe <HAL_TIM_PWM_PulseFinishedCallback>
 8006cec:	e77e      	b.n	8006bec <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cee:	f7ff ff64 	bl	8006bba <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cf2:	0020      	movs	r0, r4
 8006cf4:	f7ff ff63 	bl	8006bbe <HAL_TIM_PWM_PulseFinishedCallback>
 8006cf8:	e78e      	b.n	8006c18 <HAL_TIM_IRQHandler+0x54>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cfa:	f7ff ff5e 	bl	8006bba <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cfe:	0020      	movs	r0, r4
 8006d00:	f7ff ff5d 	bl	8006bbe <HAL_TIM_PWM_PulseFinishedCallback>
 8006d04:	e79b      	b.n	8006c3e <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d06:	f7ff ff58 	bl	8006bba <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d0a:	0020      	movs	r0, r4
 8006d0c:	f7ff ff57 	bl	8006bbe <HAL_TIM_PWM_PulseFinishedCallback>
 8006d10:	e7aa      	b.n	8006c68 <HAL_TIM_IRQHandler+0xa4>
 8006d12:	46c0      	nop			@ (mov r8, r8)
 8006d14:	ffffdf7f 	.word	0xffffdf7f
 8006d18:	fffffeff 	.word	0xfffffeff

08006d1c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006d1c:	4a23      	ldr	r2, [pc, #140]	@ (8006dac <TIM_Base_SetConfig+0x90>)
{
 8006d1e:	b510      	push	{r4, lr}
  tmpcr1 = TIMx->CR1;
 8006d20:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006d22:	4290      	cmp	r0, r2
 8006d24:	d006      	beq.n	8006d34 <TIM_Base_SetConfig+0x18>
 8006d26:	2480      	movs	r4, #128	@ 0x80
 8006d28:	05e4      	lsls	r4, r4, #23
 8006d2a:	42a0      	cmp	r0, r4
 8006d2c:	d002      	beq.n	8006d34 <TIM_Base_SetConfig+0x18>
 8006d2e:	4c20      	ldr	r4, [pc, #128]	@ (8006db0 <TIM_Base_SetConfig+0x94>)
 8006d30:	42a0      	cmp	r0, r4
 8006d32:	d10c      	bne.n	8006d4e <TIM_Base_SetConfig+0x32>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006d34:	2470      	movs	r4, #112	@ 0x70
 8006d36:	43a3      	bics	r3, r4
    tmpcr1 |= Structure->CounterMode;
 8006d38:	684c      	ldr	r4, [r1, #4]
 8006d3a:	4323      	orrs	r3, r4
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006d3c:	4290      	cmp	r0, r2
 8006d3e:	d012      	beq.n	8006d66 <TIM_Base_SetConfig+0x4a>
 8006d40:	2480      	movs	r4, #128	@ 0x80
 8006d42:	05e4      	lsls	r4, r4, #23
 8006d44:	42a0      	cmp	r0, r4
 8006d46:	d00e      	beq.n	8006d66 <TIM_Base_SetConfig+0x4a>
 8006d48:	4c19      	ldr	r4, [pc, #100]	@ (8006db0 <TIM_Base_SetConfig+0x94>)
 8006d4a:	42a0      	cmp	r0, r4
 8006d4c:	d00b      	beq.n	8006d66 <TIM_Base_SetConfig+0x4a>
 8006d4e:	4c19      	ldr	r4, [pc, #100]	@ (8006db4 <TIM_Base_SetConfig+0x98>)
 8006d50:	42a0      	cmp	r0, r4
 8006d52:	d008      	beq.n	8006d66 <TIM_Base_SetConfig+0x4a>
 8006d54:	4c18      	ldr	r4, [pc, #96]	@ (8006db8 <TIM_Base_SetConfig+0x9c>)
 8006d56:	42a0      	cmp	r0, r4
 8006d58:	d005      	beq.n	8006d66 <TIM_Base_SetConfig+0x4a>
 8006d5a:	4c18      	ldr	r4, [pc, #96]	@ (8006dbc <TIM_Base_SetConfig+0xa0>)
 8006d5c:	42a0      	cmp	r0, r4
 8006d5e:	d002      	beq.n	8006d66 <TIM_Base_SetConfig+0x4a>
 8006d60:	4c17      	ldr	r4, [pc, #92]	@ (8006dc0 <TIM_Base_SetConfig+0xa4>)
 8006d62:	42a0      	cmp	r0, r4
 8006d64:	d103      	bne.n	8006d6e <TIM_Base_SetConfig+0x52>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006d66:	4c17      	ldr	r4, [pc, #92]	@ (8006dc4 <TIM_Base_SetConfig+0xa8>)
 8006d68:	401c      	ands	r4, r3
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006d6a:	68cb      	ldr	r3, [r1, #12]
 8006d6c:	4323      	orrs	r3, r4
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006d6e:	2480      	movs	r4, #128	@ 0x80
 8006d70:	43a3      	bics	r3, r4
 8006d72:	694c      	ldr	r4, [r1, #20]
 8006d74:	4323      	orrs	r3, r4

  TIMx->CR1 = tmpcr1;
 8006d76:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006d78:	688b      	ldr	r3, [r1, #8]
 8006d7a:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006d7c:	680b      	ldr	r3, [r1, #0]
 8006d7e:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006d80:	4290      	cmp	r0, r2
 8006d82:	d008      	beq.n	8006d96 <TIM_Base_SetConfig+0x7a>
 8006d84:	4b0c      	ldr	r3, [pc, #48]	@ (8006db8 <TIM_Base_SetConfig+0x9c>)
 8006d86:	4298      	cmp	r0, r3
 8006d88:	d005      	beq.n	8006d96 <TIM_Base_SetConfig+0x7a>
 8006d8a:	4b0c      	ldr	r3, [pc, #48]	@ (8006dbc <TIM_Base_SetConfig+0xa0>)
 8006d8c:	4298      	cmp	r0, r3
 8006d8e:	d002      	beq.n	8006d96 <TIM_Base_SetConfig+0x7a>
 8006d90:	4b0b      	ldr	r3, [pc, #44]	@ (8006dc0 <TIM_Base_SetConfig+0xa4>)
 8006d92:	4298      	cmp	r0, r3
 8006d94:	d101      	bne.n	8006d9a <TIM_Base_SetConfig+0x7e>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006d96:	690b      	ldr	r3, [r1, #16]
 8006d98:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006d9a:	2201      	movs	r2, #1
 8006d9c:	6142      	str	r2, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8006d9e:	6903      	ldr	r3, [r0, #16]
 8006da0:	4213      	tst	r3, r2
 8006da2:	d002      	beq.n	8006daa <TIM_Base_SetConfig+0x8e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8006da4:	6903      	ldr	r3, [r0, #16]
 8006da6:	4393      	bics	r3, r2
 8006da8:	6103      	str	r3, [r0, #16]
  }
}
 8006daa:	bd10      	pop	{r4, pc}
 8006dac:	40012c00 	.word	0x40012c00
 8006db0:	40000400 	.word	0x40000400
 8006db4:	40002000 	.word	0x40002000
 8006db8:	40014000 	.word	0x40014000
 8006dbc:	40014400 	.word	0x40014400
 8006dc0:	40014800 	.word	0x40014800
 8006dc4:	fffffcff 	.word	0xfffffcff

08006dc8 <HAL_TIM_Base_Init>:
{
 8006dc8:	b570      	push	{r4, r5, r6, lr}
 8006dca:	0004      	movs	r4, r0
    return HAL_ERROR;
 8006dcc:	2001      	movs	r0, #1
  if (htim == NULL)
 8006dce:	2c00      	cmp	r4, #0
 8006dd0:	d023      	beq.n	8006e1a <HAL_TIM_Base_Init+0x52>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006dd2:	0025      	movs	r5, r4
 8006dd4:	353d      	adds	r5, #61	@ 0x3d
 8006dd6:	782b      	ldrb	r3, [r5, #0]
 8006dd8:	b2da      	uxtb	r2, r3
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	d105      	bne.n	8006dea <HAL_TIM_Base_Init+0x22>
    htim->Lock = HAL_UNLOCKED;
 8006dde:	0023      	movs	r3, r4
 8006de0:	333c      	adds	r3, #60	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006de2:	0020      	movs	r0, r4
    htim->Lock = HAL_UNLOCKED;
 8006de4:	701a      	strb	r2, [r3, #0]
    HAL_TIM_Base_MspInit(htim);
 8006de6:	f7fb f955 	bl	8002094 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006dea:	2302      	movs	r3, #2
 8006dec:	702b      	strb	r3, [r5, #0]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006dee:	6820      	ldr	r0, [r4, #0]
 8006df0:	1d21      	adds	r1, r4, #4
 8006df2:	f7ff ff93 	bl	8006d1c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006df6:	0022      	movs	r2, r4
 8006df8:	2301      	movs	r3, #1
  return HAL_OK;
 8006dfa:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006dfc:	3248      	adds	r2, #72	@ 0x48
 8006dfe:	7013      	strb	r3, [r2, #0]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006e00:	3447      	adds	r4, #71	@ 0x47
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006e02:	3a0a      	subs	r2, #10
 8006e04:	7013      	strb	r3, [r2, #0]
 8006e06:	7053      	strb	r3, [r2, #1]
 8006e08:	7093      	strb	r3, [r2, #2]
 8006e0a:	70d3      	strb	r3, [r2, #3]
 8006e0c:	7113      	strb	r3, [r2, #4]
 8006e0e:	7153      	strb	r3, [r2, #5]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006e10:	7193      	strb	r3, [r2, #6]
 8006e12:	71d3      	strb	r3, [r2, #7]
 8006e14:	7213      	strb	r3, [r2, #8]
 8006e16:	7023      	strb	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_READY;
 8006e18:	702b      	strb	r3, [r5, #0]
}
 8006e1a:	bd70      	pop	{r4, r5, r6, pc}

08006e1c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8006e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006e1e:	0004      	movs	r4, r0
 8006e20:	2202      	movs	r2, #2
 8006e22:	343c      	adds	r4, #60	@ 0x3c
 8006e24:	7825      	ldrb	r5, [r4, #0]
{
 8006e26:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 8006e28:	0010      	movs	r0, r2
 8006e2a:	2d01      	cmp	r5, #1
 8006e2c:	d026      	beq.n	8006e7c <HAL_TIMEx_MasterConfigSynchronization+0x60>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006e2e:	001d      	movs	r5, r3
 8006e30:	353d      	adds	r5, #61	@ 0x3d
 8006e32:	702a      	strb	r2, [r5, #0]

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006e34:	681b      	ldr	r3, [r3, #0]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8006e36:	4e12      	ldr	r6, [pc, #72]	@ (8006e80 <HAL_TIMEx_MasterConfigSynchronization+0x64>)
  tmpcr2 = htim->Instance->CR2;
 8006e38:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8006e3a:	6898      	ldr	r0, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8006e3c:	42b3      	cmp	r3, r6
 8006e3e:	d103      	bne.n	8006e48 <HAL_TIMEx_MasterConfigSynchronization+0x2c>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8006e40:	4f10      	ldr	r7, [pc, #64]	@ (8006e84 <HAL_TIMEx_MasterConfigSynchronization+0x68>)
 8006e42:	403a      	ands	r2, r7
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8006e44:	684f      	ldr	r7, [r1, #4]
 8006e46:	433a      	orrs	r2, r7
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006e48:	2770      	movs	r7, #112	@ 0x70
 8006e4a:	43ba      	bics	r2, r7
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006e4c:	680f      	ldr	r7, [r1, #0]
 8006e4e:	433a      	orrs	r2, r7

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8006e50:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006e52:	42b3      	cmp	r3, r6
 8006e54:	d009      	beq.n	8006e6a <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 8006e56:	2280      	movs	r2, #128	@ 0x80
 8006e58:	05d2      	lsls	r2, r2, #23
 8006e5a:	4293      	cmp	r3, r2
 8006e5c:	d005      	beq.n	8006e6a <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 8006e5e:	4a0a      	ldr	r2, [pc, #40]	@ (8006e88 <HAL_TIMEx_MasterConfigSynchronization+0x6c>)
 8006e60:	4293      	cmp	r3, r2
 8006e62:	d002      	beq.n	8006e6a <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 8006e64:	4a09      	ldr	r2, [pc, #36]	@ (8006e8c <HAL_TIMEx_MasterConfigSynchronization+0x70>)
 8006e66:	4293      	cmp	r3, r2
 8006e68:	d104      	bne.n	8006e74 <HAL_TIMEx_MasterConfigSynchronization+0x58>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8006e6a:	2280      	movs	r2, #128	@ 0x80
 8006e6c:	4390      	bics	r0, r2
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8006e6e:	688a      	ldr	r2, [r1, #8]
 8006e70:	4310      	orrs	r0, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006e72:	6098      	str	r0, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006e74:	2301      	movs	r3, #1

  __HAL_UNLOCK(htim);
 8006e76:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8006e78:	702b      	strb	r3, [r5, #0]
  __HAL_UNLOCK(htim);
 8006e7a:	7020      	strb	r0, [r4, #0]

  return HAL_OK;
}
 8006e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e7e:	46c0      	nop			@ (mov r8, r8)
 8006e80:	40012c00 	.word	0x40012c00
 8006e84:	ff0fffff 	.word	0xff0fffff
 8006e88:	40000400 	.word	0x40000400
 8006e8c:	40014000 	.word	0x40014000

08006e90 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006e90:	4770      	bx	lr

08006e92 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006e92:	4770      	bx	lr

08006e94 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 8006e94:	4770      	bx	lr

08006e96 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8006e96:	8880      	ldrh	r0, [r0, #4]
 8006e98:	4770      	bx	lr

08006e9a <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8006e9a:	b570      	push	{r4, r5, r6, lr}
 8006e9c:	6803      	ldr	r3, [r0, #0]
 8006e9e:	0005      	movs	r5, r0
 8006ea0:	000c      	movs	r4, r1
 8006ea2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006ea4:	2100      	movs	r1, #0
 8006ea6:	4798      	blx	r3
 8006ea8:	682b      	ldr	r3, [r5, #0]
 8006eaa:	0006      	movs	r6, r0
 8006eac:	6a1b      	ldr	r3, [r3, #32]
 8006eae:	0028      	movs	r0, r5
 8006eb0:	4798      	blx	r3
 8006eb2:	1ba4      	subs	r4, r4, r6
 8006eb4:	0001      	movs	r1, r0
 8006eb6:	b2a0      	uxth	r0, r4
 8006eb8:	f7f9 f954 	bl	8000164 <__udivsi3>
 8006ebc:	b280      	uxth	r0, r0
 8006ebe:	bd70      	pop	{r4, r5, r6, pc}

08006ec0 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8006ec0:	2300      	movs	r3, #0
 8006ec2:	8083      	strh	r3, [r0, #4]
 8006ec4:	4770      	bx	lr

08006ec6 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8006ec6:	b510      	push	{r4, lr}
 8006ec8:	0004      	movs	r4, r0
 8006eca:	6803      	ldr	r3, [r0, #0]
 8006ecc:	8881      	ldrh	r1, [r0, #4]
 8006ece:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006ed0:	4798      	blx	r3
 8006ed2:	88a3      	ldrh	r3, [r4, #4]
 8006ed4:	3301      	adds	r3, #1
 8006ed6:	80a3      	strh	r3, [r4, #4]
 8006ed8:	bd10      	pop	{r4, pc}

08006eda <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8006eda:	b510      	push	{r4, lr}
 8006edc:	6803      	ldr	r3, [r0, #0]
 8006ede:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006ee0:	4798      	blx	r3
 8006ee2:	bd10      	pop	{r4, pc}

08006ee4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8006ee4:	4770      	bx	lr
	...

08006ee8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8006ee8:	4b02      	ldr	r3, [pc, #8]	@ (8006ef4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8006eea:	3308      	adds	r3, #8
 8006eec:	6003      	str	r3, [r0, #0]
 8006eee:	2300      	movs	r3, #0
 8006ef0:	8083      	strh	r3, [r0, #4]
 8006ef2:	4770      	bx	lr
 8006ef4:	08015778 	.word	0x08015778

08006ef8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8006ef8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006efa:	2000      	movs	r0, #0
 8006efc:	2b00      	cmp	r3, #0
 8006efe:	d007      	beq.n	8006f10 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x18>
 8006f00:	2800      	cmp	r0, #0
 8006f02:	d105      	bne.n	8006f10 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x18>
 8006f04:	1a58      	subs	r0, r3, r1
 8006f06:	4242      	negs	r2, r0
 8006f08:	4150      	adcs	r0, r2
 8006f0a:	699b      	ldr	r3, [r3, #24]
 8006f0c:	b2c0      	uxtb	r0, r0
 8006f0e:	e7f5      	b.n	8006efc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8006f10:	4770      	bx	lr

08006f12 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8006f12:	2300      	movs	r3, #0
 8006f14:	6148      	str	r0, [r1, #20]
 8006f16:	618b      	str	r3, [r1, #24]
 8006f18:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006f1a:	2b00      	cmp	r3, #0
 8006f1c:	d102      	bne.n	8006f24 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8006f1e:	6281      	str	r1, [r0, #40]	@ 0x28
 8006f20:	4770      	bx	lr
 8006f22:	0013      	movs	r3, r2
 8006f24:	699a      	ldr	r2, [r3, #24]
 8006f26:	2a00      	cmp	r2, #0
 8006f28:	d1fb      	bne.n	8006f22 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8006f2a:	6199      	str	r1, [r3, #24]
 8006f2c:	e7f8      	b.n	8006f20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>

08006f2e <_ZN8touchgfx9Container9removeAllEv>:
 8006f2e:	2200      	movs	r2, #0
 8006f30:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006f32:	2b00      	cmp	r3, #0
 8006f34:	d004      	beq.n	8006f40 <_ZN8touchgfx9Container9removeAllEv+0x12>
 8006f36:	6999      	ldr	r1, [r3, #24]
 8006f38:	6281      	str	r1, [r0, #40]	@ 0x28
 8006f3a:	615a      	str	r2, [r3, #20]
 8006f3c:	619a      	str	r2, [r3, #24]
 8006f3e:	e7f7      	b.n	8006f30 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8006f40:	4770      	bx	lr

08006f42 <_ZN8touchgfx9Container6unlinkEv>:
 8006f42:	2300      	movs	r3, #0
 8006f44:	6283      	str	r3, [r0, #40]	@ 0x28
 8006f46:	4770      	bx	lr

08006f48 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8006f48:	2300      	movs	r3, #0
 8006f4a:	8003      	strh	r3, [r0, #0]
 8006f4c:	8043      	strh	r3, [r0, #2]
 8006f4e:	8083      	strh	r3, [r0, #4]
 8006f50:	80c3      	strh	r3, [r0, #6]
 8006f52:	4770      	bx	lr

08006f54 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8006f54:	b570      	push	{r4, r5, r6, lr}
 8006f56:	000d      	movs	r5, r1
 8006f58:	0016      	movs	r6, r2
 8006f5a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8006f5c:	2c00      	cmp	r4, #0
 8006f5e:	d007      	beq.n	8006f70 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1c>
 8006f60:	6823      	ldr	r3, [r4, #0]
 8006f62:	0020      	movs	r0, r4
 8006f64:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f66:	0032      	movs	r2, r6
 8006f68:	0029      	movs	r1, r5
 8006f6a:	4798      	blx	r3
 8006f6c:	69a4      	ldr	r4, [r4, #24]
 8006f6e:	e7f5      	b.n	8006f5c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8006f70:	bd70      	pop	{r4, r5, r6, pc}

08006f72 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8006f72:	b570      	push	{r4, r5, r6, lr}
 8006f74:	000d      	movs	r5, r1
 8006f76:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8006f78:	2c00      	cmp	r4, #0
 8006f7a:	d006      	beq.n	8006f8a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x18>
 8006f7c:	682b      	ldr	r3, [r5, #0]
 8006f7e:	0021      	movs	r1, r4
 8006f80:	689b      	ldr	r3, [r3, #8]
 8006f82:	0028      	movs	r0, r5
 8006f84:	4798      	blx	r3
 8006f86:	69a4      	ldr	r4, [r4, #24]
 8006f88:	e7f6      	b.n	8006f78 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8006f8a:	bd70      	pop	{r4, r5, r6, pc}

08006f8c <_ZN8touchgfx9ContainerD1Ev>:
 8006f8c:	4770      	bx	lr

08006f8e <_ZN8touchgfx9ContainerD0Ev>:
 8006f8e:	b510      	push	{r4, lr}
 8006f90:	0004      	movs	r4, r0
 8006f92:	212c      	movs	r1, #44	@ 0x2c
 8006f94:	f00a fdb7 	bl	8011b06 <_ZdlPvj>
 8006f98:	0020      	movs	r0, r4
 8006f9a:	bd10      	pop	{r4, pc}

08006f9c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8006f9c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006f9e:	2b00      	cmp	r3, #0
 8006fa0:	d007      	beq.n	8006fb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x16>
 8006fa2:	428b      	cmp	r3, r1
 8006fa4:	d10a      	bne.n	8006fbc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x20>
 8006fa6:	2100      	movs	r1, #0
 8006fa8:	699a      	ldr	r2, [r3, #24]
 8006faa:	6159      	str	r1, [r3, #20]
 8006fac:	6282      	str	r2, [r0, #40]	@ 0x28
 8006fae:	428a      	cmp	r2, r1
 8006fb0:	d100      	bne.n	8006fb4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8006fb2:	4770      	bx	lr
 8006fb4:	6199      	str	r1, [r3, #24]
 8006fb6:	e7fc      	b.n	8006fb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x16>
 8006fb8:	1e13      	subs	r3, r2, #0
 8006fba:	d0fa      	beq.n	8006fb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x16>
 8006fbc:	699a      	ldr	r2, [r3, #24]
 8006fbe:	428a      	cmp	r2, r1
 8006fc0:	d1fa      	bne.n	8006fb8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8006fc2:	698a      	ldr	r2, [r1, #24]
 8006fc4:	619a      	str	r2, [r3, #24]
 8006fc6:	2300      	movs	r3, #0
 8006fc8:	614b      	str	r3, [r1, #20]
 8006fca:	618b      	str	r3, [r1, #24]
 8006fcc:	e7f1      	b.n	8006fb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x16>

08006fce <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8006fce:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006fd0:	b510      	push	{r4, lr}
 8006fd2:	2b00      	cmp	r3, #0
 8006fd4:	d104      	bne.n	8006fe0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x12>
 8006fd6:	6803      	ldr	r3, [r0, #0]
 8006fd8:	0011      	movs	r1, r2
 8006fda:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006fdc:	4798      	blx	r3
 8006fde:	bd10      	pop	{r4, pc}
 8006fe0:	2900      	cmp	r1, #0
 8006fe2:	d105      	bne.n	8006ff0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8006fe4:	6193      	str	r3, [r2, #24]
 8006fe6:	6282      	str	r2, [r0, #40]	@ 0x28
 8006fe8:	6150      	str	r0, [r2, #20]
 8006fea:	e7f8      	b.n	8006fde <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x10>
 8006fec:	1e23      	subs	r3, r4, #0
 8006fee:	d0f6      	beq.n	8006fde <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x10>
 8006ff0:	699c      	ldr	r4, [r3, #24]
 8006ff2:	4299      	cmp	r1, r3
 8006ff4:	d1fa      	bne.n	8006fec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1e>
 8006ff6:	6194      	str	r4, [r2, #24]
 8006ff8:	618a      	str	r2, [r1, #24]
 8006ffa:	e7f5      	b.n	8006fe8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08006ffc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8006ffc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ffe:	9301      	str	r3, [sp, #4]
 8007000:	1d43      	adds	r3, r0, #5
 8007002:	7fdb      	ldrb	r3, [r3, #31]
 8007004:	000f      	movs	r7, r1
 8007006:	0015      	movs	r5, r2
 8007008:	2b00      	cmp	r3, #0
 800700a:	d001      	beq.n	8007010 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800700c:	9b01      	ldr	r3, [sp, #4]
 800700e:	6018      	str	r0, [r3, #0]
 8007010:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8007012:	2c00      	cmp	r4, #0
 8007014:	d023      	beq.n	800705e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x62>
 8007016:	1da3      	adds	r3, r4, #6
 8007018:	7fdb      	ldrb	r3, [r3, #31]
 800701a:	2b00      	cmp	r3, #0
 800701c:	d01d      	beq.n	800705a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5e>
 800701e:	2304      	movs	r3, #4
 8007020:	5ee1      	ldrsh	r1, [r4, r3]
 8007022:	428f      	cmp	r7, r1
 8007024:	db19      	blt.n	800705a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5e>
 8007026:	8923      	ldrh	r3, [r4, #8]
 8007028:	b289      	uxth	r1, r1
 800702a:	18cb      	adds	r3, r1, r3
 800702c:	b21b      	sxth	r3, r3
 800702e:	429f      	cmp	r7, r3
 8007030:	da13      	bge.n	800705a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5e>
 8007032:	2306      	movs	r3, #6
 8007034:	5ee2      	ldrsh	r2, [r4, r3]
 8007036:	4295      	cmp	r5, r2
 8007038:	db0f      	blt.n	800705a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5e>
 800703a:	8963      	ldrh	r3, [r4, #10]
 800703c:	b292      	uxth	r2, r2
 800703e:	18d3      	adds	r3, r2, r3
 8007040:	b21b      	sxth	r3, r3
 8007042:	429d      	cmp	r5, r3
 8007044:	da09      	bge.n	800705a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5e>
 8007046:	6823      	ldr	r3, [r4, #0]
 8007048:	1aaa      	subs	r2, r5, r2
 800704a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800704c:	1a79      	subs	r1, r7, r1
 800704e:	001e      	movs	r6, r3
 8007050:	b212      	sxth	r2, r2
 8007052:	b209      	sxth	r1, r1
 8007054:	9b01      	ldr	r3, [sp, #4]
 8007056:	0020      	movs	r0, r4
 8007058:	47b0      	blx	r6
 800705a:	69a4      	ldr	r4, [r4, #24]
 800705c:	e7d9      	b.n	8007012 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x16>
 800705e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

08007060 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8007060:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007062:	001f      	movs	r7, r3
 8007064:	4b6b      	ldr	r3, [pc, #428]	@ (8007214 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b4>)
 8007066:	b0a5      	sub	sp, #148	@ 0x94
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	9203      	str	r2, [sp, #12]
 800706c:	3349      	adds	r3, #73	@ 0x49
 800706e:	781b      	ldrb	r3, [r3, #0]
 8007070:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8007072:	9300      	str	r3, [sp, #0]
 8007074:	2300      	movs	r3, #0
 8007076:	8013      	strh	r3, [r2, #0]
 8007078:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 800707a:	0004      	movs	r4, r0
 800707c:	8013      	strh	r3, [r2, #0]
 800707e:	603b      	str	r3, [r7, #0]
 8007080:	9a03      	ldr	r2, [sp, #12]
 8007082:	003b      	movs	r3, r7
 8007084:	9102      	str	r1, [sp, #8]
 8007086:	f7ff ffb9 	bl	8006ffc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800708a:	9b00      	ldr	r3, [sp, #0]
 800708c:	2b03      	cmp	r3, #3
 800708e:	dc00      	bgt.n	8007092 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x32>
 8007090:	e0ba      	b.n	8007208 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1a8>
 8007092:	ad10      	add	r5, sp, #64	@ 0x40
 8007094:	0021      	movs	r1, r4
 8007096:	0028      	movs	r0, r5
 8007098:	f005 f9ad 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800709c:	2200      	movs	r2, #0
 800709e:	5eab      	ldrsh	r3, [r5, r2]
 80070a0:	683e      	ldr	r6, [r7, #0]
 80070a2:	9308      	str	r3, [sp, #32]
 80070a4:	2202      	movs	r2, #2
 80070a6:	5eab      	ldrsh	r3, [r5, r2]
 80070a8:	930a      	str	r3, [sp, #40]	@ 0x28
 80070aa:	2e00      	cmp	r6, #0
 80070ac:	d100      	bne.n	80070b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x50>
 80070ae:	e0ad      	b.n	800720c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 80070b0:	ad14      	add	r5, sp, #80	@ 0x50
 80070b2:	0028      	movs	r0, r5
 80070b4:	0031      	movs	r1, r6
 80070b6:	f005 f99e 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80070ba:	9b02      	ldr	r3, [sp, #8]
 80070bc:	9a08      	ldr	r2, [sp, #32]
 80070be:	189a      	adds	r2, r3, r2
 80070c0:	2104      	movs	r1, #4
 80070c2:	5e6b      	ldrsh	r3, [r5, r1]
 80070c4:	0fd9      	lsrs	r1, r3, #31
 80070c6:	18c9      	adds	r1, r1, r3
 80070c8:	2000      	movs	r0, #0
 80070ca:	5e2b      	ldrsh	r3, [r5, r0]
 80070cc:	1049      	asrs	r1, r1, #1
 80070ce:	18c9      	adds	r1, r1, r3
 80070d0:	1a51      	subs	r1, r2, r1
 80070d2:	9b03      	ldr	r3, [sp, #12]
 80070d4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80070d6:	4349      	muls	r1, r1
 80070d8:	189a      	adds	r2, r3, r2
 80070da:	2306      	movs	r3, #6
 80070dc:	5ee8      	ldrsh	r0, [r5, r3]
 80070de:	0fc3      	lsrs	r3, r0, #31
 80070e0:	181b      	adds	r3, r3, r0
 80070e2:	2002      	movs	r0, #2
 80070e4:	5e28      	ldrsh	r0, [r5, r0]
 80070e6:	105b      	asrs	r3, r3, #1
 80070e8:	181b      	adds	r3, r3, r0
 80070ea:	1ad3      	subs	r3, r2, r3
 80070ec:	435b      	muls	r3, r3
 80070ee:	18cb      	adds	r3, r1, r3
 80070f0:	2240      	movs	r2, #64	@ 0x40
 80070f2:	4949      	ldr	r1, [pc, #292]	@ (8007218 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 80070f4:	a814      	add	r0, sp, #80	@ 0x50
 80070f6:	9304      	str	r3, [sp, #16]
 80070f8:	f00b fe3d 	bl	8012d76 <memcpy>
 80070fc:	2303      	movs	r3, #3
 80070fe:	9305      	str	r3, [sp, #20]
 8007100:	9b00      	ldr	r3, [sp, #0]
 8007102:	2b0c      	cmp	r3, #12
 8007104:	dc04      	bgt.n	8007110 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xb0>
 8007106:	1e58      	subs	r0, r3, #1
 8007108:	2103      	movs	r1, #3
 800710a:	f7f9 f8b5 	bl	8000278 <__divsi3>
 800710e:	9005      	str	r0, [sp, #20]
 8007110:	2500      	movs	r5, #0
 8007112:	9b00      	ldr	r3, [sp, #0]
 8007114:	9306      	str	r3, [sp, #24]
 8007116:	1c6b      	adds	r3, r5, #1
 8007118:	9905      	ldr	r1, [sp, #20]
 800711a:	9806      	ldr	r0, [sp, #24]
 800711c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800711e:	f7f9 f8ab 	bl	8000278 <__divsi3>
 8007122:	2301      	movs	r3, #1
 8007124:	401d      	ands	r5, r3
 8007126:	016b      	lsls	r3, r5, #5
 8007128:	aa24      	add	r2, sp, #144	@ 0x90
 800712a:	18d5      	adds	r5, r2, r3
 800712c:	aa1d      	add	r2, sp, #116	@ 0x74
 800712e:	18d3      	adds	r3, r2, r3
 8007130:	900c      	str	r0, [sp, #48]	@ 0x30
 8007132:	3d3c      	subs	r5, #60	@ 0x3c
 8007134:	930d      	str	r3, [sp, #52]	@ 0x34
 8007136:	466b      	mov	r3, sp
 8007138:	8e1a      	ldrh	r2, [r3, #48]	@ 0x30
 800713a:	1f2b      	subs	r3, r5, #4
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	9902      	ldr	r1, [sp, #8]
 8007140:	4353      	muls	r3, r2
 8007142:	b29b      	uxth	r3, r3
 8007144:	1859      	adds	r1, r3, r1
 8007146:	9307      	str	r3, [sp, #28]
 8007148:	2304      	movs	r3, #4
 800714a:	5ee0      	ldrsh	r0, [r4, r3]
 800714c:	b209      	sxth	r1, r1
 800714e:	4281      	cmp	r1, r0
 8007150:	db4d      	blt.n	80071ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x18e>
 8007152:	8923      	ldrh	r3, [r4, #8]
 8007154:	181b      	adds	r3, r3, r0
 8007156:	b21b      	sxth	r3, r3
 8007158:	4299      	cmp	r1, r3
 800715a:	da48      	bge.n	80071ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x18e>
 800715c:	682b      	ldr	r3, [r5, #0]
 800715e:	435a      	muls	r2, r3
 8007160:	b293      	uxth	r3, r2
 8007162:	9a03      	ldr	r2, [sp, #12]
 8007164:	9309      	str	r3, [sp, #36]	@ 0x24
 8007166:	189a      	adds	r2, r3, r2
 8007168:	2306      	movs	r3, #6
 800716a:	5ee0      	ldrsh	r0, [r4, r3]
 800716c:	b212      	sxth	r2, r2
 800716e:	4282      	cmp	r2, r0
 8007170:	db3d      	blt.n	80071ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x18e>
 8007172:	8963      	ldrh	r3, [r4, #10]
 8007174:	181b      	adds	r3, r3, r0
 8007176:	b21b      	sxth	r3, r3
 8007178:	429a      	cmp	r2, r3
 800717a:	da38      	bge.n	80071ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x18e>
 800717c:	2300      	movs	r3, #0
 800717e:	0020      	movs	r0, r4
 8007180:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007182:	ab0f      	add	r3, sp, #60	@ 0x3c
 8007184:	f7ff ff3a 	bl	8006ffc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8007188:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800718a:	9301      	str	r3, [sp, #4]
 800718c:	2b00      	cmp	r3, #0
 800718e:	d02e      	beq.n	80071ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x18e>
 8007190:	42b3      	cmp	r3, r6
 8007192:	d02c      	beq.n	80071ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x18e>
 8007194:	ae12      	add	r6, sp, #72	@ 0x48
 8007196:	0019      	movs	r1, r3
 8007198:	0030      	movs	r0, r6
 800719a:	f005 f92c 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800719e:	9a08      	ldr	r2, [sp, #32]
 80071a0:	9b02      	ldr	r3, [sp, #8]
 80071a2:	189b      	adds	r3, r3, r2
 80071a4:	2104      	movs	r1, #4
 80071a6:	5e72      	ldrsh	r2, [r6, r1]
 80071a8:	0fd1      	lsrs	r1, r2, #31
 80071aa:	1889      	adds	r1, r1, r2
 80071ac:	2000      	movs	r0, #0
 80071ae:	5e32      	ldrsh	r2, [r6, r0]
 80071b0:	1049      	asrs	r1, r1, #1
 80071b2:	1889      	adds	r1, r1, r2
 80071b4:	1a59      	subs	r1, r3, r1
 80071b6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80071b8:	9b03      	ldr	r3, [sp, #12]
 80071ba:	4349      	muls	r1, r1
 80071bc:	189a      	adds	r2, r3, r2
 80071be:	2306      	movs	r3, #6
 80071c0:	5ef0      	ldrsh	r0, [r6, r3]
 80071c2:	0fc3      	lsrs	r3, r0, #31
 80071c4:	181b      	adds	r3, r3, r0
 80071c6:	2002      	movs	r0, #2
 80071c8:	5e30      	ldrsh	r0, [r6, r0]
 80071ca:	105b      	asrs	r3, r3, #1
 80071cc:	181b      	adds	r3, r3, r0
 80071ce:	1ad3      	subs	r3, r2, r3
 80071d0:	435b      	muls	r3, r3
 80071d2:	9a04      	ldr	r2, [sp, #16]
 80071d4:	18cb      	adds	r3, r1, r3
 80071d6:	4293      	cmp	r3, r2
 80071d8:	d208      	bcs.n	80071ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x18c>
 80071da:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80071dc:	9907      	ldr	r1, [sp, #28]
 80071de:	603a      	str	r2, [r7, #0]
 80071e0:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80071e2:	9304      	str	r3, [sp, #16]
 80071e4:	8011      	strh	r1, [r2, #0]
 80071e6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 80071e8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80071ea:	8011      	strh	r1, [r2, #0]
 80071ec:	9e01      	ldr	r6, [sp, #4]
 80071ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80071f0:	3508      	adds	r5, #8
 80071f2:	42ab      	cmp	r3, r5
 80071f4:	d19f      	bne.n	8007136 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xd6>
 80071f6:	9a00      	ldr	r2, [sp, #0]
 80071f8:	9b06      	ldr	r3, [sp, #24]
 80071fa:	4694      	mov	ip, r2
 80071fc:	4463      	add	r3, ip
 80071fe:	9306      	str	r3, [sp, #24]
 8007200:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8007202:	9b05      	ldr	r3, [sp, #20]
 8007204:	429d      	cmp	r5, r3
 8007206:	d186      	bne.n	8007116 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xb6>
 8007208:	b025      	add	sp, #148	@ 0x94
 800720a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800720c:	2301      	movs	r3, #1
 800720e:	425b      	negs	r3, r3
 8007210:	e76e      	b.n	80070f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x90>
 8007212:	46c0      	nop			@ (mov r8, r8)
 8007214:	20003578 	.word	0x20003578
 8007218:	08013854 	.word	0x08013854

0800721c <_ZN8touchgfx4RectaNERKS0_>:
 800721c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800721e:	2300      	movs	r3, #0
 8007220:	5ec7      	ldrsh	r7, [r0, r3]
 8007222:	2300      	movs	r3, #0
 8007224:	5ece      	ldrsh	r6, [r1, r3]
 8007226:	888b      	ldrh	r3, [r1, #4]
 8007228:	b085      	sub	sp, #20
 800722a:	199b      	adds	r3, r3, r6
 800722c:	b29b      	uxth	r3, r3
 800722e:	9300      	str	r3, [sp, #0]
 8007230:	466b      	mov	r3, sp
 8007232:	2200      	movs	r2, #0
 8007234:	5e9b      	ldrsh	r3, [r3, r2]
 8007236:	9301      	str	r3, [sp, #4]
 8007238:	429f      	cmp	r7, r3
 800723a:	da39      	bge.n	80072b0 <_ZN8touchgfx4RectaNERKS0_+0x94>
 800723c:	8883      	ldrh	r3, [r0, #4]
 800723e:	19db      	adds	r3, r3, r7
 8007240:	b29b      	uxth	r3, r3
 8007242:	469c      	mov	ip, r3
 8007244:	b21b      	sxth	r3, r3
 8007246:	9302      	str	r3, [sp, #8]
 8007248:	429e      	cmp	r6, r3
 800724a:	da31      	bge.n	80072b0 <_ZN8touchgfx4RectaNERKS0_+0x94>
 800724c:	2302      	movs	r3, #2
 800724e:	5ecc      	ldrsh	r4, [r1, r3]
 8007250:	2302      	movs	r3, #2
 8007252:	5ec5      	ldrsh	r5, [r0, r3]
 8007254:	88cb      	ldrh	r3, [r1, #6]
 8007256:	191b      	adds	r3, r3, r4
 8007258:	b21b      	sxth	r3, r3
 800725a:	429d      	cmp	r5, r3
 800725c:	da28      	bge.n	80072b0 <_ZN8touchgfx4RectaNERKS0_+0x94>
 800725e:	88c3      	ldrh	r3, [r0, #6]
 8007260:	195b      	adds	r3, r3, r5
 8007262:	b29b      	uxth	r3, r3
 8007264:	b21a      	sxth	r2, r3
 8007266:	9203      	str	r2, [sp, #12]
 8007268:	4294      	cmp	r4, r2
 800726a:	da21      	bge.n	80072b0 <_ZN8touchgfx4RectaNERKS0_+0x94>
 800726c:	1c3a      	adds	r2, r7, #0
 800726e:	42b7      	cmp	r7, r6
 8007270:	da00      	bge.n	8007274 <_ZN8touchgfx4RectaNERKS0_+0x58>
 8007272:	1c32      	adds	r2, r6, #0
 8007274:	b212      	sxth	r2, r2
 8007276:	1c2e      	adds	r6, r5, #0
 8007278:	42a5      	cmp	r5, r4
 800727a:	da00      	bge.n	800727e <_ZN8touchgfx4RectaNERKS0_+0x62>
 800727c:	1c26      	adds	r6, r4, #0
 800727e:	9c01      	ldr	r4, [sp, #4]
 8007280:	9d02      	ldr	r5, [sp, #8]
 8007282:	b236      	sxth	r6, r6
 8007284:	42ac      	cmp	r4, r5
 8007286:	dc01      	bgt.n	800728c <_ZN8touchgfx4RectaNERKS0_+0x70>
 8007288:	9c00      	ldr	r4, [sp, #0]
 800728a:	46a4      	mov	ip, r4
 800728c:	4664      	mov	r4, ip
 800728e:	1aa4      	subs	r4, r4, r2
 8007290:	8084      	strh	r4, [r0, #4]
 8007292:	884c      	ldrh	r4, [r1, #2]
 8007294:	88c9      	ldrh	r1, [r1, #6]
 8007296:	9d03      	ldr	r5, [sp, #12]
 8007298:	1861      	adds	r1, r4, r1
 800729a:	b289      	uxth	r1, r1
 800729c:	b20c      	sxth	r4, r1
 800729e:	42a5      	cmp	r5, r4
 80072a0:	db00      	blt.n	80072a4 <_ZN8touchgfx4RectaNERKS0_+0x88>
 80072a2:	000b      	movs	r3, r1
 80072a4:	1b9b      	subs	r3, r3, r6
 80072a6:	80c3      	strh	r3, [r0, #6]
 80072a8:	8002      	strh	r2, [r0, #0]
 80072aa:	8046      	strh	r6, [r0, #2]
 80072ac:	b005      	add	sp, #20
 80072ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80072b0:	2300      	movs	r3, #0
 80072b2:	8003      	strh	r3, [r0, #0]
 80072b4:	8043      	strh	r3, [r0, #2]
 80072b6:	8083      	strh	r3, [r0, #4]
 80072b8:	80c3      	strh	r3, [r0, #6]
 80072ba:	e7f7      	b.n	80072ac <_ZN8touchgfx4RectaNERKS0_+0x90>

080072bc <_ZNK8touchgfx4Rect7isEmptyEv>:
 80072bc:	2104      	movs	r1, #4
 80072be:	5e42      	ldrsh	r2, [r0, r1]
 80072c0:	0003      	movs	r3, r0
 80072c2:	2001      	movs	r0, #1
 80072c4:	2a00      	cmp	r2, #0
 80072c6:	dd04      	ble.n	80072d2 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80072c8:	2006      	movs	r0, #6
 80072ca:	5e18      	ldrsh	r0, [r3, r0]
 80072cc:	1e43      	subs	r3, r0, #1
 80072ce:	4318      	orrs	r0, r3
 80072d0:	0fc0      	lsrs	r0, r0, #31
 80072d2:	4770      	bx	lr

080072d4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80072d4:	2300      	movs	r3, #0
 80072d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80072d8:	0004      	movs	r4, r0
 80072da:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80072dc:	b085      	sub	sp, #20
 80072de:	8003      	strh	r3, [r0, #0]
 80072e0:	8043      	strh	r3, [r0, #2]
 80072e2:	8083      	strh	r3, [r0, #4]
 80072e4:	80c3      	strh	r3, [r0, #6]
 80072e6:	2d00      	cmp	r5, #0
 80072e8:	d048      	beq.n	800737c <_ZNK8touchgfx9Container16getContainedAreaEv+0xa8>
 80072ea:	1d28      	adds	r0, r5, #4
 80072ec:	f7ff ffe6 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 80072f0:	2800      	cmp	r0, #0
 80072f2:	d111      	bne.n	8007318 <_ZNK8touchgfx9Container16getContainedAreaEv+0x44>
 80072f4:	0020      	movs	r0, r4
 80072f6:	f7ff ffe1 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 80072fa:	2304      	movs	r3, #4
 80072fc:	5eee      	ldrsh	r6, [r5, r3]
 80072fe:	2206      	movs	r2, #6
 8007300:	5eab      	ldrsh	r3, [r5, r2]
 8007302:	2108      	movs	r1, #8
 8007304:	5e6a      	ldrsh	r2, [r5, r1]
 8007306:	270a      	movs	r7, #10
 8007308:	5fe9      	ldrsh	r1, [r5, r7]
 800730a:	9101      	str	r1, [sp, #4]
 800730c:	2800      	cmp	r0, #0
 800730e:	d005      	beq.n	800731c <_ZNK8touchgfx9Container16getContainedAreaEv+0x48>
 8007310:	8026      	strh	r6, [r4, #0]
 8007312:	8063      	strh	r3, [r4, #2]
 8007314:	80a2      	strh	r2, [r4, #4]
 8007316:	80e1      	strh	r1, [r4, #6]
 8007318:	69ad      	ldr	r5, [r5, #24]
 800731a:	e7e4      	b.n	80072e6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800731c:	2000      	movs	r0, #0
 800731e:	5e21      	ldrsh	r1, [r4, r0]
 8007320:	1c08      	adds	r0, r1, #0
 8007322:	42b1      	cmp	r1, r6
 8007324:	dd00      	ble.n	8007328 <_ZNK8touchgfx9Container16getContainedAreaEv+0x54>
 8007326:	1c30      	adds	r0, r6, #0
 8007328:	b200      	sxth	r0, r0
 800732a:	9002      	str	r0, [sp, #8]
 800732c:	2002      	movs	r0, #2
 800732e:	5e27      	ldrsh	r7, [r4, r0]
 8007330:	1c38      	adds	r0, r7, #0
 8007332:	429f      	cmp	r7, r3
 8007334:	dd00      	ble.n	8007338 <_ZNK8touchgfx9Container16getContainedAreaEv+0x64>
 8007336:	1c18      	adds	r0, r3, #0
 8007338:	b200      	sxth	r0, r0
 800733a:	9003      	str	r0, [sp, #12]
 800733c:	88a0      	ldrh	r0, [r4, #4]
 800733e:	18b6      	adds	r6, r6, r2
 8007340:	4684      	mov	ip, r0
 8007342:	4461      	add	r1, ip
 8007344:	1c0a      	adds	r2, r1, #0
 8007346:	b230      	sxth	r0, r6
 8007348:	b209      	sxth	r1, r1
 800734a:	4281      	cmp	r1, r0
 800734c:	da00      	bge.n	8007350 <_ZNK8touchgfx9Container16getContainedAreaEv+0x7c>
 800734e:	1c32      	adds	r2, r6, #0
 8007350:	88e1      	ldrh	r1, [r4, #6]
 8007352:	b212      	sxth	r2, r2
 8007354:	19cf      	adds	r7, r1, r7
 8007356:	9901      	ldr	r1, [sp, #4]
 8007358:	185b      	adds	r3, r3, r1
 800735a:	b21e      	sxth	r6, r3
 800735c:	1c39      	adds	r1, r7, #0
 800735e:	b23f      	sxth	r7, r7
 8007360:	42b7      	cmp	r7, r6
 8007362:	da00      	bge.n	8007366 <_ZNK8touchgfx9Container16getContainedAreaEv+0x92>
 8007364:	1c19      	adds	r1, r3, #0
 8007366:	9b02      	ldr	r3, [sp, #8]
 8007368:	8023      	strh	r3, [r4, #0]
 800736a:	9b03      	ldr	r3, [sp, #12]
 800736c:	8063      	strh	r3, [r4, #2]
 800736e:	9b02      	ldr	r3, [sp, #8]
 8007370:	1ad2      	subs	r2, r2, r3
 8007372:	9b03      	ldr	r3, [sp, #12]
 8007374:	80a2      	strh	r2, [r4, #4]
 8007376:	1ac8      	subs	r0, r1, r3
 8007378:	80e0      	strh	r0, [r4, #6]
 800737a:	e7cd      	b.n	8007318 <_ZNK8touchgfx9Container16getContainedAreaEv+0x44>
 800737c:	0020      	movs	r0, r4
 800737e:	b005      	add	sp, #20
 8007380:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007382 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8007382:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007384:	1d83      	adds	r3, r0, #6
 8007386:	7fdb      	ldrb	r3, [r3, #31]
 8007388:	b085      	sub	sp, #20
 800738a:	2b00      	cmp	r3, #0
 800738c:	d031      	beq.n	80073f2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x70>
 800738e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8007390:	2c00      	cmp	r4, #0
 8007392:	d02e      	beq.n	80073f2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x70>
 8007394:	2200      	movs	r2, #0
 8007396:	5e8b      	ldrsh	r3, [r1, r2]
 8007398:	9301      	str	r3, [sp, #4]
 800739a:	2302      	movs	r3, #2
 800739c:	5ecd      	ldrsh	r5, [r1, r3]
 800739e:	2304      	movs	r3, #4
 80073a0:	5ece      	ldrsh	r6, [r1, r3]
 80073a2:	2306      	movs	r3, #6
 80073a4:	5ecf      	ldrsh	r7, [r1, r3]
 80073a6:	1da3      	adds	r3, r4, #6
 80073a8:	7fdb      	ldrb	r3, [r3, #31]
 80073aa:	2b00      	cmp	r3, #0
 80073ac:	d01e      	beq.n	80073ec <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6a>
 80073ae:	9a01      	ldr	r2, [sp, #4]
 80073b0:	ab02      	add	r3, sp, #8
 80073b2:	0018      	movs	r0, r3
 80073b4:	801a      	strh	r2, [r3, #0]
 80073b6:	805d      	strh	r5, [r3, #2]
 80073b8:	809e      	strh	r6, [r3, #4]
 80073ba:	80df      	strh	r7, [r3, #6]
 80073bc:	1d21      	adds	r1, r4, #4
 80073be:	f7ff ff2d 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 80073c2:	a802      	add	r0, sp, #8
 80073c4:	f7ff ff7a 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 80073c8:	2800      	cmp	r0, #0
 80073ca:	d10f      	bne.n	80073ec <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6a>
 80073cc:	ab02      	add	r3, sp, #8
 80073ce:	881b      	ldrh	r3, [r3, #0]
 80073d0:	88a2      	ldrh	r2, [r4, #4]
 80073d2:	0020      	movs	r0, r4
 80073d4:	1a9b      	subs	r3, r3, r2
 80073d6:	aa02      	add	r2, sp, #8
 80073d8:	8013      	strh	r3, [r2, #0]
 80073da:	8853      	ldrh	r3, [r2, #2]
 80073dc:	88e2      	ldrh	r2, [r4, #6]
 80073de:	1a9b      	subs	r3, r3, r2
 80073e0:	aa02      	add	r2, sp, #8
 80073e2:	8053      	strh	r3, [r2, #2]
 80073e4:	6823      	ldr	r3, [r4, #0]
 80073e6:	0011      	movs	r1, r2
 80073e8:	689b      	ldr	r3, [r3, #8]
 80073ea:	4798      	blx	r3
 80073ec:	69a4      	ldr	r4, [r4, #24]
 80073ee:	2c00      	cmp	r4, #0
 80073f0:	d1d9      	bne.n	80073a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x24>
 80073f2:	b005      	add	sp, #20
 80073f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080073f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80073f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80073f8:	1d83      	adds	r3, r0, #6
 80073fa:	7fdb      	ldrb	r3, [r3, #31]
 80073fc:	000d      	movs	r5, r1
 80073fe:	0016      	movs	r6, r2
 8007400:	2b00      	cmp	r3, #0
 8007402:	d027      	beq.n	8007454 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x5e>
 8007404:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8007406:	2c00      	cmp	r4, #0
 8007408:	d024      	beq.n	8007454 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x5e>
 800740a:	1da3      	adds	r3, r4, #6
 800740c:	7fdb      	ldrb	r3, [r3, #31]
 800740e:	2b00      	cmp	r3, #0
 8007410:	d01e      	beq.n	8007450 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x5a>
 8007412:	2208      	movs	r2, #8
 8007414:	0029      	movs	r1, r5
 8007416:	4668      	mov	r0, sp
 8007418:	f00b fcad 	bl	8012d76 <memcpy>
 800741c:	4668      	mov	r0, sp
 800741e:	1d21      	adds	r1, r4, #4
 8007420:	f7ff fefc 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 8007424:	4668      	mov	r0, sp
 8007426:	f7ff ff49 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800742a:	2800      	cmp	r0, #0
 800742c:	d110      	bne.n	8007450 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x5a>
 800742e:	466b      	mov	r3, sp
 8007430:	88a2      	ldrh	r2, [r4, #4]
 8007432:	881b      	ldrh	r3, [r3, #0]
 8007434:	4669      	mov	r1, sp
 8007436:	1a9b      	subs	r3, r3, r2
 8007438:	466a      	mov	r2, sp
 800743a:	8013      	strh	r3, [r2, #0]
 800743c:	8853      	ldrh	r3, [r2, #2]
 800743e:	88e2      	ldrh	r2, [r4, #6]
 8007440:	0020      	movs	r0, r4
 8007442:	1a9b      	subs	r3, r3, r2
 8007444:	466a      	mov	r2, sp
 8007446:	8053      	strh	r3, [r2, #2]
 8007448:	6823      	ldr	r3, [r4, #0]
 800744a:	0032      	movs	r2, r6
 800744c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800744e:	4798      	blx	r3
 8007450:	69a4      	ldr	r4, [r4, #24]
 8007452:	e7d8      	b.n	8007406 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x10>
 8007454:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
	...

08007458 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv>:
 8007458:	b530      	push	{r4, r5, lr}
 800745a:	4b20      	ldr	r3, [pc, #128]	@ (80074dc <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x84>)
 800745c:	b085      	sub	sp, #20
 800745e:	681b      	ldr	r3, [r3, #0]
 8007460:	699c      	ldr	r4, [r3, #24]
 8007462:	f7fb fc73 	bl	8002d4c <_ZN8touchgfx14transmitActiveEv>
 8007466:	2800      	cmp	r0, #0
 8007468:	d002      	beq.n	8007470 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x18>
 800746a:	f7fb f91f 	bl	80026ac <_ZN8touchgfx10OSWrappers9taskYieldEv>
 800746e:	e7f8      	b.n	8007462 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0xa>
 8007470:	6823      	ldr	r3, [r4, #0]
 8007472:	0020      	movs	r0, r4
 8007474:	689b      	ldr	r3, [r3, #8]
 8007476:	4798      	blx	r3
 8007478:	2800      	cmp	r0, #0
 800747a:	d02d      	beq.n	80074d8 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x80>
 800747c:	6823      	ldr	r3, [r4, #0]
 800747e:	0020      	movs	r0, r4
 8007480:	691b      	ldr	r3, [r3, #16]
 8007482:	4798      	blx	r3
 8007484:	ad02      	add	r5, sp, #8
 8007486:	0001      	movs	r1, r0
 8007488:	2208      	movs	r2, #8
 800748a:	0028      	movs	r0, r5
 800748c:	f00b fc73 	bl	8012d76 <memcpy>
 8007490:	8868      	ldrh	r0, [r5, #2]
 8007492:	88eb      	ldrh	r3, [r5, #6]
 8007494:	18c0      	adds	r0, r0, r3
 8007496:	b280      	uxth	r0, r0
 8007498:	f7fb fc5c 	bl	8002d54 <_ZN8touchgfx19shouldTransferBlockEt>
 800749c:	2800      	cmp	r0, #0
 800749e:	d102      	bne.n	80074a6 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x4e>
 80074a0:	f7fb f904 	bl	80026ac <_ZN8touchgfx10OSWrappers9taskYieldEv>
 80074a4:	e7f4      	b.n	8007490 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x38>
 80074a6:	6823      	ldr	r3, [r4, #0]
 80074a8:	0029      	movs	r1, r5
 80074aa:	68db      	ldr	r3, [r3, #12]
 80074ac:	0020      	movs	r0, r4
 80074ae:	4798      	blx	r3
 80074b0:	88ab      	ldrh	r3, [r5, #4]
 80074b2:	886a      	ldrh	r2, [r5, #2]
 80074b4:	8829      	ldrh	r1, [r5, #0]
 80074b6:	88ed      	ldrh	r5, [r5, #6]
 80074b8:	9500      	str	r5, [sp, #0]
 80074ba:	f7fb fc4f 	bl	8002d5c <_ZN8touchgfx13transmitBlockEPKhtttt>
 80074be:	6823      	ldr	r3, [r4, #0]
 80074c0:	0020      	movs	r0, r4
 80074c2:	689b      	ldr	r3, [r3, #8]
 80074c4:	4798      	blx	r3
 80074c6:	2800      	cmp	r0, #0
 80074c8:	d0d2      	beq.n	8007470 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x18>
 80074ca:	f7fb fc3f 	bl	8002d4c <_ZN8touchgfx14transmitActiveEv>
 80074ce:	2800      	cmp	r0, #0
 80074d0:	d0ce      	beq.n	8007470 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x18>
 80074d2:	f7fb f8eb 	bl	80026ac <_ZN8touchgfx10OSWrappers9taskYieldEv>
 80074d6:	e7f8      	b.n	80074ca <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x72>
 80074d8:	b005      	add	sp, #20
 80074da:	bd30      	pop	{r4, r5, pc}
 80074dc:	20003578 	.word	0x20003578

080074e0 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv>:
 80074e0:	b530      	push	{r4, r5, lr}
 80074e2:	4b22      	ldr	r3, [pc, #136]	@ (800756c <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x8c>)
 80074e4:	b085      	sub	sp, #20
 80074e6:	681b      	ldr	r3, [r3, #0]
 80074e8:	699d      	ldr	r5, [r3, #24]
 80074ea:	682b      	ldr	r3, [r5, #0]
 80074ec:	0028      	movs	r0, r5
 80074ee:	685b      	ldr	r3, [r3, #4]
 80074f0:	4798      	blx	r3
 80074f2:	f7fb fc2b 	bl	8002d4c <_ZN8touchgfx14transmitActiveEv>
 80074f6:	2800      	cmp	r0, #0
 80074f8:	d123      	bne.n	8007542 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x62>
 80074fa:	682b      	ldr	r3, [r5, #0]
 80074fc:	0028      	movs	r0, r5
 80074fe:	689b      	ldr	r3, [r3, #8]
 8007500:	4798      	blx	r3
 8007502:	2800      	cmp	r0, #0
 8007504:	d01d      	beq.n	8007542 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x62>
 8007506:	682b      	ldr	r3, [r5, #0]
 8007508:	0028      	movs	r0, r5
 800750a:	691b      	ldr	r3, [r3, #16]
 800750c:	4798      	blx	r3
 800750e:	ac02      	add	r4, sp, #8
 8007510:	0001      	movs	r1, r0
 8007512:	2208      	movs	r2, #8
 8007514:	0020      	movs	r0, r4
 8007516:	f00b fc2e 	bl	8012d76 <memcpy>
 800751a:	8863      	ldrh	r3, [r4, #2]
 800751c:	88e0      	ldrh	r0, [r4, #6]
 800751e:	18c0      	adds	r0, r0, r3
 8007520:	b280      	uxth	r0, r0
 8007522:	f7fb fc17 	bl	8002d54 <_ZN8touchgfx19shouldTransferBlockEt>
 8007526:	682b      	ldr	r3, [r5, #0]
 8007528:	2800      	cmp	r0, #0
 800752a:	d00c      	beq.n	8007546 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x66>
 800752c:	0021      	movs	r1, r4
 800752e:	68db      	ldr	r3, [r3, #12]
 8007530:	0028      	movs	r0, r5
 8007532:	4798      	blx	r3
 8007534:	88a3      	ldrh	r3, [r4, #4]
 8007536:	8862      	ldrh	r2, [r4, #2]
 8007538:	8821      	ldrh	r1, [r4, #0]
 800753a:	88e4      	ldrh	r4, [r4, #6]
 800753c:	9400      	str	r4, [sp, #0]
 800753e:	f7fb fc0d 	bl	8002d5c <_ZN8touchgfx13transmitBlockEPKhtttt>
 8007542:	b005      	add	sp, #20
 8007544:	bd30      	pop	{r4, r5, pc}
 8007546:	695b      	ldr	r3, [r3, #20]
 8007548:	0028      	movs	r0, r5
 800754a:	4798      	blx	r3
 800754c:	2800      	cmp	r0, #0
 800754e:	d1f8      	bne.n	8007542 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x62>
 8007550:	8860      	ldrh	r0, [r4, #2]
 8007552:	88e3      	ldrh	r3, [r4, #6]
 8007554:	18c0      	adds	r0, r0, r3
 8007556:	b280      	uxth	r0, r0
 8007558:	f7fb fbfc 	bl	8002d54 <_ZN8touchgfx19shouldTransferBlockEt>
 800755c:	2800      	cmp	r0, #0
 800755e:	d102      	bne.n	8007566 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x86>
 8007560:	f7fb f8a4 	bl	80026ac <_ZN8touchgfx10OSWrappers9taskYieldEv>
 8007564:	e7f4      	b.n	8007550 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x70>
 8007566:	682b      	ldr	r3, [r5, #0]
 8007568:	e7e0      	b.n	800752c <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x4c>
 800756a:	46c0      	nop			@ (mov r8, r8)
 800756c:	20003578 	.word	0x20003578

08007570 <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv>:
 8007570:	b530      	push	{r4, r5, lr}
 8007572:	4b17      	ldr	r3, [pc, #92]	@ (80075d0 <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv+0x60>)
 8007574:	b085      	sub	sp, #20
 8007576:	681b      	ldr	r3, [r3, #0]
 8007578:	699d      	ldr	r5, [r3, #24]
 800757a:	682b      	ldr	r3, [r5, #0]
 800757c:	0028      	movs	r0, r5
 800757e:	699b      	ldr	r3, [r3, #24]
 8007580:	4798      	blx	r3
 8007582:	682b      	ldr	r3, [r5, #0]
 8007584:	0028      	movs	r0, r5
 8007586:	689b      	ldr	r3, [r3, #8]
 8007588:	4798      	blx	r3
 800758a:	2800      	cmp	r0, #0
 800758c:	d01d      	beq.n	80075ca <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv+0x5a>
 800758e:	682b      	ldr	r3, [r5, #0]
 8007590:	0028      	movs	r0, r5
 8007592:	691b      	ldr	r3, [r3, #16]
 8007594:	4798      	blx	r3
 8007596:	ac02      	add	r4, sp, #8
 8007598:	0001      	movs	r1, r0
 800759a:	2208      	movs	r2, #8
 800759c:	0020      	movs	r0, r4
 800759e:	f00b fbea 	bl	8012d76 <memcpy>
 80075a2:	8860      	ldrh	r0, [r4, #2]
 80075a4:	88e3      	ldrh	r3, [r4, #6]
 80075a6:	18c0      	adds	r0, r0, r3
 80075a8:	b280      	uxth	r0, r0
 80075aa:	f7fb fbd3 	bl	8002d54 <_ZN8touchgfx19shouldTransferBlockEt>
 80075ae:	2800      	cmp	r0, #0
 80075b0:	d00b      	beq.n	80075ca <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv+0x5a>
 80075b2:	682b      	ldr	r3, [r5, #0]
 80075b4:	0021      	movs	r1, r4
 80075b6:	68db      	ldr	r3, [r3, #12]
 80075b8:	0028      	movs	r0, r5
 80075ba:	4798      	blx	r3
 80075bc:	88a3      	ldrh	r3, [r4, #4]
 80075be:	8862      	ldrh	r2, [r4, #2]
 80075c0:	8821      	ldrh	r1, [r4, #0]
 80075c2:	88e4      	ldrh	r4, [r4, #6]
 80075c4:	9400      	str	r4, [sp, #0]
 80075c6:	f7fb fbc9 	bl	8002d5c <_ZN8touchgfx13transmitBlockEPKhtttt>
 80075ca:	b005      	add	sp, #20
 80075cc:	bd30      	pop	{r4, r5, pc}
 80075ce:	46c0      	nop			@ (mov r8, r8)
 80075d0:	20003578 	.word	0x20003578

080075d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80075d4:	b513      	push	{r0, r1, r4, lr}
 80075d6:	6803      	ldr	r3, [r0, #0]
 80075d8:	33a8      	adds	r3, #168	@ 0xa8
 80075da:	681c      	ldr	r4, [r3, #0]
 80075dc:	2300      	movs	r3, #0
 80075de:	9300      	str	r3, [sp, #0]
 80075e0:	9301      	str	r3, [sp, #4]
 80075e2:	466b      	mov	r3, sp
 80075e4:	47a0      	blx	r4
 80075e6:	bd13      	pop	{r0, r1, r4, pc}

080075e8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80075e8:	0002      	movs	r2, r0
 80075ea:	2301      	movs	r3, #1
 80075ec:	324b      	adds	r2, #75	@ 0x4b
 80075ee:	306d      	adds	r0, #109	@ 0x6d
 80075f0:	7013      	strb	r3, [r2, #0]
 80075f2:	7003      	strb	r3, [r0, #0]
 80075f4:	4770      	bx	lr

080075f6 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80075f6:	0002      	movs	r2, r0
 80075f8:	2301      	movs	r3, #1
 80075fa:	324b      	adds	r2, #75	@ 0x4b
 80075fc:	306d      	adds	r0, #109	@ 0x6d
 80075fe:	7013      	strb	r3, [r2, #0]
 8007600:	7003      	strb	r3, [r0, #0]
 8007602:	4770      	bx	lr

08007604 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8007604:	2301      	movs	r3, #1
 8007606:	b510      	push	{r4, lr}
 8007608:	6842      	ldr	r2, [r0, #4]
 800760a:	7253      	strb	r3, [r2, #9]
 800760c:	6840      	ldr	r0, [r0, #4]
 800760e:	6803      	ldr	r3, [r0, #0]
 8007610:	691b      	ldr	r3, [r3, #16]
 8007612:	4798      	blx	r3
 8007614:	bd10      	pop	{r4, pc}

08007616 <_ZN8touchgfx3HAL8flushDMAEv>:
 8007616:	b510      	push	{r4, lr}
 8007618:	6840      	ldr	r0, [r0, #4]
 800761a:	6803      	ldr	r3, [r0, #0]
 800761c:	689b      	ldr	r3, [r3, #8]
 800761e:	4798      	blx	r3
 8007620:	bd10      	pop	{r4, pc}

08007622 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8007622:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007624:	b08f      	sub	sp, #60	@ 0x3c
 8007626:	9300      	str	r3, [sp, #0]
 8007628:	ac14      	add	r4, sp, #80	@ 0x50
 800762a:	8824      	ldrh	r4, [r4, #0]
 800762c:	ab04      	add	r3, sp, #16
 800762e:	46a4      	mov	ip, r4
 8007630:	ac15      	add	r4, sp, #84	@ 0x54
 8007632:	8824      	ldrh	r4, [r4, #0]
 8007634:	940a      	str	r4, [sp, #40]	@ 0x28
 8007636:	ac16      	add	r4, sp, #88	@ 0x58
 8007638:	8824      	ldrh	r4, [r4, #0]
 800763a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800763c:	ac17      	add	r4, sp, #92	@ 0x5c
 800763e:	7824      	ldrb	r4, [r4, #0]
 8007640:	940c      	str	r4, [sp, #48]	@ 0x30
 8007642:	ac18      	add	r4, sp, #96	@ 0x60
 8007644:	7824      	ldrb	r4, [r4, #0]
 8007646:	940d      	str	r4, [sp, #52]	@ 0x34
 8007648:	ac19      	add	r4, sp, #100	@ 0x64
 800764a:	8825      	ldrh	r5, [r4, #0]
 800764c:	ac1a      	add	r4, sp, #104	@ 0x68
 800764e:	7826      	ldrb	r6, [r4, #0]
 8007650:	ac1b      	add	r4, sp, #108	@ 0x6c
 8007652:	7827      	ldrb	r7, [r4, #0]
 8007654:	2441      	movs	r4, #65	@ 0x41
 8007656:	18e4      	adds	r4, r4, r3
 8007658:	7fe4      	ldrb	r4, [r4, #31]
 800765a:	6803      	ldr	r3, [r0, #0]
 800765c:	9409      	str	r4, [sp, #36]	@ 0x24
 800765e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8007660:	9708      	str	r7, [sp, #32]
 8007662:	9405      	str	r4, [sp, #20]
 8007664:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8007666:	9607      	str	r6, [sp, #28]
 8007668:	9404      	str	r4, [sp, #16]
 800766a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800766c:	9506      	str	r5, [sp, #24]
 800766e:	9403      	str	r4, [sp, #12]
 8007670:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8007672:	9402      	str	r4, [sp, #8]
 8007674:	4664      	mov	r4, ip
 8007676:	9401      	str	r4, [sp, #4]
 8007678:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800767a:	0013      	movs	r3, r2
 800767c:	2200      	movs	r2, #0
 800767e:	47a0      	blx	r4
 8007680:	b00f      	add	sp, #60	@ 0x3c
 8007682:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007684 <_ZN8touchgfx3HAL10beginFrameEv>:
 8007684:	4b04      	ldr	r3, [pc, #16]	@ (8007698 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8007686:	781a      	ldrb	r2, [r3, #0]
 8007688:	2301      	movs	r3, #1
 800768a:	2a00      	cmp	r2, #0
 800768c:	d002      	beq.n	8007694 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800768e:	306e      	adds	r0, #110	@ 0x6e
 8007690:	7802      	ldrb	r2, [r0, #0]
 8007692:	4053      	eors	r3, r2
 8007694:	0018      	movs	r0, r3
 8007696:	4770      	bx	lr
 8007698:	20003576 	.word	0x20003576

0800769c <_ZN8touchgfx3HAL8endFrameEv>:
 800769c:	b510      	push	{r4, lr}
 800769e:	0004      	movs	r4, r0
 80076a0:	6840      	ldr	r0, [r0, #4]
 80076a2:	6803      	ldr	r3, [r0, #0]
 80076a4:	689b      	ldr	r3, [r3, #8]
 80076a6:	4798      	blx	r3
 80076a8:	0023      	movs	r3, r4
 80076aa:	336d      	adds	r3, #109	@ 0x6d
 80076ac:	781b      	ldrb	r3, [r3, #0]
 80076ae:	2b00      	cmp	r3, #0
 80076b0:	d002      	beq.n	80076b8 <_ZN8touchgfx3HAL8endFrameEv+0x1c>
 80076b2:	2301      	movs	r3, #1
 80076b4:	346e      	adds	r4, #110	@ 0x6e
 80076b6:	7023      	strb	r3, [r4, #0]
 80076b8:	bd10      	pop	{r4, pc}

080076ba <_ZN8touchgfx3HAL10initializeEv>:
 80076ba:	b510      	push	{r4, lr}
 80076bc:	0004      	movs	r4, r0
 80076be:	f7fa ffa9 	bl	8002614 <_ZN8touchgfx10OSWrappers10initializeEv>
 80076c2:	f7fa fe71 	bl	80023a8 <_ZN8touchgfx4GPIO4initEv>
 80076c6:	6860      	ldr	r0, [r4, #4]
 80076c8:	6803      	ldr	r3, [r0, #0]
 80076ca:	68db      	ldr	r3, [r3, #12]
 80076cc:	4798      	blx	r3
 80076ce:	68e0      	ldr	r0, [r4, #12]
 80076d0:	6803      	ldr	r3, [r0, #0]
 80076d2:	689b      	ldr	r3, [r3, #8]
 80076d4:	4798      	blx	r3
 80076d6:	6823      	ldr	r3, [r4, #0]
 80076d8:	0020      	movs	r0, r4
 80076da:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80076dc:	4798      	blx	r3
 80076de:	bd10      	pop	{r4, pc}

080076e0 <_ZN8touchgfx3HAL9taskEntryEv>:
 80076e0:	b510      	push	{r4, lr}
 80076e2:	0004      	movs	r4, r0
 80076e4:	6803      	ldr	r3, [r0, #0]
 80076e6:	3304      	adds	r3, #4
 80076e8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80076ea:	4798      	blx	r3
 80076ec:	6823      	ldr	r3, [r4, #0]
 80076ee:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80076f0:	0020      	movs	r0, r4
 80076f2:	4798      	blx	r3
 80076f4:	f7fa ffc8 	bl	8002688 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 80076f8:	6823      	ldr	r3, [r4, #0]
 80076fa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80076fc:	e7f8      	b.n	80076f0 <_ZN8touchgfx3HAL9taskEntryEv+0x10>
	...

08007700 <_ZN8touchgfx3HAL4tickEv>:
 8007700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007702:	6803      	ldr	r3, [r0, #0]
 8007704:	b085      	sub	sp, #20
 8007706:	33b0      	adds	r3, #176	@ 0xb0
 8007708:	681b      	ldr	r3, [r3, #0]
 800770a:	0004      	movs	r4, r0
 800770c:	4798      	blx	r3
 800770e:	2800      	cmp	r0, #0
 8007710:	d100      	bne.n	8007714 <_ZN8touchgfx3HAL4tickEv+0x14>
 8007712:	e0a4      	b.n	800785e <_ZN8touchgfx3HAL4tickEv+0x15e>
 8007714:	2001      	movs	r0, #1
 8007716:	f7fa fdb5 	bl	8002284 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800771a:	0023      	movs	r3, r4
 800771c:	0025      	movs	r5, r4
 800771e:	2600      	movs	r6, #0
 8007720:	0027      	movs	r7, r4
 8007722:	336a      	adds	r3, #106	@ 0x6a
 8007724:	781a      	ldrb	r2, [r3, #0]
 8007726:	356b      	adds	r5, #107	@ 0x6b
 8007728:	702a      	strb	r2, [r5, #0]
 800772a:	3b1f      	subs	r3, #31
 800772c:	77de      	strb	r6, [r3, #31]
 800772e:	3779      	adds	r7, #121	@ 0x79
 8007730:	701e      	strb	r6, [r3, #0]
 8007732:	783b      	ldrb	r3, [r7, #0]
 8007734:	42b3      	cmp	r3, r6
 8007736:	d005      	beq.n	8007744 <_ZN8touchgfx3HAL4tickEv+0x44>
 8007738:	6823      	ldr	r3, [r4, #0]
 800773a:	0020      	movs	r0, r4
 800773c:	33c4      	adds	r3, #196	@ 0xc4
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	4798      	blx	r3
 8007742:	703e      	strb	r6, [r7, #0]
 8007744:	0023      	movs	r3, r4
 8007746:	2601      	movs	r6, #1
 8007748:	334a      	adds	r3, #74	@ 0x4a
 800774a:	781b      	ldrb	r3, [r3, #0]
 800774c:	6862      	ldr	r2, [r4, #4]
 800774e:	4073      	eors	r3, r6
 8007750:	7253      	strb	r3, [r2, #9]
 8007752:	4b4e      	ldr	r3, [pc, #312]	@ (800788c <_ZN8touchgfx3HAL4tickEv+0x18c>)
 8007754:	701e      	strb	r6, [r3, #0]
 8007756:	f003 fc39 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 800775a:	6803      	ldr	r3, [r0, #0]
 800775c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800775e:	4798      	blx	r3
 8007760:	782b      	ldrb	r3, [r5, #0]
 8007762:	2b00      	cmp	r3, #0
 8007764:	d100      	bne.n	8007768 <_ZN8touchgfx3HAL4tickEv+0x68>
 8007766:	702e      	strb	r6, [r5, #0]
 8007768:	f003 fc30 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 800776c:	6803      	ldr	r3, [r0, #0]
 800776e:	695b      	ldr	r3, [r3, #20]
 8007770:	4798      	blx	r3
 8007772:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8007774:	6803      	ldr	r3, [r0, #0]
 8007776:	691b      	ldr	r3, [r3, #16]
 8007778:	4798      	blx	r3
 800777a:	0022      	movs	r2, r4
 800777c:	782b      	ldrb	r3, [r5, #0]
 800777e:	326c      	adds	r2, #108	@ 0x6c
 8007780:	3b01      	subs	r3, #1
 8007782:	b2db      	uxtb	r3, r3
 8007784:	702b      	strb	r3, [r5, #0]
 8007786:	7812      	ldrb	r2, [r2, #0]
 8007788:	2a00      	cmp	r2, #0
 800778a:	d001      	beq.n	8007790 <_ZN8touchgfx3HAL4tickEv+0x90>
 800778c:	2b00      	cmp	r3, #0
 800778e:	d1eb      	bne.n	8007768 <_ZN8touchgfx3HAL4tickEv+0x68>
 8007790:	0021      	movs	r1, r4
 8007792:	4a3f      	ldr	r2, [pc, #252]	@ (8007890 <_ZN8touchgfx3HAL4tickEv+0x190>)
 8007794:	3168      	adds	r1, #104	@ 0x68
 8007796:	7813      	ldrb	r3, [r2, #0]
 8007798:	3301      	adds	r3, #1
 800779a:	b25b      	sxtb	r3, r3
 800779c:	7013      	strb	r3, [r2, #0]
 800779e:	7809      	ldrb	r1, [r1, #0]
 80077a0:	b249      	sxtb	r1, r1
 80077a2:	4299      	cmp	r1, r3
 80077a4:	dc10      	bgt.n	80077c8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 80077a6:	2300      	movs	r3, #0
 80077a8:	68e0      	ldr	r0, [r4, #12]
 80077aa:	7013      	strb	r3, [r2, #0]
 80077ac:	6803      	ldr	r3, [r0, #0]
 80077ae:	aa03      	add	r2, sp, #12
 80077b0:	68db      	ldr	r3, [r3, #12]
 80077b2:	a902      	add	r1, sp, #8
 80077b4:	4798      	blx	r3
 80077b6:	6823      	ldr	r3, [r4, #0]
 80077b8:	2800      	cmp	r0, #0
 80077ba:	d05d      	beq.n	8007878 <_ZN8touchgfx3HAL4tickEv+0x178>
 80077bc:	33bc      	adds	r3, #188	@ 0xbc
 80077be:	681b      	ldr	r3, [r3, #0]
 80077c0:	9a03      	ldr	r2, [sp, #12]
 80077c2:	9902      	ldr	r1, [sp, #8]
 80077c4:	0020      	movs	r0, r4
 80077c6:	4798      	blx	r3
 80077c8:	466b      	mov	r3, sp
 80077ca:	1ddd      	adds	r5, r3, #7
 80077cc:	2300      	movs	r3, #0
 80077ce:	6960      	ldr	r0, [r4, #20]
 80077d0:	702b      	strb	r3, [r5, #0]
 80077d2:	4298      	cmp	r0, r3
 80077d4:	d00a      	beq.n	80077ec <_ZN8touchgfx3HAL4tickEv+0xec>
 80077d6:	6803      	ldr	r3, [r0, #0]
 80077d8:	0029      	movs	r1, r5
 80077da:	68db      	ldr	r3, [r3, #12]
 80077dc:	4798      	blx	r3
 80077de:	2800      	cmp	r0, #0
 80077e0:	d004      	beq.n	80077ec <_ZN8touchgfx3HAL4tickEv+0xec>
 80077e2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 80077e4:	7829      	ldrb	r1, [r5, #0]
 80077e6:	6803      	ldr	r3, [r0, #0]
 80077e8:	68db      	ldr	r3, [r3, #12]
 80077ea:	4798      	blx	r3
 80077ec:	0020      	movs	r0, r4
 80077ee:	301c      	adds	r0, #28
 80077f0:	f009 f998 	bl	8010b24 <_ZN8touchgfx8Gestures4tickEv>
 80077f4:	0023      	movs	r3, r4
 80077f6:	3370      	adds	r3, #112	@ 0x70
 80077f8:	781b      	ldrb	r3, [r3, #0]
 80077fa:	2b00      	cmp	r3, #0
 80077fc:	d02a      	beq.n	8007854 <_ZN8touchgfx3HAL4tickEv+0x154>
 80077fe:	6920      	ldr	r0, [r4, #16]
 8007800:	6803      	ldr	r3, [r0, #0]
 8007802:	691b      	ldr	r3, [r3, #16]
 8007804:	4798      	blx	r3
 8007806:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8007808:	0005      	movs	r5, r0
 800780a:	2b00      	cmp	r3, #0
 800780c:	d100      	bne.n	8007810 <_ZN8touchgfx3HAL4tickEv+0x110>
 800780e:	6760      	str	r0, [r4, #116]	@ 0x74
 8007810:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8007812:	4a20      	ldr	r2, [pc, #128]	@ (8007894 <_ZN8touchgfx3HAL4tickEv+0x194>)
 8007814:	1aeb      	subs	r3, r5, r3
 8007816:	4293      	cmp	r3, r2
 8007818:	d91c      	bls.n	8007854 <_ZN8touchgfx3HAL4tickEv+0x154>
 800781a:	6920      	ldr	r0, [r4, #16]
 800781c:	6803      	ldr	r3, [r0, #0]
 800781e:	699b      	ldr	r3, [r3, #24]
 8007820:	4798      	blx	r3
 8007822:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8007824:	0006      	movs	r6, r0
 8007826:	2164      	movs	r1, #100	@ 0x64
 8007828:	1ae8      	subs	r0, r5, r3
 800782a:	f7f8 fc9b 	bl	8000164 <__udivsi3>
 800782e:	0001      	movs	r1, r0
 8007830:	0030      	movs	r0, r6
 8007832:	f7f8 fc97 	bl	8000164 <__udivsi3>
 8007836:	0023      	movs	r3, r4
 8007838:	2264      	movs	r2, #100	@ 0x64
 800783a:	3369      	adds	r3, #105	@ 0x69
 800783c:	2800      	cmp	r0, #0
 800783e:	dd02      	ble.n	8007846 <_ZN8touchgfx3HAL4tickEv+0x146>
 8007840:	2863      	cmp	r0, #99	@ 0x63
 8007842:	dd1e      	ble.n	8007882 <_ZN8touchgfx3HAL4tickEv+0x182>
 8007844:	2200      	movs	r2, #0
 8007846:	701a      	strb	r2, [r3, #0]
 8007848:	6920      	ldr	r0, [r4, #16]
 800784a:	2100      	movs	r1, #0
 800784c:	6803      	ldr	r3, [r0, #0]
 800784e:	69db      	ldr	r3, [r3, #28]
 8007850:	4798      	blx	r3
 8007852:	6765      	str	r5, [r4, #116]	@ 0x74
 8007854:	f003 fbba 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 8007858:	6803      	ldr	r3, [r0, #0]
 800785a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800785c:	4798      	blx	r3
 800785e:	6823      	ldr	r3, [r4, #0]
 8007860:	0020      	movs	r0, r4
 8007862:	33b4      	adds	r3, #180	@ 0xb4
 8007864:	681b      	ldr	r3, [r3, #0]
 8007866:	4798      	blx	r3
 8007868:	2001      	movs	r0, #1
 800786a:	f7fa fd37 	bl	80022dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800786e:	2300      	movs	r3, #0
 8007870:	4a06      	ldr	r2, [pc, #24]	@ (800788c <_ZN8touchgfx3HAL4tickEv+0x18c>)
 8007872:	7013      	strb	r3, [r2, #0]
 8007874:	b005      	add	sp, #20
 8007876:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007878:	33c0      	adds	r3, #192	@ 0xc0
 800787a:	681b      	ldr	r3, [r3, #0]
 800787c:	0020      	movs	r0, r4
 800787e:	4798      	blx	r3
 8007880:	e7a2      	b.n	80077c8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 8007882:	2264      	movs	r2, #100	@ 0x64
 8007884:	1a10      	subs	r0, r2, r0
 8007886:	7018      	strb	r0, [r3, #0]
 8007888:	e7de      	b.n	8007848 <_ZN8touchgfx3HAL4tickEv+0x148>
 800788a:	46c0      	nop			@ (mov r8, r8)
 800788c:	2000357c 	.word	0x2000357c
 8007890:	2000357d 	.word	0x2000357d
 8007894:	05f5e100 	.word	0x05f5e100

08007898 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8007898:	b510      	push	{r4, lr}
 800789a:	0004      	movs	r4, r0
 800789c:	f7fa fece 	bl	800263c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80078a0:	2200      	movs	r2, #0
 80078a2:	6863      	ldr	r3, [r4, #4]
 80078a4:	729a      	strb	r2, [r3, #10]
 80078a6:	bd10      	pop	{r4, pc}

080078a8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80078a8:	b510      	push	{r4, lr}
 80078aa:	301c      	adds	r0, #28
 80078ac:	6401      	str	r1, [r0, #64]	@ 0x40
 80078ae:	f009 f937 	bl	8010b20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>
 80078b2:	bd10      	pop	{r4, pc}

080078b4 <_ZN8touchgfx3HAL5touchEll>:
 80078b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80078b6:	0004      	movs	r4, r0
 80078b8:	250e      	movs	r5, #14
 80078ba:	b087      	sub	sp, #28
 80078bc:	a804      	add	r0, sp, #16
 80078be:	9104      	str	r1, [sp, #16]
 80078c0:	9205      	str	r2, [sp, #20]
 80078c2:	f003 f95f 	bl	800ab84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80078c6:	9b04      	ldr	r3, [sp, #16]
 80078c8:	ae03      	add	r6, sp, #12
 80078ca:	0027      	movs	r7, r4
 80078cc:	446d      	add	r5, sp
 80078ce:	8033      	strh	r3, [r6, #0]
 80078d0:	9b05      	ldr	r3, [sp, #20]
 80078d2:	0029      	movs	r1, r5
 80078d4:	0030      	movs	r0, r6
 80078d6:	802b      	strh	r3, [r5, #0]
 80078d8:	f003 f9a6 	bl	800ac28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80078dc:	0020      	movs	r0, r4
 80078de:	376f      	adds	r7, #111	@ 0x6f
 80078e0:	8833      	ldrh	r3, [r6, #0]
 80078e2:	7839      	ldrb	r1, [r7, #0]
 80078e4:	469c      	mov	ip, r3
 80078e6:	301c      	adds	r0, #28
 80078e8:	882b      	ldrh	r3, [r5, #0]
 80078ea:	2900      	cmp	r1, #0
 80078ec:	d011      	beq.n	8007912 <_ZN8touchgfx3HAL5touchEll+0x5e>
 80078ee:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80078f0:	6e21      	ldr	r1, [r4, #96]	@ 0x60
 80078f2:	9300      	str	r3, [sp, #0]
 80078f4:	b292      	uxth	r2, r2
 80078f6:	b289      	uxth	r1, r1
 80078f8:	4663      	mov	r3, ip
 80078fa:	f009 f921 	bl	8010b40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80078fe:	2800      	cmp	r0, #0
 8007900:	d005      	beq.n	800790e <_ZN8touchgfx3HAL5touchEll+0x5a>
 8007902:	2200      	movs	r2, #0
 8007904:	5eb3      	ldrsh	r3, [r6, r2]
 8007906:	6623      	str	r3, [r4, #96]	@ 0x60
 8007908:	2200      	movs	r2, #0
 800790a:	5eab      	ldrsh	r3, [r5, r2]
 800790c:	6663      	str	r3, [r4, #100]	@ 0x64
 800790e:	b007      	add	sp, #28
 8007910:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007912:	4662      	mov	r2, ip
 8007914:	f009 f950 	bl	8010bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8007918:	2301      	movs	r3, #1
 800791a:	703b      	strb	r3, [r7, #0]
 800791c:	e7f1      	b.n	8007902 <_ZN8touchgfx3HAL5touchEll+0x4e>

0800791e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800791e:	b510      	push	{r4, lr}
 8007920:	2b00      	cmp	r3, #0
 8007922:	d042      	beq.n	80079aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8c>
 8007924:	0008      	movs	r0, r1
 8007926:	2401      	movs	r4, #1
 8007928:	4050      	eors	r0, r2
 800792a:	4220      	tst	r0, r4
 800792c:	d007      	beq.n	800793e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800792e:	18cb      	adds	r3, r1, r3
 8007930:	428b      	cmp	r3, r1
 8007932:	d93a      	bls.n	80079aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8c>
 8007934:	7810      	ldrb	r0, [r2, #0]
 8007936:	3201      	adds	r2, #1
 8007938:	7008      	strb	r0, [r1, #0]
 800793a:	3101      	adds	r1, #1
 800793c:	e7f8      	b.n	8007930 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800793e:	4222      	tst	r2, r4
 8007940:	d004      	beq.n	800794c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x2e>
 8007942:	7810      	ldrb	r0, [r2, #0]
 8007944:	3b01      	subs	r3, #1
 8007946:	7008      	strb	r0, [r1, #0]
 8007948:	3201      	adds	r2, #1
 800794a:	3101      	adds	r1, #1
 800794c:	2b01      	cmp	r3, #1
 800794e:	d911      	bls.n	8007974 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x56>
 8007950:	0008      	movs	r0, r1
 8007952:	2403      	movs	r4, #3
 8007954:	4050      	eors	r0, r2
 8007956:	4220      	tst	r0, r4
 8007958:	d01f      	beq.n	800799a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x7c>
 800795a:	2001      	movs	r0, #1
 800795c:	001c      	movs	r4, r3
 800795e:	4384      	bics	r4, r0
 8007960:	1908      	adds	r0, r1, r4
 8007962:	4288      	cmp	r0, r1
 8007964:	d904      	bls.n	8007970 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x52>
 8007966:	8814      	ldrh	r4, [r2, #0]
 8007968:	3202      	adds	r2, #2
 800796a:	800c      	strh	r4, [r1, #0]
 800796c:	3102      	adds	r1, #2
 800796e:	e7f8      	b.n	8007962 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8007970:	2001      	movs	r0, #1
 8007972:	4003      	ands	r3, r0
 8007974:	2003      	movs	r0, #3
 8007976:	001c      	movs	r4, r3
 8007978:	4384      	bics	r4, r0
 800797a:	1908      	adds	r0, r1, r4
 800797c:	4288      	cmp	r0, r1
 800797e:	d902      	bls.n	8007986 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x68>
 8007980:	ca10      	ldmia	r2!, {r4}
 8007982:	c110      	stmia	r1!, {r4}
 8007984:	e7fa      	b.n	800797c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8007986:	2003      	movs	r0, #3
 8007988:	4003      	ands	r3, r0
 800798a:	18cb      	adds	r3, r1, r3
 800798c:	428b      	cmp	r3, r1
 800798e:	d90c      	bls.n	80079aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8c>
 8007990:	7810      	ldrb	r0, [r2, #0]
 8007992:	3201      	adds	r2, #1
 8007994:	7008      	strb	r0, [r1, #0]
 8007996:	3101      	adds	r1, #1
 8007998:	e7f8      	b.n	800798c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800799a:	4222      	tst	r2, r4
 800799c:	d0ea      	beq.n	8007974 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x56>
 800799e:	8810      	ldrh	r0, [r2, #0]
 80079a0:	3b02      	subs	r3, #2
 80079a2:	8008      	strh	r0, [r1, #0]
 80079a4:	3202      	adds	r2, #2
 80079a6:	3102      	adds	r1, #2
 80079a8:	e7e4      	b.n	8007974 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x56>
 80079aa:	2001      	movs	r0, #1
 80079ac:	bd10      	pop	{r4, pc}

080079ae <_ZN8touchgfx3HAL7noTouchEv>:
 80079ae:	b510      	push	{r4, lr}
 80079b0:	0004      	movs	r4, r0
 80079b2:	346f      	adds	r4, #111	@ 0x6f
 80079b4:	7823      	ldrb	r3, [r4, #0]
 80079b6:	2b00      	cmp	r3, #0
 80079b8:	d009      	beq.n	80079ce <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80079ba:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80079bc:	6e02      	ldr	r2, [r0, #96]	@ 0x60
 80079be:	b29b      	uxth	r3, r3
 80079c0:	b292      	uxth	r2, r2
 80079c2:	301c      	adds	r0, #28
 80079c4:	2101      	movs	r1, #1
 80079c6:	f009 f8f7 	bl	8010bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80079ca:	2300      	movs	r3, #0
 80079cc:	7023      	strb	r3, [r4, #0]
 80079ce:	bd10      	pop	{r4, pc}

080079d0 <_ZN8touchgfx3HAL3lcdEv>:
 80079d0:	4b05      	ldr	r3, [pc, #20]	@ (80079e8 <_ZN8touchgfx3HAL3lcdEv+0x18>)
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	001a      	movs	r2, r3
 80079d6:	3258      	adds	r2, #88	@ 0x58
 80079d8:	7812      	ldrb	r2, [r2, #0]
 80079da:	2a00      	cmp	r2, #0
 80079dc:	d002      	beq.n	80079e4 <_ZN8touchgfx3HAL3lcdEv+0x14>
 80079de:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80079e0:	2800      	cmp	r0, #0
 80079e2:	d100      	bne.n	80079e6 <_ZN8touchgfx3HAL3lcdEv+0x16>
 80079e4:	6898      	ldr	r0, [r3, #8]
 80079e6:	4770      	bx	lr
 80079e8:	20003578 	.word	0x20003578

080079ec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80079ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80079ee:	b087      	sub	sp, #28
 80079f0:	9302      	str	r3, [sp, #8]
 80079f2:	ab0c      	add	r3, sp, #48	@ 0x30
 80079f4:	0014      	movs	r4, r2
 80079f6:	881a      	ldrh	r2, [r3, #0]
 80079f8:	2300      	movs	r3, #0
 80079fa:	000f      	movs	r7, r1
 80079fc:	0005      	movs	r5, r0
 80079fe:	6980      	ldr	r0, [r0, #24]
 8007a00:	9305      	str	r3, [sp, #20]
 8007a02:	6803      	ldr	r3, [r0, #0]
 8007a04:	a905      	add	r1, sp, #20
 8007a06:	9101      	str	r1, [sp, #4]
 8007a08:	9200      	str	r2, [sp, #0]
 8007a0a:	681e      	ldr	r6, [r3, #0]
 8007a0c:	0022      	movs	r2, r4
 8007a0e:	9b02      	ldr	r3, [sp, #8]
 8007a10:	0039      	movs	r1, r7
 8007a12:	47b0      	blx	r6
 8007a14:	9b02      	ldr	r3, [sp, #8]
 8007a16:	4e0e      	ldr	r6, [pc, #56]	@ (8007a50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x64>)
 8007a18:	9003      	str	r0, [sp, #12]
 8007a1a:	8033      	strh	r3, [r6, #0]
 8007a1c:	f7ff ffd8 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8007a20:	6803      	ldr	r3, [r0, #0]
 8007a22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007a24:	4798      	blx	r3
 8007a26:	2800      	cmp	r0, #0
 8007a28:	d004      	beq.n	8007a34 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x48>
 8007a2a:	2801      	cmp	r0, #1
 8007a2c:	d00a      	beq.n	8007a44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x58>
 8007a2e:	9803      	ldr	r0, [sp, #12]
 8007a30:	b007      	add	sp, #28
 8007a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a34:	8833      	ldrh	r3, [r6, #0]
 8007a36:	435c      	muls	r4, r3
 8007a38:	19e4      	adds	r4, r4, r7
 8007a3a:	0064      	lsls	r4, r4, #1
 8007a3c:	9b05      	ldr	r3, [sp, #20]
 8007a3e:	1b1c      	subs	r4, r3, r4
 8007a40:	63ec      	str	r4, [r5, #60]	@ 0x3c
 8007a42:	e7f4      	b.n	8007a2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x42>
 8007a44:	8833      	ldrh	r3, [r6, #0]
 8007a46:	435c      	muls	r4, r3
 8007a48:	2303      	movs	r3, #3
 8007a4a:	19e4      	adds	r4, r4, r7
 8007a4c:	435c      	muls	r4, r3
 8007a4e:	e7f5      	b.n	8007a3c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x50>
 8007a50:	20003572 	.word	0x20003572

08007a54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8007a54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a56:	b091      	sub	sp, #68	@ 0x44
 8007a58:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007a5a:	ab16      	add	r3, sp, #88	@ 0x58
 8007a5c:	881b      	ldrh	r3, [r3, #0]
 8007a5e:	0015      	movs	r5, r2
 8007a60:	930c      	str	r3, [sp, #48]	@ 0x30
 8007a62:	ab17      	add	r3, sp, #92	@ 0x5c
 8007a64:	881b      	ldrh	r3, [r3, #0]
 8007a66:	0004      	movs	r4, r0
 8007a68:	930d      	str	r3, [sp, #52]	@ 0x34
 8007a6a:	ab18      	add	r3, sp, #96	@ 0x60
 8007a6c:	881b      	ldrh	r3, [r3, #0]
 8007a6e:	910a      	str	r1, [sp, #40]	@ 0x28
 8007a70:	930e      	str	r3, [sp, #56]	@ 0x38
 8007a72:	ab19      	add	r3, sp, #100	@ 0x64
 8007a74:	781b      	ldrb	r3, [r3, #0]
 8007a76:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007a78:	ab1a      	add	r3, sp, #104	@ 0x68
 8007a7a:	781e      	ldrb	r6, [r3, #0]
 8007a7c:	ab1b      	add	r3, sp, #108	@ 0x6c
 8007a7e:	781f      	ldrb	r7, [r3, #0]
 8007a80:	f7ff ffa6 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8007a84:	6803      	ldr	r3, [r0, #0]
 8007a86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007a88:	4798      	blx	r3
 8007a8a:	4a0d      	ldr	r2, [pc, #52]	@ (8007ac0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x6c>)
 8007a8c:	9008      	str	r0, [sp, #32]
 8007a8e:	9007      	str	r0, [sp, #28]
 8007a90:	9709      	str	r7, [sp, #36]	@ 0x24
 8007a92:	8812      	ldrh	r2, [r2, #0]
 8007a94:	6823      	ldr	r3, [r4, #0]
 8007a96:	9206      	str	r2, [sp, #24]
 8007a98:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8007a9a:	9605      	str	r6, [sp, #20]
 8007a9c:	9204      	str	r2, [sp, #16]
 8007a9e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007aa0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8007aa2:	9203      	str	r2, [sp, #12]
 8007aa4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007aa6:	0020      	movs	r0, r4
 8007aa8:	9202      	str	r2, [sp, #8]
 8007aaa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007aac:	9201      	str	r2, [sp, #4]
 8007aae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8007ab0:	9200      	str	r2, [sp, #0]
 8007ab2:	6bde      	ldr	r6, [r3, #60]	@ 0x3c
 8007ab4:	2200      	movs	r2, #0
 8007ab6:	002b      	movs	r3, r5
 8007ab8:	47b0      	blx	r6
 8007aba:	b011      	add	sp, #68	@ 0x44
 8007abc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007abe:	46c0      	nop			@ (mov r8, r8)
 8007ac0:	20003572 	.word	0x20003572

08007ac4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8007ac4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ac6:	b093      	sub	sp, #76	@ 0x4c
 8007ac8:	930d      	str	r3, [sp, #52]	@ 0x34
 8007aca:	ab18      	add	r3, sp, #96	@ 0x60
 8007acc:	881b      	ldrh	r3, [r3, #0]
 8007ace:	0015      	movs	r5, r2
 8007ad0:	930e      	str	r3, [sp, #56]	@ 0x38
 8007ad2:	ab19      	add	r3, sp, #100	@ 0x64
 8007ad4:	881b      	ldrh	r3, [r3, #0]
 8007ad6:	910c      	str	r1, [sp, #48]	@ 0x30
 8007ad8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007ada:	ab1a      	add	r3, sp, #104	@ 0x68
 8007adc:	881b      	ldrh	r3, [r3, #0]
 8007ade:	0004      	movs	r4, r0
 8007ae0:	9310      	str	r3, [sp, #64]	@ 0x40
 8007ae2:	ab1b      	add	r3, sp, #108	@ 0x6c
 8007ae4:	781b      	ldrb	r3, [r3, #0]
 8007ae6:	9311      	str	r3, [sp, #68]	@ 0x44
 8007ae8:	ab1c      	add	r3, sp, #112	@ 0x70
 8007aea:	781f      	ldrb	r7, [r3, #0]
 8007aec:	6803      	ldr	r3, [r0, #0]
 8007aee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007af0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007af2:	4b10      	ldr	r3, [pc, #64]	@ (8007b34 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x70>)
 8007af4:	881e      	ldrh	r6, [r3, #0]
 8007af6:	f7ff ff6b 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8007afa:	6803      	ldr	r3, [r0, #0]
 8007afc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007afe:	4798      	blx	r3
 8007b00:	2302      	movs	r3, #2
 8007b02:	9307      	str	r3, [sp, #28]
 8007b04:	3b01      	subs	r3, #1
 8007b06:	9305      	str	r3, [sp, #20]
 8007b08:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8007b0a:	9008      	str	r0, [sp, #32]
 8007b0c:	9304      	str	r3, [sp, #16]
 8007b0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007b10:	0020      	movs	r0, r4
 8007b12:	9303      	str	r3, [sp, #12]
 8007b14:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007b16:	9709      	str	r7, [sp, #36]	@ 0x24
 8007b18:	9302      	str	r3, [sp, #8]
 8007b1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007b1c:	9606      	str	r6, [sp, #24]
 8007b1e:	9301      	str	r3, [sp, #4]
 8007b20:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007b22:	2200      	movs	r2, #0
 8007b24:	9300      	str	r3, [sp, #0]
 8007b26:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8007b28:	002b      	movs	r3, r5
 8007b2a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8007b2c:	47a0      	blx	r4
 8007b2e:	b013      	add	sp, #76	@ 0x4c
 8007b30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007b32:	46c0      	nop			@ (mov r8, r8)
 8007b34:	20003572 	.word	0x20003572

08007b38 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8007b38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007b3a:	b08d      	sub	sp, #52	@ 0x34
 8007b3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8007b3e:	ab12      	add	r3, sp, #72	@ 0x48
 8007b40:	881b      	ldrh	r3, [r3, #0]
 8007b42:	9107      	str	r1, [sp, #28]
 8007b44:	930a      	str	r3, [sp, #40]	@ 0x28
 8007b46:	ab13      	add	r3, sp, #76	@ 0x4c
 8007b48:	881b      	ldrh	r3, [r3, #0]
 8007b4a:	9208      	str	r2, [sp, #32]
 8007b4c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007b4e:	ab14      	add	r3, sp, #80	@ 0x50
 8007b50:	781d      	ldrb	r5, [r3, #0]
 8007b52:	ab15      	add	r3, sp, #84	@ 0x54
 8007b54:	781f      	ldrb	r7, [r3, #0]
 8007b56:	6803      	ldr	r3, [r0, #0]
 8007b58:	0004      	movs	r4, r0
 8007b5a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007b5c:	9306      	str	r3, [sp, #24]
 8007b5e:	4b0b      	ldr	r3, [pc, #44]	@ (8007b8c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x54>)
 8007b60:	881e      	ldrh	r6, [r3, #0]
 8007b62:	f7ff ff35 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8007b66:	6803      	ldr	r3, [r0, #0]
 8007b68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007b6a:	4798      	blx	r3
 8007b6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007b6e:	9004      	str	r0, [sp, #16]
 8007b70:	9301      	str	r3, [sp, #4]
 8007b72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007b74:	0020      	movs	r0, r4
 8007b76:	9300      	str	r3, [sp, #0]
 8007b78:	9705      	str	r7, [sp, #20]
 8007b7a:	9603      	str	r6, [sp, #12]
 8007b7c:	9502      	str	r5, [sp, #8]
 8007b7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007b80:	9a08      	ldr	r2, [sp, #32]
 8007b82:	9907      	ldr	r1, [sp, #28]
 8007b84:	9c06      	ldr	r4, [sp, #24]
 8007b86:	47a0      	blx	r4
 8007b88:	b00d      	add	sp, #52	@ 0x34
 8007b8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007b8c:	20003572 	.word	0x20003572

08007b90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8007b90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007b92:	0004      	movs	r4, r0
 8007b94:	b093      	sub	sp, #76	@ 0x4c
 8007b96:	0010      	movs	r0, r2
 8007b98:	000f      	movs	r7, r1
 8007b9a:	9200      	str	r2, [sp, #0]
 8007b9c:	9301      	str	r3, [sp, #4]
 8007b9e:	f006 fce7 	bl	800e570 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8007ba2:	2800      	cmp	r0, #0
 8007ba4:	d100      	bne.n	8007ba8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18>
 8007ba6:	e09d      	b.n	8007ce4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8007ba8:	6823      	ldr	r3, [r4, #0]
 8007baa:	0020      	movs	r0, r4
 8007bac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007bae:	4798      	blx	r3
 8007bb0:	6823      	ldr	r3, [r4, #0]
 8007bb2:	0020      	movs	r0, r4
 8007bb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007bb6:	4798      	blx	r3
 8007bb8:	9b00      	ldr	r3, [sp, #0]
 8007bba:	ae0b      	add	r6, sp, #44	@ 0x2c
 8007bbc:	8033      	strh	r3, [r6, #0]
 8007bbe:	4b5c      	ldr	r3, [pc, #368]	@ (8007d30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>)
 8007bc0:	4d5c      	ldr	r5, [pc, #368]	@ (8007d34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8007bc2:	881b      	ldrh	r3, [r3, #0]
 8007bc4:	0030      	movs	r0, r6
 8007bc6:	9302      	str	r3, [sp, #8]
 8007bc8:	4b5b      	ldr	r3, [pc, #364]	@ (8007d38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8007bca:	881b      	ldrh	r3, [r3, #0]
 8007bcc:	9303      	str	r3, [sp, #12]
 8007bce:	882b      	ldrh	r3, [r5, #0]
 8007bd0:	9304      	str	r3, [sp, #16]
 8007bd2:	4b5a      	ldr	r3, [pc, #360]	@ (8007d3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8007bd4:	881b      	ldrh	r3, [r3, #0]
 8007bd6:	9305      	str	r3, [sp, #20]
 8007bd8:	f006 fd62 	bl	800e6a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8007bdc:	8028      	strh	r0, [r5, #0]
 8007bde:	0030      	movs	r0, r6
 8007be0:	f006 fd96 	bl	800e710 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8007be4:	4b55      	ldr	r3, [pc, #340]	@ (8007d3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8007be6:	b280      	uxth	r0, r0
 8007be8:	8018      	strh	r0, [r3, #0]
 8007bea:	4b55      	ldr	r3, [pc, #340]	@ (8007d40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8007bec:	781a      	ldrb	r2, [r3, #0]
 8007bee:	882b      	ldrh	r3, [r5, #0]
 8007bf0:	2a00      	cmp	r2, #0
 8007bf2:	d000      	beq.n	8007bf6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x66>
 8007bf4:	e078      	b.n	8007ce8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8007bf6:	4a4e      	ldr	r2, [pc, #312]	@ (8007d30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>)
 8007bf8:	8013      	strh	r3, [r2, #0]
 8007bfa:	4b4f      	ldr	r3, [pc, #316]	@ (8007d38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8007bfc:	8018      	strh	r0, [r3, #0]
 8007bfe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007c00:	9800      	ldr	r0, [sp, #0]
 8007c02:	9306      	str	r3, [sp, #24]
 8007c04:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007c06:	9307      	str	r3, [sp, #28]
 8007c08:	f006 fcb2 	bl	800e570 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8007c0c:	6420      	str	r0, [r4, #64]	@ 0x40
 8007c0e:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8007c10:	2204      	movs	r2, #4
 8007c12:	5ebb      	ldrsh	r3, [r7, r2]
 8007c14:	0038      	movs	r0, r7
 8007c16:	9300      	str	r3, [sp, #0]
 8007c18:	2206      	movs	r2, #6
 8007c1a:	5ebb      	ldrsh	r3, [r7, r2]
 8007c1c:	2200      	movs	r2, #0
 8007c1e:	0011      	movs	r1, r2
 8007c20:	9308      	str	r3, [sp, #32]
 8007c22:	f7fb f9be 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8007c26:	1dbb      	adds	r3, r7, #6
 8007c28:	7fda      	ldrb	r2, [r3, #31]
 8007c2a:	1d39      	adds	r1, r7, #4
 8007c2c:	9209      	str	r2, [sp, #36]	@ 0x24
 8007c2e:	2201      	movs	r2, #1
 8007c30:	77da      	strb	r2, [r3, #31]
 8007c32:	9b01      	ldr	r3, [sp, #4]
 8007c34:	2204      	movs	r2, #4
 8007c36:	5e9b      	ldrsh	r3, [r3, r2]
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	dd5a      	ble.n	8007cf2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x162>
 8007c3c:	9b01      	ldr	r3, [sp, #4]
 8007c3e:	2206      	movs	r2, #6
 8007c40:	5e9b      	ldrsh	r3, [r3, r2]
 8007c42:	2b00      	cmp	r3, #0
 8007c44:	dd55      	ble.n	8007cf2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x162>
 8007c46:	2208      	movs	r2, #8
 8007c48:	a80e      	add	r0, sp, #56	@ 0x38
 8007c4a:	f00b f894 	bl	8012d76 <memcpy>
 8007c4e:	9901      	ldr	r1, [sp, #4]
 8007c50:	a80e      	add	r0, sp, #56	@ 0x38
 8007c52:	f7ff fae3 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 8007c56:	4b37      	ldr	r3, [pc, #220]	@ (8007d34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8007c58:	ad10      	add	r5, sp, #64	@ 0x40
 8007c5a:	2200      	movs	r2, #0
 8007c5c:	5e9a      	ldrsh	r2, [r3, r2]
 8007c5e:	4b37      	ldr	r3, [pc, #220]	@ (8007d3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8007c60:	80aa      	strh	r2, [r5, #4]
 8007c62:	2100      	movs	r1, #0
 8007c64:	5e5b      	ldrsh	r3, [r3, r1]
 8007c66:	2100      	movs	r1, #0
 8007c68:	2208      	movs	r2, #8
 8007c6a:	9110      	str	r1, [sp, #64]	@ 0x40
 8007c6c:	a80c      	add	r0, sp, #48	@ 0x30
 8007c6e:	a90e      	add	r1, sp, #56	@ 0x38
 8007c70:	80eb      	strh	r3, [r5, #6]
 8007c72:	f00b f880 	bl	8012d76 <memcpy>
 8007c76:	0029      	movs	r1, r5
 8007c78:	a80c      	add	r0, sp, #48	@ 0x30
 8007c7a:	f7ff facf 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 8007c7e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8007c80:	2b00      	cmp	r3, #0
 8007c82:	d13b      	bne.n	8007cfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x16c>
 8007c84:	2000      	movs	r0, #0
 8007c86:	0025      	movs	r5, r4
 8007c88:	2600      	movs	r6, #0
 8007c8a:	3558      	adds	r5, #88	@ 0x58
 8007c8c:	7028      	strb	r0, [r5, #0]
 8007c8e:	697b      	ldr	r3, [r7, #20]
 8007c90:	617e      	str	r6, [r7, #20]
 8007c92:	9301      	str	r3, [sp, #4]
 8007c94:	683b      	ldr	r3, [r7, #0]
 8007c96:	a90c      	add	r1, sp, #48	@ 0x30
 8007c98:	689b      	ldr	r3, [r3, #8]
 8007c9a:	0038      	movs	r0, r7
 8007c9c:	4798      	blx	r3
 8007c9e:	9b01      	ldr	r3, [sp, #4]
 8007ca0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007ca2:	617b      	str	r3, [r7, #20]
 8007ca4:	1dbb      	adds	r3, r7, #6
 8007ca6:	702e      	strb	r6, [r5, #0]
 8007ca8:	9900      	ldr	r1, [sp, #0]
 8007caa:	77da      	strb	r2, [r3, #31]
 8007cac:	0038      	movs	r0, r7
 8007cae:	9a08      	ldr	r2, [sp, #32]
 8007cb0:	f7fb f977 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 8007cb4:	9b06      	ldr	r3, [sp, #24]
 8007cb6:	9a02      	ldr	r2, [sp, #8]
 8007cb8:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8007cba:	9b07      	ldr	r3, [sp, #28]
 8007cbc:	0020      	movs	r0, r4
 8007cbe:	6423      	str	r3, [r4, #64]	@ 0x40
 8007cc0:	4b1b      	ldr	r3, [pc, #108]	@ (8007d30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>)
 8007cc2:	801a      	strh	r2, [r3, #0]
 8007cc4:	4b1c      	ldr	r3, [pc, #112]	@ (8007d38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8007cc6:	9a03      	ldr	r2, [sp, #12]
 8007cc8:	801a      	strh	r2, [r3, #0]
 8007cca:	4b1a      	ldr	r3, [pc, #104]	@ (8007d34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8007ccc:	9a04      	ldr	r2, [sp, #16]
 8007cce:	801a      	strh	r2, [r3, #0]
 8007cd0:	4b1a      	ldr	r3, [pc, #104]	@ (8007d3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8007cd2:	9a05      	ldr	r2, [sp, #20]
 8007cd4:	801a      	strh	r2, [r3, #0]
 8007cd6:	6823      	ldr	r3, [r4, #0]
 8007cd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007cda:	4798      	blx	r3
 8007cdc:	6823      	ldr	r3, [r4, #0]
 8007cde:	0020      	movs	r0, r4
 8007ce0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007ce2:	4798      	blx	r3
 8007ce4:	b013      	add	sp, #76	@ 0x4c
 8007ce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007ce8:	4a11      	ldr	r2, [pc, #68]	@ (8007d30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>)
 8007cea:	8010      	strh	r0, [r2, #0]
 8007cec:	4a12      	ldr	r2, [pc, #72]	@ (8007d38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8007cee:	8013      	strh	r3, [r2, #0]
 8007cf0:	e785      	b.n	8007bfe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6e>
 8007cf2:	2208      	movs	r2, #8
 8007cf4:	a80e      	add	r0, sp, #56	@ 0x38
 8007cf6:	f00b f83e 	bl	8012d76 <memcpy>
 8007cfa:	e7ac      	b.n	8007c56 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 8007cfc:	a80b      	add	r0, sp, #44	@ 0x2c
 8007cfe:	f006 fe4f 	bl	800e9a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8007d02:	0005      	movs	r5, r0
 8007d04:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8007d06:	6803      	ldr	r3, [r0, #0]
 8007d08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007d0a:	4798      	blx	r3
 8007d0c:	4285      	cmp	r5, r0
 8007d0e:	d1b9      	bne.n	8007c84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf4>
 8007d10:	f7ff fe5e 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8007d14:	6803      	ldr	r3, [r0, #0]
 8007d16:	0005      	movs	r5, r0
 8007d18:	a80b      	add	r0, sp, #44	@ 0x2c
 8007d1a:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
 8007d1c:	f006 fe40 	bl	800e9a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8007d20:	0001      	movs	r1, r0
 8007d22:	0028      	movs	r0, r5
 8007d24:	47b0      	blx	r6
 8007d26:	2301      	movs	r3, #1
 8007d28:	4058      	eors	r0, r3
 8007d2a:	b2c0      	uxtb	r0, r0
 8007d2c:	e7ab      	b.n	8007c86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf6>
 8007d2e:	46c0      	nop			@ (mov r8, r8)
 8007d30:	20003572 	.word	0x20003572
 8007d34:	2000356c 	.word	0x2000356c
 8007d38:	20003574 	.word	0x20003574
 8007d3c:	2000356e 	.word	0x2000356e
 8007d40:	20003570 	.word	0x20003570

08007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8007d44:	b510      	push	{r4, lr}
 8007d46:	4b07      	ldr	r3, [pc, #28]	@ (8007d64 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8007d48:	0004      	movs	r4, r0
 8007d4a:	781b      	ldrb	r3, [r3, #0]
 8007d4c:	2b00      	cmp	r3, #0
 8007d4e:	d007      	beq.n	8007d60 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1c>
 8007d50:	6803      	ldr	r3, [r0, #0]
 8007d52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007d54:	4798      	blx	r3
 8007d56:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007d58:	4298      	cmp	r0, r3
 8007d5a:	d101      	bne.n	8007d60 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1c>
 8007d5c:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8007d5e:	bd10      	pop	{r4, pc}
 8007d60:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8007d62:	e7fc      	b.n	8007d5e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8007d64:	20003576 	.word	0x20003576

08007d68 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8007d68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d6a:	b08f      	sub	sp, #60	@ 0x3c
 8007d6c:	9302      	str	r3, [sp, #8]
 8007d6e:	ab14      	add	r3, sp, #80	@ 0x50
 8007d70:	0006      	movs	r6, r0
 8007d72:	8818      	ldrh	r0, [r3, #0]
 8007d74:	ab15      	add	r3, sp, #84	@ 0x54
 8007d76:	9201      	str	r2, [sp, #4]
 8007d78:	881a      	ldrh	r2, [r3, #0]
 8007d7a:	ab16      	add	r3, sp, #88	@ 0x58
 8007d7c:	881b      	ldrh	r3, [r3, #0]
 8007d7e:	2500      	movs	r5, #0
 8007d80:	9303      	str	r3, [sp, #12]
 8007d82:	2380      	movs	r3, #128	@ 0x80
 8007d84:	ac17      	add	r4, sp, #92	@ 0x5c
 8007d86:	00db      	lsls	r3, r3, #3
 8007d88:	8827      	ldrh	r7, [r4, #0]
 8007d8a:	9305      	str	r3, [sp, #20]
 8007d8c:	ac05      	add	r4, sp, #20
 8007d8e:	9b03      	ldr	r3, [sp, #12]
 8007d90:	82a0      	strh	r0, [r4, #20]
 8007d92:	0030      	movs	r0, r6
 8007d94:	9106      	str	r1, [sp, #24]
 8007d96:	82e2      	strh	r2, [r4, #22]
 8007d98:	8323      	strh	r3, [r4, #24]
 8007d9a:	9508      	str	r5, [sp, #32]
 8007d9c:	7725      	strb	r5, [r4, #28]
 8007d9e:	f7ff ffd1 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8007da2:	9b02      	ldr	r3, [sp, #8]
 8007da4:	9a01      	ldr	r2, [sp, #4]
 8007da6:	437b      	muls	r3, r7
 8007da8:	189b      	adds	r3, r3, r2
 8007daa:	005b      	lsls	r3, r3, #1
 8007dac:	18c3      	adds	r3, r0, r3
 8007dae:	6123      	str	r3, [r4, #16]
 8007db0:	ab04      	add	r3, sp, #16
 8007db2:	6870      	ldr	r0, [r6, #4]
 8007db4:	3305      	adds	r3, #5
 8007db6:	8367      	strh	r7, [r4, #26]
 8007db8:	77a5      	strb	r5, [r4, #30]
 8007dba:	7765      	strb	r5, [r4, #29]
 8007dbc:	77e5      	strb	r5, [r4, #31]
 8007dbe:	77dd      	strb	r5, [r3, #31]
 8007dc0:	6803      	ldr	r3, [r0, #0]
 8007dc2:	0021      	movs	r1, r4
 8007dc4:	685b      	ldr	r3, [r3, #4]
 8007dc6:	4798      	blx	r3
 8007dc8:	b00f      	add	sp, #60	@ 0x3c
 8007dca:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007dcc <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8007dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dce:	b091      	sub	sp, #68	@ 0x44
 8007dd0:	9303      	str	r3, [sp, #12]
 8007dd2:	ab16      	add	r3, sp, #88	@ 0x58
 8007dd4:	881b      	ldrh	r3, [r3, #0]
 8007dd6:	2500      	movs	r5, #0
 8007dd8:	9304      	str	r3, [sp, #16]
 8007dda:	ab17      	add	r3, sp, #92	@ 0x5c
 8007ddc:	881b      	ldrh	r3, [r3, #0]
 8007dde:	0006      	movs	r6, r0
 8007de0:	9305      	str	r3, [sp, #20]
 8007de2:	ab18      	add	r3, sp, #96	@ 0x60
 8007de4:	881f      	ldrh	r7, [r3, #0]
 8007de6:	2380      	movs	r3, #128	@ 0x80
 8007de8:	011b      	lsls	r3, r3, #4
 8007dea:	9101      	str	r1, [sp, #4]
 8007dec:	9202      	str	r2, [sp, #8]
 8007dee:	9307      	str	r3, [sp, #28]
 8007df0:	950a      	str	r5, [sp, #40]	@ 0x28
 8007df2:	9508      	str	r5, [sp, #32]
 8007df4:	f7ff ffa6 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8007df8:	9b03      	ldr	r3, [sp, #12]
 8007dfa:	9a02      	ldr	r2, [sp, #8]
 8007dfc:	437b      	muls	r3, r7
 8007dfe:	189b      	adds	r3, r3, r2
 8007e00:	005b      	lsls	r3, r3, #1
 8007e02:	ac07      	add	r4, sp, #28
 8007e04:	18c3      	adds	r3, r0, r3
 8007e06:	6123      	str	r3, [r4, #16]
 8007e08:	9b04      	ldr	r3, [sp, #16]
 8007e0a:	6870      	ldr	r0, [r6, #4]
 8007e0c:	82a3      	strh	r3, [r4, #20]
 8007e0e:	9b05      	ldr	r3, [sp, #20]
 8007e10:	8325      	strh	r5, [r4, #24]
 8007e12:	82e3      	strh	r3, [r4, #22]
 8007e14:	9b01      	ldr	r3, [sp, #4]
 8007e16:	8367      	strh	r7, [r4, #26]
 8007e18:	930a      	str	r3, [sp, #40]	@ 0x28
 8007e1a:	ab06      	add	r3, sp, #24
 8007e1c:	3305      	adds	r3, #5
 8007e1e:	83a5      	strh	r5, [r4, #28]
 8007e20:	77a5      	strb	r5, [r4, #30]
 8007e22:	77e5      	strb	r5, [r4, #31]
 8007e24:	77dd      	strb	r5, [r3, #31]
 8007e26:	6803      	ldr	r3, [r0, #0]
 8007e28:	0021      	movs	r1, r4
 8007e2a:	685b      	ldr	r3, [r3, #4]
 8007e2c:	4798      	blx	r3
 8007e2e:	b011      	add	sp, #68	@ 0x44
 8007e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007e34 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8007e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e36:	b093      	sub	sp, #76	@ 0x4c
 8007e38:	0007      	movs	r7, r0
 8007e3a:	a81d      	add	r0, sp, #116	@ 0x74
 8007e3c:	7804      	ldrb	r4, [r0, #0]
 8007e3e:	a81e      	add	r0, sp, #120	@ 0x78
 8007e40:	8800      	ldrh	r0, [r0, #0]
 8007e42:	9201      	str	r2, [sp, #4]
 8007e44:	9002      	str	r0, [sp, #8]
 8007e46:	a81f      	add	r0, sp, #124	@ 0x7c
 8007e48:	7806      	ldrb	r6, [r0, #0]
 8007e4a:	2041      	movs	r0, #65	@ 0x41
 8007e4c:	aa08      	add	r2, sp, #32
 8007e4e:	1880      	adds	r0, r0, r2
 8007e50:	7fc5      	ldrb	r5, [r0, #31]
 8007e52:	2045      	movs	r0, #69	@ 0x45
 8007e54:	1880      	adds	r0, r0, r2
 8007e56:	7fc0      	ldrb	r0, [r0, #31]
 8007e58:	9303      	str	r3, [sp, #12]
 8007e5a:	9007      	str	r0, [sp, #28]
 8007e5c:	2000      	movs	r0, #0
 8007e5e:	ab18      	add	r3, sp, #96	@ 0x60
 8007e60:	881b      	ldrh	r3, [r3, #0]
 8007e62:	900c      	str	r0, [sp, #48]	@ 0x30
 8007e64:	9304      	str	r3, [sp, #16]
 8007e66:	ab19      	add	r3, sp, #100	@ 0x64
 8007e68:	881b      	ldrh	r3, [r3, #0]
 8007e6a:	3080      	adds	r0, #128	@ 0x80
 8007e6c:	469c      	mov	ip, r3
 8007e6e:	ab1a      	add	r3, sp, #104	@ 0x68
 8007e70:	881b      	ldrh	r3, [r3, #0]
 8007e72:	9305      	str	r3, [sp, #20]
 8007e74:	ab1b      	add	r3, sp, #108	@ 0x6c
 8007e76:	881b      	ldrh	r3, [r3, #0]
 8007e78:	9306      	str	r3, [sp, #24]
 8007e7a:	ab1c      	add	r3, sp, #112	@ 0x70
 8007e7c:	781b      	ldrb	r3, [r3, #0]
 8007e7e:	2e0b      	cmp	r6, #11
 8007e80:	d007      	beq.n	8007e92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x5e>
 8007e82:	2e02      	cmp	r6, #2
 8007e84:	d133      	bne.n	8007eee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xba>
 8007e86:	2040      	movs	r0, #64	@ 0x40
 8007e88:	2bff      	cmp	r3, #255	@ 0xff
 8007e8a:	d102      	bne.n	8007e92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x5e>
 8007e8c:	2c00      	cmp	r4, #0
 8007e8e:	d100      	bne.n	8007e92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x5e>
 8007e90:	3820      	subs	r0, #32
 8007e92:	9a01      	ldr	r2, [sp, #4]
 8007e94:	ac09      	add	r4, sp, #36	@ 0x24
 8007e96:	60a2      	str	r2, [r4, #8]
 8007e98:	4662      	mov	r2, ip
 8007e9a:	82a2      	strh	r2, [r4, #20]
 8007e9c:	9a05      	ldr	r2, [sp, #20]
 8007e9e:	9009      	str	r0, [sp, #36]	@ 0x24
 8007ea0:	82e2      	strh	r2, [r4, #22]
 8007ea2:	9a06      	ldr	r2, [sp, #24]
 8007ea4:	0038      	movs	r0, r7
 8007ea6:	7723      	strb	r3, [r4, #28]
 8007ea8:	6061      	str	r1, [r4, #4]
 8007eaa:	8322      	strh	r2, [r4, #24]
 8007eac:	f7ff ff4a 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8007eb0:	2300      	movs	r3, #0
 8007eb2:	2d0b      	cmp	r5, #11
 8007eb4:	d801      	bhi.n	8007eba <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 8007eb6:	4b11      	ldr	r3, [pc, #68]	@ (8007efc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc8>)
 8007eb8:	5d5b      	ldrb	r3, [r3, r5]
 8007eba:	9902      	ldr	r1, [sp, #8]
 8007ebc:	9a04      	ldr	r2, [sp, #16]
 8007ebe:	10db      	asrs	r3, r3, #3
 8007ec0:	434a      	muls	r2, r1
 8007ec2:	9903      	ldr	r1, [sp, #12]
 8007ec4:	7766      	strb	r6, [r4, #29]
 8007ec6:	1852      	adds	r2, r2, r1
 8007ec8:	4353      	muls	r3, r2
 8007eca:	2200      	movs	r2, #0
 8007ecc:	18c3      	adds	r3, r0, r3
 8007ece:	6123      	str	r3, [r4, #16]
 8007ed0:	9b02      	ldr	r3, [sp, #8]
 8007ed2:	6878      	ldr	r0, [r7, #4]
 8007ed4:	8363      	strh	r3, [r4, #26]
 8007ed6:	9b07      	ldr	r3, [sp, #28]
 8007ed8:	77a5      	strb	r5, [r4, #30]
 8007eda:	77e3      	strb	r3, [r4, #31]
 8007edc:	ab08      	add	r3, sp, #32
 8007ede:	3305      	adds	r3, #5
 8007ee0:	77da      	strb	r2, [r3, #31]
 8007ee2:	6803      	ldr	r3, [r0, #0]
 8007ee4:	0021      	movs	r1, r4
 8007ee6:	685b      	ldr	r3, [r3, #4]
 8007ee8:	4798      	blx	r3
 8007eea:	b013      	add	sp, #76	@ 0x4c
 8007eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007eee:	2004      	movs	r0, #4
 8007ef0:	2bff      	cmp	r3, #255	@ 0xff
 8007ef2:	d1ce      	bne.n	8007e92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x5e>
 8007ef4:	2c00      	cmp	r4, #0
 8007ef6:	d1cc      	bne.n	8007e92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x5e>
 8007ef8:	3803      	subs	r0, #3
 8007efa:	e7ca      	b.n	8007e92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x5e>
 8007efc:	0801583c 	.word	0x0801583c

08007f00 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8007f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007f02:	b091      	sub	sp, #68	@ 0x44
 8007f04:	9302      	str	r3, [sp, #8]
 8007f06:	ab16      	add	r3, sp, #88	@ 0x58
 8007f08:	881b      	ldrh	r3, [r3, #0]
 8007f0a:	9201      	str	r2, [sp, #4]
 8007f0c:	9303      	str	r3, [sp, #12]
 8007f0e:	ab17      	add	r3, sp, #92	@ 0x5c
 8007f10:	881b      	ldrh	r3, [r3, #0]
 8007f12:	0005      	movs	r5, r0
 8007f14:	9304      	str	r3, [sp, #16]
 8007f16:	ab18      	add	r3, sp, #96	@ 0x60
 8007f18:	781e      	ldrb	r6, [r3, #0]
 8007f1a:	ab19      	add	r3, sp, #100	@ 0x64
 8007f1c:	881f      	ldrh	r7, [r3, #0]
 8007f1e:	ab1a      	add	r3, sp, #104	@ 0x68
 8007f20:	781c      	ldrb	r4, [r3, #0]
 8007f22:	ab1b      	add	r3, sp, #108	@ 0x6c
 8007f24:	781b      	ldrb	r3, [r3, #0]
 8007f26:	9100      	str	r1, [sp, #0]
 8007f28:	9305      	str	r3, [sp, #20]
 8007f2a:	2300      	movs	r3, #0
 8007f2c:	2208      	movs	r2, #8
 8007f2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8007f30:	2eff      	cmp	r6, #255	@ 0xff
 8007f32:	d100      	bne.n	8007f36 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x36>
 8007f34:	3a06      	subs	r2, #6
 8007f36:	0028      	movs	r0, r5
 8007f38:	9308      	str	r3, [sp, #32]
 8007f3a:	9207      	str	r2, [sp, #28]
 8007f3c:	f7ff ff02 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8007f40:	2300      	movs	r3, #0
 8007f42:	4684      	mov	ip, r0
 8007f44:	2c0b      	cmp	r4, #11
 8007f46:	d801      	bhi.n	8007f4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x4c>
 8007f48:	4b10      	ldr	r3, [pc, #64]	@ (8007f8c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8007f4a:	5d1b      	ldrb	r3, [r3, r4]
 8007f4c:	9a02      	ldr	r2, [sp, #8]
 8007f4e:	9801      	ldr	r0, [sp, #4]
 8007f50:	437a      	muls	r2, r7
 8007f52:	10db      	asrs	r3, r3, #3
 8007f54:	1812      	adds	r2, r2, r0
 8007f56:	4353      	muls	r3, r2
 8007f58:	a907      	add	r1, sp, #28
 8007f5a:	4463      	add	r3, ip
 8007f5c:	610b      	str	r3, [r1, #16]
 8007f5e:	9b03      	ldr	r3, [sp, #12]
 8007f60:	9a00      	ldr	r2, [sp, #0]
 8007f62:	828b      	strh	r3, [r1, #20]
 8007f64:	9b04      	ldr	r3, [sp, #16]
 8007f66:	60ca      	str	r2, [r1, #12]
 8007f68:	82cb      	strh	r3, [r1, #22]
 8007f6a:	2300      	movs	r3, #0
 8007f6c:	9a05      	ldr	r2, [sp, #20]
 8007f6e:	6868      	ldr	r0, [r5, #4]
 8007f70:	77ca      	strb	r2, [r1, #31]
 8007f72:	aa06      	add	r2, sp, #24
 8007f74:	3205      	adds	r2, #5
 8007f76:	830b      	strh	r3, [r1, #24]
 8007f78:	834f      	strh	r7, [r1, #26]
 8007f7a:	770e      	strb	r6, [r1, #28]
 8007f7c:	77d3      	strb	r3, [r2, #31]
 8007f7e:	774c      	strb	r4, [r1, #29]
 8007f80:	778c      	strb	r4, [r1, #30]
 8007f82:	6803      	ldr	r3, [r0, #0]
 8007f84:	685b      	ldr	r3, [r3, #4]
 8007f86:	4798      	blx	r3
 8007f88:	b011      	add	sp, #68	@ 0x44
 8007f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007f8c:	0801583c 	.word	0x0801583c

08007f90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8007f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f92:	001d      	movs	r5, r3
 8007f94:	4b0a      	ldr	r3, [pc, #40]	@ (8007fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8007f96:	000e      	movs	r6, r1
 8007f98:	881f      	ldrh	r7, [r3, #0]
 8007f9a:	0014      	movs	r4, r2
 8007f9c:	f7ff fd18 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8007fa0:	6803      	ldr	r3, [r0, #0]
 8007fa2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007fa4:	4798      	blx	r3
 8007fa6:	2300      	movs	r3, #0
 8007fa8:	280b      	cmp	r0, #11
 8007faa:	d801      	bhi.n	8007fb0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x20>
 8007fac:	4b05      	ldr	r3, [pc, #20]	@ (8007fc4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8007fae:	5c1b      	ldrb	r3, [r3, r0]
 8007fb0:	0020      	movs	r0, r4
 8007fb2:	4378      	muls	r0, r7
 8007fb4:	10db      	asrs	r3, r3, #3
 8007fb6:	1980      	adds	r0, r0, r6
 8007fb8:	4358      	muls	r0, r3
 8007fba:	1828      	adds	r0, r5, r0
 8007fbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007fbe:	46c0      	nop			@ (mov r8, r8)
 8007fc0:	20003572 	.word	0x20003572
 8007fc4:	0801583c 	.word	0x0801583c

08007fc8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8007fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007fca:	b08f      	sub	sp, #60	@ 0x3c
 8007fcc:	ac18      	add	r4, sp, #96	@ 0x60
 8007fce:	7824      	ldrb	r4, [r4, #0]
 8007fd0:	001f      	movs	r7, r3
 8007fd2:	9402      	str	r4, [sp, #8]
 8007fd4:	ac19      	add	r4, sp, #100	@ 0x64
 8007fd6:	8824      	ldrh	r4, [r4, #0]
 8007fd8:	ab14      	add	r3, sp, #80	@ 0x50
 8007fda:	46a4      	mov	ip, r4
 8007fdc:	0005      	movs	r5, r0
 8007fde:	8818      	ldrh	r0, [r3, #0]
 8007fe0:	ab15      	add	r3, sp, #84	@ 0x54
 8007fe2:	9200      	str	r2, [sp, #0]
 8007fe4:	881a      	ldrh	r2, [r3, #0]
 8007fe6:	ab16      	add	r3, sp, #88	@ 0x58
 8007fe8:	881b      	ldrh	r3, [r3, #0]
 8007fea:	2600      	movs	r6, #0
 8007fec:	9301      	str	r3, [sp, #4]
 8007fee:	4663      	mov	r3, ip
 8007ff0:	ac1a      	add	r4, sp, #104	@ 0x68
 8007ff2:	7824      	ldrb	r4, [r4, #0]
 8007ff4:	9305      	str	r3, [sp, #20]
 8007ff6:	9b01      	ldr	r3, [sp, #4]
 8007ff8:	9403      	str	r4, [sp, #12]
 8007ffa:	ac05      	add	r4, sp, #20
 8007ffc:	8323      	strh	r3, [r4, #24]
 8007ffe:	9b02      	ldr	r3, [sp, #8]
 8008000:	82a0      	strh	r0, [r4, #20]
 8008002:	0028      	movs	r0, r5
 8008004:	9106      	str	r1, [sp, #24]
 8008006:	82e2      	strh	r2, [r4, #22]
 8008008:	7723      	strb	r3, [r4, #28]
 800800a:	9608      	str	r6, [sp, #32]
 800800c:	f7ff fe9a 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8008010:	003a      	movs	r2, r7
 8008012:	9900      	ldr	r1, [sp, #0]
 8008014:	0003      	movs	r3, r0
 8008016:	0028      	movs	r0, r5
 8008018:	f7ff ffba 	bl	8007f90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800801c:	4b0c      	ldr	r3, [pc, #48]	@ (8008050 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x88>)
 800801e:	6120      	str	r0, [r4, #16]
 8008020:	881b      	ldrh	r3, [r3, #0]
 8008022:	8363      	strh	r3, [r4, #26]
 8008024:	f7ff fcd4 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8008028:	6803      	ldr	r3, [r0, #0]
 800802a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800802c:	4798      	blx	r3
 800802e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008030:	77a0      	strb	r0, [r4, #30]
 8008032:	60e3      	str	r3, [r4, #12]
 8008034:	9b03      	ldr	r3, [sp, #12]
 8008036:	7760      	strb	r0, [r4, #29]
 8008038:	77e3      	strb	r3, [r4, #31]
 800803a:	ab04      	add	r3, sp, #16
 800803c:	6868      	ldr	r0, [r5, #4]
 800803e:	3305      	adds	r3, #5
 8008040:	77de      	strb	r6, [r3, #31]
 8008042:	6803      	ldr	r3, [r0, #0]
 8008044:	0021      	movs	r1, r4
 8008046:	685b      	ldr	r3, [r3, #4]
 8008048:	4798      	blx	r3
 800804a:	b00f      	add	sp, #60	@ 0x3c
 800804c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800804e:	46c0      	nop			@ (mov r8, r8)
 8008050:	20003572 	.word	0x20003572

08008054 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8008054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008056:	b08f      	sub	sp, #60	@ 0x3c
 8008058:	2601      	movs	r6, #1
 800805a:	9203      	str	r2, [sp, #12]
 800805c:	2200      	movs	r2, #0
 800805e:	b28b      	uxth	r3, r1
 8008060:	9301      	str	r3, [sp, #4]
 8008062:	6803      	ldr	r3, [r0, #0]
 8008064:	000f      	movs	r7, r1
 8008066:	9102      	str	r1, [sp, #8]
 8008068:	9208      	str	r2, [sp, #32]
 800806a:	9605      	str	r6, [sp, #20]
 800806c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800806e:	0005      	movs	r5, r0
 8008070:	4798      	blx	r3
 8008072:	0c3f      	lsrs	r7, r7, #16
 8008074:	003a      	movs	r2, r7
 8008076:	9901      	ldr	r1, [sp, #4]
 8008078:	0003      	movs	r3, r0
 800807a:	0028      	movs	r0, r5
 800807c:	f7ff ff88 	bl	8007f90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8008080:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8008082:	ac05      	add	r4, sp, #20
 8008084:	6123      	str	r3, [r4, #16]
 8008086:	6060      	str	r0, [r4, #4]
 8008088:	ab02      	add	r3, sp, #8
 800808a:	889b      	ldrh	r3, [r3, #4]
 800808c:	82a3      	strh	r3, [r4, #20]
 800808e:	ab02      	add	r3, sp, #8
 8008090:	88db      	ldrh	r3, [r3, #6]
 8008092:	82e3      	strh	r3, [r4, #22]
 8008094:	4b0c      	ldr	r3, [pc, #48]	@ (80080c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x74>)
 8008096:	881b      	ldrh	r3, [r3, #0]
 8008098:	8323      	strh	r3, [r4, #24]
 800809a:	8363      	strh	r3, [r4, #26]
 800809c:	f7ff fc98 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 80080a0:	6803      	ldr	r3, [r0, #0]
 80080a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80080a4:	4798      	blx	r3
 80080a6:	23ff      	movs	r3, #255	@ 0xff
 80080a8:	aa02      	add	r2, sp, #8
 80080aa:	7723      	strb	r3, [r4, #28]
 80080ac:	3bf2      	subs	r3, #242	@ 0xf2
 80080ae:	7760      	strb	r0, [r4, #29]
 80080b0:	77a0      	strb	r0, [r4, #30]
 80080b2:	189b      	adds	r3, r3, r2
 80080b4:	6868      	ldr	r0, [r5, #4]
 80080b6:	77e6      	strb	r6, [r4, #31]
 80080b8:	77de      	strb	r6, [r3, #31]
 80080ba:	6803      	ldr	r3, [r0, #0]
 80080bc:	0021      	movs	r1, r4
 80080be:	685b      	ldr	r3, [r3, #4]
 80080c0:	4798      	blx	r3
 80080c2:	6c68      	ldr	r0, [r5, #68]	@ 0x44
 80080c4:	b00f      	add	sp, #60	@ 0x3c
 80080c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80080c8:	20003572 	.word	0x20003572

080080cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80080cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80080ce:	001f      	movs	r7, r3
 80080d0:	2300      	movs	r3, #0
 80080d2:	0005      	movs	r5, r0
 80080d4:	0008      	movs	r0, r1
 80080d6:	2601      	movs	r6, #1
 80080d8:	b08f      	sub	sp, #60	@ 0x3c
 80080da:	9308      	str	r3, [sp, #32]
 80080dc:	b28b      	uxth	r3, r1
 80080de:	9300      	str	r3, [sp, #0]
 80080e0:	0c03      	lsrs	r3, r0, #16
 80080e2:	9301      	str	r3, [sp, #4]
 80080e4:	682b      	ldr	r3, [r5, #0]
 80080e6:	9102      	str	r1, [sp, #8]
 80080e8:	9203      	str	r2, [sp, #12]
 80080ea:	9605      	str	r6, [sp, #20]
 80080ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80080ee:	0028      	movs	r0, r5
 80080f0:	4798      	blx	r3
 80080f2:	9a01      	ldr	r2, [sp, #4]
 80080f4:	9900      	ldr	r1, [sp, #0]
 80080f6:	0003      	movs	r3, r0
 80080f8:	0028      	movs	r0, r5
 80080fa:	f7ff ff49 	bl	8007f90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80080fe:	ac05      	add	r4, sp, #20
 8008100:	6060      	str	r0, [r4, #4]
 8008102:	6127      	str	r7, [r4, #16]
 8008104:	ab02      	add	r3, sp, #8
 8008106:	889b      	ldrh	r3, [r3, #4]
 8008108:	82a3      	strh	r3, [r4, #20]
 800810a:	ab02      	add	r3, sp, #8
 800810c:	88db      	ldrh	r3, [r3, #6]
 800810e:	82e3      	strh	r3, [r4, #22]
 8008110:	4b0d      	ldr	r3, [pc, #52]	@ (8008148 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 8008112:	881b      	ldrh	r3, [r3, #0]
 8008114:	8323      	strh	r3, [r4, #24]
 8008116:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8008118:	8363      	strh	r3, [r4, #26]
 800811a:	f7ff fc59 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 800811e:	6803      	ldr	r3, [r0, #0]
 8008120:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008122:	4798      	blx	r3
 8008124:	23ff      	movs	r3, #255	@ 0xff
 8008126:	aa02      	add	r2, sp, #8
 8008128:	7723      	strb	r3, [r4, #28]
 800812a:	3bf2      	subs	r3, #242	@ 0xf2
 800812c:	7760      	strb	r0, [r4, #29]
 800812e:	77a0      	strb	r0, [r4, #30]
 8008130:	189b      	adds	r3, r3, r2
 8008132:	6868      	ldr	r0, [r5, #4]
 8008134:	77e6      	strb	r6, [r4, #31]
 8008136:	77de      	strb	r6, [r3, #31]
 8008138:	6803      	ldr	r3, [r0, #0]
 800813a:	0021      	movs	r1, r4
 800813c:	685b      	ldr	r3, [r3, #4]
 800813e:	4798      	blx	r3
 8008140:	0038      	movs	r0, r7
 8008142:	b00f      	add	sp, #60	@ 0x3c
 8008144:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008146:	46c0      	nop			@ (mov r8, r8)
 8008148:	20003572 	.word	0x20003572

0800814c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800814c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800814e:	000e      	movs	r6, r1
 8008150:	0004      	movs	r4, r0
 8008152:	9102      	str	r1, [sp, #8]
 8008154:	9203      	str	r2, [sp, #12]
 8008156:	b28d      	uxth	r5, r1
 8008158:	f7ff fdf4 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800815c:	0c36      	lsrs	r6, r6, #16
 800815e:	0003      	movs	r3, r0
 8008160:	0032      	movs	r2, r6
 8008162:	0029      	movs	r1, r5
 8008164:	0020      	movs	r0, r4
 8008166:	f7ff ff13 	bl	8007f90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800816a:	4906      	ldr	r1, [pc, #24]	@ (8008184 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x38>)
 800816c:	6822      	ldr	r2, [r4, #0]
 800816e:	8809      	ldrh	r1, [r1, #0]
 8008170:	0003      	movs	r3, r0
 8008172:	9100      	str	r1, [sp, #0]
 8008174:	6ed5      	ldr	r5, [r2, #108]	@ 0x6c
 8008176:	9902      	ldr	r1, [sp, #8]
 8008178:	9a03      	ldr	r2, [sp, #12]
 800817a:	0020      	movs	r0, r4
 800817c:	47a8      	blx	r5
 800817e:	b004      	add	sp, #16
 8008180:	bd70      	pop	{r4, r5, r6, pc}
 8008182:	46c0      	nop			@ (mov r8, r8)
 8008184:	20003572 	.word	0x20003572

08008188 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8008188:	b570      	push	{r4, r5, r6, lr}
 800818a:	0005      	movs	r5, r0
 800818c:	356e      	adds	r5, #110	@ 0x6e
 800818e:	782b      	ldrb	r3, [r5, #0]
 8008190:	0004      	movs	r4, r0
 8008192:	2b00      	cmp	r3, #0
 8008194:	d010      	beq.n	80081b8 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x30>
 8008196:	2002      	movs	r0, #2
 8008198:	f7fa f8cc 	bl	8002334 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800819c:	0022      	movs	r2, r4
 800819e:	2300      	movs	r3, #0
 80081a0:	326d      	adds	r2, #109	@ 0x6d
 80081a2:	702b      	strb	r3, [r5, #0]
 80081a4:	7013      	strb	r3, [r2, #0]
 80081a6:	6823      	ldr	r3, [r4, #0]
 80081a8:	0020      	movs	r0, r4
 80081aa:	33b8      	adds	r3, #184	@ 0xb8
 80081ac:	681d      	ldr	r5, [r3, #0]
 80081ae:	f7ff fdc9 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80081b2:	0001      	movs	r1, r0
 80081b4:	0020      	movs	r0, r4
 80081b6:	47a8      	blx	r5
 80081b8:	bd70      	pop	{r4, r5, r6, pc}

080081ba <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80081ba:	b570      	push	{r4, r5, r6, lr}
 80081bc:	0005      	movs	r5, r0
 80081be:	357b      	adds	r5, #123	@ 0x7b
 80081c0:	782b      	ldrb	r3, [r5, #0]
 80081c2:	000c      	movs	r4, r1
 80081c4:	428b      	cmp	r3, r1
 80081c6:	d006      	beq.n	80081d6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80081c8:	6803      	ldr	r3, [r0, #0]
 80081ca:	2900      	cmp	r1, #0
 80081cc:	d104      	bne.n	80081d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80081ce:	33c8      	adds	r3, #200	@ 0xc8
 80081d0:	681b      	ldr	r3, [r3, #0]
 80081d2:	4798      	blx	r3
 80081d4:	702c      	strb	r4, [r5, #0]
 80081d6:	bd70      	pop	{r4, r5, r6, pc}
 80081d8:	33cc      	adds	r3, #204	@ 0xcc
 80081da:	e7f9      	b.n	80081d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080081dc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80081dc:	b510      	push	{r4, lr}
 80081de:	4b0e      	ldr	r3, [pc, #56]	@ (8008218 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x3c>)
 80081e0:	0004      	movs	r4, r0
 80081e2:	781b      	ldrb	r3, [r3, #0]
 80081e4:	2b00      	cmp	r3, #0
 80081e6:	d10d      	bne.n	8008204 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x28>
 80081e8:	0003      	movs	r3, r0
 80081ea:	3348      	adds	r3, #72	@ 0x48
 80081ec:	781b      	ldrb	r3, [r3, #0]
 80081ee:	2b02      	cmp	r3, #2
 80081f0:	d008      	beq.n	8008204 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x28>
 80081f2:	6840      	ldr	r0, [r0, #4]
 80081f4:	f000 f914 	bl	8008420 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80081f8:	2800      	cmp	r0, #0
 80081fa:	d003      	beq.n	8008204 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x28>
 80081fc:	6862      	ldr	r2, [r4, #4]
 80081fe:	7a53      	ldrb	r3, [r2, #9]
 8008200:	2b00      	cmp	r3, #0
 8008202:	d0fc      	beq.n	80081fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8008204:	f7fa fa10 	bl	8002628 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8008208:	2100      	movs	r1, #0
 800820a:	0020      	movs	r0, r4
 800820c:	f7ff ffd5 	bl	80081ba <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8008210:	0020      	movs	r0, r4
 8008212:	f7ff fd97 	bl	8007d44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8008216:	bd10      	pop	{r4, pc}
 8008218:	20003576 	.word	0x20003576

0800821c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800821c:	68c3      	ldr	r3, [r0, #12]
 800821e:	6900      	ldr	r0, [r0, #16]
 8008220:	1a18      	subs	r0, r3, r0
 8008222:	4243      	negs	r3, r0
 8008224:	4158      	adcs	r0, r3
 8008226:	b2c0      	uxtb	r0, r0
 8008228:	4770      	bx	lr

0800822a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800822a:	6903      	ldr	r3, [r0, #16]
 800822c:	68c2      	ldr	r2, [r0, #12]
 800822e:	1a9b      	subs	r3, r3, r2
 8008230:	2b00      	cmp	r3, #0
 8008232:	dc01      	bgt.n	8008238 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv+0xe>
 8008234:	6882      	ldr	r2, [r0, #8]
 8008236:	189b      	adds	r3, r3, r2
 8008238:	2201      	movs	r2, #1
 800823a:	2100      	movs	r1, #0
 800823c:	0fd8      	lsrs	r0, r3, #31
 800823e:	429a      	cmp	r2, r3
 8008240:	4148      	adcs	r0, r1
 8008242:	b2c0      	uxtb	r0, r0
 8008244:	4770      	bx	lr

08008246 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8008246:	2324      	movs	r3, #36	@ 0x24
 8008248:	6902      	ldr	r2, [r0, #16]
 800824a:	6840      	ldr	r0, [r0, #4]
 800824c:	4353      	muls	r3, r2
 800824e:	18c0      	adds	r0, r0, r3
 8008250:	4770      	bx	lr

08008252 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8008252:	b510      	push	{r4, lr}
 8008254:	6803      	ldr	r3, [r0, #0]
 8008256:	691b      	ldr	r3, [r3, #16]
 8008258:	4798      	blx	r3
 800825a:	bd10      	pop	{r4, pc}

0800825c <_ZN8touchgfx13DMA_Interface7executeEv>:
 800825c:	2301      	movs	r3, #1
 800825e:	b570      	push	{r4, r5, r6, lr}
 8008260:	7203      	strb	r3, [r0, #8]
 8008262:	0004      	movs	r4, r0
 8008264:	6840      	ldr	r0, [r0, #4]
 8008266:	6803      	ldr	r3, [r0, #0]
 8008268:	699b      	ldr	r3, [r3, #24]
 800826a:	4798      	blx	r3
 800826c:	6803      	ldr	r3, [r0, #0]
 800826e:	0005      	movs	r5, r0
 8008270:	2b40      	cmp	r3, #64	@ 0x40
 8008272:	d00c      	beq.n	800828e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8008274:	d810      	bhi.n	8008298 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8008276:	2b04      	cmp	r3, #4
 8008278:	d027      	beq.n	80082ca <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800827a:	d804      	bhi.n	8008286 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800827c:	2b01      	cmp	r3, #1
 800827e:	d006      	beq.n	800828e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8008280:	2b02      	cmp	r3, #2
 8008282:	d01d      	beq.n	80082c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8008284:	bd70      	pop	{r4, r5, r6, pc}
 8008286:	2b08      	cmp	r3, #8
 8008288:	d027      	beq.n	80082da <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800828a:	2b20      	cmp	r3, #32
 800828c:	d1fa      	bne.n	8008284 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800828e:	6823      	ldr	r3, [r4, #0]
 8008290:	0020      	movs	r0, r4
 8008292:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008294:	4798      	blx	r3
 8008296:	e01d      	b.n	80082d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8008298:	2280      	movs	r2, #128	@ 0x80
 800829a:	0092      	lsls	r2, r2, #2
 800829c:	4293      	cmp	r3, r2
 800829e:	d0f6      	beq.n	800828e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80082a0:	d806      	bhi.n	80082b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x54>
 80082a2:	2b80      	cmp	r3, #128	@ 0x80
 80082a4:	d0f3      	beq.n	800828e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80082a6:	3a01      	subs	r2, #1
 80082a8:	3aff      	subs	r2, #255	@ 0xff
 80082aa:	4293      	cmp	r3, r2
 80082ac:	d1ea      	bne.n	8008284 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80082ae:	e7ee      	b.n	800828e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80082b0:	2280      	movs	r2, #128	@ 0x80
 80082b2:	00d2      	lsls	r2, r2, #3
 80082b4:	4293      	cmp	r3, r2
 80082b6:	d0ea      	beq.n	800828e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80082b8:	2280      	movs	r2, #128	@ 0x80
 80082ba:	0112      	lsls	r2, r2, #4
 80082bc:	4293      	cmp	r3, r2
 80082be:	d1e1      	bne.n	8008284 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80082c0:	6823      	ldr	r3, [r4, #0]
 80082c2:	0020      	movs	r0, r4
 80082c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80082c6:	4798      	blx	r3
 80082c8:	e00c      	b.n	80082e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>
 80082ca:	6823      	ldr	r3, [r4, #0]
 80082cc:	7f01      	ldrb	r1, [r0, #28]
 80082ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80082d0:	0020      	movs	r0, r4
 80082d2:	4798      	blx	r3
 80082d4:	6823      	ldr	r3, [r4, #0]
 80082d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80082d8:	e006      	b.n	80082e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80082da:	6823      	ldr	r3, [r4, #0]
 80082dc:	7f01      	ldrb	r1, [r0, #28]
 80082de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80082e0:	0020      	movs	r0, r4
 80082e2:	4798      	blx	r3
 80082e4:	6823      	ldr	r3, [r4, #0]
 80082e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80082e8:	0029      	movs	r1, r5
 80082ea:	0020      	movs	r0, r4
 80082ec:	4798      	blx	r3
 80082ee:	e7c9      	b.n	8008284 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>

080082f0 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80082f0:	4770      	bx	lr

080082f2 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80082f2:	4770      	bx	lr

080082f4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80082f4:	4770      	bx	lr

080082f6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80082f6:	b510      	push	{r4, lr}
 80082f8:	68c2      	ldr	r2, [r0, #12]
 80082fa:	6903      	ldr	r3, [r0, #16]
 80082fc:	0004      	movs	r4, r0
 80082fe:	1a9b      	subs	r3, r3, r2
 8008300:	2b00      	cmp	r3, #0
 8008302:	dc01      	bgt.n	8008308 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x12>
 8008304:	6880      	ldr	r0, [r0, #8]
 8008306:	181b      	adds	r3, r3, r0
 8008308:	2b01      	cmp	r3, #1
 800830a:	dd0f      	ble.n	800832c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x36>
 800830c:	2024      	movs	r0, #36	@ 0x24
 800830e:	4350      	muls	r0, r2
 8008310:	6863      	ldr	r3, [r4, #4]
 8008312:	2221      	movs	r2, #33	@ 0x21
 8008314:	1818      	adds	r0, r3, r0
 8008316:	f00a fd2e 	bl	8012d76 <memcpy>
 800831a:	68e3      	ldr	r3, [r4, #12]
 800831c:	68a2      	ldr	r2, [r4, #8]
 800831e:	3301      	adds	r3, #1
 8008320:	429a      	cmp	r2, r3
 8008322:	dc00      	bgt.n	8008326 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x30>
 8008324:	1a9b      	subs	r3, r3, r2
 8008326:	f3bf 8f5b 	dmb	ish
 800832a:	60e3      	str	r3, [r4, #12]
 800832c:	bd10      	pop	{r4, pc}

0800832e <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800832e:	6903      	ldr	r3, [r0, #16]
 8008330:	6882      	ldr	r2, [r0, #8]
 8008332:	3301      	adds	r3, #1
 8008334:	429a      	cmp	r2, r3
 8008336:	dc00      	bgt.n	800833a <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0xc>
 8008338:	1a9b      	subs	r3, r3, r2
 800833a:	f3bf 8f5b 	dmb	ish
 800833e:	6103      	str	r3, [r0, #16]
 8008340:	4770      	bx	lr
	...

08008344 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8008344:	b570      	push	{r4, r5, r6, lr}
 8008346:	0004      	movs	r4, r0
 8008348:	000e      	movs	r6, r1
 800834a:	6860      	ldr	r0, [r4, #4]
 800834c:	6803      	ldr	r3, [r0, #0]
 800834e:	685b      	ldr	r3, [r3, #4]
 8008350:	4798      	blx	r3
 8008352:	2800      	cmp	r0, #0
 8008354:	d1f9      	bne.n	800834a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8008356:	4d0c      	ldr	r5, [pc, #48]	@ (8008388 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x44>)
 8008358:	6828      	ldr	r0, [r5, #0]
 800835a:	6803      	ldr	r3, [r0, #0]
 800835c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800835e:	4798      	blx	r3
 8008360:	f7fa f972 	bl	8002648 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8008364:	6828      	ldr	r0, [r5, #0]
 8008366:	2101      	movs	r1, #1
 8008368:	f7ff ff27 	bl	80081ba <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800836c:	6860      	ldr	r0, [r4, #4]
 800836e:	0031      	movs	r1, r6
 8008370:	6803      	ldr	r3, [r0, #0]
 8008372:	689b      	ldr	r3, [r3, #8]
 8008374:	4798      	blx	r3
 8008376:	6823      	ldr	r3, [r4, #0]
 8008378:	0020      	movs	r0, r4
 800837a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800837c:	4798      	blx	r3
 800837e:	6828      	ldr	r0, [r5, #0]
 8008380:	6803      	ldr	r3, [r0, #0]
 8008382:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008384:	4798      	blx	r3
 8008386:	bd70      	pop	{r4, r5, r6, pc}
 8008388:	20003578 	.word	0x20003578

0800838c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800838c:	b510      	push	{r4, lr}
 800838e:	f7fa f94b 	bl	8002628 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8008392:	f7fa f953 	bl	800263c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8008396:	bd10      	pop	{r4, pc}

08008398 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8008398:	b510      	push	{r4, lr}
 800839a:	0004      	movs	r4, r0
 800839c:	2114      	movs	r1, #20
 800839e:	f009 fbb2 	bl	8011b06 <_ZdlPvj>
 80083a2:	0020      	movs	r0, r4
 80083a4:	bd10      	pop	{r4, pc}

080083a6 <_ZN8touchgfx13DMA_Interface5startEv>:
 80083a6:	b510      	push	{r4, lr}
 80083a8:	0004      	movs	r4, r0
 80083aa:	6840      	ldr	r0, [r0, #4]
 80083ac:	6803      	ldr	r3, [r0, #0]
 80083ae:	681b      	ldr	r3, [r3, #0]
 80083b0:	4798      	blx	r3
 80083b2:	2800      	cmp	r0, #0
 80083b4:	d109      	bne.n	80083ca <_ZN8touchgfx13DMA_Interface5startEv+0x24>
 80083b6:	7a63      	ldrb	r3, [r4, #9]
 80083b8:	2b00      	cmp	r3, #0
 80083ba:	d006      	beq.n	80083ca <_ZN8touchgfx13DMA_Interface5startEv+0x24>
 80083bc:	7a23      	ldrb	r3, [r4, #8]
 80083be:	2b00      	cmp	r3, #0
 80083c0:	d103      	bne.n	80083ca <_ZN8touchgfx13DMA_Interface5startEv+0x24>
 80083c2:	6823      	ldr	r3, [r4, #0]
 80083c4:	0020      	movs	r0, r4
 80083c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80083c8:	4798      	blx	r3
 80083ca:	bd10      	pop	{r4, pc}

080083cc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80083cc:	b570      	push	{r4, r5, r6, lr}
 80083ce:	0004      	movs	r4, r0
 80083d0:	6840      	ldr	r0, [r0, #4]
 80083d2:	6803      	ldr	r3, [r0, #0]
 80083d4:	681b      	ldr	r3, [r3, #0]
 80083d6:	4798      	blx	r3
 80083d8:	1e05      	subs	r5, r0, #0
 80083da:	d107      	bne.n	80083ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x20>
 80083dc:	7a23      	ldrb	r3, [r4, #8]
 80083de:	2b00      	cmp	r3, #0
 80083e0:	d004      	beq.n	80083ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x20>
 80083e2:	6860      	ldr	r0, [r4, #4]
 80083e4:	6803      	ldr	r3, [r0, #0]
 80083e6:	695b      	ldr	r3, [r3, #20]
 80083e8:	4798      	blx	r3
 80083ea:	7225      	strb	r5, [r4, #8]
 80083ec:	6860      	ldr	r0, [r4, #4]
 80083ee:	6803      	ldr	r3, [r0, #0]
 80083f0:	681b      	ldr	r3, [r3, #0]
 80083f2:	4798      	blx	r3
 80083f4:	2800      	cmp	r0, #0
 80083f6:	d104      	bne.n	8008402 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x36>
 80083f8:	6823      	ldr	r3, [r4, #0]
 80083fa:	0020      	movs	r0, r4
 80083fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80083fe:	4798      	blx	r3
 8008400:	bd70      	pop	{r4, r5, r6, pc}
 8008402:	f7fa f927 	bl	8002654 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
 8008406:	e7fb      	b.n	8008400 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>

08008408 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8008408:	4b04      	ldr	r3, [pc, #16]	@ (800841c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800840a:	6041      	str	r1, [r0, #4]
 800840c:	3308      	adds	r3, #8
 800840e:	6003      	str	r3, [r0, #0]
 8008410:	2300      	movs	r3, #0
 8008412:	6082      	str	r2, [r0, #8]
 8008414:	60c3      	str	r3, [r0, #12]
 8008416:	6103      	str	r3, [r0, #16]
 8008418:	4770      	bx	lr
 800841a:	46c0      	nop			@ (mov r8, r8)
 800841c:	08015848 	.word	0x08015848

08008420 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8008420:	b510      	push	{r4, lr}
 8008422:	6840      	ldr	r0, [r0, #4]
 8008424:	6803      	ldr	r3, [r0, #0]
 8008426:	681b      	ldr	r3, [r3, #0]
 8008428:	4798      	blx	r3
 800842a:	bd10      	pop	{r4, pc}

0800842c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800842c:	2000      	movs	r0, #0
 800842e:	4770      	bx	lr

08008430 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8008430:	4a06      	ldr	r2, [pc, #24]	@ (800844c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1c>)
 8008432:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8008434:	8812      	ldrh	r2, [r2, #0]
 8008436:	2000      	movs	r0, #0
 8008438:	429a      	cmp	r2, r3
 800843a:	d906      	bls.n	800844a <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1a>
 800843c:	4a04      	ldr	r2, [pc, #16]	@ (8008450 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800843e:	005b      	lsls	r3, r3, #1
 8008440:	6812      	ldr	r2, [r2, #0]
 8008442:	18d3      	adds	r3, r2, r3
 8008444:	7858      	ldrb	r0, [r3, #1]
 8008446:	0780      	lsls	r0, r0, #30
 8008448:	0f80      	lsrs	r0, r0, #30
 800844a:	4770      	bx	lr
 800844c:	200035cc 	.word	0x200035cc
 8008450:	200035c8 	.word	0x200035c8

08008454 <_ZN8touchgfx8TextAreaD1Ev>:
 8008454:	4770      	bx	lr
	...

08008458 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8008458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800845a:	4b0f      	ldr	r3, [pc, #60]	@ (8008498 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x40>)
 800845c:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800845e:	881b      	ldrh	r3, [r3, #0]
 8008460:	0004      	movs	r4, r0
 8008462:	2000      	movs	r0, #0
 8008464:	428b      	cmp	r3, r1
 8008466:	d915      	bls.n	8008494 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x3c>
 8008468:	6823      	ldr	r3, [r4, #0]
 800846a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800846c:	4b0b      	ldr	r3, [pc, #44]	@ (800849c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x44>)
 800846e:	6818      	ldr	r0, [r3, #0]
 8008470:	f7fc f870 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 8008474:	6823      	ldr	r3, [r4, #0]
 8008476:	0006      	movs	r6, r0
 8008478:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800847a:	0020      	movs	r0, r4
 800847c:	4798      	blx	r3
 800847e:	6823      	ldr	r3, [r4, #0]
 8008480:	0007      	movs	r7, r0
 8008482:	3304      	adds	r3, #4
 8008484:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008486:	0020      	movs	r0, r4
 8008488:	4798      	blx	r3
 800848a:	003a      	movs	r2, r7
 800848c:	0003      	movs	r3, r0
 800848e:	0031      	movs	r1, r6
 8008490:	0020      	movs	r0, r4
 8008492:	47a8      	blx	r5
 8008494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008496:	46c0      	nop			@ (mov r8, r8)
 8008498:	200035cc 	.word	0x200035cc
 800849c:	200035d4 	.word	0x200035d4

080084a0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80084a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084a2:	4b18      	ldr	r3, [pc, #96]	@ (8008504 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80084a4:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 80084a6:	881b      	ldrh	r3, [r3, #0]
 80084a8:	0004      	movs	r4, r0
 80084aa:	b085      	sub	sp, #20
 80084ac:	2000      	movs	r0, #0
 80084ae:	428b      	cmp	r3, r1
 80084b0:	d925      	bls.n	80084fe <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80084b2:	4a15      	ldr	r2, [pc, #84]	@ (8008508 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80084b4:	004b      	lsls	r3, r1, #1
 80084b6:	6812      	ldr	r2, [r2, #0]
 80084b8:	4814      	ldr	r0, [pc, #80]	@ (800850c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80084ba:	18d3      	adds	r3, r2, r3
 80084bc:	781a      	ldrb	r2, [r3, #0]
 80084be:	6800      	ldr	r0, [r0, #0]
 80084c0:	0092      	lsls	r2, r2, #2
 80084c2:	785b      	ldrb	r3, [r3, #1]
 80084c4:	5815      	ldr	r5, [r2, r0]
 80084c6:	071b      	lsls	r3, r3, #28
 80084c8:	682a      	ldr	r2, [r5, #0]
 80084ca:	0f9b      	lsrs	r3, r3, #30
 80084cc:	9303      	str	r3, [sp, #12]
 80084ce:	4b10      	ldr	r3, [pc, #64]	@ (8008510 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80084d0:	69d2      	ldr	r2, [r2, #28]
 80084d2:	6818      	ldr	r0, [r3, #0]
 80084d4:	9202      	str	r2, [sp, #8]
 80084d6:	f7fc f83d 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 80084da:	6823      	ldr	r3, [r4, #0]
 80084dc:	0006      	movs	r6, r0
 80084de:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80084e0:	0020      	movs	r0, r4
 80084e2:	4798      	blx	r3
 80084e4:	6823      	ldr	r3, [r4, #0]
 80084e6:	0007      	movs	r7, r0
 80084e8:	3304      	adds	r3, #4
 80084ea:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80084ec:	0020      	movs	r0, r4
 80084ee:	4798      	blx	r3
 80084f0:	003b      	movs	r3, r7
 80084f2:	9000      	str	r0, [sp, #0]
 80084f4:	0032      	movs	r2, r6
 80084f6:	9903      	ldr	r1, [sp, #12]
 80084f8:	0028      	movs	r0, r5
 80084fa:	9c02      	ldr	r4, [sp, #8]
 80084fc:	47a0      	blx	r4
 80084fe:	b005      	add	sp, #20
 8008500:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008502:	46c0      	nop			@ (mov r8, r8)
 8008504:	200035cc 	.word	0x200035cc
 8008508:	200035c8 	.word	0x200035c8
 800850c:	200035d0 	.word	0x200035d0
 8008510:	200035d4 	.word	0x200035d4

08008514 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8008514:	b40e      	push	{r1, r2, r3}
 8008516:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008518:	4b2d      	ldr	r3, [pc, #180]	@ (80085d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbc>)
 800851a:	b0a0      	sub	sp, #128	@ 0x80
 800851c:	881a      	ldrh	r2, [r3, #0]
 800851e:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8008520:	0004      	movs	r4, r0
 8008522:	429a      	cmp	r2, r3
 8008524:	d952      	bls.n	80085cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xb8>
 8008526:	4f2b      	ldr	r7, [pc, #172]	@ (80085d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc0>)
 8008528:	aa26      	add	r2, sp, #152	@ 0x98
 800852a:	9206      	str	r2, [sp, #24]
 800852c:	683a      	ldr	r2, [r7, #0]
 800852e:	4e2a      	ldr	r6, [pc, #168]	@ (80085d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8008530:	005b      	lsls	r3, r3, #1
 8008532:	5c9b      	ldrb	r3, [r3, r2]
 8008534:	6832      	ldr	r2, [r6, #0]
 8008536:	009b      	lsls	r3, r3, #2
 8008538:	589d      	ldr	r5, [r3, r2]
 800853a:	682b      	ldr	r3, [r5, #0]
 800853c:	0028      	movs	r0, r5
 800853e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008540:	4798      	blx	r3
 8008542:	466b      	mov	r3, sp
 8008544:	9004      	str	r0, [sp, #16]
 8008546:	2210      	movs	r2, #16
 8008548:	5e9b      	ldrsh	r3, [r3, r2]
 800854a:	a807      	add	r0, sp, #28
 800854c:	9303      	str	r3, [sp, #12]
 800854e:	f004 fc3f 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 8008552:	682b      	ldr	r3, [r5, #0]
 8008554:	0028      	movs	r0, r5
 8008556:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008558:	4798      	blx	r3
 800855a:	682b      	ldr	r3, [r5, #0]
 800855c:	9005      	str	r0, [sp, #20]
 800855e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008560:	0028      	movs	r0, r5
 8008562:	4798      	blx	r3
 8008564:	9b05      	ldr	r3, [sp, #20]
 8008566:	9000      	str	r0, [sp, #0]
 8008568:	9a06      	ldr	r2, [sp, #24]
 800856a:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800856c:	a807      	add	r0, sp, #28
 800856e:	f004 fc8e 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8008572:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8008574:	683b      	ldr	r3, [r7, #0]
 8008576:	0052      	lsls	r2, r2, #1
 8008578:	189b      	adds	r3, r3, r2
 800857a:	7818      	ldrb	r0, [r3, #0]
 800857c:	785a      	ldrb	r2, [r3, #1]
 800857e:	0023      	movs	r3, r4
 8008580:	3339      	adds	r3, #57	@ 0x39
 8008582:	7819      	ldrb	r1, [r3, #0]
 8008584:	3b02      	subs	r3, #2
 8008586:	6835      	ldr	r5, [r6, #0]
 8008588:	781e      	ldrb	r6, [r3, #0]
 800858a:	8923      	ldrh	r3, [r4, #8]
 800858c:	0080      	lsls	r0, r0, #2
 800858e:	1b9b      	subs	r3, r3, r6
 8008590:	b21b      	sxth	r3, r3
 8008592:	9300      	str	r3, [sp, #0]
 8008594:	0712      	lsls	r2, r2, #28
 8008596:	5943      	ldr	r3, [r0, r5]
 8008598:	0f92      	lsrs	r2, r2, #30
 800859a:	a807      	add	r0, sp, #28
 800859c:	f002 f866 	bl	800a66c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80085a0:	2134      	movs	r1, #52	@ 0x34
 80085a2:	5e62      	ldrsh	r2, [r4, r1]
 80085a4:	9903      	ldr	r1, [sp, #12]
 80085a6:	b203      	sxth	r3, r0
 80085a8:	1889      	adds	r1, r1, r2
 80085aa:	2900      	cmp	r1, #0
 80085ac:	dd0c      	ble.n	80085c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xb4>
 80085ae:	3b01      	subs	r3, #1
 80085b0:	4353      	muls	r3, r2
 80085b2:	9a04      	ldr	r2, [sp, #16]
 80085b4:	4350      	muls	r0, r2
 80085b6:	1818      	adds	r0, r3, r0
 80085b8:	b203      	sxth	r3, r0
 80085ba:	9303      	str	r3, [sp, #12]
 80085bc:	9803      	ldr	r0, [sp, #12]
 80085be:	b020      	add	sp, #128	@ 0x80
 80085c0:	bcf0      	pop	{r4, r5, r6, r7}
 80085c2:	bc08      	pop	{r3}
 80085c4:	b003      	add	sp, #12
 80085c6:	4718      	bx	r3
 80085c8:	2b00      	cmp	r3, #0
 80085ca:	dcf7      	bgt.n	80085bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xa8>
 80085cc:	2300      	movs	r3, #0
 80085ce:	e7f4      	b.n	80085ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xa6>
 80085d0:	200035cc 	.word	0x200035cc
 80085d4:	200035c8 	.word	0x200035c8
 80085d8:	200035d0 	.word	0x200035d0

080085dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80085dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80085de:	4bcd      	ldr	r3, [pc, #820]	@ (8008914 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x338>)
 80085e0:	b0ab      	sub	sp, #172	@ 0xac
 80085e2:	9002      	str	r0, [sp, #8]
 80085e4:	000e      	movs	r6, r1
 80085e6:	881b      	ldrh	r3, [r3, #0]
 80085e8:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 80085ea:	428b      	cmp	r3, r1
 80085ec:	d808      	bhi.n	8008600 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x24>
 80085ee:	2201      	movs	r2, #1
 80085f0:	2300      	movs	r3, #0
 80085f2:	4252      	negs	r2, r2
 80085f4:	6003      	str	r3, [r0, #0]
 80085f6:	6042      	str	r2, [r0, #4]
 80085f8:	6083      	str	r3, [r0, #8]
 80085fa:	9802      	ldr	r0, [sp, #8]
 80085fc:	b02b      	add	sp, #172	@ 0xac
 80085fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008600:	4bc5      	ldr	r3, [pc, #788]	@ (8008918 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x33c>)
 8008602:	004a      	lsls	r2, r1, #1
 8008604:	681b      	ldr	r3, [r3, #0]
 8008606:	5cd3      	ldrb	r3, [r2, r3]
 8008608:	4ac4      	ldr	r2, [pc, #784]	@ (800891c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>)
 800860a:	009b      	lsls	r3, r3, #2
 800860c:	6812      	ldr	r2, [r2, #0]
 800860e:	589f      	ldr	r7, [r3, r2]
 8008610:	4bc3      	ldr	r3, [pc, #780]	@ (8008920 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x344>)
 8008612:	6818      	ldr	r0, [r3, #0]
 8008614:	f7fb ff9e 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 8008618:	683b      	ldr	r3, [r7, #0]
 800861a:	9003      	str	r0, [sp, #12]
 800861c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800861e:	0038      	movs	r0, r7
 8008620:	4798      	blx	r3
 8008622:	466b      	mov	r3, sp
 8008624:	9005      	str	r0, [sp, #20]
 8008626:	8eb4      	ldrh	r4, [r6, #52]	@ 0x34
 8008628:	2214      	movs	r2, #20
 800862a:	5e9b      	ldrsh	r3, [r3, r2]
 800862c:	1904      	adds	r4, r0, r4
 800862e:	9307      	str	r3, [sp, #28]
 8008630:	b2a3      	uxth	r3, r4
 8008632:	9304      	str	r3, [sp, #16]
 8008634:	0033      	movs	r3, r6
 8008636:	3339      	adds	r3, #57	@ 0x39
 8008638:	781b      	ldrb	r3, [r3, #0]
 800863a:	a811      	add	r0, sp, #68	@ 0x44
 800863c:	2b00      	cmp	r3, #0
 800863e:	d000      	beq.n	8008642 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x66>
 8008640:	e09d      	b.n	800877e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1a2>
 8008642:	f004 fbc5 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 8008646:	683b      	ldr	r3, [r7, #0]
 8008648:	0038      	movs	r0, r7
 800864a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800864c:	4798      	blx	r3
 800864e:	683b      	ldr	r3, [r7, #0]
 8008650:	9006      	str	r0, [sp, #24]
 8008652:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008654:	0038      	movs	r0, r7
 8008656:	4798      	blx	r3
 8008658:	6833      	ldr	r3, [r6, #0]
 800865a:	0004      	movs	r4, r0
 800865c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800865e:	0030      	movs	r0, r6
 8008660:	4798      	blx	r3
 8008662:	6833      	ldr	r3, [r6, #0]
 8008664:	0005      	movs	r5, r0
 8008666:	3304      	adds	r3, #4
 8008668:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800866a:	0030      	movs	r0, r6
 800866c:	4798      	blx	r3
 800866e:	0023      	movs	r3, r4
 8008670:	9001      	str	r0, [sp, #4]
 8008672:	9a06      	ldr	r2, [sp, #24]
 8008674:	9500      	str	r5, [sp, #0]
 8008676:	9903      	ldr	r1, [sp, #12]
 8008678:	a811      	add	r0, sp, #68	@ 0x44
 800867a:	f004 fc1e 	bl	800ceba <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800867e:	0033      	movs	r3, r6
 8008680:	2202      	movs	r2, #2
 8008682:	3338      	adds	r3, #56	@ 0x38
 8008684:	781b      	ldrb	r3, [r3, #0]
 8008686:	4393      	bics	r3, r2
 8008688:	d176      	bne.n	8008778 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x19c>
 800868a:	220a      	movs	r2, #10
 800868c:	5eb3      	ldrsh	r3, [r6, r2]
 800868e:	2500      	movs	r5, #0
 8008690:	002c      	movs	r4, r5
 8008692:	9303      	str	r3, [sp, #12]
 8008694:	4ba0      	ldr	r3, [pc, #640]	@ (8008918 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x33c>)
 8008696:	8db2      	ldrh	r2, [r6, #44]	@ 0x2c
 8008698:	681b      	ldr	r3, [r3, #0]
 800869a:	0052      	lsls	r2, r2, #1
 800869c:	189b      	adds	r3, r3, r2
 800869e:	785b      	ldrb	r3, [r3, #1]
 80086a0:	4aa0      	ldr	r2, [pc, #640]	@ (8008924 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>)
 80086a2:	071b      	lsls	r3, r3, #28
 80086a4:	0f9b      	lsrs	r3, r3, #30
 80086a6:	0039      	movs	r1, r7
 80086a8:	a811      	add	r0, sp, #68	@ 0x44
 80086aa:	f001 fcd9 	bl	800a060 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80086ae:	42a8      	cmp	r0, r5
 80086b0:	da00      	bge.n	80086b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd8>
 80086b2:	0028      	movs	r0, r5
 80086b4:	9b03      	ldr	r3, [sp, #12]
 80086b6:	9a04      	ldr	r2, [sp, #16]
 80086b8:	b205      	sxth	r5, r0
 80086ba:	1a9b      	subs	r3, r3, r2
 80086bc:	3401      	adds	r4, #1
 80086be:	b21b      	sxth	r3, r3
 80086c0:	a811      	add	r0, sp, #68	@ 0x44
 80086c2:	b2a4      	uxth	r4, r4
 80086c4:	9303      	str	r3, [sp, #12]
 80086c6:	f004 fba8 	bl	800ce1a <_ZN8touchgfx12TextProvider11endOfStringEv>
 80086ca:	2800      	cmp	r0, #0
 80086cc:	d104      	bne.n	80086d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80086ce:	7a3b      	ldrb	r3, [r7, #8]
 80086d0:	9a03      	ldr	r2, [sp, #12]
 80086d2:	189b      	adds	r3, r3, r2
 80086d4:	2b00      	cmp	r3, #0
 80086d6:	dcdd      	bgt.n	8008694 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb8>
 80086d8:	9b04      	ldr	r3, [sp, #16]
 80086da:	9a07      	ldr	r2, [sp, #28]
 80086dc:	435c      	muls	r4, r3
 80086de:	8eb3      	ldrh	r3, [r6, #52]	@ 0x34
 80086e0:	1ae4      	subs	r4, r4, r3
 80086e2:	b2a4      	uxth	r4, r4
 80086e4:	b223      	sxth	r3, r4
 80086e6:	429a      	cmp	r2, r3
 80086e8:	db00      	blt.n	80086ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x110>
 80086ea:	9c05      	ldr	r4, [sp, #20]
 80086ec:	7a7b      	ldrb	r3, [r7, #9]
 80086ee:	2202      	movs	r2, #2
 80086f0:	18e4      	adds	r4, r4, r3
 80086f2:	b2a4      	uxth	r4, r4
 80086f4:	b223      	sxth	r3, r4
 80086f6:	9303      	str	r3, [sp, #12]
 80086f8:	0033      	movs	r3, r6
 80086fa:	3338      	adds	r3, #56	@ 0x38
 80086fc:	781b      	ldrb	r3, [r3, #0]
 80086fe:	4393      	bics	r3, r2
 8008700:	d000      	beq.n	8008704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x128>
 8008702:	e0e6      	b.n	80088d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f6>
 8008704:	2208      	movs	r2, #8
 8008706:	5eb3      	ldrsh	r3, [r6, r2]
 8008708:	9304      	str	r3, [sp, #16]
 800870a:	6833      	ldr	r3, [r6, #0]
 800870c:	0030      	movs	r0, r6
 800870e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008710:	4798      	blx	r3
 8008712:	b2aa      	uxth	r2, r5
 8008714:	2801      	cmp	r0, #1
 8008716:	d100      	bne.n	800871a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x13e>
 8008718:	e0de      	b.n	80088d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800871a:	0033      	movs	r3, r6
 800871c:	3337      	adds	r3, #55	@ 0x37
 800871e:	781b      	ldrb	r3, [r3, #0]
 8008720:	2802      	cmp	r0, #2
 8008722:	d100      	bne.n	8008726 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14a>
 8008724:	e0df      	b.n	80088e6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x30a>
 8008726:	7af9      	ldrb	r1, [r7, #11]
 8008728:	7b38      	ldrb	r0, [r7, #12]
 800872a:	1a5b      	subs	r3, r3, r1
 800872c:	1809      	adds	r1, r1, r0
 800872e:	1852      	adds	r2, r2, r1
 8008730:	0031      	movs	r1, r6
 8008732:	3138      	adds	r1, #56	@ 0x38
 8008734:	7809      	ldrb	r1, [r1, #0]
 8008736:	b29b      	uxth	r3, r3
 8008738:	b292      	uxth	r2, r2
 800873a:	b21d      	sxth	r5, r3
 800873c:	b217      	sxth	r7, r2
 800873e:	2902      	cmp	r1, #2
 8008740:	d100      	bne.n	8008744 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x168>
 8008742:	e0d4      	b.n	80088ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x312>
 8008744:	2903      	cmp	r1, #3
 8008746:	d100      	bne.n	800874a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x16e>
 8008748:	e0d9      	b.n	80088fe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x322>
 800874a:	2901      	cmp	r1, #1
 800874c:	d000      	beq.n	8008750 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x174>
 800874e:	e0df      	b.n	8008910 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x334>
 8008750:	003a      	movs	r2, r7
 8008752:	8933      	ldrh	r3, [r6, #8]
 8008754:	9f03      	ldr	r7, [sp, #12]
 8008756:	1b1b      	subs	r3, r3, r4
 8008758:	9203      	str	r2, [sp, #12]
 800875a:	002c      	movs	r4, r5
 800875c:	b21d      	sxth	r5, r3
 800875e:	4b70      	ldr	r3, [pc, #448]	@ (8008920 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x344>)
 8008760:	8db1      	ldrh	r1, [r6, #44]	@ 0x2c
 8008762:	6818      	ldr	r0, [r3, #0]
 8008764:	f7fb fef6 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 8008768:	9b02      	ldr	r3, [sp, #8]
 800876a:	9a03      	ldr	r2, [sp, #12]
 800876c:	801d      	strh	r5, [r3, #0]
 800876e:	805c      	strh	r4, [r3, #2]
 8008770:	809f      	strh	r7, [r3, #4]
 8008772:	80da      	strh	r2, [r3, #6]
 8008774:	6098      	str	r0, [r3, #8]
 8008776:	e740      	b.n	80085fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1e>
 8008778:	2208      	movs	r2, #8
 800877a:	5eb3      	ldrsh	r3, [r6, r2]
 800877c:	e787      	b.n	800868e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb2>
 800877e:	f004 fb27 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 8008782:	683b      	ldr	r3, [r7, #0]
 8008784:	0038      	movs	r0, r7
 8008786:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008788:	4798      	blx	r3
 800878a:	683b      	ldr	r3, [r7, #0]
 800878c:	9006      	str	r0, [sp, #24]
 800878e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008790:	0038      	movs	r0, r7
 8008792:	4798      	blx	r3
 8008794:	6833      	ldr	r3, [r6, #0]
 8008796:	0004      	movs	r4, r0
 8008798:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800879a:	0030      	movs	r0, r6
 800879c:	4798      	blx	r3
 800879e:	6833      	ldr	r3, [r6, #0]
 80087a0:	0005      	movs	r5, r0
 80087a2:	3304      	adds	r3, #4
 80087a4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80087a6:	0030      	movs	r0, r6
 80087a8:	4798      	blx	r3
 80087aa:	0023      	movs	r3, r4
 80087ac:	9001      	str	r0, [sp, #4]
 80087ae:	9a06      	ldr	r2, [sp, #24]
 80087b0:	9903      	ldr	r1, [sp, #12]
 80087b2:	a811      	add	r0, sp, #68	@ 0x44
 80087b4:	9500      	str	r5, [sp, #0]
 80087b6:	f004 fb80 	bl	800ceba <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80087ba:	0033      	movs	r3, r6
 80087bc:	2202      	movs	r2, #2
 80087be:	3338      	adds	r3, #56	@ 0x38
 80087c0:	781b      	ldrb	r3, [r3, #0]
 80087c2:	4393      	bics	r3, r2
 80087c4:	220a      	movs	r2, #10
 80087c6:	5eb0      	ldrsh	r0, [r6, r2]
 80087c8:	2108      	movs	r1, #8
 80087ca:	5e72      	ldrsh	r2, [r6, r1]
 80087cc:	2b00      	cmp	r3, #0
 80087ce:	d000      	beq.n	80087d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1f6>
 80087d0:	e07c      	b.n	80088cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f0>
 80087d2:	0011      	movs	r1, r2
 80087d4:	9003      	str	r0, [sp, #12]
 80087d6:	0033      	movs	r3, r6
 80087d8:	3337      	adds	r3, #55	@ 0x37
 80087da:	781b      	ldrb	r3, [r3, #0]
 80087dc:	8db2      	ldrh	r2, [r6, #44]	@ 0x2c
 80087de:	1ac9      	subs	r1, r1, r3
 80087e0:	4b4d      	ldr	r3, [pc, #308]	@ (8008918 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x33c>)
 80087e2:	0052      	lsls	r2, r2, #1
 80087e4:	681b      	ldr	r3, [r3, #0]
 80087e6:	ac08      	add	r4, sp, #32
 80087e8:	189b      	adds	r3, r3, r2
 80087ea:	785a      	ldrb	r2, [r3, #1]
 80087ec:	0712      	lsls	r2, r2, #28
 80087ee:	0f93      	lsrs	r3, r2, #30
 80087f0:	466a      	mov	r2, sp
 80087f2:	7613      	strb	r3, [r2, #24]
 80087f4:	2334      	movs	r3, #52	@ 0x34
 80087f6:	5ef5      	ldrsh	r5, [r6, r3]
 80087f8:	0033      	movs	r3, r6
 80087fa:	aa11      	add	r2, sp, #68	@ 0x44
 80087fc:	3339      	adds	r3, #57	@ 0x39
 80087fe:	7818      	ldrb	r0, [r3, #0]
 8008800:	6062      	str	r2, [r4, #4]
 8008802:	466a      	mov	r2, sp
 8008804:	7e12      	ldrb	r2, [r2, #24]
 8008806:	2300      	movs	r3, #0
 8008808:	7222      	strb	r2, [r4, #8]
 800880a:	9a03      	ldr	r2, [sp, #12]
 800880c:	8221      	strh	r1, [r4, #16]
 800880e:	8262      	strh	r2, [r4, #18]
 8008810:	220b      	movs	r2, #11
 8008812:	a906      	add	r1, sp, #24
 8008814:	1852      	adds	r2, r2, r1
 8008816:	8023      	strh	r3, [r4, #0]
 8008818:	7260      	strb	r0, [r4, #9]
 800881a:	60e7      	str	r7, [r4, #12]
 800881c:	82a5      	strh	r5, [r4, #20]
 800881e:	82e3      	strh	r3, [r4, #22]
 8008820:	8323      	strh	r3, [r4, #24]
 8008822:	8363      	strh	r3, [r4, #26]
 8008824:	83a3      	strh	r3, [r4, #28]
 8008826:	83e3      	strh	r3, [r4, #30]
 8008828:	8423      	strh	r3, [r4, #32]
 800882a:	77d3      	strb	r3, [r2, #31]
 800882c:	4298      	cmp	r0, r3
 800882e:	d029      	beq.n	8008884 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a8>
 8008830:	683b      	ldr	r3, [r7, #0]
 8008832:	0038      	movs	r0, r7
 8008834:	695b      	ldr	r3, [r3, #20]
 8008836:	4798      	blx	r3
 8008838:	9006      	str	r0, [sp, #24]
 800883a:	2800      	cmp	r0, #0
 800883c:	d022      	beq.n	8008884 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a8>
 800883e:	68e0      	ldr	r0, [r4, #12]
 8008840:	9906      	ldr	r1, [sp, #24]
 8008842:	6803      	ldr	r3, [r0, #0]
 8008844:	68db      	ldr	r3, [r3, #12]
 8008846:	4798      	blx	r3
 8008848:	1e05      	subs	r5, r0, #0
 800884a:	d01b      	beq.n	8008884 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a8>
 800884c:	2280      	movs	r2, #128	@ 0x80
 800884e:	7b43      	ldrb	r3, [r0, #13]
 8008850:	0052      	lsls	r2, r2, #1
 8008852:	005b      	lsls	r3, r3, #1
 8008854:	4013      	ands	r3, r2
 8008856:	7a82      	ldrb	r2, [r0, #10]
 8008858:	4313      	orrs	r3, r2
 800885a:	8423      	strh	r3, [r4, #32]
 800885c:	7a63      	ldrb	r3, [r4, #9]
 800885e:	2b06      	cmp	r3, #6
 8008860:	d110      	bne.n	8008884 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a8>
 8008862:	68e0      	ldr	r0, [r4, #12]
 8008864:	002a      	movs	r2, r5
 8008866:	6803      	ldr	r3, [r0, #0]
 8008868:	9906      	ldr	r1, [sp, #24]
 800886a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800886c:	4798      	blx	r3
 800886e:	2280      	movs	r2, #128	@ 0x80
 8008870:	7b6b      	ldrb	r3, [r5, #13]
 8008872:	0052      	lsls	r2, r2, #1
 8008874:	005b      	lsls	r3, r3, #1
 8008876:	4013      	ands	r3, r2
 8008878:	7aaa      	ldrb	r2, [r5, #10]
 800887a:	4313      	orrs	r3, r2
 800887c:	1818      	adds	r0, r3, r0
 800887e:	8c23      	ldrh	r3, [r4, #32]
 8008880:	18c0      	adds	r0, r0, r3
 8008882:	8420      	strh	r0, [r4, #32]
 8008884:	2500      	movs	r5, #0
 8008886:	002c      	movs	r4, r5
 8008888:	a808      	add	r0, sp, #32
 800888a:	f001 fdf3 	bl	800a474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800888e:	ab06      	add	r3, sp, #24
 8008890:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8008892:	42ab      	cmp	r3, r5
 8008894:	da00      	bge.n	8008898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2bc>
 8008896:	002b      	movs	r3, r5
 8008898:	b21d      	sxth	r5, r3
 800889a:	9a04      	ldr	r2, [sp, #16]
 800889c:	9b03      	ldr	r3, [sp, #12]
 800889e:	3401      	adds	r4, #1
 80088a0:	1a9b      	subs	r3, r3, r2
 80088a2:	b21b      	sxth	r3, r3
 80088a4:	9303      	str	r3, [sp, #12]
 80088a6:	ab06      	add	r3, sp, #24
 80088a8:	891b      	ldrh	r3, [r3, #8]
 80088aa:	b2a4      	uxth	r4, r4
 80088ac:	2b00      	cmp	r3, #0
 80088ae:	d100      	bne.n	80088b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 80088b0:	e712      	b.n	80086d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80088b2:	230b      	movs	r3, #11
 80088b4:	aa06      	add	r2, sp, #24
 80088b6:	189b      	adds	r3, r3, r2
 80088b8:	7fdb      	ldrb	r3, [r3, #31]
 80088ba:	2b00      	cmp	r3, #0
 80088bc:	d000      	beq.n	80088c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e4>
 80088be:	e70b      	b.n	80086d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80088c0:	7a3b      	ldrb	r3, [r7, #8]
 80088c2:	9a03      	ldr	r2, [sp, #12]
 80088c4:	189b      	adds	r3, r3, r2
 80088c6:	2b00      	cmp	r3, #0
 80088c8:	dcde      	bgt.n	8008888 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ac>
 80088ca:	e705      	b.n	80086d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80088cc:	0001      	movs	r1, r0
 80088ce:	9203      	str	r2, [sp, #12]
 80088d0:	e781      	b.n	80087d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1fa>
 80088d2:	220a      	movs	r2, #10
 80088d4:	5eb3      	ldrsh	r3, [r6, r2]
 80088d6:	e717      	b.n	8008708 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x12c>
 80088d8:	9b04      	ldr	r3, [sp, #16]
 80088da:	1b5b      	subs	r3, r3, r5
 80088dc:	0fd9      	lsrs	r1, r3, #31
 80088de:	18cb      	adds	r3, r1, r3
 80088e0:	105b      	asrs	r3, r3, #1
 80088e2:	b21b      	sxth	r3, r3
 80088e4:	e71f      	b.n	8008726 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14a>
 80088e6:	9904      	ldr	r1, [sp, #16]
 80088e8:	18d3      	adds	r3, r2, r3
 80088ea:	1acb      	subs	r3, r1, r3
 80088ec:	e7f9      	b.n	80088e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x306>
 80088ee:	8935      	ldrh	r5, [r6, #8]
 80088f0:	1aad      	subs	r5, r5, r2
 80088f2:	1aed      	subs	r5, r5, r3
 80088f4:	8973      	ldrh	r3, [r6, #10]
 80088f6:	b22d      	sxth	r5, r5
 80088f8:	1b1c      	subs	r4, r3, r4
 80088fa:	b224      	sxth	r4, r4
 80088fc:	e72f      	b.n	800875e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x182>
 80088fe:	8974      	ldrh	r4, [r6, #10]
 8008900:	2500      	movs	r5, #0
 8008902:	1aa4      	subs	r4, r4, r2
 8008904:	1ae4      	subs	r4, r4, r3
 8008906:	003b      	movs	r3, r7
 8008908:	b224      	sxth	r4, r4
 800890a:	9f03      	ldr	r7, [sp, #12]
 800890c:	9303      	str	r3, [sp, #12]
 800890e:	e726      	b.n	800875e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x182>
 8008910:	2400      	movs	r4, #0
 8008912:	e724      	b.n	800875e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x182>
 8008914:	200035cc 	.word	0x200035cc
 8008918:	200035c8 	.word	0x200035c8
 800891c:	200035d0 	.word	0x200035d0
 8008920:	200035d4 	.word	0x200035d4
 8008924:	00007fff 	.word	0x00007fff

08008928 <_ZN8touchgfx8TextAreaD0Ev>:
 8008928:	b510      	push	{r4, lr}
 800892a:	0004      	movs	r4, r0
 800892c:	2148      	movs	r1, #72	@ 0x48
 800892e:	f009 f8ea 	bl	8011b06 <_ZdlPvj>
 8008932:	0020      	movs	r0, r4
 8008934:	bd10      	pop	{r4, pc}
	...

08008938 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8008938:	0003      	movs	r3, r0
 800893a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800893c:	3336      	adds	r3, #54	@ 0x36
 800893e:	781b      	ldrb	r3, [r3, #0]
 8008940:	0004      	movs	r4, r0
 8008942:	2b00      	cmp	r3, #0
 8008944:	d021      	beq.n	800898a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x52>
 8008946:	4b16      	ldr	r3, [pc, #88]	@ (80089a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8008948:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800894a:	881b      	ldrh	r3, [r3, #0]
 800894c:	428b      	cmp	r3, r1
 800894e:	d91c      	bls.n	800898a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x52>
 8008950:	2208      	movs	r2, #8
 8008952:	5e83      	ldrsh	r3, [r0, r2]
 8008954:	2b00      	cmp	r3, #0
 8008956:	dd18      	ble.n	800898a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x52>
 8008958:	220a      	movs	r2, #10
 800895a:	5e83      	ldrsh	r3, [r0, r2]
 800895c:	2b00      	cmp	r3, #0
 800895e:	dd14      	ble.n	800898a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x52>
 8008960:	4b10      	ldr	r3, [pc, #64]	@ (80089a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x6c>)
 8008962:	6818      	ldr	r0, [r3, #0]
 8008964:	f7fb fdf6 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 8008968:	1d23      	adds	r3, r4, #4
 800896a:	223e      	movs	r2, #62	@ 0x3e
 800896c:	5e9b      	ldrsh	r3, [r3, r2]
 800896e:	6822      	ldr	r2, [r4, #0]
 8008970:	2b00      	cmp	r3, #0
 8008972:	db07      	blt.n	8008984 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4c>
 8008974:	1ca3      	adds	r3, r4, #2
 8008976:	213e      	movs	r1, #62	@ 0x3e
 8008978:	5e5b      	ldrsh	r3, [r3, r1]
 800897a:	2b00      	cmp	r3, #0
 800897c:	db02      	blt.n	8008984 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4c>
 800897e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8008980:	4298      	cmp	r0, r3
 8008982:	d003      	beq.n	800898c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x54>
 8008984:	6953      	ldr	r3, [r2, #20]
 8008986:	0020      	movs	r0, r4
 8008988:	4798      	blx	r3
 800898a:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
 800898c:	4669      	mov	r1, sp
 800898e:	0023      	movs	r3, r4
 8008990:	0008      	movs	r0, r1
 8008992:	333c      	adds	r3, #60	@ 0x3c
 8008994:	cb60      	ldmia	r3!, {r5, r6}
 8008996:	c060      	stmia	r0!, {r5, r6}
 8008998:	0020      	movs	r0, r4
 800899a:	6913      	ldr	r3, [r2, #16]
 800899c:	4798      	blx	r3
 800899e:	e7f4      	b.n	800898a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x52>
 80089a0:	200035cc 	.word	0x200035cc
 80089a4:	200035d4 	.word	0x200035d4

080089a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80089a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089aa:	4b47      	ldr	r3, [pc, #284]	@ (8008ac8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80089ac:	8d86      	ldrh	r6, [r0, #44]	@ 0x2c
 80089ae:	881b      	ldrh	r3, [r3, #0]
 80089b0:	b091      	sub	sp, #68	@ 0x44
 80089b2:	0004      	movs	r4, r0
 80089b4:	42b3      	cmp	r3, r6
 80089b6:	d800      	bhi.n	80089ba <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x12>
 80089b8:	e084      	b.n	8008ac4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>
 80089ba:	ad07      	add	r5, sp, #28
 80089bc:	2208      	movs	r2, #8
 80089be:	0028      	movs	r0, r5
 80089c0:	f00a f9d9 	bl	8012d76 <memcpy>
 80089c4:	4b41      	ldr	r3, [pc, #260]	@ (8008acc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80089c6:	0031      	movs	r1, r6
 80089c8:	6818      	ldr	r0, [r3, #0]
 80089ca:	f7fb fdc3 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 80089ce:	1d23      	adds	r3, r4, #4
 80089d0:	223e      	movs	r2, #62	@ 0x3e
 80089d2:	5e9b      	ldrsh	r3, [r3, r2]
 80089d4:	2b00      	cmp	r3, #0
 80089d6:	db10      	blt.n	80089fa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x52>
 80089d8:	1ca3      	adds	r3, r4, #2
 80089da:	223e      	movs	r2, #62	@ 0x3e
 80089dc:	5e9b      	ldrsh	r3, [r3, r2]
 80089de:	2b00      	cmp	r3, #0
 80089e0:	db0b      	blt.n	80089fa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x52>
 80089e2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80089e4:	4298      	cmp	r0, r3
 80089e6:	d108      	bne.n	80089fa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x52>
 80089e8:	a90b      	add	r1, sp, #44	@ 0x2c
 80089ea:	0023      	movs	r3, r4
 80089ec:	000a      	movs	r2, r1
 80089ee:	333c      	adds	r3, #60	@ 0x3c
 80089f0:	cb41      	ldmia	r3!, {r0, r6}
 80089f2:	c241      	stmia	r2!, {r0, r6}
 80089f4:	0028      	movs	r0, r5
 80089f6:	f7fe fc11 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 80089fa:	2204      	movs	r2, #4
 80089fc:	5eab      	ldrsh	r3, [r5, r2]
 80089fe:	2b00      	cmp	r3, #0
 8008a00:	dd60      	ble.n	8008ac4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>
 8008a02:	2206      	movs	r2, #6
 8008a04:	5eab      	ldrsh	r3, [r5, r2]
 8008a06:	2b00      	cmp	r3, #0
 8008a08:	dd5c      	ble.n	8008ac4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>
 8008a0a:	4d31      	ldr	r5, [pc, #196]	@ (8008ad0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8008a0c:	8da3      	ldrh	r3, [r4, #44]	@ 0x2c
 8008a0e:	682a      	ldr	r2, [r5, #0]
 8008a10:	005b      	lsls	r3, r3, #1
 8008a12:	5c9b      	ldrb	r3, [r3, r2]
 8008a14:	4a2f      	ldr	r2, [pc, #188]	@ (8008ad4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x12c>)
 8008a16:	009b      	lsls	r3, r3, #2
 8008a18:	6812      	ldr	r2, [r2, #0]
 8008a1a:	589e      	ldr	r6, [r3, r2]
 8008a1c:	2e00      	cmp	r6, #0
 8008a1e:	d051      	beq.n	8008ac4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>
 8008a20:	0023      	movs	r3, r4
 8008a22:	3336      	adds	r3, #54	@ 0x36
 8008a24:	781f      	ldrb	r7, [r3, #0]
 8008a26:	6823      	ldr	r3, [r4, #0]
 8008a28:	0020      	movs	r0, r4
 8008a2a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008a2c:	4798      	blx	r3
 8008a2e:	2334      	movs	r3, #52	@ 0x34
 8008a30:	5ee1      	ldrsh	r1, [r4, r3]
 8008a32:	0023      	movs	r3, r4
 8008a34:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8008a36:	3338      	adds	r3, #56	@ 0x38
 8008a38:	4684      	mov	ip, r0
 8008a3a:	7818      	ldrb	r0, [r3, #0]
 8008a3c:	682b      	ldr	r3, [r5, #0]
 8008a3e:	0052      	lsls	r2, r2, #1
 8008a40:	189b      	adds	r3, r3, r2
 8008a42:	0022      	movs	r2, r4
 8008a44:	3237      	adds	r2, #55	@ 0x37
 8008a46:	7812      	ldrb	r2, [r2, #0]
 8008a48:	785b      	ldrb	r3, [r3, #1]
 8008a4a:	9205      	str	r2, [sp, #20]
 8008a4c:	0022      	movs	r2, r4
 8008a4e:	3239      	adds	r2, #57	@ 0x39
 8008a50:	7812      	ldrb	r2, [r2, #0]
 8008a52:	960b      	str	r6, [sp, #44]	@ 0x2c
 8008a54:	4666      	mov	r6, ip
 8008a56:	071b      	lsls	r3, r3, #28
 8008a58:	ad0b      	add	r5, sp, #44	@ 0x2c
 8008a5a:	0f9b      	lsrs	r3, r3, #30
 8008a5c:	716b      	strb	r3, [r5, #5]
 8008a5e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008a60:	712e      	strb	r6, [r5, #4]
 8008a62:	71a8      	strb	r0, [r5, #6]
 8008a64:	930d      	str	r3, [sp, #52]	@ 0x34
 8008a66:	9b05      	ldr	r3, [sp, #20]
 8008a68:	742a      	strb	r2, [r5, #16]
 8008a6a:	73eb      	strb	r3, [r5, #15]
 8008a6c:	4b1a      	ldr	r3, [pc, #104]	@ (8008ad8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x130>)
 8008a6e:	81a9      	strh	r1, [r5, #12]
 8008a70:	681b      	ldr	r3, [r3, #0]
 8008a72:	73af      	strb	r7, [r5, #14]
 8008a74:	001a      	movs	r2, r3
 8008a76:	3258      	adds	r2, #88	@ 0x58
 8008a78:	7812      	ldrb	r2, [r2, #0]
 8008a7a:	2a00      	cmp	r2, #0
 8008a7c:	d002      	beq.n	8008a84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>
 8008a7e:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8008a80:	2e00      	cmp	r6, #0
 8008a82:	d100      	bne.n	8008a86 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xde>
 8008a84:	689e      	ldr	r6, [r3, #8]
 8008a86:	0021      	movs	r1, r4
 8008a88:	a809      	add	r0, sp, #36	@ 0x24
 8008a8a:	f003 fcb4 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008a8e:	4b0f      	ldr	r3, [pc, #60]	@ (8008acc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8008a90:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8008a92:	6818      	ldr	r0, [r3, #0]
 8008a94:	f7fb fd5e 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 8008a98:	6823      	ldr	r3, [r4, #0]
 8008a9a:	9005      	str	r0, [sp, #20]
 8008a9c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008a9e:	0020      	movs	r0, r4
 8008aa0:	4798      	blx	r3
 8008aa2:	6823      	ldr	r3, [r4, #0]
 8008aa4:	0007      	movs	r7, r0
 8008aa6:	3304      	adds	r3, #4
 8008aa8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008aaa:	0020      	movs	r0, r4
 8008aac:	4798      	blx	r3
 8008aae:	9b05      	ldr	r3, [sp, #20]
 8008ab0:	9003      	str	r0, [sp, #12]
 8008ab2:	9301      	str	r3, [sp, #4]
 8008ab4:	9702      	str	r7, [sp, #8]
 8008ab6:	9500      	str	r5, [sp, #0]
 8008ab8:	ab07      	add	r3, sp, #28
 8008aba:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8008abc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008abe:	0030      	movs	r0, r6
 8008ac0:	f7fb fcfa 	bl	80044b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8008ac4:	b011      	add	sp, #68	@ 0x44
 8008ac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ac8:	200035cc 	.word	0x200035cc
 8008acc:	200035d4 	.word	0x200035d4
 8008ad0:	200035c8 	.word	0x200035c8
 8008ad4:	200035d0 	.word	0x200035d0
 8008ad8:	20003578 	.word	0x20003578

08008adc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8008adc:	b570      	push	{r4, r5, r6, lr}
 8008ade:	0004      	movs	r4, r0
 8008ae0:	0015      	movs	r5, r2
 8008ae2:	6803      	ldr	r3, [r0, #0]
 8008ae4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008ae6:	4798      	blx	r3
 8008ae8:	6823      	ldr	r3, [r4, #0]
 8008aea:	0029      	movs	r1, r5
 8008aec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008aee:	0020      	movs	r0, r4
 8008af0:	4798      	blx	r3
 8008af2:	bd70      	pop	{r4, r5, r6, pc}

08008af4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8008af4:	b570      	push	{r4, r5, r6, lr}
 8008af6:	4b0f      	ldr	r3, [pc, #60]	@ (8008b34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x40>)
 8008af8:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8008afa:	881b      	ldrh	r3, [r3, #0]
 8008afc:	0004      	movs	r4, r0
 8008afe:	429a      	cmp	r2, r3
 8008b00:	d215      	bcs.n	8008b2e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3a>
 8008b02:	6803      	ldr	r3, [r0, #0]
 8008b04:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8008b06:	4798      	blx	r3
 8008b08:	6823      	ldr	r3, [r4, #0]
 8008b0a:	0005      	movs	r5, r0
 8008b0c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008b0e:	0020      	movs	r0, r4
 8008b10:	4798      	blx	r3
 8008b12:	0023      	movs	r3, r4
 8008b14:	3338      	adds	r3, #56	@ 0x38
 8008b16:	781a      	ldrb	r2, [r3, #0]
 8008b18:	2302      	movs	r3, #2
 8008b1a:	0001      	movs	r1, r0
 8008b1c:	439a      	bics	r2, r3
 8008b1e:	b22d      	sxth	r5, r5
 8008b20:	2a00      	cmp	r2, #0
 8008b22:	d105      	bne.n	8008b30 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 8008b24:	0002      	movs	r2, r0
 8008b26:	0029      	movs	r1, r5
 8008b28:	0020      	movs	r0, r4
 8008b2a:	f7ff ffd7 	bl	8008adc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8008b2e:	bd70      	pop	{r4, r5, r6, pc}
 8008b30:	002a      	movs	r2, r5
 8008b32:	e7f9      	b.n	8008b28 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x34>
 8008b34:	200035cc 	.word	0x200035cc

08008b38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8008b38:	b530      	push	{r4, r5, lr}
 8008b3a:	888b      	ldrh	r3, [r1, #4]
 8008b3c:	b085      	sub	sp, #20
 8008b3e:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8008b40:	2208      	movs	r2, #8
 8008b42:	5e83      	ldrsh	r3, [r0, r2]
 8008b44:	0004      	movs	r4, r0
 8008b46:	2b00      	cmp	r3, #0
 8008b48:	d105      	bne.n	8008b56 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1e>
 8008b4a:	220a      	movs	r2, #10
 8008b4c:	5e83      	ldrsh	r3, [r0, r2]
 8008b4e:	2b00      	cmp	r3, #0
 8008b50:	d101      	bne.n	8008b56 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1e>
 8008b52:	f7ff ffcf 	bl	8008af4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8008b56:	466d      	mov	r5, sp
 8008b58:	6823      	ldr	r3, [r4, #0]
 8008b5a:	0021      	movs	r1, r4
 8008b5c:	3308      	adds	r3, #8
 8008b5e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008b60:	0028      	movs	r0, r5
 8008b62:	4798      	blx	r3
 8008b64:	343c      	adds	r4, #60	@ 0x3c
 8008b66:	cd0e      	ldmia	r5!, {r1, r2, r3}
 8008b68:	c40e      	stmia	r4!, {r1, r2, r3}
 8008b6a:	b005      	add	sp, #20
 8008b6c:	bd30      	pop	{r4, r5, pc}

08008b6e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8008b6e:	2300      	movs	r3, #0
 8008b70:	8003      	strh	r3, [r0, #0]
 8008b72:	8043      	strh	r3, [r0, #2]
 8008b74:	8083      	strh	r3, [r0, #4]
 8008b76:	80c3      	strh	r3, [r0, #6]
 8008b78:	1dcb      	adds	r3, r1, #7
 8008b7a:	7fdb      	ldrb	r3, [r3, #31]
 8008b7c:	2bff      	cmp	r3, #255	@ 0xff
 8008b7e:	d103      	bne.n	8008b88 <_ZNK8touchgfx3Box12getSolidRectEv+0x1a>
 8008b80:	890b      	ldrh	r3, [r1, #8]
 8008b82:	8083      	strh	r3, [r0, #4]
 8008b84:	894b      	ldrh	r3, [r1, #10]
 8008b86:	80c3      	strh	r3, [r0, #6]
 8008b88:	4770      	bx	lr
	...

08008b8c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8008b8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008b8e:	0004      	movs	r4, r0
 8008b90:	2208      	movs	r2, #8
 8008b92:	4668      	mov	r0, sp
 8008b94:	f00a f8ef 	bl	8012d76 <memcpy>
 8008b98:	6823      	ldr	r3, [r4, #0]
 8008b9a:	4669      	mov	r1, sp
 8008b9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008b9e:	0020      	movs	r0, r4
 8008ba0:	4798      	blx	r3
 8008ba2:	4b09      	ldr	r3, [pc, #36]	@ (8008bc8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x3c>)
 8008ba4:	681b      	ldr	r3, [r3, #0]
 8008ba6:	001a      	movs	r2, r3
 8008ba8:	3258      	adds	r2, #88	@ 0x58
 8008baa:	7812      	ldrb	r2, [r2, #0]
 8008bac:	2a00      	cmp	r2, #0
 8008bae:	d002      	beq.n	8008bb6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x2a>
 8008bb0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8008bb2:	2800      	cmp	r0, #0
 8008bb4:	d100      	bne.n	8008bb8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x2c>
 8008bb6:	6898      	ldr	r0, [r3, #8]
 8008bb8:	6802      	ldr	r2, [r0, #0]
 8008bba:	1de3      	adds	r3, r4, #7
 8008bbc:	6a15      	ldr	r5, [r2, #32]
 8008bbe:	7fdb      	ldrb	r3, [r3, #31]
 8008bc0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008bc2:	4669      	mov	r1, sp
 8008bc4:	47a8      	blx	r5
 8008bc6:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
 8008bc8:	20003578 	.word	0x20003578

08008bcc <_ZN8touchgfx3BoxD1Ev>:
 8008bcc:	4770      	bx	lr

08008bce <_ZN8touchgfx3BoxD0Ev>:
 8008bce:	b510      	push	{r4, lr}
 8008bd0:	0004      	movs	r4, r0
 8008bd2:	212c      	movs	r1, #44	@ 0x2c
 8008bd4:	f008 ff97 	bl	8011b06 <_ZdlPvj>
 8008bd8:	0020      	movs	r0, r4
 8008bda:	bd10      	pop	{r4, pc}

08008bdc <_ZNK8touchgfx3Box17invalidateContentEv>:
 8008bdc:	b510      	push	{r4, lr}
 8008bde:	1dc3      	adds	r3, r0, #7
 8008be0:	7fdb      	ldrb	r3, [r3, #31]
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	d006      	beq.n	8008bf4 <_ZNK8touchgfx3Box17invalidateContentEv+0x18>
 8008be6:	1d83      	adds	r3, r0, #6
 8008be8:	7fdb      	ldrb	r3, [r3, #31]
 8008bea:	2b00      	cmp	r3, #0
 8008bec:	d002      	beq.n	8008bf4 <_ZNK8touchgfx3Box17invalidateContentEv+0x18>
 8008bee:	6803      	ldr	r3, [r0, #0]
 8008bf0:	695b      	ldr	r3, [r3, #20]
 8008bf2:	4798      	blx	r3
 8008bf4:	bd10      	pop	{r4, pc}
	...

08008bf8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8008bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008bfa:	4a30      	ldr	r2, [pc, #192]	@ (8008cbc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8008bfc:	b08f      	sub	sp, #60	@ 0x3c
 8008bfe:	9105      	str	r1, [sp, #20]
 8008c00:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8008c02:	8812      	ldrh	r2, [r2, #0]
 8008c04:	0004      	movs	r4, r0
 8008c06:	429a      	cmp	r2, r3
 8008c08:	d956      	bls.n	8008cb8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc0>
 8008c0a:	4a2d      	ldr	r2, [pc, #180]	@ (8008cc0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8008c0c:	005b      	lsls	r3, r3, #1
 8008c0e:	6812      	ldr	r2, [r2, #0]
 8008c10:	492c      	ldr	r1, [pc, #176]	@ (8008cc4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8008c12:	18d3      	adds	r3, r2, r3
 8008c14:	781a      	ldrb	r2, [r3, #0]
 8008c16:	6809      	ldr	r1, [r1, #0]
 8008c18:	0092      	lsls	r2, r2, #2
 8008c1a:	5851      	ldr	r1, [r2, r1]
 8008c1c:	2900      	cmp	r1, #0
 8008c1e:	d04b      	beq.n	8008cb8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc0>
 8008c20:	0002      	movs	r2, r0
 8008c22:	2034      	movs	r0, #52	@ 0x34
 8008c24:	5e25      	ldrsh	r5, [r4, r0]
 8008c26:	0020      	movs	r0, r4
 8008c28:	3038      	adds	r0, #56	@ 0x38
 8008c2a:	7800      	ldrb	r0, [r0, #0]
 8008c2c:	3236      	adds	r2, #54	@ 0x36
 8008c2e:	7817      	ldrb	r7, [r2, #0]
 8008c30:	9004      	str	r0, [sp, #16]
 8008c32:	0020      	movs	r0, r4
 8008c34:	3037      	adds	r0, #55	@ 0x37
 8008c36:	7800      	ldrb	r0, [r0, #0]
 8008c38:	785b      	ldrb	r3, [r3, #1]
 8008c3a:	4684      	mov	ip, r0
 8008c3c:	0020      	movs	r0, r4
 8008c3e:	079a      	lsls	r2, r3, #30
 8008c40:	071b      	lsls	r3, r3, #28
 8008c42:	ae09      	add	r6, sp, #36	@ 0x24
 8008c44:	0f9b      	lsrs	r3, r3, #30
 8008c46:	3039      	adds	r0, #57	@ 0x39
 8008c48:	7800      	ldrb	r0, [r0, #0]
 8008c4a:	7173      	strb	r3, [r6, #5]
 8008c4c:	9b04      	ldr	r3, [sp, #16]
 8008c4e:	0f92      	lsrs	r2, r2, #30
 8008c50:	71b3      	strb	r3, [r6, #6]
 8008c52:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008c54:	7132      	strb	r2, [r6, #4]
 8008c56:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008c58:	4663      	mov	r3, ip
 8008c5a:	73f3      	strb	r3, [r6, #15]
 8008c5c:	4b1a      	ldr	r3, [pc, #104]	@ (8008cc8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8008c5e:	9109      	str	r1, [sp, #36]	@ 0x24
 8008c60:	681b      	ldr	r3, [r3, #0]
 8008c62:	81b5      	strh	r5, [r6, #12]
 8008c64:	001a      	movs	r2, r3
 8008c66:	73b7      	strb	r7, [r6, #14]
 8008c68:	7430      	strb	r0, [r6, #16]
 8008c6a:	3258      	adds	r2, #88	@ 0x58
 8008c6c:	7812      	ldrb	r2, [r2, #0]
 8008c6e:	2a00      	cmp	r2, #0
 8008c70:	d002      	beq.n	8008c78 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x80>
 8008c72:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
 8008c74:	2d00      	cmp	r5, #0
 8008c76:	d100      	bne.n	8008c7a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x82>
 8008c78:	689d      	ldr	r5, [r3, #8]
 8008c7a:	0021      	movs	r1, r4
 8008c7c:	a807      	add	r0, sp, #28
 8008c7e:	f003 fbba 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008c82:	4b12      	ldr	r3, [pc, #72]	@ (8008ccc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8008c84:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8008c86:	6818      	ldr	r0, [r3, #0]
 8008c88:	f7fb fc64 	bl	8004554 <_ZNK8touchgfx5Texts7getTextEt>
 8008c8c:	6823      	ldr	r3, [r4, #0]
 8008c8e:	9004      	str	r0, [sp, #16]
 8008c90:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008c92:	0020      	movs	r0, r4
 8008c94:	4798      	blx	r3
 8008c96:	6823      	ldr	r3, [r4, #0]
 8008c98:	0007      	movs	r7, r0
 8008c9a:	3304      	adds	r3, #4
 8008c9c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008c9e:	0020      	movs	r0, r4
 8008ca0:	4798      	blx	r3
 8008ca2:	9b04      	ldr	r3, [sp, #16]
 8008ca4:	9003      	str	r0, [sp, #12]
 8008ca6:	9301      	str	r3, [sp, #4]
 8008ca8:	9702      	str	r7, [sp, #8]
 8008caa:	9600      	str	r6, [sp, #0]
 8008cac:	9b05      	ldr	r3, [sp, #20]
 8008cae:	9907      	ldr	r1, [sp, #28]
 8008cb0:	9a08      	ldr	r2, [sp, #32]
 8008cb2:	0028      	movs	r0, r5
 8008cb4:	f7fb fc00 	bl	80044b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8008cb8:	b00f      	add	sp, #60	@ 0x3c
 8008cba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008cbc:	200035cc 	.word	0x200035cc
 8008cc0:	200035c8 	.word	0x200035c8
 8008cc4:	200035d0 	.word	0x200035d0
 8008cc8:	20003578 	.word	0x20003578
 8008ccc:	200035d4 	.word	0x200035d4

08008cd0 <_ZN8touchgfx5ImageD1Ev>:
 8008cd0:	4770      	bx	lr

08008cd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8008cd2:	b570      	push	{r4, r5, r6, lr}
 8008cd4:	880b      	ldrh	r3, [r1, #0]
 8008cd6:	0004      	movs	r4, r0
 8008cd8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8008cda:	0008      	movs	r0, r1
 8008cdc:	000d      	movs	r5, r1
 8008cde:	f005 fcdf 	bl	800e6a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8008ce2:	0006      	movs	r6, r0
 8008ce4:	0028      	movs	r0, r5
 8008ce6:	f005 fd13 	bl	800e710 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8008cea:	0005      	movs	r5, r0
 8008cec:	6823      	ldr	r3, [r4, #0]
 8008cee:	0031      	movs	r1, r6
 8008cf0:	0020      	movs	r0, r4
 8008cf2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008cf4:	4798      	blx	r3
 8008cf6:	6823      	ldr	r3, [r4, #0]
 8008cf8:	0029      	movs	r1, r5
 8008cfa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008cfc:	0020      	movs	r0, r4
 8008cfe:	4798      	blx	r3
 8008d00:	bd70      	pop	{r4, r5, r6, pc}

08008d02 <_ZN8touchgfx5ImageD0Ev>:
 8008d02:	b510      	push	{r4, lr}
 8008d04:	0004      	movs	r4, r0
 8008d06:	212c      	movs	r1, #44	@ 0x2c
 8008d08:	f008 fefd 	bl	8011b06 <_ZdlPvj>
 8008d0c:	0020      	movs	r0, r4
 8008d0e:	bd10      	pop	{r4, pc}

08008d10 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8008d10:	000b      	movs	r3, r1
 8008d12:	b510      	push	{r4, lr}
 8008d14:	3328      	adds	r3, #40	@ 0x28
 8008d16:	781b      	ldrb	r3, [r3, #0]
 8008d18:	0004      	movs	r4, r0
 8008d1a:	2bff      	cmp	r3, #255	@ 0xff
 8008d1c:	d006      	beq.n	8008d2c <_ZNK8touchgfx5Image12getSolidRectEv+0x1c>
 8008d1e:	2300      	movs	r3, #0
 8008d20:	8003      	strh	r3, [r0, #0]
 8008d22:	8043      	strh	r3, [r0, #2]
 8008d24:	8083      	strh	r3, [r0, #4]
 8008d26:	80c3      	strh	r3, [r0, #6]
 8008d28:	0020      	movs	r0, r4
 8008d2a:	bd10      	pop	{r4, pc}
 8008d2c:	3126      	adds	r1, #38	@ 0x26
 8008d2e:	f005 fd27 	bl	800e780 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8008d32:	e7f9      	b.n	8008d28 <_ZNK8touchgfx5Image12getSolidRectEv+0x18>

08008d34 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8008d34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d36:	0005      	movs	r5, r0
 8008d38:	2400      	movs	r4, #0
 8008d3a:	002e      	movs	r6, r5
 8008d3c:	b08b      	sub	sp, #44	@ 0x2c
 8008d3e:	6803      	ldr	r3, [r0, #0]
 8008d40:	af06      	add	r7, sp, #24
 8008d42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008d44:	9104      	str	r1, [sp, #16]
 8008d46:	9406      	str	r4, [sp, #24]
 8008d48:	0039      	movs	r1, r7
 8008d4a:	9407      	str	r4, [sp, #28]
 8008d4c:	3626      	adds	r6, #38	@ 0x26
 8008d4e:	4798      	blx	r3
 8008d50:	0030      	movs	r0, r6
 8008d52:	f005 fca5 	bl	800e6a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8008d56:	9005      	str	r0, [sp, #20]
 8008d58:	0030      	movs	r0, r6
 8008d5a:	f005 fcd9 	bl	800e710 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8008d5e:	9b05      	ldr	r3, [sp, #20]
 8008d60:	9408      	str	r4, [sp, #32]
 8008d62:	ac08      	add	r4, sp, #32
 8008d64:	80a3      	strh	r3, [r4, #4]
 8008d66:	80e0      	strh	r0, [r4, #6]
 8008d68:	9904      	ldr	r1, [sp, #16]
 8008d6a:	0020      	movs	r0, r4
 8008d6c:	f7fe fa56 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 8008d70:	2204      	movs	r2, #4
 8008d72:	5ea3      	ldrsh	r3, [r4, r2]
 8008d74:	2b00      	cmp	r3, #0
 8008d76:	dd1c      	ble.n	8008db2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7e>
 8008d78:	2206      	movs	r2, #6
 8008d7a:	5ea3      	ldrsh	r3, [r4, r2]
 8008d7c:	2b00      	cmp	r3, #0
 8008d7e:	dd18      	ble.n	8008db2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7e>
 8008d80:	4b0d      	ldr	r3, [pc, #52]	@ (8008db8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x84>)
 8008d82:	681b      	ldr	r3, [r3, #0]
 8008d84:	001a      	movs	r2, r3
 8008d86:	3258      	adds	r2, #88	@ 0x58
 8008d88:	7812      	ldrb	r2, [r2, #0]
 8008d8a:	2a00      	cmp	r2, #0
 8008d8c:	d002      	beq.n	8008d94 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x60>
 8008d8e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8008d90:	2800      	cmp	r0, #0
 8008d92:	d100      	bne.n	8008d96 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x62>
 8008d94:	6898      	ldr	r0, [r3, #8]
 8008d96:	2202      	movs	r2, #2
 8008d98:	5ebb      	ldrsh	r3, [r7, r2]
 8008d9a:	2100      	movs	r1, #0
 8008d9c:	5e7a      	ldrsh	r2, [r7, r1]
 8008d9e:	2701      	movs	r7, #1
 8008da0:	6801      	ldr	r1, [r0, #0]
 8008da2:	3528      	adds	r5, #40	@ 0x28
 8008da4:	9702      	str	r7, [sp, #8]
 8008da6:	782d      	ldrb	r5, [r5, #0]
 8008da8:	9400      	str	r4, [sp, #0]
 8008daa:	9501      	str	r5, [sp, #4]
 8008dac:	688c      	ldr	r4, [r1, #8]
 8008dae:	0031      	movs	r1, r6
 8008db0:	47a0      	blx	r4
 8008db2:	b00b      	add	sp, #44	@ 0x2c
 8008db4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008db6:	46c0      	nop			@ (mov r8, r8)
 8008db8:	20003578 	.word	0x20003578

08008dbc <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi>:
 8008dbc:	005b      	lsls	r3, r3, #1
 8008dbe:	18cb      	adds	r3, r1, r3
 8008dc0:	2a00      	cmp	r2, #0
 8008dc2:	d006      	beq.n	8008dd2 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0x16>
 8008dc4:	8fc2      	ldrh	r2, [r0, #62]	@ 0x3e
 8008dc6:	0008      	movs	r0, r1
 8008dc8:	4298      	cmp	r0, r3
 8008dca:	d204      	bcs.n	8008dd6 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0x1a>
 8008dcc:	8002      	strh	r2, [r0, #0]
 8008dce:	3002      	adds	r0, #2
 8008dd0:	e7fa      	b.n	8008dc8 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0xc>
 8008dd2:	3002      	adds	r0, #2
 8008dd4:	e7f6      	b.n	8008dc4 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0x8>
 8008dd6:	4770      	bx	lr

08008dd8 <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi>:
 8008dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008dda:	005b      	lsls	r3, r3, #1
 8008ddc:	b085      	sub	sp, #20
 8008dde:	18cb      	adds	r3, r1, r3
 8008de0:	9303      	str	r3, [sp, #12]
 8008de2:	2a00      	cmp	r2, #0
 8008de4:	d047      	beq.n	8008e76 <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0x9e>
 8008de6:	1d03      	adds	r3, r0, #4
 8008de8:	8fdf      	ldrh	r7, [r3, #62]	@ 0x3e
 8008dea:	3304      	adds	r3, #4
 8008dec:	8fde      	ldrh	r6, [r3, #62]	@ 0x3e
 8008dee:	3342      	adds	r3, #66	@ 0x42
 8008df0:	881b      	ldrh	r3, [r3, #0]
 8008df2:	9301      	str	r3, [sp, #4]
 8008df4:	9b03      	ldr	r3, [sp, #12]
 8008df6:	4299      	cmp	r1, r3
 8008df8:	d243      	bcs.n	8008e82 <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0xaa>
 8008dfa:	2207      	movs	r2, #7
 8008dfc:	2503      	movs	r5, #3
 8008dfe:	880c      	ldrh	r4, [r1, #0]
 8008e00:	1223      	asrs	r3, r4, #8
 8008e02:	4393      	bics	r3, r2
 8008e04:	10e2      	asrs	r2, r4, #3
 8008e06:	43aa      	bics	r2, r5
 8008e08:	b2d2      	uxtb	r2, r2
 8008e0a:	4694      	mov	ip, r2
 8008e0c:	0002      	movs	r2, r0
 8008e0e:	3255      	adds	r2, #85	@ 0x55
 8008e10:	40ac      	lsls	r4, r5
 8008e12:	7815      	ldrb	r5, [r2, #0]
 8008e14:	115a      	asrs	r2, r3, #5
 8008e16:	431a      	orrs	r2, r3
 8008e18:	436a      	muls	r2, r5
 8008e1a:	18ba      	adds	r2, r7, r2
 8008e1c:	b293      	uxth	r3, r2
 8008e1e:	9302      	str	r3, [sp, #8]
 8008e20:	4663      	mov	r3, ip
 8008e22:	4662      	mov	r2, ip
 8008e24:	b2e4      	uxtb	r4, r4
 8008e26:	119b      	asrs	r3, r3, #6
 8008e28:	4313      	orrs	r3, r2
 8008e2a:	1162      	asrs	r2, r4, #5
 8008e2c:	4314      	orrs	r4, r2
 8008e2e:	436c      	muls	r4, r5
 8008e30:	9a01      	ldr	r2, [sp, #4]
 8008e32:	436b      	muls	r3, r5
 8008e34:	1914      	adds	r4, r2, r4
 8008e36:	9a02      	ldr	r2, [sp, #8]
 8008e38:	b2a5      	uxth	r5, r4
 8008e3a:	1c54      	adds	r4, r2, #1
 8008e3c:	1212      	asrs	r2, r2, #8
 8008e3e:	18a4      	adds	r4, r4, r2
 8008e40:	22ff      	movs	r2, #255	@ 0xff
 8008e42:	0212      	lsls	r2, r2, #8
 8008e44:	4014      	ands	r4, r2
 8008e46:	18f3      	adds	r3, r6, r3
 8008e48:	1c6a      	adds	r2, r5, #1
 8008e4a:	122d      	asrs	r5, r5, #8
 8008e4c:	b29b      	uxth	r3, r3
 8008e4e:	1955      	adds	r5, r2, r5
 8008e50:	0ae4      	lsrs	r4, r4, #11
 8008e52:	1c5a      	adds	r2, r3, #1
 8008e54:	042d      	lsls	r5, r5, #16
 8008e56:	121b      	asrs	r3, r3, #8
 8008e58:	0eed      	lsrs	r5, r5, #27
 8008e5a:	18d3      	adds	r3, r2, r3
 8008e5c:	02e4      	lsls	r4, r4, #11
 8008e5e:	22ff      	movs	r2, #255	@ 0xff
 8008e60:	432c      	orrs	r4, r5
 8008e62:	25fc      	movs	r5, #252	@ 0xfc
 8008e64:	095b      	lsrs	r3, r3, #5
 8008e66:	00d2      	lsls	r2, r2, #3
 8008e68:	4013      	ands	r3, r2
 8008e6a:	00ed      	lsls	r5, r5, #3
 8008e6c:	402b      	ands	r3, r5
 8008e6e:	431c      	orrs	r4, r3
 8008e70:	800c      	strh	r4, [r1, #0]
 8008e72:	3102      	adds	r1, #2
 8008e74:	e7be      	b.n	8008df4 <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0x1c>
 8008e76:	1d83      	adds	r3, r0, #6
 8008e78:	8fdf      	ldrh	r7, [r3, #62]	@ 0x3e
 8008e7a:	3342      	adds	r3, #66	@ 0x42
 8008e7c:	881e      	ldrh	r6, [r3, #0]
 8008e7e:	3304      	adds	r3, #4
 8008e80:	e7b6      	b.n	8008df0 <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0x18>
 8008e82:	0008      	movs	r0, r1
 8008e84:	b005      	add	sp, #20
 8008e86:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008e88 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi>:
 8008e88:	b530      	push	{r4, r5, lr}
 8008e8a:	2403      	movs	r4, #3
 8008e8c:	4363      	muls	r3, r4
 8008e8e:	18cb      	adds	r3, r1, r3
 8008e90:	2a00      	cmp	r2, #0
 8008e92:	d00f      	beq.n	8008eb4 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x2c>
 8008e94:	0002      	movs	r2, r0
 8008e96:	0004      	movs	r4, r0
 8008e98:	324e      	adds	r2, #78	@ 0x4e
 8008e9a:	344f      	adds	r4, #79	@ 0x4f
 8008e9c:	7812      	ldrb	r2, [r2, #0]
 8008e9e:	7824      	ldrb	r4, [r4, #0]
 8008ea0:	3050      	adds	r0, #80	@ 0x50
 8008ea2:	7805      	ldrb	r5, [r0, #0]
 8008ea4:	0008      	movs	r0, r1
 8008ea6:	4298      	cmp	r0, r3
 8008ea8:	d20c      	bcs.n	8008ec4 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x3c>
 8008eaa:	7005      	strb	r5, [r0, #0]
 8008eac:	7044      	strb	r4, [r0, #1]
 8008eae:	7082      	strb	r2, [r0, #2]
 8008eb0:	3003      	adds	r0, #3
 8008eb2:	e7f8      	b.n	8008ea6 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x1e>
 8008eb4:	0002      	movs	r2, r0
 8008eb6:	0004      	movs	r4, r0
 8008eb8:	3251      	adds	r2, #81	@ 0x51
 8008eba:	3452      	adds	r4, #82	@ 0x52
 8008ebc:	7812      	ldrb	r2, [r2, #0]
 8008ebe:	7824      	ldrb	r4, [r4, #0]
 8008ec0:	3053      	adds	r0, #83	@ 0x53
 8008ec2:	e7ee      	b.n	8008ea2 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x1a>
 8008ec4:	bd30      	pop	{r4, r5, pc}

08008ec6 <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi>:
 8008ec6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ec8:	2403      	movs	r4, #3
 8008eca:	4363      	muls	r3, r4
 8008ecc:	18cb      	adds	r3, r1, r3
 8008ece:	2a00      	cmp	r2, #0
 8008ed0:	d028      	beq.n	8008f24 <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x5e>
 8008ed2:	1d02      	adds	r2, r0, #4
 8008ed4:	8fd4      	ldrh	r4, [r2, #62]	@ 0x3e
 8008ed6:	3204      	adds	r2, #4
 8008ed8:	8fd5      	ldrh	r5, [r2, #62]	@ 0x3e
 8008eda:	3242      	adds	r2, #66	@ 0x42
 8008edc:	8816      	ldrh	r6, [r2, #0]
 8008ede:	3055      	adds	r0, #85	@ 0x55
 8008ee0:	4299      	cmp	r1, r3
 8008ee2:	d225      	bcs.n	8008f30 <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x6a>
 8008ee4:	7807      	ldrb	r7, [r0, #0]
 8008ee6:	780a      	ldrb	r2, [r1, #0]
 8008ee8:	437a      	muls	r2, r7
 8008eea:	18b2      	adds	r2, r6, r2
 8008eec:	b292      	uxth	r2, r2
 8008eee:	1c57      	adds	r7, r2, #1
 8008ef0:	1212      	asrs	r2, r2, #8
 8008ef2:	18ba      	adds	r2, r7, r2
 8008ef4:	1212      	asrs	r2, r2, #8
 8008ef6:	700a      	strb	r2, [r1, #0]
 8008ef8:	7807      	ldrb	r7, [r0, #0]
 8008efa:	784a      	ldrb	r2, [r1, #1]
 8008efc:	437a      	muls	r2, r7
 8008efe:	18aa      	adds	r2, r5, r2
 8008f00:	b292      	uxth	r2, r2
 8008f02:	1c57      	adds	r7, r2, #1
 8008f04:	1212      	asrs	r2, r2, #8
 8008f06:	18ba      	adds	r2, r7, r2
 8008f08:	1212      	asrs	r2, r2, #8
 8008f0a:	704a      	strb	r2, [r1, #1]
 8008f0c:	7807      	ldrb	r7, [r0, #0]
 8008f0e:	788a      	ldrb	r2, [r1, #2]
 8008f10:	437a      	muls	r2, r7
 8008f12:	18a2      	adds	r2, r4, r2
 8008f14:	b292      	uxth	r2, r2
 8008f16:	1217      	asrs	r7, r2, #8
 8008f18:	3201      	adds	r2, #1
 8008f1a:	18ba      	adds	r2, r7, r2
 8008f1c:	1212      	asrs	r2, r2, #8
 8008f1e:	708a      	strb	r2, [r1, #2]
 8008f20:	3103      	adds	r1, #3
 8008f22:	e7dd      	b.n	8008ee0 <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x1a>
 8008f24:	1d82      	adds	r2, r0, #6
 8008f26:	8fd4      	ldrh	r4, [r2, #62]	@ 0x3e
 8008f28:	3242      	adds	r2, #66	@ 0x42
 8008f2a:	8815      	ldrh	r5, [r2, #0]
 8008f2c:	8896      	ldrh	r6, [r2, #4]
 8008f2e:	e7d6      	b.n	8008ede <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x18>
 8008f30:	0008      	movs	r0, r1
 8008f32:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008f34 <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi>:
 8008f34:	009b      	lsls	r3, r3, #2
 8008f36:	b530      	push	{r4, r5, lr}
 8008f38:	18cb      	adds	r3, r1, r3
 8008f3a:	2a00      	cmp	r2, #0
 8008f3c:	d011      	beq.n	8008f62 <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x2e>
 8008f3e:	0002      	movs	r2, r0
 8008f40:	0004      	movs	r4, r0
 8008f42:	324e      	adds	r2, #78	@ 0x4e
 8008f44:	344f      	adds	r4, #79	@ 0x4f
 8008f46:	7812      	ldrb	r2, [r2, #0]
 8008f48:	7824      	ldrb	r4, [r4, #0]
 8008f4a:	3050      	adds	r0, #80	@ 0x50
 8008f4c:	7805      	ldrb	r5, [r0, #0]
 8008f4e:	0008      	movs	r0, r1
 8008f50:	21ff      	movs	r1, #255	@ 0xff
 8008f52:	4298      	cmp	r0, r3
 8008f54:	d20d      	bcs.n	8008f72 <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x3e>
 8008f56:	7005      	strb	r5, [r0, #0]
 8008f58:	7044      	strb	r4, [r0, #1]
 8008f5a:	7082      	strb	r2, [r0, #2]
 8008f5c:	70c1      	strb	r1, [r0, #3]
 8008f5e:	3004      	adds	r0, #4
 8008f60:	e7f7      	b.n	8008f52 <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x1e>
 8008f62:	0002      	movs	r2, r0
 8008f64:	0004      	movs	r4, r0
 8008f66:	3251      	adds	r2, #81	@ 0x51
 8008f68:	3452      	adds	r4, #82	@ 0x52
 8008f6a:	7812      	ldrb	r2, [r2, #0]
 8008f6c:	7824      	ldrb	r4, [r4, #0]
 8008f6e:	3053      	adds	r0, #83	@ 0x53
 8008f70:	e7ec      	b.n	8008f4c <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x18>
 8008f72:	bd30      	pop	{r4, r5, pc}

08008f74 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi>:
 8008f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f76:	009b      	lsls	r3, r3, #2
 8008f78:	b08b      	sub	sp, #44	@ 0x2c
 8008f7a:	18cb      	adds	r3, r1, r3
 8008f7c:	0005      	movs	r5, r0
 8008f7e:	9207      	str	r2, [sp, #28]
 8008f80:	9308      	str	r3, [sp, #32]
 8008f82:	2a00      	cmp	r2, #0
 8008f84:	d02b      	beq.n	8008fde <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x6a>
 8008f86:	1d03      	adds	r3, r0, #4
 8008f88:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008f8a:	9305      	str	r3, [sp, #20]
 8008f8c:	0003      	movs	r3, r0
 8008f8e:	3308      	adds	r3, #8
 8008f90:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008f92:	9306      	str	r3, [sp, #24]
 8008f94:	0003      	movs	r3, r0
 8008f96:	334a      	adds	r3, #74	@ 0x4a
 8008f98:	881b      	ldrh	r3, [r3, #0]
 8008f9a:	000c      	movs	r4, r1
 8008f9c:	9304      	str	r3, [sp, #16]
 8008f9e:	002b      	movs	r3, r5
 8008fa0:	3354      	adds	r3, #84	@ 0x54
 8008fa2:	9303      	str	r3, [sp, #12]
 8008fa4:	3b01      	subs	r3, #1
 8008fa6:	9309      	str	r3, [sp, #36]	@ 0x24
 8008fa8:	9b08      	ldr	r3, [sp, #32]
 8008faa:	429c      	cmp	r4, r3
 8008fac:	d265      	bcs.n	800907a <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x106>
 8008fae:	6823      	ldr	r3, [r4, #0]
 8008fb0:	9301      	str	r3, [sp, #4]
 8008fb2:	0e1b      	lsrs	r3, r3, #24
 8008fb4:	d127      	bne.n	8009006 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x92>
 8008fb6:	9b07      	ldr	r3, [sp, #28]
 8008fb8:	2b00      	cmp	r3, #0
 8008fba:	d01a      	beq.n	8008ff2 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x7e>
 8008fbc:	002b      	movs	r3, r5
 8008fbe:	3350      	adds	r3, #80	@ 0x50
 8008fc0:	781b      	ldrb	r3, [r3, #0]
 8008fc2:	7023      	strb	r3, [r4, #0]
 8008fc4:	002b      	movs	r3, r5
 8008fc6:	334f      	adds	r3, #79	@ 0x4f
 8008fc8:	781b      	ldrb	r3, [r3, #0]
 8008fca:	7063      	strb	r3, [r4, #1]
 8008fcc:	002b      	movs	r3, r5
 8008fce:	334e      	adds	r3, #78	@ 0x4e
 8008fd0:	781b      	ldrb	r3, [r3, #0]
 8008fd2:	70a3      	strb	r3, [r4, #2]
 8008fd4:	9b03      	ldr	r3, [sp, #12]
 8008fd6:	781b      	ldrb	r3, [r3, #0]
 8008fd8:	70e3      	strb	r3, [r4, #3]
 8008fda:	3404      	adds	r4, #4
 8008fdc:	e7e4      	b.n	8008fa8 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x34>
 8008fde:	1d83      	adds	r3, r0, #6
 8008fe0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008fe2:	9305      	str	r3, [sp, #20]
 8008fe4:	0003      	movs	r3, r0
 8008fe6:	3348      	adds	r3, #72	@ 0x48
 8008fe8:	881b      	ldrh	r3, [r3, #0]
 8008fea:	9306      	str	r3, [sp, #24]
 8008fec:	0003      	movs	r3, r0
 8008fee:	334c      	adds	r3, #76	@ 0x4c
 8008ff0:	e7d2      	b.n	8008f98 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x24>
 8008ff2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008ff4:	781b      	ldrb	r3, [r3, #0]
 8008ff6:	7023      	strb	r3, [r4, #0]
 8008ff8:	002b      	movs	r3, r5
 8008ffa:	3352      	adds	r3, #82	@ 0x52
 8008ffc:	781b      	ldrb	r3, [r3, #0]
 8008ffe:	7063      	strb	r3, [r4, #1]
 8009000:	002b      	movs	r3, r5
 8009002:	3351      	adds	r3, #81	@ 0x51
 8009004:	e7e4      	b.n	8008fd0 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x5c>
 8009006:	9a03      	ldr	r2, [sp, #12]
 8009008:	7816      	ldrb	r6, [r2, #0]
 800900a:	0032      	movs	r2, r6
 800900c:	435a      	muls	r2, r3
 800900e:	1c50      	adds	r0, r2, #1
 8009010:	1212      	asrs	r2, r2, #8
 8009012:	1880      	adds	r0, r0, r2
 8009014:	22ff      	movs	r2, #255	@ 0xff
 8009016:	1200      	asrs	r0, r0, #8
 8009018:	18f6      	adds	r6, r6, r3
 800901a:	1a1b      	subs	r3, r3, r0
 800901c:	9302      	str	r3, [sp, #8]
 800901e:	9b01      	ldr	r3, [sp, #4]
 8009020:	1a36      	subs	r6, r6, r0
 8009022:	0c18      	lsrs	r0, r3, #16
 8009024:	9b02      	ldr	r3, [sp, #8]
 8009026:	4010      	ands	r0, r2
 8009028:	4358      	muls	r0, r3
 800902a:	9b05      	ldr	r3, [sp, #20]
 800902c:	b2f6      	uxtb	r6, r6
 800902e:	18c0      	adds	r0, r0, r3
 8009030:	0031      	movs	r1, r6
 8009032:	f7f7 f897 	bl	8000164 <__udivsi3>
 8009036:	23ff      	movs	r3, #255	@ 0xff
 8009038:	0407      	lsls	r7, r0, #16
 800903a:	20ff      	movs	r0, #255	@ 0xff
 800903c:	041b      	lsls	r3, r3, #16
 800903e:	401f      	ands	r7, r3
 8009040:	9b01      	ldr	r3, [sp, #4]
 8009042:	0031      	movs	r1, r6
 8009044:	4018      	ands	r0, r3
 8009046:	9b02      	ldr	r3, [sp, #8]
 8009048:	4358      	muls	r0, r3
 800904a:	9b04      	ldr	r3, [sp, #16]
 800904c:	18c0      	adds	r0, r0, r3
 800904e:	f7f7 f889 	bl	8000164 <__udivsi3>
 8009052:	22ff      	movs	r2, #255	@ 0xff
 8009054:	0633      	lsls	r3, r6, #24
 8009056:	4010      	ands	r0, r2
 8009058:	4318      	orrs	r0, r3
 800905a:	9b01      	ldr	r3, [sp, #4]
 800905c:	4307      	orrs	r7, r0
 800905e:	0a18      	lsrs	r0, r3, #8
 8009060:	9b02      	ldr	r3, [sp, #8]
 8009062:	4010      	ands	r0, r2
 8009064:	4358      	muls	r0, r3
 8009066:	9b06      	ldr	r3, [sp, #24]
 8009068:	0031      	movs	r1, r6
 800906a:	18c0      	adds	r0, r0, r3
 800906c:	f7f7 f87a 	bl	8000164 <__udivsi3>
 8009070:	0600      	lsls	r0, r0, #24
 8009072:	0c00      	lsrs	r0, r0, #16
 8009074:	4307      	orrs	r7, r0
 8009076:	6027      	str	r7, [r4, #0]
 8009078:	e7af      	b.n	8008fda <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x66>
 800907a:	0020      	movs	r0, r4
 800907c:	b00b      	add	sp, #44	@ 0x2c
 800907e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009080 <_ZN8touchgfx6QRCodeD1Ev>:
 8009080:	4770      	bx	lr

08009082 <_ZN8touchgfx6QRCodeD0Ev>:
 8009082:	b510      	push	{r4, lr}
 8009084:	0004      	movs	r4, r0
 8009086:	2158      	movs	r1, #88	@ 0x58
 8009088:	f008 fd3d 	bl	8011b06 <_ZdlPvj>
 800908c:	0020      	movs	r0, r4
 800908e:	bd10      	pop	{r4, pc}

08009090 <_ZNK8touchgfx6QRCode12getSolidRectEv>:
 8009090:	000b      	movs	r3, r1
 8009092:	b510      	push	{r4, lr}
 8009094:	3354      	adds	r3, #84	@ 0x54
 8009096:	781b      	ldrb	r3, [r3, #0]
 8009098:	2bff      	cmp	r3, #255	@ 0xff
 800909a:	d10f      	bne.n	80090bc <_ZNK8touchgfx6QRCode12getSolidRectEv+0x2c>
 800909c:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 800909e:	2b00      	cmp	r3, #0
 80090a0:	d00c      	beq.n	80090bc <_ZNK8touchgfx6QRCode12getSolidRectEv+0x2c>
 80090a2:	781b      	ldrb	r3, [r3, #0]
 80090a4:	2b00      	cmp	r3, #0
 80090a6:	d009      	beq.n	80090bc <_ZNK8touchgfx6QRCode12getSolidRectEv+0x2c>
 80090a8:	2308      	movs	r3, #8
 80090aa:	5ecc      	ldrsh	r4, [r1, r3]
 80090ac:	230a      	movs	r3, #10
 80090ae:	5eca      	ldrsh	r2, [r1, r3]
 80090b0:	2300      	movs	r3, #0
 80090b2:	8084      	strh	r4, [r0, #4]
 80090b4:	8003      	strh	r3, [r0, #0]
 80090b6:	8043      	strh	r3, [r0, #2]
 80090b8:	80c2      	strh	r2, [r0, #6]
 80090ba:	bd10      	pop	{r4, pc}
 80090bc:	2300      	movs	r3, #0
 80090be:	8003      	strh	r3, [r0, #0]
 80090c0:	8043      	strh	r3, [r0, #2]
 80090c2:	8083      	strh	r3, [r0, #4]
 80090c4:	80c3      	strh	r3, [r0, #6]
 80090c6:	e7f8      	b.n	80090ba <_ZNK8touchgfx6QRCode12getSolidRectEv+0x2a>

080090c8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE>:
 80090c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090ca:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80090cc:	b08f      	sub	sp, #60	@ 0x3c
 80090ce:	781b      	ldrb	r3, [r3, #0]
 80090d0:	0007      	movs	r7, r0
 80090d2:	3b15      	subs	r3, #21
 80090d4:	9101      	str	r1, [sp, #4]
 80090d6:	2b9c      	cmp	r3, #156	@ 0x9c
 80090d8:	d900      	bls.n	80090dc <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x14>
 80090da:	e0f8      	b.n	80092ce <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x206>
 80090dc:	0004      	movs	r4, r0
 80090de:	3454      	adds	r4, #84	@ 0x54
 80090e0:	7823      	ldrb	r3, [r4, #0]
 80090e2:	2b00      	cmp	r3, #0
 80090e4:	d100      	bne.n	80090e8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x20>
 80090e6:	e0f2      	b.n	80092ce <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x206>
 80090e8:	2208      	movs	r2, #8
 80090ea:	a80a      	add	r0, sp, #40	@ 0x28
 80090ec:	f009 fe43 	bl	8012d76 <memcpy>
 80090f0:	683b      	ldr	r3, [r7, #0]
 80090f2:	a90a      	add	r1, sp, #40	@ 0x28
 80090f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80090f6:	0038      	movs	r0, r7
 80090f8:	4798      	blx	r3
 80090fa:	f7fe fc69 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 80090fe:	6803      	ldr	r3, [r0, #0]
 8009100:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009102:	4798      	blx	r3
 8009104:	2818      	cmp	r0, #24
 8009106:	d074      	beq.n	80091f2 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x12a>
 8009108:	2820      	cmp	r0, #32
 800910a:	d079      	beq.n	8009200 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x138>
 800910c:	2810      	cmp	r0, #16
 800910e:	d000      	beq.n	8009112 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x4a>
 8009110:	e0dd      	b.n	80092ce <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x206>
 8009112:	7823      	ldrb	r3, [r4, #0]
 8009114:	4a6f      	ldr	r2, [pc, #444]	@ (80092d4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x20c>)
 8009116:	9202      	str	r2, [sp, #8]
 8009118:	2bff      	cmp	r3, #255	@ 0xff
 800911a:	d101      	bne.n	8009120 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x58>
 800911c:	4b6e      	ldr	r3, [pc, #440]	@ (80092d8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x210>)
 800911e:	9302      	str	r3, [sp, #8]
 8009120:	10c4      	asrs	r4, r0, #3
 8009122:	f7fe fc55 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 8009126:	6803      	ldr	r3, [r0, #0]
 8009128:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800912a:	4798      	blx	r3
 800912c:	4b6b      	ldr	r3, [pc, #428]	@ (80092dc <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x214>)
 800912e:	9007      	str	r0, [sp, #28]
 8009130:	6818      	ldr	r0, [r3, #0]
 8009132:	6803      	ldr	r3, [r0, #0]
 8009134:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009136:	4798      	blx	r3
 8009138:	4b69      	ldr	r3, [pc, #420]	@ (80092e0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x218>)
 800913a:	0005      	movs	r5, r0
 800913c:	781b      	ldrb	r3, [r3, #0]
 800913e:	9305      	str	r3, [sp, #20]
 8009140:	2b01      	cmp	r3, #1
 8009142:	d16d      	bne.n	8009220 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x158>
 8009144:	ae0c      	add	r6, sp, #48	@ 0x30
 8009146:	2208      	movs	r2, #8
 8009148:	a90a      	add	r1, sp, #40	@ 0x28
 800914a:	0030      	movs	r0, r6
 800914c:	f009 fe13 	bl	8012d76 <memcpy>
 8009150:	0030      	movs	r0, r6
 8009152:	f001 fd97 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8009156:	2202      	movs	r2, #2
 8009158:	5eb3      	ldrsh	r3, [r6, r2]
 800915a:	4a62      	ldr	r2, [pc, #392]	@ (80092e4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x21c>)
 800915c:	8810      	ldrh	r0, [r2, #0]
 800915e:	4358      	muls	r0, r3
 8009160:	2200      	movs	r2, #0
 8009162:	5eb3      	ldrsh	r3, [r6, r2]
 8009164:	18c0      	adds	r0, r0, r3
 8009166:	4344      	muls	r4, r0
 8009168:	192b      	adds	r3, r5, r4
 800916a:	9304      	str	r3, [sp, #16]
 800916c:	2300      	movs	r3, #0
 800916e:	9303      	str	r3, [sp, #12]
 8009170:	9b05      	ldr	r3, [sp, #20]
 8009172:	9309      	str	r3, [sp, #36]	@ 0x24
 8009174:	9b01      	ldr	r3, [sp, #4]
 8009176:	2204      	movs	r2, #4
 8009178:	5e9b      	ldrsh	r3, [r3, r2]
 800917a:	9a03      	ldr	r2, [sp, #12]
 800917c:	4293      	cmp	r3, r2
 800917e:	dc00      	bgt.n	8009182 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0xba>
 8009180:	e0a0      	b.n	80092c4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1fc>
 8009182:	9a01      	ldr	r2, [sp, #4]
 8009184:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8009186:	8810      	ldrh	r0, [r2, #0]
 8009188:	18c0      	adds	r0, r0, r3
 800918a:	b200      	sxth	r0, r0
 800918c:	9b03      	ldr	r3, [sp, #12]
 800918e:	3801      	subs	r0, #1
 8009190:	1ac0      	subs	r0, r0, r3
 8009192:	f7f7 f871 	bl	8000278 <__divsi3>
 8009196:	9b01      	ldr	r3, [sp, #4]
 8009198:	9008      	str	r0, [sp, #32]
 800919a:	2402      	movs	r4, #2
 800919c:	5f1c      	ldrsh	r4, [r3, r4]
 800919e:	9b01      	ldr	r3, [sp, #4]
 80091a0:	2206      	movs	r2, #6
 80091a2:	5e9b      	ldrsh	r3, [r3, r2]
 80091a4:	191b      	adds	r3, r3, r4
 80091a6:	9306      	str	r3, [sp, #24]
 80091a8:	9b04      	ldr	r3, [sp, #16]
 80091aa:	9305      	str	r3, [sp, #20]
 80091ac:	9b06      	ldr	r3, [sp, #24]
 80091ae:	429c      	cmp	r4, r3
 80091b0:	da2d      	bge.n	800920e <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x146>
 80091b2:	6bbd      	ldr	r5, [r7, #56]	@ 0x38
 80091b4:	1b1b      	subs	r3, r3, r4
 80091b6:	0029      	movs	r1, r5
 80091b8:	0020      	movs	r0, r4
 80091ba:	001e      	movs	r6, r3
 80091bc:	f7f7 f942 	bl	8000444 <__aeabi_idivmod>
 80091c0:	1a6d      	subs	r5, r5, r1
 80091c2:	42b5      	cmp	r5, r6
 80091c4:	dd00      	ble.n	80091c8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x100>
 80091c6:	0035      	movs	r5, r6
 80091c8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80091ca:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80091cc:	4358      	muls	r0, r3
 80091ce:	9b08      	ldr	r3, [sp, #32]
 80091d0:	9905      	ldr	r1, [sp, #20]
 80091d2:	18c0      	adds	r0, r0, r3
 80091d4:	10c3      	asrs	r3, r0, #3
 80091d6:	18d3      	adds	r3, r2, r3
 80091d8:	785a      	ldrb	r2, [r3, #1]
 80091da:	2307      	movs	r3, #7
 80091dc:	4018      	ands	r0, r3
 80091de:	4102      	asrs	r2, r0
 80091e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80091e2:	0038      	movs	r0, r7
 80091e4:	401a      	ands	r2, r3
 80091e6:	9e02      	ldr	r6, [sp, #8]
 80091e8:	002b      	movs	r3, r5
 80091ea:	47b0      	blx	r6
 80091ec:	1964      	adds	r4, r4, r5
 80091ee:	9005      	str	r0, [sp, #20]
 80091f0:	e7dc      	b.n	80091ac <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0xe4>
 80091f2:	7823      	ldrb	r3, [r4, #0]
 80091f4:	4a3c      	ldr	r2, [pc, #240]	@ (80092e8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x220>)
 80091f6:	9202      	str	r2, [sp, #8]
 80091f8:	2bff      	cmp	r3, #255	@ 0xff
 80091fa:	d191      	bne.n	8009120 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x58>
 80091fc:	4b3b      	ldr	r3, [pc, #236]	@ (80092ec <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x224>)
 80091fe:	e78e      	b.n	800911e <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x56>
 8009200:	7823      	ldrb	r3, [r4, #0]
 8009202:	4a3b      	ldr	r2, [pc, #236]	@ (80092f0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x228>)
 8009204:	9202      	str	r2, [sp, #8]
 8009206:	2bff      	cmp	r3, #255	@ 0xff
 8009208:	d18a      	bne.n	8009120 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x58>
 800920a:	4b3a      	ldr	r3, [pc, #232]	@ (80092f4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x22c>)
 800920c:	e787      	b.n	800911e <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x56>
 800920e:	9a07      	ldr	r2, [sp, #28]
 8009210:	9b04      	ldr	r3, [sp, #16]
 8009212:	4694      	mov	ip, r2
 8009214:	4463      	add	r3, ip
 8009216:	9304      	str	r3, [sp, #16]
 8009218:	9b03      	ldr	r3, [sp, #12]
 800921a:	3301      	adds	r3, #1
 800921c:	9303      	str	r3, [sp, #12]
 800921e:	e7a9      	b.n	8009174 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0xac>
 8009220:	ab0a      	add	r3, sp, #40	@ 0x28
 8009222:	2202      	movs	r2, #2
 8009224:	5e9b      	ldrsh	r3, [r3, r2]
 8009226:	4a2f      	ldr	r2, [pc, #188]	@ (80092e4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x21c>)
 8009228:	8810      	ldrh	r0, [r2, #0]
 800922a:	4358      	muls	r0, r3
 800922c:	ab0a      	add	r3, sp, #40	@ 0x28
 800922e:	2200      	movs	r2, #0
 8009230:	5e9b      	ldrsh	r3, [r3, r2]
 8009232:	18c0      	adds	r0, r0, r3
 8009234:	4344      	muls	r4, r0
 8009236:	192b      	adds	r3, r5, r4
 8009238:	9304      	str	r3, [sp, #16]
 800923a:	2300      	movs	r3, #0
 800923c:	9303      	str	r3, [sp, #12]
 800923e:	ab0a      	add	r3, sp, #40	@ 0x28
 8009240:	2206      	movs	r2, #6
 8009242:	5e9b      	ldrsh	r3, [r3, r2]
 8009244:	9a03      	ldr	r2, [sp, #12]
 8009246:	4293      	cmp	r3, r2
 8009248:	dd3c      	ble.n	80092c4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1fc>
 800924a:	9b01      	ldr	r3, [sp, #4]
 800924c:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800924e:	2002      	movs	r0, #2
 8009250:	5e18      	ldrsh	r0, [r3, r0]
 8009252:	1880      	adds	r0, r0, r2
 8009254:	f7f7 f810 	bl	8000278 <__divsi3>
 8009258:	9b01      	ldr	r3, [sp, #4]
 800925a:	9008      	str	r0, [sp, #32]
 800925c:	2400      	movs	r4, #0
 800925e:	5f1c      	ldrsh	r4, [r3, r4]
 8009260:	9b01      	ldr	r3, [sp, #4]
 8009262:	2204      	movs	r2, #4
 8009264:	5e9b      	ldrsh	r3, [r3, r2]
 8009266:	191b      	adds	r3, r3, r4
 8009268:	9306      	str	r3, [sp, #24]
 800926a:	9b04      	ldr	r3, [sp, #16]
 800926c:	9305      	str	r3, [sp, #20]
 800926e:	9b06      	ldr	r3, [sp, #24]
 8009270:	429c      	cmp	r4, r3
 8009272:	da1f      	bge.n	80092b4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1ec>
 8009274:	6bbd      	ldr	r5, [r7, #56]	@ 0x38
 8009276:	1b1b      	subs	r3, r3, r4
 8009278:	0029      	movs	r1, r5
 800927a:	0020      	movs	r0, r4
 800927c:	001e      	movs	r6, r3
 800927e:	f7f7 f8e1 	bl	8000444 <__aeabi_idivmod>
 8009282:	1a6d      	subs	r5, r5, r1
 8009284:	42b5      	cmp	r5, r6
 8009286:	dd00      	ble.n	800928a <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1c2>
 8009288:	0035      	movs	r5, r6
 800928a:	9a08      	ldr	r2, [sp, #32]
 800928c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800928e:	9905      	ldr	r1, [sp, #20]
 8009290:	4353      	muls	r3, r2
 8009292:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8009294:	1818      	adds	r0, r3, r0
 8009296:	10c3      	asrs	r3, r0, #3
 8009298:	18d3      	adds	r3, r2, r3
 800929a:	785a      	ldrb	r2, [r3, #1]
 800929c:	2307      	movs	r3, #7
 800929e:	4018      	ands	r0, r3
 80092a0:	4102      	asrs	r2, r0
 80092a2:	3b06      	subs	r3, #6
 80092a4:	401a      	ands	r2, r3
 80092a6:	0038      	movs	r0, r7
 80092a8:	002b      	movs	r3, r5
 80092aa:	9e02      	ldr	r6, [sp, #8]
 80092ac:	47b0      	blx	r6
 80092ae:	1964      	adds	r4, r4, r5
 80092b0:	9005      	str	r0, [sp, #20]
 80092b2:	e7dc      	b.n	800926e <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1a6>
 80092b4:	9a07      	ldr	r2, [sp, #28]
 80092b6:	9b04      	ldr	r3, [sp, #16]
 80092b8:	4694      	mov	ip, r2
 80092ba:	4463      	add	r3, ip
 80092bc:	9304      	str	r3, [sp, #16]
 80092be:	9b03      	ldr	r3, [sp, #12]
 80092c0:	3301      	adds	r3, #1
 80092c2:	e7bb      	b.n	800923c <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x174>
 80092c4:	4b05      	ldr	r3, [pc, #20]	@ (80092dc <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x214>)
 80092c6:	6818      	ldr	r0, [r3, #0]
 80092c8:	6803      	ldr	r3, [r0, #0]
 80092ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80092cc:	4798      	blx	r3
 80092ce:	b00f      	add	sp, #60	@ 0x3c
 80092d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80092d2:	46c0      	nop			@ (mov r8, r8)
 80092d4:	08008dd9 	.word	0x08008dd9
 80092d8:	08008dbd 	.word	0x08008dbd
 80092dc:	20003578 	.word	0x20003578
 80092e0:	20003570 	.word	0x20003570
 80092e4:	20003572 	.word	0x20003572
 80092e8:	08008ec7 	.word	0x08008ec7
 80092ec:	08008e89 	.word	0x08008e89
 80092f0:	08008f75 	.word	0x08008f75
 80092f4:	08008f35 	.word	0x08008f35

080092f8 <_ZN8touchgfx6QRCodeC1Ev>:
 80092f8:	2300      	movs	r3, #0
 80092fa:	1d42      	adds	r2, r0, #5
 80092fc:	b510      	push	{r4, lr}
 80092fe:	8083      	strh	r3, [r0, #4]
 8009300:	80c3      	strh	r3, [r0, #6]
 8009302:	8103      	strh	r3, [r0, #8]
 8009304:	8143      	strh	r3, [r0, #10]
 8009306:	8183      	strh	r3, [r0, #12]
 8009308:	81c3      	strh	r3, [r0, #14]
 800930a:	8203      	strh	r3, [r0, #16]
 800930c:	8243      	strh	r3, [r0, #18]
 800930e:	6143      	str	r3, [r0, #20]
 8009310:	6183      	str	r3, [r0, #24]
 8009312:	61c3      	str	r3, [r0, #28]
 8009314:	8403      	strh	r3, [r0, #32]
 8009316:	8443      	strh	r3, [r0, #34]	@ 0x22
 8009318:	77d3      	strb	r3, [r2, #31]
 800931a:	2201      	movs	r2, #1
 800931c:	4913      	ldr	r1, [pc, #76]	@ (800936c <_ZN8touchgfx6QRCodeC1Ev+0x74>)
 800931e:	1d84      	adds	r4, r0, #6
 8009320:	3108      	adds	r1, #8
 8009322:	77e2      	strb	r2, [r4, #31]
 8009324:	6001      	str	r1, [r0, #0]
 8009326:	0001      	movs	r1, r0
 8009328:	3130      	adds	r1, #48	@ 0x30
 800932a:	6283      	str	r3, [r0, #40]	@ 0x28
 800932c:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800932e:	700a      	strb	r2, [r1, #0]
 8009330:	6382      	str	r2, [r0, #56]	@ 0x38
 8009332:	0002      	movs	r2, r0
 8009334:	323c      	adds	r2, #60	@ 0x3c
 8009336:	6343      	str	r3, [r0, #52]	@ 0x34
 8009338:	7013      	strb	r3, [r2, #0]
 800933a:	2201      	movs	r2, #1
 800933c:	1c81      	adds	r1, r0, #2
 800933e:	4252      	negs	r2, r2
 8009340:	87c3      	strh	r3, [r0, #62]	@ 0x3e
 8009342:	87ca      	strh	r2, [r1, #62]	@ 0x3e
 8009344:	1d01      	adds	r1, r0, #4
 8009346:	87cb      	strh	r3, [r1, #62]	@ 0x3e
 8009348:	4909      	ldr	r1, [pc, #36]	@ (8009370 <_ZN8touchgfx6QRCodeC1Ev+0x78>)
 800934a:	3402      	adds	r4, #2
 800934c:	87a1      	strh	r1, [r4, #60]	@ 0x3c
 800934e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009350:	3440      	adds	r4, #64	@ 0x40
 8009352:	8021      	strh	r1, [r4, #0]
 8009354:	80a1      	strh	r1, [r4, #4]
 8009356:	0001      	movs	r1, r0
 8009358:	314e      	adds	r1, #78	@ 0x4e
 800935a:	8063      	strh	r3, [r4, #2]
 800935c:	800b      	strh	r3, [r1, #0]
 800935e:	0003      	movs	r3, r0
 8009360:	4904      	ldr	r1, [pc, #16]	@ (8009374 <_ZN8touchgfx6QRCodeC1Ev+0x7c>)
 8009362:	3350      	adds	r3, #80	@ 0x50
 8009364:	8019      	strh	r1, [r3, #0]
 8009366:	805a      	strh	r2, [r3, #2]
 8009368:	711a      	strb	r2, [r3, #4]
 800936a:	bd10      	pop	{r4, pc}
 800936c:	080159d0 	.word	0x080159d0
 8009370:	fffffe01 	.word	0xfffffe01
 8009374:	ffffff00 	.word	0xffffff00

08009378 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc>:
 8009378:	b530      	push	{r4, r5, lr}
 800937a:	0004      	movs	r4, r0
 800937c:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800937e:	b085      	sub	sp, #20
 8009380:	000d      	movs	r5, r1
 8009382:	2800      	cmp	r0, #0
 8009384:	d014      	beq.n	80093b0 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc+0x38>
 8009386:	2000      	movs	r0, #0
 8009388:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800938a:	4283      	cmp	r3, r0
 800938c:	d010      	beq.n	80093b0 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc+0x38>
 800938e:	7018      	strb	r0, [r3, #0]
 8009390:	0023      	movs	r3, r4
 8009392:	2101      	movs	r1, #1
 8009394:	3330      	adds	r3, #48	@ 0x30
 8009396:	781a      	ldrb	r2, [r3, #0]
 8009398:	330c      	adds	r3, #12
 800939a:	781b      	ldrb	r3, [r3, #0]
 800939c:	9103      	str	r1, [sp, #12]
 800939e:	3902      	subs	r1, #2
 80093a0:	9102      	str	r1, [sp, #8]
 80093a2:	9201      	str	r2, [sp, #4]
 80093a4:	9200      	str	r2, [sp, #0]
 80093a6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80093a8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80093aa:	0028      	movs	r0, r5
 80093ac:	f008 fb34 	bl	8011a18 <qrcodegen_encodeText>
 80093b0:	b005      	add	sp, #20
 80093b2:	bd30      	pop	{r4, r5, pc}

080093b4 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>:
 80093b4:	b510      	push	{r4, lr}
 80093b6:	0004      	movs	r4, r0
 80093b8:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80093ba:	6b41      	ldr	r1, [r0, #52]	@ 0x34
 80093bc:	4359      	muls	r1, r3
 80093be:	6803      	ldr	r3, [r0, #0]
 80093c0:	b209      	sxth	r1, r1
 80093c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80093c4:	4798      	blx	r3
 80093c6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80093c8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80093ca:	0020      	movs	r0, r4
 80093cc:	4359      	muls	r1, r3
 80093ce:	6823      	ldr	r3, [r4, #0]
 80093d0:	b209      	sxth	r1, r1
 80093d2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80093d4:	4798      	blx	r3
 80093d6:	bd10      	pop	{r4, pc}

080093d8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80093d8:	b510      	push	{r4, lr}
 80093da:	6803      	ldr	r3, [r0, #0]
 80093dc:	000c      	movs	r4, r1
 80093de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80093e0:	4798      	blx	r3
 80093e2:	1b00      	subs	r0, r0, r4
 80093e4:	4243      	negs	r3, r0
 80093e6:	4158      	adcs	r0, r3
 80093e8:	b2c0      	uxtb	r0, r0
 80093ea:	bd10      	pop	{r4, pc}

080093ec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80093ec:	4b01      	ldr	r3, [pc, #4]	@ (80093f4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80093ee:	6019      	str	r1, [r3, #0]
 80093f0:	4770      	bx	lr
 80093f2:	46c0      	nop			@ (mov r8, r8)
 80093f4:	20003580 	.word	0x20003580

080093f8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80093f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093fa:	b09d      	sub	sp, #116	@ 0x74
 80093fc:	9308      	str	r3, [sp, #32]
 80093fe:	ab24      	add	r3, sp, #144	@ 0x90
 8009400:	881b      	ldrh	r3, [r3, #0]
 8009402:	ad0d      	add	r5, sp, #52	@ 0x34
 8009404:	9309      	str	r3, [sp, #36]	@ 0x24
 8009406:	ab25      	add	r3, sp, #148	@ 0x94
 8009408:	781b      	ldrb	r3, [r3, #0]
 800940a:	0006      	movs	r6, r0
 800940c:	930a      	str	r3, [sp, #40]	@ 0x28
 800940e:	ab26      	add	r3, sp, #152	@ 0x98
 8009410:	881b      	ldrh	r3, [r3, #0]
 8009412:	9107      	str	r1, [sp, #28]
 8009414:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009416:	002b      	movs	r3, r5
 8009418:	0014      	movs	r4, r2
 800941a:	ca83      	ldmia	r2!, {r0, r1, r7}
 800941c:	c383      	stmia	r3!, {r0, r1, r7}
 800941e:	ca03      	ldmia	r2!, {r0, r1}
 8009420:	c303      	stmia	r3!, {r0, r1}
 8009422:	ab12      	add	r3, sp, #72	@ 0x48
 8009424:	ca83      	ldmia	r2!, {r0, r1, r7}
 8009426:	c383      	stmia	r3!, {r0, r1, r7}
 8009428:	ca03      	ldmia	r2!, {r0, r1}
 800942a:	c303      	stmia	r3!, {r0, r1}
 800942c:	ab17      	add	r3, sp, #92	@ 0x5c
 800942e:	ca83      	ldmia	r2!, {r0, r1, r7}
 8009430:	c383      	stmia	r3!, {r0, r1, r7}
 8009432:	ca03      	ldmia	r2!, {r0, r1}
 8009434:	c303      	stmia	r3!, {r0, r1}
 8009436:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8009438:	6833      	ldr	r3, [r6, #0]
 800943a:	9204      	str	r2, [sp, #16]
 800943c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800943e:	9907      	ldr	r1, [sp, #28]
 8009440:	9203      	str	r2, [sp, #12]
 8009442:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009444:	0030      	movs	r0, r6
 8009446:	9202      	str	r2, [sp, #8]
 8009448:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800944a:	9201      	str	r2, [sp, #4]
 800944c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800944e:	9200      	str	r2, [sp, #0]
 8009450:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009452:	002a      	movs	r2, r5
 8009454:	001f      	movs	r7, r3
 8009456:	9b08      	ldr	r3, [sp, #32]
 8009458:	47b8      	blx	r7
 800945a:	002b      	movs	r3, r5
 800945c:	0022      	movs	r2, r4
 800945e:	ca83      	ldmia	r2!, {r0, r1, r7}
 8009460:	c383      	stmia	r3!, {r0, r1, r7}
 8009462:	ca03      	ldmia	r2!, {r0, r1}
 8009464:	c303      	stmia	r3!, {r0, r1}
 8009466:	ab12      	add	r3, sp, #72	@ 0x48
 8009468:	3214      	adds	r2, #20
 800946a:	ca83      	ldmia	r2!, {r0, r1, r7}
 800946c:	c383      	stmia	r3!, {r0, r1, r7}
 800946e:	ca03      	ldmia	r2!, {r0, r1}
 8009470:	c303      	stmia	r3!, {r0, r1}
 8009472:	343c      	adds	r4, #60	@ 0x3c
 8009474:	ab17      	add	r3, sp, #92	@ 0x5c
 8009476:	cc07      	ldmia	r4!, {r0, r1, r2}
 8009478:	c307      	stmia	r3!, {r0, r1, r2}
 800947a:	cc06      	ldmia	r4!, {r1, r2}
 800947c:	c306      	stmia	r3!, {r1, r2}
 800947e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8009480:	6833      	ldr	r3, [r6, #0]
 8009482:	9204      	str	r2, [sp, #16]
 8009484:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009486:	9907      	ldr	r1, [sp, #28]
 8009488:	9203      	str	r2, [sp, #12]
 800948a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800948c:	0030      	movs	r0, r6
 800948e:	9202      	str	r2, [sp, #8]
 8009490:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8009492:	9201      	str	r2, [sp, #4]
 8009494:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8009496:	9200      	str	r2, [sp, #0]
 8009498:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800949a:	002a      	movs	r2, r5
 800949c:	9b08      	ldr	r3, [sp, #32]
 800949e:	47a0      	blx	r4
 80094a0:	b01d      	add	sp, #116	@ 0x74
 80094a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080094a4 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80094a4:	2000      	movs	r0, #0
 80094a6:	4770      	bx	lr

080094a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80094a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80094aa:	b0ad      	sub	sp, #180	@ 0xb4
 80094ac:	931d      	str	r3, [sp, #116]	@ 0x74
 80094ae:	ab37      	add	r3, sp, #220	@ 0xdc
 80094b0:	781b      	ldrb	r3, [r3, #0]
 80094b2:	0015      	movs	r5, r2
 80094b4:	932b      	str	r3, [sp, #172]	@ 0xac
 80094b6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80094b8:	9029      	str	r0, [sp, #164]	@ 0xa4
 80094ba:	681b      	ldr	r3, [r3, #0]
 80094bc:	912a      	str	r1, [sp, #168]	@ 0xa8
 80094be:	9318      	str	r3, [sp, #96]	@ 0x60
 80094c0:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 80094c2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80094c4:	681b      	ldr	r3, [r3, #0]
 80094c6:	1a9b      	subs	r3, r3, r2
 80094c8:	9317      	str	r3, [sp, #92]	@ 0x5c
 80094ca:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 80094cc:	2200      	movs	r2, #0
 80094ce:	5e9b      	ldrsh	r3, [r3, r2]
 80094d0:	9323      	str	r3, [sp, #140]	@ 0x8c
 80094d2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80094d4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80094d6:	4694      	mov	ip, r2
 80094d8:	4463      	add	r3, ip
 80094da:	9324      	str	r3, [sp, #144]	@ 0x90
 80094dc:	ab38      	add	r3, sp, #224	@ 0xe0
 80094de:	881f      	ldrh	r7, [r3, #0]
 80094e0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80094e2:	429f      	cmp	r7, r3
 80094e4:	dd00      	ble.n	80094e8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x40>
 80094e6:	001f      	movs	r7, r3
 80094e8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80094ea:	0038      	movs	r0, r7
 80094ec:	69db      	ldr	r3, [r3, #28]
 80094ee:	931c      	str	r3, [sp, #112]	@ 0x70
 80094f0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80094f2:	6a9e      	ldr	r6, [r3, #40]	@ 0x28
 80094f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80094f6:	931f      	str	r3, [sp, #124]	@ 0x7c
 80094f8:	f7f7 fe56 	bl	80011a8 <__aeabi_i2f>
 80094fc:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 80094fe:	1c04      	adds	r4, r0, #0
 8009500:	f7f7 fb50 	bl	8000ba4 <__aeabi_fmul>
 8009504:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 8009506:	9020      	str	r0, [sp, #128]	@ 0x80
 8009508:	1c20      	adds	r0, r4, #0
 800950a:	f7f7 fb4b 	bl	8000ba4 <__aeabi_fmul>
 800950e:	6b69      	ldr	r1, [r5, #52]	@ 0x34
 8009510:	9021      	str	r0, [sp, #132]	@ 0x84
 8009512:	1c20      	adds	r0, r4, #0
 8009514:	f7f7 fb46 	bl	8000ba4 <__aeabi_fmul>
 8009518:	9920      	ldr	r1, [sp, #128]	@ 0x80
 800951a:	9022      	str	r0, [sp, #136]	@ 0x88
 800951c:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800951e:	f7f6 ffd1 	bl	80004c4 <__aeabi_fadd>
 8009522:	9921      	ldr	r1, [sp, #132]	@ 0x84
 8009524:	9019      	str	r0, [sp, #100]	@ 0x64
 8009526:	1c30      	adds	r0, r6, #0
 8009528:	f7f6 ffcc 	bl	80004c4 <__aeabi_fadd>
 800952c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 800952e:	901a      	str	r0, [sp, #104]	@ 0x68
 8009530:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8009532:	f7f6 ffc7 	bl	80004c4 <__aeabi_fadd>
 8009536:	901b      	str	r0, [sp, #108]	@ 0x6c
 8009538:	20fe      	movs	r0, #254	@ 0xfe
 800953a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 800953c:	0580      	lsls	r0, r0, #22
 800953e:	f7f7 f94b 	bl	80007d8 <__aeabi_fdiv>
 8009542:	1c01      	adds	r1, r0, #0
 8009544:	1c04      	adds	r4, r0, #0
 8009546:	1c30      	adds	r0, r6, #0
 8009548:	f7f7 fb2c 	bl	8000ba4 <__aeabi_fmul>
 800954c:	1c21      	adds	r1, r4, #0
 800954e:	901e      	str	r0, [sp, #120]	@ 0x78
 8009550:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8009552:	f7f7 fb27 	bl	8000ba4 <__aeabi_fmul>
 8009556:	9b35      	ldr	r3, [sp, #212]	@ 0xd4
 8009558:	901f      	str	r0, [sp, #124]	@ 0x7c
 800955a:	2600      	movs	r6, #0
 800955c:	5f9e      	ldrsh	r6, [r3, r6]
 800955e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8009560:	429e      	cmp	r6, r3
 8009562:	dc00      	bgt.n	8009566 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xbe>
 8009564:	e0f5      	b.n	8009752 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x2aa>
 8009566:	1af0      	subs	r0, r6, r3
 8009568:	0039      	movs	r1, r7
 800956a:	f7f6 ff6b 	bl	8000444 <__aeabi_idivmod>
 800956e:	911c      	str	r1, [sp, #112]	@ 0x70
 8009570:	0005      	movs	r5, r0
 8009572:	9025      	str	r0, [sp, #148]	@ 0x94
 8009574:	f7f7 fe18 	bl	80011a8 <__aeabi_i2f>
 8009578:	9920      	ldr	r1, [sp, #128]	@ 0x80
 800957a:	1c04      	adds	r4, r0, #0
 800957c:	f7f7 fb12 	bl	8000ba4 <__aeabi_fmul>
 8009580:	1c01      	adds	r1, r0, #0
 8009582:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8009584:	f7f6 ff9e 	bl	80004c4 <__aeabi_fadd>
 8009588:	9921      	ldr	r1, [sp, #132]	@ 0x84
 800958a:	9019      	str	r0, [sp, #100]	@ 0x64
 800958c:	1c20      	adds	r0, r4, #0
 800958e:	f7f7 fb09 	bl	8000ba4 <__aeabi_fmul>
 8009592:	1c01      	adds	r1, r0, #0
 8009594:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8009596:	f7f6 ff95 	bl	80004c4 <__aeabi_fadd>
 800959a:	9922      	ldr	r1, [sp, #136]	@ 0x88
 800959c:	901a      	str	r0, [sp, #104]	@ 0x68
 800959e:	1c20      	adds	r0, r4, #0
 80095a0:	f7f7 fb00 	bl	8000ba4 <__aeabi_fmul>
 80095a4:	1c01      	adds	r1, r0, #0
 80095a6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80095a8:	f7f6 ff8c 	bl	80004c4 <__aeabi_fadd>
 80095ac:	901b      	str	r0, [sp, #108]	@ 0x6c
 80095ae:	2d00      	cmp	r5, #0
 80095b0:	dd20      	ble.n	80095f4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x14c>
 80095b2:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80095b4:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80095b6:	f7f7 fc33 	bl	8000e20 <__aeabi_fsub>
 80095ba:	2100      	movs	r1, #0
 80095bc:	1c04      	adds	r4, r0, #0
 80095be:	f7f6 ff53 	bl	8000468 <__aeabi_fcmpeq>
 80095c2:	2800      	cmp	r0, #0
 80095c4:	d000      	beq.n	80095c8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x120>
 80095c6:	e0c1      	b.n	800974c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x2a4>
 80095c8:	20fe      	movs	r0, #254	@ 0xfe
 80095ca:	1c21      	adds	r1, r4, #0
 80095cc:	0580      	lsls	r0, r0, #22
 80095ce:	f7f7 f903 	bl	80007d8 <__aeabi_fdiv>
 80095d2:	1c04      	adds	r4, r0, #0
 80095d4:	9921      	ldr	r1, [sp, #132]	@ 0x84
 80095d6:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80095d8:	f7f7 fc22 	bl	8000e20 <__aeabi_fsub>
 80095dc:	1c21      	adds	r1, r4, #0
 80095de:	f7f7 fae1 	bl	8000ba4 <__aeabi_fmul>
 80095e2:	9922      	ldr	r1, [sp, #136]	@ 0x88
 80095e4:	901e      	str	r0, [sp, #120]	@ 0x78
 80095e6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80095e8:	f7f7 fc1a 	bl	8000e20 <__aeabi_fsub>
 80095ec:	1c21      	adds	r1, r4, #0
 80095ee:	f7f7 fad9 	bl	8000ba4 <__aeabi_fmul>
 80095f2:	901f      	str	r0, [sp, #124]	@ 0x7c
 80095f4:	437d      	muls	r5, r7
 80095f6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80095f8:	1b5b      	subs	r3, r3, r5
 80095fa:	9317      	str	r3, [sp, #92]	@ 0x5c
 80095fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80095fe:	195b      	adds	r3, r3, r5
 8009600:	9318      	str	r3, [sp, #96]	@ 0x60
 8009602:	9b35      	ldr	r3, [sp, #212]	@ 0xd4
 8009604:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8009606:	889b      	ldrh	r3, [r3, #4]
 8009608:	199e      	adds	r6, r3, r6
 800960a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800960c:	b236      	sxth	r6, r6
 800960e:	189b      	adds	r3, r3, r2
 8009610:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8009612:	189b      	adds	r3, r3, r2
 8009614:	42b3      	cmp	r3, r6
 8009616:	dd04      	ble.n	8009622 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x17a>
 8009618:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800961a:	1af6      	subs	r6, r6, r3
 800961c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800961e:	1af3      	subs	r3, r6, r3
 8009620:	9317      	str	r3, [sp, #92]	@ 0x5c
 8009622:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8009624:	2b00      	cmp	r3, #0
 8009626:	dc00      	bgt.n	800962a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x182>
 8009628:	e08e      	b.n	8009748 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x2a0>
 800962a:	0039      	movs	r1, r7
 800962c:	0018      	movs	r0, r3
 800962e:	f7f6 ff09 	bl	8000444 <__aeabi_idivmod>
 8009632:	0006      	movs	r6, r0
 8009634:	1e0d      	subs	r5, r1, #0
 8009636:	d101      	bne.n	800963c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x194>
 8009638:	003d      	movs	r5, r7
 800963a:	3e01      	subs	r6, #1
 800963c:	20fe      	movs	r0, #254	@ 0xfe
 800963e:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8009640:	0580      	lsls	r0, r0, #22
 8009642:	f7f7 f8c9 	bl	80007d8 <__aeabi_fdiv>
 8009646:	1c01      	adds	r1, r0, #0
 8009648:	1c04      	adds	r4, r0, #0
 800964a:	981a      	ldr	r0, [sp, #104]	@ 0x68
 800964c:	f7f7 faaa 	bl	8000ba4 <__aeabi_fmul>
 8009650:	1c21      	adds	r1, r4, #0
 8009652:	9018      	str	r0, [sp, #96]	@ 0x60
 8009654:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8009656:	f7f7 faa5 	bl	8000ba4 <__aeabi_fmul>
 800965a:	218f      	movs	r1, #143	@ 0x8f
 800965c:	9023      	str	r0, [sp, #140]	@ 0x8c
 800965e:	05c9      	lsls	r1, r1, #23
 8009660:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8009662:	f7f7 fa9f 	bl	8000ba4 <__aeabi_fmul>
 8009666:	f7f7 fd7f 	bl	8001168 <__aeabi_f2iz>
 800966a:	218f      	movs	r1, #143	@ 0x8f
 800966c:	9028      	str	r0, [sp, #160]	@ 0xa0
 800966e:	05c9      	lsls	r1, r1, #23
 8009670:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8009672:	f7f7 fa97 	bl	8000ba4 <__aeabi_fmul>
 8009676:	f7f7 fd77 	bl	8001168 <__aeabi_f2iz>
 800967a:	991e      	ldr	r1, [sp, #120]	@ 0x78
 800967c:	9027      	str	r0, [sp, #156]	@ 0x9c
 800967e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8009680:	f7f7 fbce 	bl	8000e20 <__aeabi_fsub>
 8009684:	218f      	movs	r1, #143	@ 0x8f
 8009686:	05c9      	lsls	r1, r1, #23
 8009688:	f7f7 fa8c 	bl	8000ba4 <__aeabi_fmul>
 800968c:	f7f7 fd6c 	bl	8001168 <__aeabi_f2iz>
 8009690:	0039      	movs	r1, r7
 8009692:	f7f6 fdf1 	bl	8000278 <__divsi3>
 8009696:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8009698:	9026      	str	r0, [sp, #152]	@ 0x98
 800969a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 800969c:	f7f7 fbc0 	bl	8000e20 <__aeabi_fsub>
 80096a0:	218f      	movs	r1, #143	@ 0x8f
 80096a2:	05c9      	lsls	r1, r1, #23
 80096a4:	f7f7 fa7e 	bl	8000ba4 <__aeabi_fmul>
 80096a8:	f7f7 fd5e 	bl	8001168 <__aeabi_f2iz>
 80096ac:	0039      	movs	r1, r7
 80096ae:	f7f6 fde3 	bl	8000278 <__divsi3>
 80096b2:	003b      	movs	r3, r7
 80096b4:	2e00      	cmp	r6, #0
 80096b6:	dc00      	bgt.n	80096ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x212>
 80096b8:	002b      	movs	r3, r5
 80096ba:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80096bc:	6852      	ldr	r2, [r2, #4]
 80096be:	9217      	str	r2, [sp, #92]	@ 0x5c
 80096c0:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80096c2:	1a9b      	subs	r3, r3, r2
 80096c4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80096c6:	6812      	ldr	r2, [r2, #0]
 80096c8:	9229      	str	r2, [sp, #164]	@ 0xa4
 80096ca:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80096cc:	9214      	str	r2, [sp, #80]	@ 0x50
 80096ce:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80096d0:	9213      	str	r2, [sp, #76]	@ 0x4c
 80096d2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80096d4:	9212      	str	r2, [sp, #72]	@ 0x48
 80096d6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 80096d8:	9211      	str	r2, [sp, #68]	@ 0x44
 80096da:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
 80096dc:	9210      	str	r2, [sp, #64]	@ 0x40
 80096de:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 80096e0:	2102      	movs	r1, #2
 80096e2:	5e52      	ldrsh	r2, [r2, r1]
 80096e4:	991d      	ldr	r1, [sp, #116]	@ 0x74
 80096e6:	6949      	ldr	r1, [r1, #20]
 80096e8:	940c      	str	r4, [sp, #48]	@ 0x30
 80096ea:	1852      	adds	r2, r2, r1
 80096ec:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80096ee:	920f      	str	r2, [sp, #60]	@ 0x3c
 80096f0:	468c      	mov	ip, r1
 80096f2:	9925      	ldr	r1, [sp, #148]	@ 0x94
 80096f4:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80096f6:	4379      	muls	r1, r7
 80096f8:	4462      	add	r2, ip
 80096fa:	1852      	adds	r2, r2, r1
 80096fc:	920e      	str	r2, [sp, #56]	@ 0x38
 80096fe:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8009700:	0031      	movs	r1, r6
 8009702:	920d      	str	r2, [sp, #52]	@ 0x34
 8009704:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8009706:	920b      	str	r2, [sp, #44]	@ 0x2c
 8009708:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 800970a:	920a      	str	r2, [sp, #40]	@ 0x28
 800970c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 800970e:	9007      	str	r0, [sp, #28]
 8009710:	9209      	str	r2, [sp, #36]	@ 0x24
 8009712:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8009714:	9c26      	ldr	r4, [sp, #152]	@ 0x98
 8009716:	9208      	str	r2, [sp, #32]
 8009718:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 800971a:	9700      	str	r7, [sp, #0]
 800971c:	9206      	str	r2, [sp, #24]
 800971e:	4662      	mov	r2, ip
 8009720:	4350      	muls	r0, r2
 8009722:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8009724:	1880      	adds	r0, r0, r2
 8009726:	4662      	mov	r2, ip
 8009728:	4354      	muls	r4, r2
 800972a:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 800972c:	9005      	str	r0, [sp, #20]
 800972e:	18a4      	adds	r4, r4, r2
 8009730:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8009732:	9404      	str	r4, [sp, #16]
 8009734:	9203      	str	r2, [sp, #12]
 8009736:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8009738:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800973a:	9202      	str	r2, [sp, #8]
 800973c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800973e:	9201      	str	r2, [sp, #4]
 8009740:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8009742:	6894      	ldr	r4, [r2, #8]
 8009744:	002a      	movs	r2, r5
 8009746:	47a0      	blx	r4
 8009748:	b02d      	add	sp, #180	@ 0xb4
 800974a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800974c:	24fe      	movs	r4, #254	@ 0xfe
 800974e:	05a4      	lsls	r4, r4, #22
 8009750:	e740      	b.n	80095d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x12c>
 8009752:	2300      	movs	r3, #0
 8009754:	9325      	str	r3, [sp, #148]	@ 0x94
 8009756:	931c      	str	r3, [sp, #112]	@ 0x70
 8009758:	e753      	b.n	8009602 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x15a>
	...

0800975c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800975c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800975e:	001d      	movs	r5, r3
 8009760:	b0eb      	sub	sp, #428	@ 0x1ac
 8009762:	ab72      	add	r3, sp, #456	@ 0x1c8
 8009764:	881b      	ldrh	r3, [r3, #0]
 8009766:	9111      	str	r1, [sp, #68]	@ 0x44
 8009768:	9312      	str	r3, [sp, #72]	@ 0x48
 800976a:	ab73      	add	r3, sp, #460	@ 0x1cc
 800976c:	781b      	ldrb	r3, [r3, #0]
 800976e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8009770:	9313      	str	r3, [sp, #76]	@ 0x4c
 8009772:	ab74      	add	r3, sp, #464	@ 0x1d0
 8009774:	881b      	ldrh	r3, [r3, #0]
 8009776:	0014      	movs	r4, r2
 8009778:	9318      	str	r3, [sp, #96]	@ 0x60
 800977a:	6803      	ldr	r3, [r0, #0]
 800977c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800977e:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
 8009780:	0029      	movs	r1, r5
 8009782:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8009784:	47b0      	blx	r6
 8009786:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009788:	6058      	str	r0, [r3, #4]
 800978a:	2800      	cmp	r0, #0
 800978c:	d101      	bne.n	8009792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36>
 800978e:	f000 fc18 	bl	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 8009792:	682b      	ldr	r3, [r5, #0]
 8009794:	9324      	str	r3, [sp, #144]	@ 0x90
 8009796:	686b      	ldr	r3, [r5, #4]
 8009798:	9325      	str	r3, [sp, #148]	@ 0x94
 800979a:	4bbd      	ldr	r3, [pc, #756]	@ (8009a90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x334>)
 800979c:	7819      	ldrb	r1, [r3, #0]
 800979e:	68ab      	ldr	r3, [r5, #8]
 80097a0:	001a      	movs	r2, r3
 80097a2:	2900      	cmp	r1, #0
 80097a4:	d000      	beq.n	80097a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4c>
 80097a6:	68ea      	ldr	r2, [r5, #12]
 80097a8:	9226      	str	r2, [sp, #152]	@ 0x98
 80097aa:	001a      	movs	r2, r3
 80097ac:	2900      	cmp	r1, #0
 80097ae:	d100      	bne.n	80097b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x56>
 80097b0:	68ea      	ldr	r2, [r5, #12]
 80097b2:	49b8      	ldr	r1, [pc, #736]	@ (8009a94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x338>)
 80097b4:	68a0      	ldr	r0, [r4, #8]
 80097b6:	9227      	str	r2, [sp, #156]	@ 0x9c
 80097b8:	9328      	str	r3, [sp, #160]	@ 0xa0
 80097ba:	f7f6 fe65 	bl	8000488 <__aeabi_fcmple>
 80097be:	2800      	cmp	r0, #0
 80097c0:	d001      	beq.n	80097c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6a>
 80097c2:	f000 fbfe 	bl	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 80097c6:	49b3      	ldr	r1, [pc, #716]	@ (8009a94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x338>)
 80097c8:	69e0      	ldr	r0, [r4, #28]
 80097ca:	f7f6 fe5d 	bl	8000488 <__aeabi_fcmple>
 80097ce:	2800      	cmp	r0, #0
 80097d0:	d000      	beq.n	80097d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x78>
 80097d2:	e3f6      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 80097d4:	49af      	ldr	r1, [pc, #700]	@ (8009a94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x338>)
 80097d6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80097d8:	f7f6 fe56 	bl	8000488 <__aeabi_fcmple>
 80097dc:	2800      	cmp	r0, #0
 80097de:	d000      	beq.n	80097e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x86>
 80097e0:	e3ef      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 80097e2:	6823      	ldr	r3, [r4, #0]
 80097e4:	4aac      	ldr	r2, [pc, #688]	@ (8009a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>)
 80097e6:	4293      	cmp	r3, r2
 80097e8:	da00      	bge.n	80097ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x90>
 80097ea:	e3ea      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 80097ec:	49ab      	ldr	r1, [pc, #684]	@ (8009a9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x340>)
 80097ee:	6962      	ldr	r2, [r4, #20]
 80097f0:	428b      	cmp	r3, r1
 80097f2:	dd00      	ble.n	80097f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x9a>
 80097f4:	e3e5      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 80097f6:	4eaa      	ldr	r6, [pc, #680]	@ (8009aa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x344>)
 80097f8:	4baa      	ldr	r3, [pc, #680]	@ (8009aa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x348>)
 80097fa:	1992      	adds	r2, r2, r6
 80097fc:	429a      	cmp	r2, r3
 80097fe:	d900      	bls.n	8009802 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xa6>
 8009800:	e3df      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 8009802:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8009804:	48a8      	ldr	r0, [pc, #672]	@ (8009aa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34c>)
 8009806:	1992      	adds	r2, r2, r6
 8009808:	4282      	cmp	r2, r0
 800980a:	d900      	bls.n	800980e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xb2>
 800980c:	e3d9      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 800980e:	6862      	ldr	r2, [r4, #4]
 8009810:	1991      	adds	r1, r2, r6
 8009812:	4299      	cmp	r1, r3
 8009814:	d900      	bls.n	8009818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xbc>
 8009816:	e3d4      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 8009818:	69a1      	ldr	r1, [r4, #24]
 800981a:	198d      	adds	r5, r1, r6
 800981c:	429d      	cmp	r5, r3
 800981e:	d900      	bls.n	8009822 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xc6>
 8009820:	e3cf      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 8009822:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009824:	199d      	adds	r5, r3, r6
 8009826:	4285      	cmp	r5, r0
 8009828:	d900      	bls.n	800982c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd0>
 800982a:	e3ca      	b.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 800982c:	428a      	cmp	r2, r1
 800982e:	db00      	blt.n	8009832 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd6>
 8009830:	e108      	b.n	8009a44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2e8>
 8009832:	429a      	cmp	r2, r3
 8009834:	dd00      	ble.n	8009838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xdc>
 8009836:	e110      	b.n	8009a5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2fe>
 8009838:	4299      	cmp	r1, r3
 800983a:	db00      	blt.n	800983e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe2>
 800983c:	e113      	b.n	8009a66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30a>
 800983e:	2502      	movs	r5, #2
 8009840:	2601      	movs	r6, #1
 8009842:	2700      	movs	r7, #0
 8009844:	950a      	str	r5, [sp, #40]	@ 0x28
 8009846:	9609      	str	r6, [sp, #36]	@ 0x24
 8009848:	0021      	movs	r1, r4
 800984a:	a859      	add	r0, sp, #356	@ 0x164
 800984c:	f004 f83a 	bl	800d8c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8009850:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009852:	0022      	movs	r2, r4
 8009854:	9300      	str	r3, [sp, #0]
 8009856:	a959      	add	r1, sp, #356	@ 0x164
 8009858:	003b      	movs	r3, r7
 800985a:	a829      	add	r0, sp, #164	@ 0xa4
 800985c:	f004 f9da 	bl	800dc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8009860:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009862:	0022      	movs	r2, r4
 8009864:	9300      	str	r3, [sp, #0]
 8009866:	a959      	add	r1, sp, #356	@ 0x164
 8009868:	003b      	movs	r3, r7
 800986a:	a839      	add	r0, sp, #228	@ 0xe4
 800986c:	f004 f9d2 	bl	800dc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8009870:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009872:	0022      	movs	r2, r4
 8009874:	9300      	str	r3, [sp, #0]
 8009876:	a959      	add	r1, sp, #356	@ 0x164
 8009878:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800987a:	a849      	add	r0, sp, #292	@ 0x124
 800987c:	f004 f9ca 	bl	800dc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8009880:	42ae      	cmp	r6, r5
 8009882:	db00      	blt.n	8009886 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x12a>
 8009884:	e0fb      	b.n	8009a7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8009886:	2300      	movs	r3, #0
 8009888:	ad39      	add	r5, sp, #228	@ 0xe4
 800988a:	9316      	str	r3, [sp, #88]	@ 0x58
 800988c:	ac29      	add	r4, sp, #164	@ 0xa4
 800988e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8009890:	ab22      	add	r3, sp, #136	@ 0x88
 8009892:	ca03      	ldmia	r2!, {r0, r1}
 8009894:	c303      	stmia	r3!, {r0, r1}
 8009896:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	9309      	str	r3, [sp, #36]	@ 0x24
 800989c:	2b00      	cmp	r3, #0
 800989e:	d105      	bne.n	80098ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x150>
 80098a0:	4b82      	ldr	r3, [pc, #520]	@ (8009aac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x350>)
 80098a2:	6818      	ldr	r0, [r3, #0]
 80098a4:	6803      	ldr	r3, [r0, #0]
 80098a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80098a8:	4798      	blx	r3
 80098aa:	9022      	str	r0, [sp, #136]	@ 0x88
 80098ac:	9b3f      	ldr	r3, [sp, #252]	@ 0xfc
 80098ae:	930a      	str	r3, [sp, #40]	@ 0x28
 80098b0:	9b70      	ldr	r3, [sp, #448]	@ 0x1c0
 80098b2:	2202      	movs	r2, #2
 80098b4:	5e9b      	ldrsh	r3, [r3, r2]
 80098b6:	6962      	ldr	r2, [r4, #20]
 80098b8:	9314      	str	r3, [sp, #80]	@ 0x50
 80098ba:	189b      	adds	r3, r3, r2
 80098bc:	9a71      	ldr	r2, [sp, #452]	@ 0x1c4
 80098be:	2102      	movs	r1, #2
 80098c0:	5e52      	ldrsh	r2, [r2, r1]
 80098c2:	9971      	ldr	r1, [sp, #452]	@ 0x1c4
 80098c4:	88c9      	ldrh	r1, [r1, #6]
 80098c6:	1889      	adds	r1, r1, r2
 80098c8:	b209      	sxth	r1, r1
 80098ca:	9115      	str	r1, [sp, #84]	@ 0x54
 80098cc:	428b      	cmp	r3, r1
 80098ce:	db00      	blt.n	80098d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x176>
 80098d0:	e0da      	b.n	8009a88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80098d2:	4293      	cmp	r3, r2
 80098d4:	da0c      	bge.n	80098f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x194>
 80098d6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80098d8:	2900      	cmp	r1, #0
 80098da:	dd09      	ble.n	80098f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x194>
 80098dc:	1ad3      	subs	r3, r2, r3
 80098de:	9309      	str	r3, [sp, #36]	@ 0x24
 80098e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80098e2:	4291      	cmp	r1, r2
 80098e4:	da00      	bge.n	80098e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x18c>
 80098e6:	e0e3      	b.n	8009ab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>
 80098e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80098ea:	2b00      	cmp	r3, #0
 80098ec:	dd00      	ble.n	80098f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x194>
 80098ee:	e0e1      	b.n	8009ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>
 80098f0:	6962      	ldr	r2, [r4, #20]
 80098f2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80098f4:	4694      	mov	ip, r2
 80098f6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80098f8:	4463      	add	r3, ip
 80098fa:	1ad3      	subs	r3, r2, r3
 80098fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80098fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8009900:	4293      	cmp	r3, r2
 8009902:	dd01      	ble.n	8009908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1ac>
 8009904:	0013      	movs	r3, r2
 8009906:	9309      	str	r3, [sp, #36]	@ 0x24
 8009908:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800990a:	2b00      	cmp	r3, #0
 800990c:	dc00      	bgt.n	8009910 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1b4>
 800990e:	e1a3      	b.n	8009c58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4fc>
 8009910:	9b70      	ldr	r3, [sp, #448]	@ 0x1c0
 8009912:	6829      	ldr	r1, [r5, #0]
 8009914:	2200      	movs	r2, #0
 8009916:	5e9a      	ldrsh	r2, [r3, r2]
 8009918:	9b71      	ldr	r3, [sp, #452]	@ 0x1c4
 800991a:	1851      	adds	r1, r2, r1
 800991c:	2000      	movs	r0, #0
 800991e:	5e18      	ldrsh	r0, [r3, r0]
 8009920:	6823      	ldr	r3, [r4, #0]
 8009922:	4281      	cmp	r1, r0
 8009924:	dd1b      	ble.n	800995e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x202>
 8009926:	18d2      	adds	r2, r2, r3
 8009928:	9b71      	ldr	r3, [sp, #452]	@ 0x1c4
 800992a:	889b      	ldrh	r3, [r3, #4]
 800992c:	181b      	adds	r3, r3, r0
 800992e:	b21b      	sxth	r3, r3
 8009930:	429a      	cmp	r2, r3
 8009932:	dc14      	bgt.n	800995e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x202>
 8009934:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8009936:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009938:	a922      	add	r1, sp, #136	@ 0x88
 800993a:	681b      	ldr	r3, [r3, #0]
 800993c:	9206      	str	r2, [sp, #24]
 800993e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8009940:	9500      	str	r5, [sp, #0]
 8009942:	9205      	str	r2, [sp, #20]
 8009944:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8009946:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009948:	9204      	str	r2, [sp, #16]
 800994a:	9a71      	ldr	r2, [sp, #452]	@ 0x1c4
 800994c:	9203      	str	r2, [sp, #12]
 800994e:	9a70      	ldr	r2, [sp, #448]	@ 0x1c0
 8009950:	9202      	str	r2, [sp, #8]
 8009952:	aa24      	add	r2, sp, #144	@ 0x90
 8009954:	9201      	str	r2, [sp, #4]
 8009956:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8009958:	aa59      	add	r2, sp, #356	@ 0x164
 800995a:	0023      	movs	r3, r4
 800995c:	47b0      	blx	r6
 800995e:	6862      	ldr	r2, [r4, #4]
 8009960:	6823      	ldr	r3, [r4, #0]
 8009962:	4694      	mov	ip, r2
 8009964:	4463      	add	r3, ip
 8009966:	930a      	str	r3, [sp, #40]	@ 0x28
 8009968:	6023      	str	r3, [r4, #0]
 800996a:	6963      	ldr	r3, [r4, #20]
 800996c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800996e:	3301      	adds	r3, #1
 8009970:	6163      	str	r3, [r4, #20]
 8009972:	69a3      	ldr	r3, [r4, #24]
 8009974:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8009976:	3b01      	subs	r3, #1
 8009978:	61a3      	str	r3, [r4, #24]
 800997a:	f7f6 fda3 	bl	80004c4 <__aeabi_fadd>
 800997e:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009980:	62a0      	str	r0, [r4, #40]	@ 0x28
 8009982:	1c07      	adds	r7, r0, #0
 8009984:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8009986:	f7f6 fd9d 	bl	80004c4 <__aeabi_fadd>
 800998a:	6a21      	ldr	r1, [r4, #32]
 800998c:	6360      	str	r0, [r4, #52]	@ 0x34
 800998e:	1c06      	adds	r6, r0, #0
 8009990:	69e0      	ldr	r0, [r4, #28]
 8009992:	f7f6 fd97 	bl	80004c4 <__aeabi_fadd>
 8009996:	6923      	ldr	r3, [r4, #16]
 8009998:	68a2      	ldr	r2, [r4, #8]
 800999a:	1c01      	adds	r1, r0, #0
 800999c:	61e0      	str	r0, [r4, #28]
 800999e:	68e0      	ldr	r0, [r4, #12]
 80099a0:	189b      	adds	r3, r3, r2
 80099a2:	6123      	str	r3, [r4, #16]
 80099a4:	4283      	cmp	r3, r0
 80099a6:	db12      	blt.n	80099ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x272>
 80099a8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80099aa:	1a1b      	subs	r3, r3, r0
 80099ac:	3201      	adds	r2, #1
 80099ae:	6022      	str	r2, [r4, #0]
 80099b0:	6123      	str	r3, [r4, #16]
 80099b2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 80099b4:	f7f6 fd86 	bl	80004c4 <__aeabi_fadd>
 80099b8:	1c39      	adds	r1, r7, #0
 80099ba:	61e0      	str	r0, [r4, #28]
 80099bc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80099be:	f7f6 fd81 	bl	80004c4 <__aeabi_fadd>
 80099c2:	1c31      	adds	r1, r6, #0
 80099c4:	62a0      	str	r0, [r4, #40]	@ 0x28
 80099c6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80099c8:	f7f6 fd7c 	bl	80004c4 <__aeabi_fadd>
 80099cc:	6360      	str	r0, [r4, #52]	@ 0x34
 80099ce:	686a      	ldr	r2, [r5, #4]
 80099d0:	682b      	ldr	r3, [r5, #0]
 80099d2:	4694      	mov	ip, r2
 80099d4:	4463      	add	r3, ip
 80099d6:	930a      	str	r3, [sp, #40]	@ 0x28
 80099d8:	602b      	str	r3, [r5, #0]
 80099da:	696b      	ldr	r3, [r5, #20]
 80099dc:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 80099de:	3301      	adds	r3, #1
 80099e0:	616b      	str	r3, [r5, #20]
 80099e2:	69ab      	ldr	r3, [r5, #24]
 80099e4:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 80099e6:	3b01      	subs	r3, #1
 80099e8:	61ab      	str	r3, [r5, #24]
 80099ea:	f7f6 fd6b 	bl	80004c4 <__aeabi_fadd>
 80099ee:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 80099f0:	62a8      	str	r0, [r5, #40]	@ 0x28
 80099f2:	1c07      	adds	r7, r0, #0
 80099f4:	6b68      	ldr	r0, [r5, #52]	@ 0x34
 80099f6:	f7f6 fd65 	bl	80004c4 <__aeabi_fadd>
 80099fa:	6a29      	ldr	r1, [r5, #32]
 80099fc:	6368      	str	r0, [r5, #52]	@ 0x34
 80099fe:	1c06      	adds	r6, r0, #0
 8009a00:	69e8      	ldr	r0, [r5, #28]
 8009a02:	f7f6 fd5f 	bl	80004c4 <__aeabi_fadd>
 8009a06:	692b      	ldr	r3, [r5, #16]
 8009a08:	68aa      	ldr	r2, [r5, #8]
 8009a0a:	1c01      	adds	r1, r0, #0
 8009a0c:	61e8      	str	r0, [r5, #28]
 8009a0e:	68e8      	ldr	r0, [r5, #12]
 8009a10:	189b      	adds	r3, r3, r2
 8009a12:	612b      	str	r3, [r5, #16]
 8009a14:	4283      	cmp	r3, r0
 8009a16:	db12      	blt.n	8009a3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2e2>
 8009a18:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009a1a:	1a1b      	subs	r3, r3, r0
 8009a1c:	3201      	adds	r2, #1
 8009a1e:	602a      	str	r2, [r5, #0]
 8009a20:	612b      	str	r3, [r5, #16]
 8009a22:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 8009a24:	f7f6 fd4e 	bl	80004c4 <__aeabi_fadd>
 8009a28:	1c39      	adds	r1, r7, #0
 8009a2a:	61e8      	str	r0, [r5, #28]
 8009a2c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8009a2e:	f7f6 fd49 	bl	80004c4 <__aeabi_fadd>
 8009a32:	1c31      	adds	r1, r6, #0
 8009a34:	62a8      	str	r0, [r5, #40]	@ 0x28
 8009a36:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
 8009a38:	f7f6 fd44 	bl	80004c4 <__aeabi_fadd>
 8009a3c:	6368      	str	r0, [r5, #52]	@ 0x34
 8009a3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009a40:	3b01      	subs	r3, #1
 8009a42:	e760      	b.n	8009906 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8009a44:	4299      	cmp	r1, r3
 8009a46:	dc11      	bgt.n	8009a6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8009a48:	429a      	cmp	r2, r3
 8009a4a:	da12      	bge.n	8009a72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x316>
 8009a4c:	2502      	movs	r5, #2
 8009a4e:	2300      	movs	r3, #0
 8009a50:	2603      	movs	r6, #3
 8009a52:	950a      	str	r5, [sp, #40]	@ 0x28
 8009a54:	9309      	str	r3, [sp, #36]	@ 0x24
 8009a56:	2701      	movs	r7, #1
 8009a58:	e6f6      	b.n	8009848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xec>
 8009a5a:	2501      	movs	r5, #1
 8009a5c:	2600      	movs	r6, #0
 8009a5e:	950a      	str	r5, [sp, #40]	@ 0x28
 8009a60:	9609      	str	r6, [sp, #36]	@ 0x24
 8009a62:	2702      	movs	r7, #2
 8009a64:	e6f0      	b.n	8009848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xec>
 8009a66:	2501      	movs	r5, #1
 8009a68:	2602      	movs	r6, #2
 8009a6a:	e6ea      	b.n	8009842 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe6>
 8009a6c:	2500      	movs	r5, #0
 8009a6e:	2601      	movs	r6, #1
 8009a70:	e7f5      	b.n	8009a5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x302>
 8009a72:	2602      	movs	r6, #2
 8009a74:	2300      	movs	r3, #0
 8009a76:	2503      	movs	r5, #3
 8009a78:	930a      	str	r3, [sp, #40]	@ 0x28
 8009a7a:	9609      	str	r6, [sp, #36]	@ 0x24
 8009a7c:	e7eb      	b.n	8009a56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2fa>
 8009a7e:	2301      	movs	r3, #1
 8009a80:	ad29      	add	r5, sp, #164	@ 0xa4
 8009a82:	9316      	str	r3, [sp, #88]	@ 0x58
 8009a84:	ac39      	add	r4, sp, #228	@ 0xe4
 8009a86:	e702      	b.n	800988e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x132>
 8009a88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009a8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8009a8c:	e72c      	b.n	80098e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x18c>
 8009a8e:	46c0      	nop			@ (mov r8, r8)
 8009a90:	20003570 	.word	0x20003570
 8009a94:	41200000 	.word	0x41200000
 8009a98:	fffd8f01 	.word	0xfffd8f01
 8009a9c:	00027100 	.word	0x00027100
 8009aa0:	000270ff 	.word	0x000270ff
 8009aa4:	0004e1ff 	.word	0x0004e1ff
 8009aa8:	0004e1fe 	.word	0x0004e1fe
 8009aac:	20003578 	.word	0x20003578
 8009ab0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009ab2:	9309      	str	r3, [sp, #36]	@ 0x24
 8009ab4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8009ab6:	9f40      	ldr	r7, [sp, #256]	@ 0x100
 8009ab8:	9319      	str	r3, [sp, #100]	@ 0x64
 8009aba:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 8009abc:	9e3d      	ldr	r6, [sp, #244]	@ 0xf4
 8009abe:	930c      	str	r3, [sp, #48]	@ 0x30
 8009ac0:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8009ac2:	9321      	str	r3, [sp, #132]	@ 0x84
 8009ac4:	9b44      	ldr	r3, [sp, #272]	@ 0x110
 8009ac6:	931a      	str	r3, [sp, #104]	@ 0x68
 8009ac8:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8009aca:	930d      	str	r3, [sp, #52]	@ 0x34
 8009acc:	9b47      	ldr	r3, [sp, #284]	@ 0x11c
 8009ace:	931b      	str	r3, [sp, #108]	@ 0x6c
 8009ad0:	9b46      	ldr	r3, [sp, #280]	@ 0x118
 8009ad2:	930e      	str	r3, [sp, #56]	@ 0x38
 8009ad4:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8009ad6:	931c      	str	r3, [sp, #112]	@ 0x70
 8009ad8:	9b3b      	ldr	r3, [sp, #236]	@ 0xec
 8009ada:	931d      	str	r3, [sp, #116]	@ 0x74
 8009adc:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 8009ade:	9317      	str	r3, [sp, #92]	@ 0x5c
 8009ae0:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 8009ae2:	931e      	str	r3, [sp, #120]	@ 0x78
 8009ae4:	9b45      	ldr	r3, [sp, #276]	@ 0x114
 8009ae6:	931f      	str	r3, [sp, #124]	@ 0x7c
 8009ae8:	9b48      	ldr	r3, [sp, #288]	@ 0x120
 8009aea:	9320      	str	r3, [sp, #128]	@ 0x80
 8009aec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009aee:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009af0:	9310      	str	r3, [sp, #64]	@ 0x40
 8009af2:	2300      	movs	r3, #0
 8009af4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8009af6:	2a00      	cmp	r2, #0
 8009af8:	d165      	bne.n	8009bc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46a>
 8009afa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009afc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8009afe:	4684      	mov	ip, r0
 8009b00:	4462      	add	r2, ip
 8009b02:	0011      	movs	r1, r2
 8009b04:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009b06:	1a12      	subs	r2, r2, r0
 8009b08:	2b00      	cmp	r3, #0
 8009b0a:	d009      	beq.n	8009b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3c4>
 8009b0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009b0e:	913e      	str	r1, [sp, #248]	@ 0xf8
 8009b10:	9339      	str	r3, [sp, #228]	@ 0xe4
 8009b12:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009b14:	923f      	str	r2, [sp, #252]	@ 0xfc
 8009b16:	9343      	str	r3, [sp, #268]	@ 0x10c
 8009b18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009b1a:	9740      	str	r7, [sp, #256]	@ 0x100
 8009b1c:	9346      	str	r3, [sp, #280]	@ 0x118
 8009b1e:	963d      	str	r6, [sp, #244]	@ 0xf4
 8009b20:	2100      	movs	r1, #0
 8009b22:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8009b24:	9f36      	ldr	r7, [sp, #216]	@ 0xd8
 8009b26:	9317      	str	r3, [sp, #92]	@ 0x5c
 8009b28:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8009b2a:	9e2d      	ldr	r6, [sp, #180]	@ 0xb4
 8009b2c:	930c      	str	r3, [sp, #48]	@ 0x30
 8009b2e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8009b30:	9320      	str	r3, [sp, #128]	@ 0x80
 8009b32:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 8009b34:	9321      	str	r3, [sp, #132]	@ 0x84
 8009b36:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8009b38:	9319      	str	r3, [sp, #100]	@ 0x64
 8009b3a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
 8009b3c:	930d      	str	r3, [sp, #52]	@ 0x34
 8009b3e:	9b37      	ldr	r3, [sp, #220]	@ 0xdc
 8009b40:	931a      	str	r3, [sp, #104]	@ 0x68
 8009b42:	9b31      	ldr	r3, [sp, #196]	@ 0xc4
 8009b44:	931b      	str	r3, [sp, #108]	@ 0x6c
 8009b46:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8009b48:	930e      	str	r3, [sp, #56]	@ 0x38
 8009b4a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8009b4c:	931c      	str	r3, [sp, #112]	@ 0x70
 8009b4e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8009b50:	9310      	str	r3, [sp, #64]	@ 0x40
 8009b52:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 8009b54:	931d      	str	r3, [sp, #116]	@ 0x74
 8009b56:	9b35      	ldr	r3, [sp, #212]	@ 0xd4
 8009b58:	931e      	str	r3, [sp, #120]	@ 0x78
 8009b5a:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 8009b5c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8009b5e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009b60:	2b00      	cmp	r3, #0
 8009b62:	d061      	beq.n	8009c28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4cc>
 8009b64:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8009b66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009b68:	4694      	mov	ip, r2
 8009b6a:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8009b6c:	4463      	add	r3, ip
 8009b6e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009b70:	930c      	str	r3, [sp, #48]	@ 0x30
 8009b72:	f7f6 fca7 	bl	80004c4 <__aeabi_fadd>
 8009b76:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009b78:	900d      	str	r0, [sp, #52]	@ 0x34
 8009b7a:	1c38      	adds	r0, r7, #0
 8009b7c:	f7f6 fca2 	bl	80004c4 <__aeabi_fadd>
 8009b80:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8009b82:	1c07      	adds	r7, r0, #0
 8009b84:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8009b86:	f7f6 fc9d 	bl	80004c4 <__aeabi_fadd>
 8009b8a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8009b8c:	900e      	str	r0, [sp, #56]	@ 0x38
 8009b8e:	18f6      	adds	r6, r6, r3
 8009b90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8009b92:	429e      	cmp	r6, r3
 8009b94:	db12      	blt.n	8009bbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x460>
 8009b96:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009b98:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8009b9a:	3301      	adds	r3, #1
 8009b9c:	930c      	str	r3, [sp, #48]	@ 0x30
 8009b9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8009ba0:	1af6      	subs	r6, r6, r3
 8009ba2:	f7f6 fc8f 	bl	80004c4 <__aeabi_fadd>
 8009ba6:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8009ba8:	900e      	str	r0, [sp, #56]	@ 0x38
 8009baa:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009bac:	f7f6 fc8a 	bl	80004c4 <__aeabi_fadd>
 8009bb0:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8009bb2:	900d      	str	r0, [sp, #52]	@ 0x34
 8009bb4:	1c38      	adds	r0, r7, #0
 8009bb6:	f7f6 fc85 	bl	80004c4 <__aeabi_fadd>
 8009bba:	1c07      	adds	r7, r0, #0
 8009bbc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009bbe:	2101      	movs	r1, #1
 8009bc0:	3b01      	subs	r3, #1
 8009bc2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009bc4:	e7cb      	b.n	8009b5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x402>
 8009bc6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8009bc8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009bca:	4694      	mov	ip, r2
 8009bcc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009bce:	4463      	add	r3, ip
 8009bd0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009bd2:	930c      	str	r3, [sp, #48]	@ 0x30
 8009bd4:	f7f6 fc76 	bl	80004c4 <__aeabi_fadd>
 8009bd8:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8009bda:	900d      	str	r0, [sp, #52]	@ 0x34
 8009bdc:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8009bde:	f7f6 fc71 	bl	80004c4 <__aeabi_fadd>
 8009be2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8009be4:	900e      	str	r0, [sp, #56]	@ 0x38
 8009be6:	1c38      	adds	r0, r7, #0
 8009be8:	f7f6 fc6c 	bl	80004c4 <__aeabi_fadd>
 8009bec:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8009bee:	1c07      	adds	r7, r0, #0
 8009bf0:	18f6      	adds	r6, r6, r3
 8009bf2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8009bf4:	429e      	cmp	r6, r3
 8009bf6:	db12      	blt.n	8009c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4c2>
 8009bf8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009bfa:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8009bfc:	3301      	adds	r3, #1
 8009bfe:	930c      	str	r3, [sp, #48]	@ 0x30
 8009c00:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8009c02:	1af6      	subs	r6, r6, r3
 8009c04:	f7f6 fc5e 	bl	80004c4 <__aeabi_fadd>
 8009c08:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8009c0a:	1c07      	adds	r7, r0, #0
 8009c0c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009c0e:	f7f6 fc59 	bl	80004c4 <__aeabi_fadd>
 8009c12:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8009c14:	900d      	str	r0, [sp, #52]	@ 0x34
 8009c16:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8009c18:	f7f6 fc54 	bl	80004c4 <__aeabi_fadd>
 8009c1c:	900e      	str	r0, [sp, #56]	@ 0x38
 8009c1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8009c20:	3b01      	subs	r3, #1
 8009c22:	9310      	str	r3, [sp, #64]	@ 0x40
 8009c24:	2301      	movs	r3, #1
 8009c26:	e765      	b.n	8009af4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x398>
 8009c28:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009c2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009c2c:	4684      	mov	ip, r0
 8009c2e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8009c30:	1a9b      	subs	r3, r3, r2
 8009c32:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8009c34:	4462      	add	r2, ip
 8009c36:	2900      	cmp	r1, #0
 8009c38:	d009      	beq.n	8009c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8009c3a:	932f      	str	r3, [sp, #188]	@ 0xbc
 8009c3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009c3e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8009c40:	9333      	str	r3, [sp, #204]	@ 0xcc
 8009c42:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009c44:	9129      	str	r1, [sp, #164]	@ 0xa4
 8009c46:	922e      	str	r2, [sp, #184]	@ 0xb8
 8009c48:	9736      	str	r7, [sp, #216]	@ 0xd8
 8009c4a:	9330      	str	r3, [sp, #192]	@ 0xc0
 8009c4c:	962d      	str	r6, [sp, #180]	@ 0xb4
 8009c4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009c50:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009c52:	1a9b      	subs	r3, r3, r2
 8009c54:	930a      	str	r3, [sp, #40]	@ 0x28
 8009c56:	e64b      	b.n	80098f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x194>
 8009c58:	9b4f      	ldr	r3, [sp, #316]	@ 0x13c
 8009c5a:	930a      	str	r3, [sp, #40]	@ 0x28
 8009c5c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8009c5e:	2b00      	cmp	r3, #0
 8009c60:	d100      	bne.n	8009c64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x508>
 8009c62:	e0cb      	b.n	8009dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6a0>
 8009c64:	ad29      	add	r5, sp, #164	@ 0xa4
 8009c66:	ac49      	add	r4, sp, #292	@ 0x124
 8009c68:	9b70      	ldr	r3, [sp, #448]	@ 0x1c0
 8009c6a:	2202      	movs	r2, #2
 8009c6c:	5e9b      	ldrsh	r3, [r3, r2]
 8009c6e:	6962      	ldr	r2, [r4, #20]
 8009c70:	9314      	str	r3, [sp, #80]	@ 0x50
 8009c72:	189b      	adds	r3, r3, r2
 8009c74:	9a71      	ldr	r2, [sp, #452]	@ 0x1c4
 8009c76:	2102      	movs	r1, #2
 8009c78:	5e52      	ldrsh	r2, [r2, r1]
 8009c7a:	9971      	ldr	r1, [sp, #452]	@ 0x1c4
 8009c7c:	88c9      	ldrh	r1, [r1, #6]
 8009c7e:	1889      	adds	r1, r1, r2
 8009c80:	b209      	sxth	r1, r1
 8009c82:	9115      	str	r1, [sp, #84]	@ 0x54
 8009c84:	428b      	cmp	r3, r1
 8009c86:	db00      	blt.n	8009c8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x52e>
 8009c88:	e0bb      	b.n	8009e02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6a6>
 8009c8a:	4293      	cmp	r3, r2
 8009c8c:	da0c      	bge.n	8009ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x54c>
 8009c8e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8009c90:	2900      	cmp	r1, #0
 8009c92:	dd09      	ble.n	8009ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x54c>
 8009c94:	1ad3      	subs	r3, r2, r3
 8009c96:	9309      	str	r3, [sp, #36]	@ 0x24
 8009c98:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009c9a:	4291      	cmp	r1, r2
 8009c9c:	da00      	bge.n	8009ca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x544>
 8009c9e:	e0b3      	b.n	8009e08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6ac>
 8009ca0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ca2:	2b00      	cmp	r3, #0
 8009ca4:	dd00      	ble.n	8009ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x54c>
 8009ca6:	e0b1      	b.n	8009e0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6b0>
 8009ca8:	6962      	ldr	r2, [r4, #20]
 8009caa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8009cac:	4694      	mov	ip, r2
 8009cae:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8009cb0:	4463      	add	r3, ip
 8009cb2:	1ad3      	subs	r3, r2, r3
 8009cb4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009cb6:	9309      	str	r3, [sp, #36]	@ 0x24
 8009cb8:	4293      	cmp	r3, r2
 8009cba:	dd01      	ble.n	8009cc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x564>
 8009cbc:	0013      	movs	r3, r2
 8009cbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8009cc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009cc2:	2b00      	cmp	r3, #0
 8009cc4:	dc00      	bgt.n	8009cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x56c>
 8009cc6:	e173      	b.n	8009fb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x854>
 8009cc8:	9b70      	ldr	r3, [sp, #448]	@ 0x1c0
 8009cca:	6829      	ldr	r1, [r5, #0]
 8009ccc:	2200      	movs	r2, #0
 8009cce:	5e9a      	ldrsh	r2, [r3, r2]
 8009cd0:	9b71      	ldr	r3, [sp, #452]	@ 0x1c4
 8009cd2:	1851      	adds	r1, r2, r1
 8009cd4:	2000      	movs	r0, #0
 8009cd6:	5e18      	ldrsh	r0, [r3, r0]
 8009cd8:	6823      	ldr	r3, [r4, #0]
 8009cda:	4281      	cmp	r1, r0
 8009cdc:	dd1b      	ble.n	8009d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5ba>
 8009cde:	18d2      	adds	r2, r2, r3
 8009ce0:	9b71      	ldr	r3, [sp, #452]	@ 0x1c4
 8009ce2:	889b      	ldrh	r3, [r3, #4]
 8009ce4:	181b      	adds	r3, r3, r0
 8009ce6:	b21b      	sxth	r3, r3
 8009ce8:	429a      	cmp	r2, r3
 8009cea:	dc14      	bgt.n	8009d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5ba>
 8009cec:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8009cee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009cf0:	a922      	add	r1, sp, #136	@ 0x88
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	9206      	str	r2, [sp, #24]
 8009cf6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8009cf8:	9500      	str	r5, [sp, #0]
 8009cfa:	9205      	str	r2, [sp, #20]
 8009cfc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8009cfe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009d00:	9204      	str	r2, [sp, #16]
 8009d02:	9a71      	ldr	r2, [sp, #452]	@ 0x1c4
 8009d04:	9203      	str	r2, [sp, #12]
 8009d06:	9a70      	ldr	r2, [sp, #448]	@ 0x1c0
 8009d08:	9202      	str	r2, [sp, #8]
 8009d0a:	aa24      	add	r2, sp, #144	@ 0x90
 8009d0c:	9201      	str	r2, [sp, #4]
 8009d0e:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8009d10:	aa59      	add	r2, sp, #356	@ 0x164
 8009d12:	0023      	movs	r3, r4
 8009d14:	47b0      	blx	r6
 8009d16:	6862      	ldr	r2, [r4, #4]
 8009d18:	6823      	ldr	r3, [r4, #0]
 8009d1a:	4694      	mov	ip, r2
 8009d1c:	4463      	add	r3, ip
 8009d1e:	930a      	str	r3, [sp, #40]	@ 0x28
 8009d20:	6023      	str	r3, [r4, #0]
 8009d22:	6963      	ldr	r3, [r4, #20]
 8009d24:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009d26:	3301      	adds	r3, #1
 8009d28:	6163      	str	r3, [r4, #20]
 8009d2a:	69a3      	ldr	r3, [r4, #24]
 8009d2c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8009d2e:	3b01      	subs	r3, #1
 8009d30:	61a3      	str	r3, [r4, #24]
 8009d32:	f7f6 fbc7 	bl	80004c4 <__aeabi_fadd>
 8009d36:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009d38:	62a0      	str	r0, [r4, #40]	@ 0x28
 8009d3a:	1c07      	adds	r7, r0, #0
 8009d3c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8009d3e:	f7f6 fbc1 	bl	80004c4 <__aeabi_fadd>
 8009d42:	6a21      	ldr	r1, [r4, #32]
 8009d44:	6360      	str	r0, [r4, #52]	@ 0x34
 8009d46:	1c06      	adds	r6, r0, #0
 8009d48:	69e0      	ldr	r0, [r4, #28]
 8009d4a:	f7f6 fbbb 	bl	80004c4 <__aeabi_fadd>
 8009d4e:	6923      	ldr	r3, [r4, #16]
 8009d50:	68a2      	ldr	r2, [r4, #8]
 8009d52:	1c01      	adds	r1, r0, #0
 8009d54:	61e0      	str	r0, [r4, #28]
 8009d56:	68e0      	ldr	r0, [r4, #12]
 8009d58:	189b      	adds	r3, r3, r2
 8009d5a:	6123      	str	r3, [r4, #16]
 8009d5c:	4283      	cmp	r3, r0
 8009d5e:	db12      	blt.n	8009d86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x62a>
 8009d60:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009d62:	1a1b      	subs	r3, r3, r0
 8009d64:	3201      	adds	r2, #1
 8009d66:	6022      	str	r2, [r4, #0]
 8009d68:	6123      	str	r3, [r4, #16]
 8009d6a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8009d6c:	f7f6 fbaa 	bl	80004c4 <__aeabi_fadd>
 8009d70:	1c39      	adds	r1, r7, #0
 8009d72:	61e0      	str	r0, [r4, #28]
 8009d74:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8009d76:	f7f6 fba5 	bl	80004c4 <__aeabi_fadd>
 8009d7a:	1c31      	adds	r1, r6, #0
 8009d7c:	62a0      	str	r0, [r4, #40]	@ 0x28
 8009d7e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8009d80:	f7f6 fba0 	bl	80004c4 <__aeabi_fadd>
 8009d84:	6360      	str	r0, [r4, #52]	@ 0x34
 8009d86:	686a      	ldr	r2, [r5, #4]
 8009d88:	682b      	ldr	r3, [r5, #0]
 8009d8a:	4694      	mov	ip, r2
 8009d8c:	4463      	add	r3, ip
 8009d8e:	930a      	str	r3, [sp, #40]	@ 0x28
 8009d90:	602b      	str	r3, [r5, #0]
 8009d92:	696b      	ldr	r3, [r5, #20]
 8009d94:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 8009d96:	3301      	adds	r3, #1
 8009d98:	616b      	str	r3, [r5, #20]
 8009d9a:	69ab      	ldr	r3, [r5, #24]
 8009d9c:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 8009d9e:	3b01      	subs	r3, #1
 8009da0:	61ab      	str	r3, [r5, #24]
 8009da2:	f7f6 fb8f 	bl	80004c4 <__aeabi_fadd>
 8009da6:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 8009da8:	62a8      	str	r0, [r5, #40]	@ 0x28
 8009daa:	1c07      	adds	r7, r0, #0
 8009dac:	6b68      	ldr	r0, [r5, #52]	@ 0x34
 8009dae:	f7f6 fb89 	bl	80004c4 <__aeabi_fadd>
 8009db2:	6a29      	ldr	r1, [r5, #32]
 8009db4:	6368      	str	r0, [r5, #52]	@ 0x34
 8009db6:	1c06      	adds	r6, r0, #0
 8009db8:	69e8      	ldr	r0, [r5, #28]
 8009dba:	f7f6 fb83 	bl	80004c4 <__aeabi_fadd>
 8009dbe:	692b      	ldr	r3, [r5, #16]
 8009dc0:	68aa      	ldr	r2, [r5, #8]
 8009dc2:	1c01      	adds	r1, r0, #0
 8009dc4:	61e8      	str	r0, [r5, #28]
 8009dc6:	68e8      	ldr	r0, [r5, #12]
 8009dc8:	189b      	adds	r3, r3, r2
 8009dca:	612b      	str	r3, [r5, #16]
 8009dcc:	4283      	cmp	r3, r0
 8009dce:	db12      	blt.n	8009df6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x69a>
 8009dd0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009dd2:	1a1b      	subs	r3, r3, r0
 8009dd4:	3201      	adds	r2, #1
 8009dd6:	602a      	str	r2, [r5, #0]
 8009dd8:	612b      	str	r3, [r5, #16]
 8009dda:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 8009ddc:	f7f6 fb72 	bl	80004c4 <__aeabi_fadd>
 8009de0:	1c39      	adds	r1, r7, #0
 8009de2:	61e8      	str	r0, [r5, #28]
 8009de4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8009de6:	f7f6 fb6d 	bl	80004c4 <__aeabi_fadd>
 8009dea:	1c31      	adds	r1, r6, #0
 8009dec:	62a8      	str	r0, [r5, #40]	@ 0x28
 8009dee:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
 8009df0:	f7f6 fb68 	bl	80004c4 <__aeabi_fadd>
 8009df4:	6368      	str	r0, [r5, #52]	@ 0x34
 8009df6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009df8:	3b01      	subs	r3, #1
 8009dfa:	e760      	b.n	8009cbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x562>
 8009dfc:	ad49      	add	r5, sp, #292	@ 0x124
 8009dfe:	ac29      	add	r4, sp, #164	@ 0xa4
 8009e00:	e732      	b.n	8009c68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x50c>
 8009e02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009e04:	9309      	str	r3, [sp, #36]	@ 0x24
 8009e06:	e74b      	b.n	8009ca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x544>
 8009e08:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009e0a:	9309      	str	r3, [sp, #36]	@ 0x24
 8009e0c:	9b49      	ldr	r3, [sp, #292]	@ 0x124
 8009e0e:	9f50      	ldr	r7, [sp, #320]	@ 0x140
 8009e10:	930c      	str	r3, [sp, #48]	@ 0x30
 8009e12:	9b4a      	ldr	r3, [sp, #296]	@ 0x128
 8009e14:	9e4d      	ldr	r6, [sp, #308]	@ 0x134
 8009e16:	9317      	str	r3, [sp, #92]	@ 0x5c
 8009e18:	9b4e      	ldr	r3, [sp, #312]	@ 0x138
 8009e1a:	9320      	str	r3, [sp, #128]	@ 0x80
 8009e1c:	9b53      	ldr	r3, [sp, #332]	@ 0x14c
 8009e1e:	930e      	str	r3, [sp, #56]	@ 0x38
 8009e20:	9b54      	ldr	r3, [sp, #336]	@ 0x150
 8009e22:	9319      	str	r3, [sp, #100]	@ 0x64
 8009e24:	9b56      	ldr	r3, [sp, #344]	@ 0x158
 8009e26:	930d      	str	r3, [sp, #52]	@ 0x34
 8009e28:	9b57      	ldr	r3, [sp, #348]	@ 0x15c
 8009e2a:	931a      	str	r3, [sp, #104]	@ 0x68
 8009e2c:	9b51      	ldr	r3, [sp, #324]	@ 0x144
 8009e2e:	931b      	str	r3, [sp, #108]	@ 0x6c
 8009e30:	9b4b      	ldr	r3, [sp, #300]	@ 0x12c
 8009e32:	931c      	str	r3, [sp, #112]	@ 0x70
 8009e34:	9b4c      	ldr	r3, [sp, #304]	@ 0x130
 8009e36:	9316      	str	r3, [sp, #88]	@ 0x58
 8009e38:	9b52      	ldr	r3, [sp, #328]	@ 0x148
 8009e3a:	931d      	str	r3, [sp, #116]	@ 0x74
 8009e3c:	9b55      	ldr	r3, [sp, #340]	@ 0x154
 8009e3e:	931e      	str	r3, [sp, #120]	@ 0x78
 8009e40:	9b58      	ldr	r3, [sp, #352]	@ 0x160
 8009e42:	931f      	str	r3, [sp, #124]	@ 0x7c
 8009e44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009e46:	9310      	str	r3, [sp, #64]	@ 0x40
 8009e48:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009e4a:	2300      	movs	r3, #0
 8009e4c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8009e4e:	2a00      	cmp	r2, #0
 8009e50:	d165      	bne.n	8009f1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x7c2>
 8009e52:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009e54:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8009e56:	4684      	mov	ip, r0
 8009e58:	4462      	add	r2, ip
 8009e5a:	0011      	movs	r1, r2
 8009e5c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009e5e:	1a12      	subs	r2, r2, r0
 8009e60:	2b00      	cmp	r3, #0
 8009e62:	d009      	beq.n	8009e78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71c>
 8009e64:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009e66:	964d      	str	r6, [sp, #308]	@ 0x134
 8009e68:	9349      	str	r3, [sp, #292]	@ 0x124
 8009e6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009e6c:	9750      	str	r7, [sp, #320]	@ 0x140
 8009e6e:	9353      	str	r3, [sp, #332]	@ 0x14c
 8009e70:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009e72:	914e      	str	r1, [sp, #312]	@ 0x138
 8009e74:	9356      	str	r3, [sp, #344]	@ 0x158
 8009e76:	924f      	str	r2, [sp, #316]	@ 0x13c
 8009e78:	2100      	movs	r1, #0
 8009e7a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8009e7c:	9f36      	ldr	r7, [sp, #216]	@ 0xd8
 8009e7e:	9316      	str	r3, [sp, #88]	@ 0x58
 8009e80:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8009e82:	9e2d      	ldr	r6, [sp, #180]	@ 0xb4
 8009e84:	930c      	str	r3, [sp, #48]	@ 0x30
 8009e86:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8009e88:	931f      	str	r3, [sp, #124]	@ 0x7c
 8009e8a:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 8009e8c:	9320      	str	r3, [sp, #128]	@ 0x80
 8009e8e:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8009e90:	9317      	str	r3, [sp, #92]	@ 0x5c
 8009e92:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
 8009e94:	930d      	str	r3, [sp, #52]	@ 0x34
 8009e96:	9b37      	ldr	r3, [sp, #220]	@ 0xdc
 8009e98:	9319      	str	r3, [sp, #100]	@ 0x64
 8009e9a:	9b31      	ldr	r3, [sp, #196]	@ 0xc4
 8009e9c:	931a      	str	r3, [sp, #104]	@ 0x68
 8009e9e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8009ea0:	930e      	str	r3, [sp, #56]	@ 0x38
 8009ea2:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8009ea4:	931b      	str	r3, [sp, #108]	@ 0x6c
 8009ea6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8009ea8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009eaa:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 8009eac:	931c      	str	r3, [sp, #112]	@ 0x70
 8009eae:	9b35      	ldr	r3, [sp, #212]	@ 0xd4
 8009eb0:	931d      	str	r3, [sp, #116]	@ 0x74
 8009eb2:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 8009eb4:	931e      	str	r3, [sp, #120]	@ 0x78
 8009eb6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8009eb8:	2b00      	cmp	r3, #0
 8009eba:	d061      	beq.n	8009f80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x824>
 8009ebc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8009ebe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009ec0:	4694      	mov	ip, r2
 8009ec2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8009ec4:	4463      	add	r3, ip
 8009ec6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009ec8:	930c      	str	r3, [sp, #48]	@ 0x30
 8009eca:	f7f6 fafb 	bl	80004c4 <__aeabi_fadd>
 8009ece:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8009ed0:	900d      	str	r0, [sp, #52]	@ 0x34
 8009ed2:	1c38      	adds	r0, r7, #0
 8009ed4:	f7f6 faf6 	bl	80004c4 <__aeabi_fadd>
 8009ed8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009eda:	1c07      	adds	r7, r0, #0
 8009edc:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8009ede:	f7f6 faf1 	bl	80004c4 <__aeabi_fadd>
 8009ee2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8009ee4:	900e      	str	r0, [sp, #56]	@ 0x38
 8009ee6:	18f6      	adds	r6, r6, r3
 8009ee8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009eea:	429e      	cmp	r6, r3
 8009eec:	db12      	blt.n	8009f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x7b8>
 8009eee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009ef0:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8009ef2:	3301      	adds	r3, #1
 8009ef4:	930c      	str	r3, [sp, #48]	@ 0x30
 8009ef6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009ef8:	1af6      	subs	r6, r6, r3
 8009efa:	f7f6 fae3 	bl	80004c4 <__aeabi_fadd>
 8009efe:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8009f00:	900e      	str	r0, [sp, #56]	@ 0x38
 8009f02:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009f04:	f7f6 fade 	bl	80004c4 <__aeabi_fadd>
 8009f08:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8009f0a:	900d      	str	r0, [sp, #52]	@ 0x34
 8009f0c:	1c38      	adds	r0, r7, #0
 8009f0e:	f7f6 fad9 	bl	80004c4 <__aeabi_fadd>
 8009f12:	1c07      	adds	r7, r0, #0
 8009f14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8009f16:	2101      	movs	r1, #1
 8009f18:	3b01      	subs	r3, #1
 8009f1a:	9310      	str	r3, [sp, #64]	@ 0x40
 8009f1c:	e7cb      	b.n	8009eb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x75a>
 8009f1e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8009f20:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009f22:	4694      	mov	ip, r2
 8009f24:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8009f26:	4463      	add	r3, ip
 8009f28:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8009f2a:	930c      	str	r3, [sp, #48]	@ 0x30
 8009f2c:	f7f6 faca 	bl	80004c4 <__aeabi_fadd>
 8009f30:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009f32:	900e      	str	r0, [sp, #56]	@ 0x38
 8009f34:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009f36:	f7f6 fac5 	bl	80004c4 <__aeabi_fadd>
 8009f3a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8009f3c:	900d      	str	r0, [sp, #52]	@ 0x34
 8009f3e:	1c38      	adds	r0, r7, #0
 8009f40:	f7f6 fac0 	bl	80004c4 <__aeabi_fadd>
 8009f44:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8009f46:	1c07      	adds	r7, r0, #0
 8009f48:	18f6      	adds	r6, r6, r3
 8009f4a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8009f4c:	429e      	cmp	r6, r3
 8009f4e:	db12      	blt.n	8009f76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x81a>
 8009f50:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009f52:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8009f54:	3301      	adds	r3, #1
 8009f56:	930c      	str	r3, [sp, #48]	@ 0x30
 8009f58:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8009f5a:	1af6      	subs	r6, r6, r3
 8009f5c:	f7f6 fab2 	bl	80004c4 <__aeabi_fadd>
 8009f60:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8009f62:	1c07      	adds	r7, r0, #0
 8009f64:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8009f66:	f7f6 faad 	bl	80004c4 <__aeabi_fadd>
 8009f6a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8009f6c:	900e      	str	r0, [sp, #56]	@ 0x38
 8009f6e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009f70:	f7f6 faa8 	bl	80004c4 <__aeabi_fadd>
 8009f74:	900d      	str	r0, [sp, #52]	@ 0x34
 8009f76:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009f78:	3b01      	subs	r3, #1
 8009f7a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009f7c:	2301      	movs	r3, #1
 8009f7e:	e765      	b.n	8009e4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f0>
 8009f80:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009f82:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8009f84:	4684      	mov	ip, r0
 8009f86:	4463      	add	r3, ip
 8009f88:	001a      	movs	r2, r3
 8009f8a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8009f8c:	1a1b      	subs	r3, r3, r0
 8009f8e:	2900      	cmp	r1, #0
 8009f90:	d009      	beq.n	8009fa6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x84a>
 8009f92:	932f      	str	r3, [sp, #188]	@ 0xbc
 8009f94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009f96:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8009f98:	9333      	str	r3, [sp, #204]	@ 0xcc
 8009f9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009f9c:	9129      	str	r1, [sp, #164]	@ 0xa4
 8009f9e:	922e      	str	r2, [sp, #184]	@ 0xb8
 8009fa0:	9736      	str	r7, [sp, #216]	@ 0xd8
 8009fa2:	9330      	str	r3, [sp, #192]	@ 0xc0
 8009fa4:	962d      	str	r6, [sp, #180]	@ 0xb4
 8009fa6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009fa8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009faa:	1a9b      	subs	r3, r3, r2
 8009fac:	930a      	str	r3, [sp, #40]	@ 0x28
 8009fae:	e67b      	b.n	8009ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x54c>
 8009fb0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8009fb2:	681b      	ldr	r3, [r3, #0]
 8009fb4:	2b00      	cmp	r3, #0
 8009fb6:	d104      	bne.n	8009fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x866>
 8009fb8:	4b03      	ldr	r3, [pc, #12]	@ (8009fc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x86c>)
 8009fba:	6818      	ldr	r0, [r3, #0]
 8009fbc:	6803      	ldr	r3, [r0, #0]
 8009fbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009fc0:	4798      	blx	r3
 8009fc2:	b06b      	add	sp, #428	@ 0x1ac
 8009fc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009fc6:	46c0      	nop			@ (mov r8, r8)
 8009fc8:	20003578 	.word	0x20003578

08009fcc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8009fcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009fce:	0004      	movs	r4, r0
 8009fd0:	a806      	add	r0, sp, #24
 8009fd2:	7800      	ldrb	r0, [r0, #0]
 8009fd4:	ad08      	add	r5, sp, #32
 8009fd6:	4684      	mov	ip, r0
 8009fd8:	2700      	movs	r7, #0
 8009fda:	5fef      	ldrsh	r7, [r5, r7]
 8009fdc:	ad09      	add	r5, sp, #36	@ 0x24
 8009fde:	782e      	ldrb	r6, [r5, #0]
 8009fe0:	6061      	str	r1, [r4, #4]
 8009fe2:	2500      	movs	r5, #0
 8009fe4:	4661      	mov	r1, ip
 8009fe6:	9807      	ldr	r0, [sp, #28]
 8009fe8:	8263      	strh	r3, [r4, #18]
 8009fea:	1ce3      	adds	r3, r4, #3
 8009fec:	8025      	strh	r5, [r4, #0]
 8009fee:	7221      	strb	r1, [r4, #8]
 8009ff0:	7266      	strb	r6, [r4, #9]
 8009ff2:	60e0      	str	r0, [r4, #12]
 8009ff4:	8222      	strh	r2, [r4, #16]
 8009ff6:	82a7      	strh	r7, [r4, #20]
 8009ff8:	82e5      	strh	r5, [r4, #22]
 8009ffa:	8325      	strh	r5, [r4, #24]
 8009ffc:	8365      	strh	r5, [r4, #26]
 8009ffe:	83a5      	strh	r5, [r4, #28]
 800a000:	83e5      	strh	r5, [r4, #30]
 800a002:	8425      	strh	r5, [r4, #32]
 800a004:	77dd      	strb	r5, [r3, #31]
 800a006:	42ae      	cmp	r6, r5
 800a008:	d027      	beq.n	800a05a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x8e>
 800a00a:	6803      	ldr	r3, [r0, #0]
 800a00c:	695b      	ldr	r3, [r3, #20]
 800a00e:	4798      	blx	r3
 800a010:	0007      	movs	r7, r0
 800a012:	42a8      	cmp	r0, r5
 800a014:	d021      	beq.n	800a05a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x8e>
 800a016:	68e0      	ldr	r0, [r4, #12]
 800a018:	0039      	movs	r1, r7
 800a01a:	6803      	ldr	r3, [r0, #0]
 800a01c:	68db      	ldr	r3, [r3, #12]
 800a01e:	4798      	blx	r3
 800a020:	1e05      	subs	r5, r0, #0
 800a022:	d01a      	beq.n	800a05a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x8e>
 800a024:	2680      	movs	r6, #128	@ 0x80
 800a026:	7b43      	ldrb	r3, [r0, #13]
 800a028:	7a82      	ldrb	r2, [r0, #10]
 800a02a:	005b      	lsls	r3, r3, #1
 800a02c:	0076      	lsls	r6, r6, #1
 800a02e:	4033      	ands	r3, r6
 800a030:	4313      	orrs	r3, r2
 800a032:	8423      	strh	r3, [r4, #32]
 800a034:	7a63      	ldrb	r3, [r4, #9]
 800a036:	2b06      	cmp	r3, #6
 800a038:	d10f      	bne.n	800a05a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x8e>
 800a03a:	68e0      	ldr	r0, [r4, #12]
 800a03c:	002a      	movs	r2, r5
 800a03e:	6803      	ldr	r3, [r0, #0]
 800a040:	0039      	movs	r1, r7
 800a042:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a044:	4798      	blx	r3
 800a046:	0002      	movs	r2, r0
 800a048:	7b68      	ldrb	r0, [r5, #13]
 800a04a:	7aab      	ldrb	r3, [r5, #10]
 800a04c:	0040      	lsls	r0, r0, #1
 800a04e:	4030      	ands	r0, r6
 800a050:	4318      	orrs	r0, r3
 800a052:	8c23      	ldrh	r3, [r4, #32]
 800a054:	1880      	adds	r0, r0, r2
 800a056:	18c0      	adds	r0, r0, r3
 800a058:	8420      	strh	r0, [r4, #32]
 800a05a:	0020      	movs	r0, r4
 800a05c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800a060 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800a060:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a062:	2500      	movs	r5, #0
 800a064:	000e      	movs	r6, r1
 800a066:	002c      	movs	r4, r5
 800a068:	b089      	sub	sp, #36	@ 0x24
 800a06a:	9003      	str	r0, [sp, #12]
 800a06c:	9204      	str	r2, [sp, #16]
 800a06e:	9305      	str	r3, [sp, #20]
 800a070:	9502      	str	r5, [sp, #8]
 800a072:	9501      	str	r5, [sp, #4]
 800a074:	9b04      	ldr	r3, [sp, #16]
 800a076:	429d      	cmp	r5, r3
 800a078:	da29      	bge.n	800a0ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6e>
 800a07a:	2300      	movs	r3, #0
 800a07c:	9307      	str	r3, [sp, #28]
 800a07e:	4b15      	ldr	r3, [pc, #84]	@ (800a0d4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x74>)
 800a080:	429c      	cmp	r4, r3
 800a082:	d003      	beq.n	800a08c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x2c>
 800a084:	4b14      	ldr	r3, [pc, #80]	@ (800a0d8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x78>)
 800a086:	429c      	cmp	r4, r3
 800a088:	d000      	beq.n	800a08c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x2c>
 800a08a:	9402      	str	r4, [sp, #8]
 800a08c:	ab07      	add	r3, sp, #28
 800a08e:	0032      	movs	r2, r6
 800a090:	9905      	ldr	r1, [sp, #20]
 800a092:	9803      	ldr	r0, [sp, #12]
 800a094:	f003 fa04 	bl	800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800a098:	1e04      	subs	r4, r0, #0
 800a09a:	d018      	beq.n	800a0ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6e>
 800a09c:	280a      	cmp	r0, #10
 800a09e:	d016      	beq.n	800a0ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6e>
 800a0a0:	9a07      	ldr	r2, [sp, #28]
 800a0a2:	2a00      	cmp	r2, #0
 800a0a4:	d011      	beq.n	800a0ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6a>
 800a0a6:	2380      	movs	r3, #128	@ 0x80
 800a0a8:	7b57      	ldrb	r7, [r2, #13]
 800a0aa:	005b      	lsls	r3, r3, #1
 800a0ac:	007f      	lsls	r7, r7, #1
 800a0ae:	7a90      	ldrb	r0, [r2, #10]
 800a0b0:	401f      	ands	r7, r3
 800a0b2:	6833      	ldr	r3, [r6, #0]
 800a0b4:	4307      	orrs	r7, r0
 800a0b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a0b8:	9902      	ldr	r1, [sp, #8]
 800a0ba:	0030      	movs	r0, r6
 800a0bc:	8894      	ldrh	r4, [r2, #4]
 800a0be:	4798      	blx	r3
 800a0c0:	9b01      	ldr	r3, [sp, #4]
 800a0c2:	19c7      	adds	r7, r0, r7
 800a0c4:	19df      	adds	r7, r3, r7
 800a0c6:	b2bb      	uxth	r3, r7
 800a0c8:	9301      	str	r3, [sp, #4]
 800a0ca:	3501      	adds	r5, #1
 800a0cc:	e7d2      	b.n	800a074 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x14>
 800a0ce:	9801      	ldr	r0, [sp, #4]
 800a0d0:	b009      	add	sp, #36	@ 0x24
 800a0d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a0d4:	0000feff 	.word	0x0000feff
 800a0d8:	0000200b 	.word	0x0000200b

0800a0dc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800a0dc:	b530      	push	{r4, r5, lr}
 800a0de:	2a02      	cmp	r2, #2
 800a0e0:	d011      	beq.n	800a106 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800a0e2:	2a03      	cmp	r2, #3
 800a0e4:	d01c      	beq.n	800a120 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800a0e6:	2a01      	cmp	r2, #1
 800a0e8:	d10c      	bne.n	800a104 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800a0ea:	2304      	movs	r3, #4
 800a0ec:	5ec2      	ldrsh	r2, [r0, r3]
 800a0ee:	888b      	ldrh	r3, [r1, #4]
 800a0f0:	8801      	ldrh	r1, [r0, #0]
 800a0f2:	1a5b      	subs	r3, r3, r1
 800a0f4:	2406      	movs	r4, #6
 800a0f6:	5f01      	ldrsh	r1, [r0, r4]
 800a0f8:	8844      	ldrh	r4, [r0, #2]
 800a0fa:	1a9b      	subs	r3, r3, r2
 800a0fc:	8004      	strh	r4, [r0, #0]
 800a0fe:	8043      	strh	r3, [r0, #2]
 800a100:	8081      	strh	r1, [r0, #4]
 800a102:	80c2      	strh	r2, [r0, #6]
 800a104:	bd30      	pop	{r4, r5, pc}
 800a106:	88cb      	ldrh	r3, [r1, #6]
 800a108:	8842      	ldrh	r2, [r0, #2]
 800a10a:	1a9b      	subs	r3, r3, r2
 800a10c:	88c2      	ldrh	r2, [r0, #6]
 800a10e:	1a9b      	subs	r3, r3, r2
 800a110:	888a      	ldrh	r2, [r1, #4]
 800a112:	8801      	ldrh	r1, [r0, #0]
 800a114:	8043      	strh	r3, [r0, #2]
 800a116:	1a52      	subs	r2, r2, r1
 800a118:	8881      	ldrh	r1, [r0, #4]
 800a11a:	1a52      	subs	r2, r2, r1
 800a11c:	8002      	strh	r2, [r0, #0]
 800a11e:	e7f1      	b.n	800a104 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800a120:	2306      	movs	r3, #6
 800a122:	5ec2      	ldrsh	r2, [r0, r3]
 800a124:	2300      	movs	r3, #0
 800a126:	5ec5      	ldrsh	r5, [r0, r3]
 800a128:	2304      	movs	r3, #4
 800a12a:	5ec4      	ldrsh	r4, [r0, r3]
 800a12c:	88cb      	ldrh	r3, [r1, #6]
 800a12e:	8841      	ldrh	r1, [r0, #2]
 800a130:	8082      	strh	r2, [r0, #4]
 800a132:	1a5b      	subs	r3, r3, r1
 800a134:	1a9b      	subs	r3, r3, r2
 800a136:	8003      	strh	r3, [r0, #0]
 800a138:	8045      	strh	r5, [r0, #2]
 800a13a:	80c4      	strh	r4, [r0, #6]
 800a13c:	e7e2      	b.n	800a104 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
	...

0800a140 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800a140:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a142:	b0a3      	sub	sp, #140	@ 0x8c
 800a144:	9318      	str	r3, [sp, #96]	@ 0x60
 800a146:	ab28      	add	r3, sp, #160	@ 0xa0
 800a148:	2700      	movs	r7, #0
 800a14a:	5fdf      	ldrsh	r7, [r3, r7]
 800a14c:	ab2b      	add	r3, sp, #172	@ 0xac
 800a14e:	781b      	ldrb	r3, [r3, #0]
 800a150:	9210      	str	r2, [sp, #64]	@ 0x40
 800a152:	930c      	str	r3, [sp, #48]	@ 0x30
 800a154:	ab2e      	add	r3, sp, #184	@ 0xb8
 800a156:	781c      	ldrb	r4, [r3, #0]
 800a158:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800a15a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800a15c:	9014      	str	r0, [sp, #80]	@ 0x50
 800a15e:	911c      	str	r1, [sp, #112]	@ 0x70
 800a160:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a162:	889b      	ldrh	r3, [r3, #4]
 800a164:	8812      	ldrh	r2, [r2, #0]
 800a166:	6828      	ldr	r0, [r5, #0]
 800a168:	189b      	adds	r3, r3, r2
 800a16a:	b21b      	sxth	r3, r3
 800a16c:	9316      	str	r3, [sp, #88]	@ 0x58
 800a16e:	6803      	ldr	r3, [r0, #0]
 800a170:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a172:	4798      	blx	r3
 800a174:	682b      	ldr	r3, [r5, #0]
 800a176:	901d      	str	r0, [sp, #116]	@ 0x74
 800a178:	7b1a      	ldrb	r2, [r3, #12]
 800a17a:	921a      	str	r2, [sp, #104]	@ 0x68
 800a17c:	7adb      	ldrb	r3, [r3, #11]
 800a17e:	931b      	str	r3, [sp, #108]	@ 0x6c
 800a180:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800a182:	9315      	str	r3, [sp, #84]	@ 0x54
 800a184:	2c00      	cmp	r4, #0
 800a186:	d007      	beq.n	800a198 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x58>
 800a188:	7c2b      	ldrb	r3, [r5, #16]
 800a18a:	3b06      	subs	r3, #6
 800a18c:	425a      	negs	r2, r3
 800a18e:	4153      	adcs	r3, r2
 800a190:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800a192:	3301      	adds	r3, #1
 800a194:	189b      	adds	r3, r3, r2
 800a196:	9315      	str	r3, [sp, #84]	@ 0x54
 800a198:	2300      	movs	r3, #0
 800a19a:	001c      	movs	r4, r3
 800a19c:	930f      	str	r3, [sp, #60]	@ 0x3c
 800a19e:	930e      	str	r3, [sp, #56]	@ 0x38
 800a1a0:	930d      	str	r3, [sp, #52]	@ 0x34
 800a1a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a1a4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800a1a6:	4293      	cmp	r3, r2
 800a1a8:	db00      	blt.n	800a1ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x6c>
 800a1aa:	e084      	b.n	800a2b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800a1ac:	2237      	movs	r2, #55	@ 0x37
 800a1ae:	2300      	movs	r3, #0
 800a1b0:	a912      	add	r1, sp, #72	@ 0x48
 800a1b2:	1852      	adds	r2, r2, r1
 800a1b4:	9320      	str	r3, [sp, #128]	@ 0x80
 800a1b6:	9321      	str	r3, [sp, #132]	@ 0x84
 800a1b8:	7013      	strb	r3, [r2, #0]
 800a1ba:	4ba3      	ldr	r3, [pc, #652]	@ (800a448 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x308>)
 800a1bc:	429c      	cmp	r4, r3
 800a1be:	d003      	beq.n	800a1c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x88>
 800a1c0:	4ba2      	ldr	r3, [pc, #648]	@ (800a44c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x30c>)
 800a1c2:	429c      	cmp	r4, r3
 800a1c4:	d000      	beq.n	800a1c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x88>
 800a1c6:	940d      	str	r4, [sp, #52]	@ 0x34
 800a1c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a1ca:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800a1cc:	682a      	ldr	r2, [r5, #0]
 800a1ce:	428b      	cmp	r3, r1
 800a1d0:	db3c      	blt.n	800a24c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 800a1d2:	6813      	ldr	r3, [r2, #0]
 800a1d4:	0010      	movs	r0, r2
 800a1d6:	695b      	ldr	r3, [r3, #20]
 800a1d8:	4798      	blx	r3
 800a1da:	0004      	movs	r4, r0
 800a1dc:	6828      	ldr	r0, [r5, #0]
 800a1de:	aa12      	add	r2, sp, #72	@ 0x48
 800a1e0:	6803      	ldr	r3, [r0, #0]
 800a1e2:	0021      	movs	r1, r4
 800a1e4:	689b      	ldr	r3, [r3, #8]
 800a1e6:	001e      	movs	r6, r3
 800a1e8:	2337      	movs	r3, #55	@ 0x37
 800a1ea:	189b      	adds	r3, r3, r2
 800a1ec:	aa21      	add	r2, sp, #132	@ 0x84
 800a1ee:	47b0      	blx	r6
 800a1f0:	9020      	str	r0, [sp, #128]	@ 0x80
 800a1f2:	4b95      	ldr	r3, [pc, #596]	@ (800a448 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x308>)
 800a1f4:	429c      	cmp	r4, r3
 800a1f6:	d100      	bne.n	800a1fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xba>
 800a1f8:	e0f5      	b.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a1fa:	4b94      	ldr	r3, [pc, #592]	@ (800a44c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x30c>)
 800a1fc:	429c      	cmp	r4, r3
 800a1fe:	d100      	bne.n	800a202 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xc2>
 800a200:	e0f1      	b.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a202:	2c00      	cmp	r4, #0
 800a204:	d100      	bne.n	800a208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xc8>
 800a206:	e118      	b.n	800a43a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2fa>
 800a208:	2c0a      	cmp	r4, #10
 800a20a:	d05c      	beq.n	800a2c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x186>
 800a20c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800a20e:	2a00      	cmp	r2, #0
 800a210:	d029      	beq.n	800a266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x126>
 800a212:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a214:	8894      	ldrh	r4, [r2, #4]
 800a216:	2b00      	cmp	r3, #0
 800a218:	d034      	beq.n	800a284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x144>
 800a21a:	2180      	movs	r1, #128	@ 0x80
 800a21c:	7b53      	ldrb	r3, [r2, #13]
 800a21e:	0049      	lsls	r1, r1, #1
 800a220:	005b      	lsls	r3, r3, #1
 800a222:	400b      	ands	r3, r1
 800a224:	7a91      	ldrb	r1, [r2, #10]
 800a226:	4319      	orrs	r1, r3
 800a228:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a22a:	910f      	str	r1, [sp, #60]	@ 0x3c
 800a22c:	2b01      	cmp	r3, #1
 800a22e:	d130      	bne.n	800a292 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800a230:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800a232:	1a7f      	subs	r7, r7, r1
 800a234:	2b00      	cmp	r3, #0
 800a236:	d14c      	bne.n	800a2d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800a238:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a23a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800a23c:	19db      	adds	r3, r3, r7
 800a23e:	189b      	adds	r3, r3, r2
 800a240:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800a242:	2100      	movs	r1, #0
 800a244:	5e52      	ldrsh	r2, [r2, r1]
 800a246:	4293      	cmp	r3, r2
 800a248:	da4c      	bge.n	800a2e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1a4>
 800a24a:	e034      	b.n	800a2b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800a24c:	2337      	movs	r3, #55	@ 0x37
 800a24e:	a912      	add	r1, sp, #72	@ 0x48
 800a250:	185b      	adds	r3, r3, r1
 800a252:	9301      	str	r3, [sp, #4]
 800a254:	ab21      	add	r3, sp, #132	@ 0x84
 800a256:	9300      	str	r3, [sp, #0]
 800a258:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800a25a:	ab20      	add	r3, sp, #128	@ 0x80
 800a25c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800a25e:	f003 f975 	bl	800d54c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800a262:	0004      	movs	r4, r0
 800a264:	e7c5      	b.n	800a1f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb2>
 800a266:	6828      	ldr	r0, [r5, #0]
 800a268:	6803      	ldr	r3, [r0, #0]
 800a26a:	691b      	ldr	r3, [r3, #16]
 800a26c:	4798      	blx	r3
 800a26e:	4b76      	ldr	r3, [pc, #472]	@ (800a448 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x308>)
 800a270:	4298      	cmp	r0, r3
 800a272:	d100      	bne.n	800a276 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x136>
 800a274:	e0b7      	b.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a276:	4b75      	ldr	r3, [pc, #468]	@ (800a44c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x30c>)
 800a278:	4298      	cmp	r0, r3
 800a27a:	d100      	bne.n	800a27e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x13e>
 800a27c:	e0b3      	b.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a27e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a280:	2b00      	cmp	r3, #0
 800a282:	d101      	bne.n	800a288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x148>
 800a284:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a286:	18ff      	adds	r7, r7, r3
 800a288:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800a28a:	2a00      	cmp	r2, #0
 800a28c:	d1c5      	bne.n	800a21a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800a28e:	920f      	str	r2, [sp, #60]	@ 0x3c
 800a290:	e0a9      	b.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a292:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800a294:	2b00      	cmp	r3, #0
 800a296:	d100      	bne.n	800a29a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800a298:	e0d1      	b.n	800a43e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2fe>
 800a29a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a29c:	2b00      	cmp	r3, #0
 800a29e:	d118      	bne.n	800a2d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800a2a0:	6828      	ldr	r0, [r5, #0]
 800a2a2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800a2a4:	6803      	ldr	r3, [r0, #0]
 800a2a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a2a8:	4798      	blx	r3
 800a2aa:	183f      	adds	r7, r7, r0
 800a2ac:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800a2ae:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800a2b0:	1afb      	subs	r3, r7, r3
 800a2b2:	4293      	cmp	r3, r2
 800a2b4:	dd16      	ble.n	800a2e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1a4>
 800a2b6:	2c00      	cmp	r4, #0
 800a2b8:	d100      	bne.n	800a2bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17c>
 800a2ba:	e0be      	b.n	800a43a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2fa>
 800a2bc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 800a2be:	3501      	adds	r5, #1
 800a2c0:	2c0a      	cmp	r4, #10
 800a2c2:	d000      	beq.n	800a2c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x186>
 800a2c4:	e0aa      	b.n	800a41c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2dc>
 800a2c6:	240a      	movs	r4, #10
 800a2c8:	4260      	negs	r0, r4
 800a2ca:	4160      	adcs	r0, r4
 800a2cc:	b2c0      	uxtb	r0, r0
 800a2ce:	b023      	add	sp, #140	@ 0x8c
 800a2d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2d2:	6828      	ldr	r0, [r5, #0]
 800a2d4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800a2d6:	6803      	ldr	r3, [r0, #0]
 800a2d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a2da:	4798      	blx	r3
 800a2dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a2de:	1a3f      	subs	r7, r7, r0
 800a2e0:	2b01      	cmp	r3, #1
 800a2e2:	d0a9      	beq.n	800a238 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 800a2e4:	2080      	movs	r0, #128	@ 0x80
 800a2e6:	2109      	movs	r1, #9
 800a2e8:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800a2ea:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800a2ec:	0040      	lsls	r0, r0, #1
 800a2ee:	2200      	movs	r2, #0
 800a2f0:	5e9b      	ldrsh	r3, [r3, r2]
 800a2f2:	7b72      	ldrb	r2, [r6, #13]
 800a2f4:	5671      	ldrsb	r1, [r6, r1]
 800a2f6:	0152      	lsls	r2, r2, #5
 800a2f8:	4010      	ands	r0, r2
 800a2fa:	79b2      	ldrb	r2, [r6, #6]
 800a2fc:	19c9      	adds	r1, r1, r7
 800a2fe:	4302      	orrs	r2, r0
 800a300:	1852      	adds	r2, r2, r1
 800a302:	429a      	cmp	r2, r3
 800a304:	db6f      	blt.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a306:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800a308:	4291      	cmp	r1, r2
 800a30a:	da6c      	bge.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a30c:	2200      	movs	r2, #0
 800a30e:	9213      	str	r2, [sp, #76]	@ 0x4c
 800a310:	42bb      	cmp	r3, r7
 800a312:	dd02      	ble.n	800a31a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1da>
 800a314:	1bdb      	subs	r3, r3, r7
 800a316:	b29b      	uxth	r3, r3
 800a318:	9313      	str	r3, [sp, #76]	@ 0x4c
 800a31a:	6828      	ldr	r0, [r5, #0]
 800a31c:	6803      	ldr	r3, [r0, #0]
 800a31e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a320:	4798      	blx	r3
 800a322:	2280      	movs	r2, #128	@ 0x80
 800a324:	2140      	movs	r1, #64	@ 0x40
 800a326:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800a328:	0052      	lsls	r2, r2, #1
 800a32a:	9311      	str	r3, [sp, #68]	@ 0x44
 800a32c:	7b5b      	ldrb	r3, [r3, #13]
 800a32e:	00de      	lsls	r6, r3, #3
 800a330:	4016      	ands	r6, r2
 800a332:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800a334:	7a12      	ldrb	r2, [r2, #8]
 800a336:	4332      	orrs	r2, r6
 800a338:	420b      	tst	r3, r1
 800a33a:	d002      	beq.n	800a342 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x202>
 800a33c:	4944      	ldr	r1, [pc, #272]	@ (800a450 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x310>)
 800a33e:	1852      	adds	r2, r2, r1
 800a340:	b212      	sxth	r2, r2
 800a342:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800a344:	1840      	adds	r0, r0, r1
 800a346:	1a86      	subs	r6, r0, r2
 800a348:	b2b6      	uxth	r6, r6
 800a34a:	b232      	sxth	r2, r6
 800a34c:	9212      	str	r2, [sp, #72]	@ 0x48
 800a34e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800a350:	2102      	movs	r1, #2
 800a352:	5e52      	ldrsh	r2, [r2, r1]
 800a354:	9912      	ldr	r1, [sp, #72]	@ 0x48
 800a356:	428a      	cmp	r2, r1
 800a358:	dd49      	ble.n	800a3ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ae>
 800a35a:	2180      	movs	r1, #128	@ 0x80
 800a35c:	011b      	lsls	r3, r3, #4
 800a35e:	0049      	lsls	r1, r1, #1
 800a360:	400b      	ands	r3, r1
 800a362:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800a364:	79c9      	ldrb	r1, [r1, #7]
 800a366:	430b      	orrs	r3, r1
 800a368:	9912      	ldr	r1, [sp, #72]	@ 0x48
 800a36a:	185b      	adds	r3, r3, r1
 800a36c:	429a      	cmp	r2, r3
 800a36e:	dc3a      	bgt.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a370:	1b96      	subs	r6, r2, r6
 800a372:	b236      	sxth	r6, r6
 800a374:	9212      	str	r2, [sp, #72]	@ 0x48
 800a376:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800a378:	6828      	ldr	r0, [r5, #0]
 800a37a:	9317      	str	r3, [sp, #92]	@ 0x5c
 800a37c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800a37e:	2b00      	cmp	r3, #0
 800a380:	d137      	bne.n	800a3f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800a382:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800a384:	b2b6      	uxth	r6, r6
 800a386:	681b      	ldr	r3, [r3, #0]
 800a388:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a38a:	9319      	str	r3, [sp, #100]	@ 0x64
 800a38c:	6803      	ldr	r3, [r0, #0]
 800a38e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a390:	4798      	blx	r3
 800a392:	79ab      	ldrb	r3, [r5, #6]
 800a394:	aa12      	add	r2, sp, #72	@ 0x48
 800a396:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a398:	7bab      	ldrb	r3, [r5, #14]
 800a39a:	930a      	str	r3, [sp, #40]	@ 0x28
 800a39c:	2337      	movs	r3, #55	@ 0x37
 800a39e:	189b      	adds	r3, r3, r2
 800a3a0:	781b      	ldrb	r3, [r3, #0]
 800a3a2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800a3a4:	9309      	str	r3, [sp, #36]	@ 0x24
 800a3a6:	68ab      	ldr	r3, [r5, #8]
 800a3a8:	9007      	str	r0, [sp, #28]
 800a3aa:	9308      	str	r3, [sp, #32]
 800a3ac:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800a3ae:	9603      	str	r6, [sp, #12]
 800a3b0:	9306      	str	r3, [sp, #24]
 800a3b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800a3b4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800a3b6:	9305      	str	r3, [sp, #20]
 800a3b8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800a3ba:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 800a3bc:	9304      	str	r3, [sp, #16]
 800a3be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a3c0:	9302      	str	r3, [sp, #8]
 800a3c2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a3c4:	9301      	str	r3, [sp, #4]
 800a3c6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a3c8:	19db      	adds	r3, r3, r7
 800a3ca:	b21b      	sxth	r3, r3
 800a3cc:	9300      	str	r3, [sp, #0]
 800a3ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a3d0:	8852      	ldrh	r2, [r2, #2]
 800a3d2:	881b      	ldrh	r3, [r3, #0]
 800a3d4:	0412      	lsls	r2, r2, #16
 800a3d6:	431a      	orrs	r2, r3
 800a3d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a3da:	8899      	ldrh	r1, [r3, #4]
 800a3dc:	88db      	ldrh	r3, [r3, #6]
 800a3de:	041b      	lsls	r3, r3, #16
 800a3e0:	430b      	orrs	r3, r1
 800a3e2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 800a3e4:	47b0      	blx	r6
 800a3e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a3e8:	3301      	adds	r3, #1
 800a3ea:	930e      	str	r3, [sp, #56]	@ 0x38
 800a3ec:	e6d9      	b.n	800a1a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x62>
 800a3ee:	2600      	movs	r6, #0
 800a3f0:	e7c1      	b.n	800a376 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 800a3f2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800a3f4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 800a3f6:	689b      	ldr	r3, [r3, #8]
 800a3f8:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800a3fa:	9311      	str	r3, [sp, #68]	@ 0x44
 800a3fc:	681b      	ldr	r3, [r3, #0]
 800a3fe:	9205      	str	r2, [sp, #20]
 800a400:	9704      	str	r7, [sp, #16]
 800a402:	79aa      	ldrb	r2, [r5, #6]
 800a404:	9203      	str	r2, [sp, #12]
 800a406:	7baa      	ldrb	r2, [r5, #14]
 800a408:	9202      	str	r2, [sp, #8]
 800a40a:	68aa      	ldr	r2, [r5, #8]
 800a40c:	9000      	str	r0, [sp, #0]
 800a40e:	9201      	str	r2, [sp, #4]
 800a410:	689e      	ldr	r6, [r3, #8]
 800a412:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800a414:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800a416:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800a418:	47b0      	blx	r6
 800a41a:	e7e4      	b.n	800a3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a6>
 800a41c:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800a41e:	429d      	cmp	r5, r3
 800a420:	db00      	blt.n	800a424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800a422:	e751      	b.n	800a2c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x188>
 800a424:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800a426:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800a428:	f7f9 fffe 	bl	8004428 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800a42c:	1e04      	subs	r4, r0, #0
 800a42e:	d004      	beq.n	800a43a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2fa>
 800a430:	280a      	cmp	r0, #10
 800a432:	d100      	bne.n	800a436 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2f6>
 800a434:	e747      	b.n	800a2c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x186>
 800a436:	3501      	adds	r5, #1
 800a438:	e7f0      	b.n	800a41c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2dc>
 800a43a:	2400      	movs	r4, #0
 800a43c:	e744      	b.n	800a2c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x188>
 800a43e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a440:	2b00      	cmp	r3, #0
 800a442:	d100      	bne.n	800a446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x306>
 800a444:	e732      	b.n	800a2ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x16c>
 800a446:	e74d      	b.n	800a2e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1a4>
 800a448:	0000feff 	.word	0x0000feff
 800a44c:	0000200b 	.word	0x0000200b
 800a450:	fffffe00 	.word	0xfffffe00

0800a454 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800a454:	b530      	push	{r4, r5, lr}
 800a456:	8b45      	ldrh	r5, [r0, #26]
 800a458:	8ac4      	ldrh	r4, [r0, #22]
 800a45a:	8343      	strh	r3, [r0, #26]
 800a45c:	1964      	adds	r4, r4, r5
 800a45e:	1ae4      	subs	r4, r4, r3
 800a460:	82c4      	strh	r4, [r0, #22]
 800a462:	8b83      	ldrh	r3, [r0, #28]
 800a464:	8b04      	ldrh	r4, [r0, #24]
 800a466:	18a2      	adds	r2, r4, r2
 800a468:	1864      	adds	r4, r4, r1
 800a46a:	1a59      	subs	r1, r3, r1
 800a46c:	83c2      	strh	r2, [r0, #30]
 800a46e:	8304      	strh	r4, [r0, #24]
 800a470:	8381      	strh	r1, [r0, #28]
 800a472:	bd30      	pop	{r4, r5, pc}

0800a474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800a474:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a476:	0004      	movs	r4, r0
 800a478:	8a45      	ldrh	r5, [r0, #18]
 800a47a:	68c0      	ldr	r0, [r0, #12]
 800a47c:	b089      	sub	sp, #36	@ 0x24
 800a47e:	6803      	ldr	r3, [r0, #0]
 800a480:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a482:	4798      	blx	r3
 800a484:	0043      	lsls	r3, r0, #1
 800a486:	2214      	movs	r2, #20
 800a488:	5ea0      	ldrsh	r0, [r4, r2]
 800a48a:	2201      	movs	r2, #1
 800a48c:	181b      	adds	r3, r3, r0
 800a48e:	429d      	cmp	r5, r3
 800a490:	db00      	blt.n	800a494 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x20>
 800a492:	2200      	movs	r2, #0
 800a494:	7a60      	ldrb	r0, [r4, #9]
 800a496:	b2d2      	uxtb	r2, r2
 800a498:	3801      	subs	r0, #1
 800a49a:	9203      	str	r2, [sp, #12]
 800a49c:	2805      	cmp	r0, #5
 800a49e:	d804      	bhi.n	800a4aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x36>
 800a4a0:	f7f5 fe42 	bl	8000128 <__gnu_thumb1_case_uqi>
 800a4a4:	42100850 	.word	0x42100850
 800a4a8:	4747      	.short	0x4747
 800a4aa:	2500      	movs	r5, #0
 800a4ac:	9503      	str	r5, [sp, #12]
 800a4ae:	9502      	str	r5, [sp, #8]
 800a4b0:	9501      	str	r5, [sp, #4]
 800a4b2:	e011      	b.n	800a4d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x64>
 800a4b4:	17ea      	asrs	r2, r5, #31
 800a4b6:	0fd9      	lsrs	r1, r3, #31
 800a4b8:	429d      	cmp	r5, r3
 800a4ba:	414a      	adcs	r2, r1
 800a4bc:	b2d3      	uxtb	r3, r2
 800a4be:	9302      	str	r3, [sp, #8]
 800a4c0:	2500      	movs	r5, #0
 800a4c2:	e7f5      	b.n	800a4b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3c>
 800a4c4:	17ea      	asrs	r2, r5, #31
 800a4c6:	0fd9      	lsrs	r1, r3, #31
 800a4c8:	429d      	cmp	r5, r3
 800a4ca:	414a      	adcs	r2, r1
 800a4cc:	b2d3      	uxtb	r3, r2
 800a4ce:	9302      	str	r3, [sp, #8]
 800a4d0:	2300      	movs	r3, #0
 800a4d2:	9d03      	ldr	r5, [sp, #12]
 800a4d4:	9303      	str	r3, [sp, #12]
 800a4d6:	9301      	str	r3, [sp, #4]
 800a4d8:	2300      	movs	r3, #0
 800a4da:	82e3      	strh	r3, [r4, #22]
 800a4dc:	8323      	strh	r3, [r4, #24]
 800a4de:	9304      	str	r3, [sp, #16]
 800a4e0:	9305      	str	r3, [sp, #20]
 800a4e2:	2200      	movs	r2, #0
 800a4e4:	8823      	ldrh	r3, [r4, #0]
 800a4e6:	9207      	str	r2, [sp, #28]
 800a4e8:	2b20      	cmp	r3, #32
 800a4ea:	d030      	beq.n	800a54e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xda>
 800a4ec:	495c      	ldr	r1, [pc, #368]	@ (800a660 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ec>)
 800a4ee:	185e      	adds	r6, r3, r1
 800a4f0:	4271      	negs	r1, r6
 800a4f2:	414e      	adcs	r6, r1
 800a4f4:	495b      	ldr	r1, [pc, #364]	@ (800a664 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f0>)
 800a4f6:	b2f6      	uxtb	r6, r6
 800a4f8:	428b      	cmp	r3, r1
 800a4fa:	d005      	beq.n	800a508 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x94>
 800a4fc:	495a      	ldr	r1, [pc, #360]	@ (800a668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>)
 800a4fe:	2601      	movs	r6, #1
 800a500:	428b      	cmp	r3, r1
 800a502:	d001      	beq.n	800a508 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x94>
 800a504:	0016      	movs	r6, r2
 800a506:	9305      	str	r3, [sp, #20]
 800a508:	7a21      	ldrb	r1, [r4, #8]
 800a50a:	ab07      	add	r3, sp, #28
 800a50c:	68e2      	ldr	r2, [r4, #12]
 800a50e:	6860      	ldr	r0, [r4, #4]
 800a510:	f002 ffc6 	bl	800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800a514:	8020      	strh	r0, [r4, #0]
 800a516:	2800      	cmp	r0, #0
 800a518:	d11d      	bne.n	800a556 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800a51a:	2300      	movs	r3, #0
 800a51c:	8ba1      	ldrh	r1, [r4, #28]
 800a51e:	000a      	movs	r2, r1
 800a520:	0020      	movs	r0, r4
 800a522:	f7ff ff97 	bl	800a454 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800a526:	e067      	b.n	800a5f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800a528:	2500      	movs	r5, #0
 800a52a:	2301      	movs	r3, #1
 800a52c:	9503      	str	r5, [sp, #12]
 800a52e:	9502      	str	r5, [sp, #8]
 800a530:	e7d1      	b.n	800a4d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x62>
 800a532:	17ea      	asrs	r2, r5, #31
 800a534:	0fd9      	lsrs	r1, r3, #31
 800a536:	429d      	cmp	r5, r3
 800a538:	414a      	adcs	r2, r1
 800a53a:	2500      	movs	r5, #0
 800a53c:	b2d3      	uxtb	r3, r2
 800a53e:	9301      	str	r3, [sp, #4]
 800a540:	9502      	str	r5, [sp, #8]
 800a542:	e7c9      	b.n	800a4d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x64>
 800a544:	2500      	movs	r5, #0
 800a546:	2301      	movs	r3, #1
 800a548:	9503      	str	r5, [sp, #12]
 800a54a:	9302      	str	r3, [sp, #8]
 800a54c:	e7b0      	b.n	800a4b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3c>
 800a54e:	2320      	movs	r3, #32
 800a550:	2601      	movs	r6, #1
 800a552:	9305      	str	r3, [sp, #20]
 800a554:	e7d8      	b.n	800a508 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x94>
 800a556:	8b63      	ldrh	r3, [r4, #26]
 800a558:	3301      	adds	r3, #1
 800a55a:	8363      	strh	r3, [r4, #26]
 800a55c:	280a      	cmp	r0, #10
 800a55e:	d0dc      	beq.n	800a51a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa6>
 800a560:	9a07      	ldr	r2, [sp, #28]
 800a562:	2a00      	cmp	r2, #0
 800a564:	d129      	bne.n	800a5ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x146>
 800a566:	4b3f      	ldr	r3, [pc, #252]	@ (800a664 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f0>)
 800a568:	4298      	cmp	r0, r3
 800a56a:	d002      	beq.n	800a572 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xfe>
 800a56c:	4b3e      	ldr	r3, [pc, #248]	@ (800a668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>)
 800a56e:	4298      	cmp	r0, r3
 800a570:	d1b7      	bne.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a572:	8820      	ldrh	r0, [r4, #0]
 800a574:	8ba1      	ldrh	r1, [r4, #28]
 800a576:	2820      	cmp	r0, #32
 800a578:	d003      	beq.n	800a582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10e>
 800a57a:	4f3b      	ldr	r7, [pc, #236]	@ (800a668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>)
 800a57c:	2300      	movs	r3, #0
 800a57e:	42b8      	cmp	r0, r7
 800a580:	d103      	bne.n	800a58a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x116>
 800a582:	1e33      	subs	r3, r6, #0
 800a584:	d101      	bne.n	800a58a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x116>
 800a586:	2301      	movs	r3, #1
 800a588:	9104      	str	r1, [sp, #16]
 800a58a:	1852      	adds	r2, r2, r1
 800a58c:	b297      	uxth	r7, r2
 800a58e:	8b22      	ldrh	r2, [r4, #24]
 800a590:	83a7      	strh	r7, [r4, #28]
 800a592:	19d2      	adds	r2, r2, r7
 800a594:	4694      	mov	ip, r2
 800a596:	9a03      	ldr	r2, [sp, #12]
 800a598:	8a20      	ldrh	r0, [r4, #16]
 800a59a:	2a00      	cmp	r2, #0
 800a59c:	d103      	bne.n	800a5a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x132>
 800a59e:	2d00      	cmp	r5, #0
 800a5a0:	d03d      	beq.n	800a61e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1aa>
 800a5a2:	2b00      	cmp	r3, #0
 800a5a4:	d01a      	beq.n	800a5dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x168>
 800a5a6:	8c23      	ldrh	r3, [r4, #32]
 800a5a8:	4463      	add	r3, ip
 800a5aa:	4298      	cmp	r0, r3
 800a5ac:	da30      	bge.n	800a610 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19c>
 800a5ae:	8ae3      	ldrh	r3, [r4, #22]
 800a5b0:	2b00      	cmp	r3, #0
 800a5b2:	d02d      	beq.n	800a610 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19c>
 800a5b4:	4584      	cmp	ip, r0
 800a5b6:	dd94      	ble.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a5b8:	e017      	b.n	800a5ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x176>
 800a5ba:	2080      	movs	r0, #128	@ 0x80
 800a5bc:	8893      	ldrh	r3, [r2, #4]
 800a5be:	0040      	lsls	r0, r0, #1
 800a5c0:	8023      	strh	r3, [r4, #0]
 800a5c2:	7b57      	ldrb	r7, [r2, #13]
 800a5c4:	9905      	ldr	r1, [sp, #20]
 800a5c6:	007f      	lsls	r7, r7, #1
 800a5c8:	4007      	ands	r7, r0
 800a5ca:	7a90      	ldrb	r0, [r2, #10]
 800a5cc:	4307      	orrs	r7, r0
 800a5ce:	68e0      	ldr	r0, [r4, #12]
 800a5d0:	6803      	ldr	r3, [r0, #0]
 800a5d2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a5d4:	4798      	blx	r3
 800a5d6:	183f      	adds	r7, r7, r0
 800a5d8:	b2ba      	uxth	r2, r7
 800a5da:	e7ca      	b.n	800a572 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xfe>
 800a5dc:	4584      	cmp	ip, r0
 800a5de:	dc00      	bgt.n	800a5e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x16e>
 800a5e0:	e77f      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a5e2:	8ae3      	ldrh	r3, [r4, #22]
 800a5e4:	2b00      	cmp	r3, #0
 800a5e6:	d100      	bne.n	800a5ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x176>
 800a5e8:	e77b      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a5ea:	2201      	movs	r2, #1
 800a5ec:	1ce3      	adds	r3, r4, #3
 800a5ee:	77da      	strb	r2, [r3, #31]
 800a5f0:	8be3      	ldrh	r3, [r4, #30]
 800a5f2:	8c22      	ldrh	r2, [r4, #32]
 800a5f4:	189b      	adds	r3, r3, r2
 800a5f6:	83e3      	strh	r3, [r4, #30]
 800a5f8:	68e0      	ldr	r0, [r4, #12]
 800a5fa:	6803      	ldr	r3, [r0, #0]
 800a5fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a5fe:	4798      	blx	r3
 800a600:	2214      	movs	r2, #20
 800a602:	5ea3      	ldrsh	r3, [r4, r2]
 800a604:	1818      	adds	r0, r3, r0
 800a606:	8a63      	ldrh	r3, [r4, #18]
 800a608:	1a18      	subs	r0, r3, r0
 800a60a:	8260      	strh	r0, [r4, #18]
 800a60c:	b009      	add	sp, #36	@ 0x24
 800a60e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a610:	2300      	movs	r3, #0
 800a612:	003a      	movs	r2, r7
 800a614:	0039      	movs	r1, r7
 800a616:	0020      	movs	r0, r4
 800a618:	f7ff ff1c 	bl	800a454 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800a61c:	e761      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a61e:	4584      	cmp	ip, r0
 800a620:	dd15      	ble.n	800a64e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1da>
 800a622:	9a01      	ldr	r2, [sp, #4]
 800a624:	2a00      	cmp	r2, #0
 800a626:	d001      	beq.n	800a62c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800a628:	2301      	movs	r3, #1
 800a62a:	e778      	b.n	800a51e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xaa>
 800a62c:	9a02      	ldr	r2, [sp, #8]
 800a62e:	2a00      	cmp	r2, #0
 800a630:	d100      	bne.n	800a634 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c0>
 800a632:	e756      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a634:	2b00      	cmp	r3, #0
 800a636:	d000      	beq.n	800a63a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800a638:	e753      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a63a:	2e00      	cmp	r6, #0
 800a63c:	d002      	beq.n	800a644 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800a63e:	3301      	adds	r3, #1
 800a640:	9a04      	ldr	r2, [sp, #16]
 800a642:	e76d      	b.n	800a520 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xac>
 800a644:	8ae3      	ldrh	r3, [r4, #22]
 800a646:	2b00      	cmp	r3, #0
 800a648:	d100      	bne.n	800a64c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d8>
 800a64a:	e74a      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a64c:	e7d4      	b.n	800a5f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800a64e:	2b00      	cmp	r3, #0
 800a650:	d000      	beq.n	800a654 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e0>
 800a652:	e746      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a654:	2e00      	cmp	r6, #0
 800a656:	d100      	bne.n	800a65a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e6>
 800a658:	e743      	b.n	800a4e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x6e>
 800a65a:	3301      	adds	r3, #1
 800a65c:	9a04      	ldr	r2, [sp, #16]
 800a65e:	e7da      	b.n	800a616 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a2>
 800a660:	ffffdff5 	.word	0xffffdff5
 800a664:	0000feff 	.word	0x0000feff
 800a668:	0000200b 	.word	0x0000200b

0800a66c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800a66c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a66e:	b091      	sub	sp, #68	@ 0x44
 800a670:	001e      	movs	r6, r3
 800a672:	ab16      	add	r3, sp, #88	@ 0x58
 800a674:	0004      	movs	r4, r0
 800a676:	000f      	movs	r7, r1
 800a678:	9205      	str	r2, [sp, #20]
 800a67a:	2500      	movs	r5, #0
 800a67c:	5f5d      	ldrsh	r5, [r3, r5]
 800a67e:	2900      	cmp	r1, #0
 800a680:	d01a      	beq.n	800a6b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4c>
 800a682:	6833      	ldr	r3, [r6, #0]
 800a684:	0030      	movs	r0, r6
 800a686:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a688:	4798      	blx	r3
 800a68a:	9b05      	ldr	r3, [sp, #20]
 800a68c:	4240      	negs	r0, r0
 800a68e:	b2aa      	uxth	r2, r5
 800a690:	b200      	sxth	r0, r0
 800a692:	ad07      	add	r5, sp, #28
 800a694:	9002      	str	r0, [sp, #8]
 800a696:	9601      	str	r6, [sp, #4]
 800a698:	9300      	str	r3, [sp, #0]
 800a69a:	9703      	str	r7, [sp, #12]
 800a69c:	4b0e      	ldr	r3, [pc, #56]	@ (800a6d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x6c>)
 800a69e:	0021      	movs	r1, r4
 800a6a0:	0028      	movs	r0, r5
 800a6a2:	f7ff fc93 	bl	8009fcc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800a6a6:	2601      	movs	r6, #1
 800a6a8:	0028      	movs	r0, r5
 800a6aa:	f7ff fee3 	bl	800a474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800a6ae:	882b      	ldrh	r3, [r5, #0]
 800a6b0:	2b00      	cmp	r3, #0
 800a6b2:	d00d      	beq.n	800a6d0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x64>
 800a6b4:	3601      	adds	r6, #1
 800a6b6:	e7f7      	b.n	800a6a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x3c>
 800a6b8:	f002 ffd9 	bl	800d66e <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a6bc:	2601      	movs	r6, #1
 800a6be:	380a      	subs	r0, #10
 800a6c0:	4243      	negs	r3, r0
 800a6c2:	4158      	adcs	r0, r3
 800a6c4:	1836      	adds	r6, r6, r0
 800a6c6:	0020      	movs	r0, r4
 800a6c8:	f002 ffd1 	bl	800d66e <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a6cc:	2800      	cmp	r0, #0
 800a6ce:	d1f6      	bne.n	800a6be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x52>
 800a6d0:	b2b0      	uxth	r0, r6
 800a6d2:	b011      	add	sp, #68	@ 0x44
 800a6d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6d6:	46c0      	nop			@ (mov r8, r8)
 800a6d8:	0000ffff 	.word	0x0000ffff

0800a6dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800a6dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a6de:	b0e5      	sub	sp, #404	@ 0x194
 800a6e0:	001c      	movs	r4, r3
 800a6e2:	9b6a      	ldr	r3, [sp, #424]	@ 0x1a8
 800a6e4:	9109      	str	r1, [sp, #36]	@ 0x24
 800a6e6:	900b      	str	r0, [sp, #44]	@ 0x2c
 800a6e8:	0011      	movs	r1, r2
 800a6ea:	2b00      	cmp	r3, #0
 800a6ec:	d100      	bne.n	800a6f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14>
 800a6ee:	e0f7      	b.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a6f0:	6823      	ldr	r3, [r4, #0]
 800a6f2:	2b00      	cmp	r3, #0
 800a6f4:	d100      	bne.n	800a6f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c>
 800a6f6:	e0f3      	b.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a6f8:	7ba3      	ldrb	r3, [r4, #14]
 800a6fa:	2b00      	cmp	r3, #0
 800a6fc:	d100      	bne.n	800a700 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24>
 800a6fe:	e0ef      	b.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a700:	2208      	movs	r2, #8
 800a702:	a80c      	add	r0, sp, #48	@ 0x30
 800a704:	f008 fb37 	bl	8012d76 <memcpy>
 800a708:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a70a:	ad0e      	add	r5, sp, #56	@ 0x38
 800a70c:	2204      	movs	r2, #4
 800a70e:	5e9a      	ldrsh	r2, [r3, r2]
 800a710:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a712:	a80c      	add	r0, sp, #48	@ 0x30
 800a714:	2106      	movs	r1, #6
 800a716:	5e5b      	ldrsh	r3, [r3, r1]
 800a718:	2100      	movs	r1, #0
 800a71a:	80eb      	strh	r3, [r5, #6]
 800a71c:	80aa      	strh	r2, [r5, #4]
 800a71e:	910e      	str	r1, [sp, #56]	@ 0x38
 800a720:	79a2      	ldrb	r2, [r4, #6]
 800a722:	0029      	movs	r1, r5
 800a724:	f7ff fcda 	bl	800a0dc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800a728:	0029      	movs	r1, r5
 800a72a:	79a2      	ldrb	r2, [r4, #6]
 800a72c:	0028      	movs	r0, r5
 800a72e:	f7ff fcd5 	bl	800a0dc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800a732:	a819      	add	r0, sp, #100	@ 0x64
 800a734:	f002 fb4c 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 800a738:	6820      	ldr	r0, [r4, #0]
 800a73a:	6803      	ldr	r3, [r0, #0]
 800a73c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a73e:	4798      	blx	r3
 800a740:	0005      	movs	r5, r0
 800a742:	6820      	ldr	r0, [r4, #0]
 800a744:	6803      	ldr	r3, [r0, #0]
 800a746:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a748:	4798      	blx	r3
 800a74a:	9a6b      	ldr	r2, [sp, #428]	@ 0x1ac
 800a74c:	002b      	movs	r3, r5
 800a74e:	996a      	ldr	r1, [sp, #424]	@ 0x1a8
 800a750:	9000      	str	r0, [sp, #0]
 800a752:	a819      	add	r0, sp, #100	@ 0x64
 800a754:	f002 fb9b 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a758:	7923      	ldrb	r3, [r4, #4]
 800a75a:	6820      	ldr	r0, [r4, #0]
 800a75c:	930a      	str	r3, [sp, #40]	@ 0x28
 800a75e:	6803      	ldr	r3, [r0, #0]
 800a760:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a762:	4798      	blx	r3
 800a764:	220c      	movs	r2, #12
 800a766:	5ea3      	ldrsh	r3, [r4, r2]
 800a768:	0006      	movs	r6, r0
 800a76a:	181b      	adds	r3, r3, r0
 800a76c:	9308      	str	r3, [sp, #32]
 800a76e:	6823      	ldr	r3, [r4, #0]
 800a770:	a832      	add	r0, sp, #200	@ 0xc8
 800a772:	7a5d      	ldrb	r5, [r3, #9]
 800a774:	f002 fb2c 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 800a778:	7c23      	ldrb	r3, [r4, #16]
 800a77a:	2b00      	cmp	r3, #0
 800a77c:	d00f      	beq.n	800a79e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc2>
 800a77e:	6820      	ldr	r0, [r4, #0]
 800a780:	6803      	ldr	r3, [r0, #0]
 800a782:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a784:	4798      	blx	r3
 800a786:	0007      	movs	r7, r0
 800a788:	6820      	ldr	r0, [r4, #0]
 800a78a:	6803      	ldr	r3, [r0, #0]
 800a78c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a78e:	4798      	blx	r3
 800a790:	003b      	movs	r3, r7
 800a792:	9000      	str	r0, [sp, #0]
 800a794:	9a6b      	ldr	r2, [sp, #428]	@ 0x1ac
 800a796:	996a      	ldr	r1, [sp, #424]	@ 0x1a8
 800a798:	a832      	add	r0, sp, #200	@ 0xc8
 800a79a:	f002 fb78 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a79e:	a90e      	add	r1, sp, #56	@ 0x38
 800a7a0:	88cb      	ldrh	r3, [r1, #6]
 800a7a2:	888a      	ldrh	r2, [r1, #4]
 800a7a4:	7be0      	ldrb	r0, [r4, #15]
 800a7a6:	7c21      	ldrb	r1, [r4, #16]
 800a7a8:	1a12      	subs	r2, r2, r0
 800a7aa:	9103      	str	r1, [sp, #12]
 800a7ac:	200c      	movs	r0, #12
 800a7ae:	5e21      	ldrsh	r1, [r4, r0]
 800a7b0:	b292      	uxth	r2, r2
 800a7b2:	9102      	str	r1, [sp, #8]
 800a7b4:	6821      	ldr	r1, [r4, #0]
 800a7b6:	a810      	add	r0, sp, #64	@ 0x40
 800a7b8:	9101      	str	r1, [sp, #4]
 800a7ba:	7961      	ldrb	r1, [r4, #5]
 800a7bc:	9100      	str	r1, [sp, #0]
 800a7be:	a932      	add	r1, sp, #200	@ 0xc8
 800a7c0:	f7ff fc04 	bl	8009fcc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800a7c4:	9b08      	ldr	r3, [sp, #32]
 800a7c6:	2b00      	cmp	r3, #0
 800a7c8:	dc5b      	bgt.n	800a882 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800a7ca:	ae19      	add	r6, sp, #100	@ 0x64
 800a7cc:	7c23      	ldrb	r3, [r4, #16]
 800a7ce:	2b00      	cmp	r3, #0
 800a7d0:	d100      	bne.n	800a7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800a7d2:	e0ae      	b.n	800a932 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800a7d4:	ad10      	add	r5, sp, #64	@ 0x40
 800a7d6:	0028      	movs	r0, r5
 800a7d8:	f7ff fe4c 	bl	800a474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800a7dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a7de:	2b00      	cmp	r3, #0
 800a7e0:	d100      	bne.n	800a7e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x108>
 800a7e2:	e0a2      	b.n	800a92a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800a7e4:	7c27      	ldrb	r7, [r4, #16]
 800a7e6:	2264      	movs	r2, #100	@ 0x64
 800a7e8:	0031      	movs	r1, r6
 800a7ea:	a84b      	add	r0, sp, #300	@ 0x12c
 800a7ec:	f008 fac3 	bl	8012d76 <memcpy>
 800a7f0:	2f00      	cmp	r7, #0
 800a7f2:	d100      	bne.n	800a7f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x11a>
 800a7f4:	e0a5      	b.n	800a942 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 800a7f6:	231e      	movs	r3, #30
 800a7f8:	5ee8      	ldrsh	r0, [r5, r3]
 800a7fa:	7921      	ldrb	r1, [r4, #4]
 800a7fc:	ab0e      	add	r3, sp, #56	@ 0x38
 800a7fe:	2901      	cmp	r1, #1
 800a800:	d000      	beq.n	800a804 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x128>
 800a802:	e089      	b.n	800a918 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 800a804:	2204      	movs	r2, #4
 800a806:	5e9a      	ldrsh	r2, [r3, r2]
 800a808:	1a10      	subs	r0, r2, r0
 800a80a:	0fc2      	lsrs	r2, r0, #31
 800a80c:	1812      	adds	r2, r2, r0
 800a80e:	1052      	asrs	r2, r2, #1
 800a810:	b212      	sxth	r2, r2
 800a812:	7c23      	ldrb	r3, [r4, #16]
 800a814:	2b00      	cmp	r3, #0
 800a816:	d100      	bne.n	800a81a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13e>
 800a818:	e089      	b.n	800a92e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800a81a:	ab10      	add	r3, sp, #64	@ 0x40
 800a81c:	8ad9      	ldrh	r1, [r3, #22]
 800a81e:	ad0e      	add	r5, sp, #56	@ 0x38
 800a820:	2002      	movs	r0, #2
 800a822:	5e2b      	ldrsh	r3, [r5, r0]
 800a824:	2052      	movs	r0, #82	@ 0x52
 800a826:	af04      	add	r7, sp, #16
 800a828:	183f      	adds	r7, r7, r0
 800a82a:	7838      	ldrb	r0, [r7, #0]
 800a82c:	9105      	str	r1, [sp, #20]
 800a82e:	2100      	movs	r1, #0
 800a830:	af0c      	add	r7, sp, #48	@ 0x30
 800a832:	9006      	str	r0, [sp, #24]
 800a834:	9604      	str	r6, [sp, #16]
 800a836:	9103      	str	r1, [sp, #12]
 800a838:	9402      	str	r4, [sp, #8]
 800a83a:	9701      	str	r7, [sp, #4]
 800a83c:	8828      	ldrh	r0, [r5, #0]
 800a83e:	1882      	adds	r2, r0, r2
 800a840:	b212      	sxth	r2, r2
 800a842:	9200      	str	r2, [sp, #0]
 800a844:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800a846:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a848:	f7ff fc7a 	bl	800a140 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800a84c:	2800      	cmp	r0, #0
 800a84e:	d147      	bne.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a850:	466b      	mov	r3, sp
 800a852:	88e9      	ldrh	r1, [r5, #6]
 800a854:	8c1a      	ldrh	r2, [r3, #32]
 800a856:	886b      	ldrh	r3, [r5, #2]
 800a858:	3052      	adds	r0, #82	@ 0x52
 800a85a:	18d3      	adds	r3, r2, r3
 800a85c:	1a8a      	subs	r2, r1, r2
 800a85e:	80ea      	strh	r2, [r5, #6]
 800a860:	aa04      	add	r2, sp, #16
 800a862:	1812      	adds	r2, r2, r0
 800a864:	7812      	ldrb	r2, [r2, #0]
 800a866:	b21b      	sxth	r3, r3
 800a868:	806b      	strh	r3, [r5, #2]
 800a86a:	2a00      	cmp	r2, #0
 800a86c:	d138      	bne.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a86e:	6822      	ldr	r2, [r4, #0]
 800a870:	8879      	ldrh	r1, [r7, #2]
 800a872:	7a12      	ldrb	r2, [r2, #8]
 800a874:	1a9b      	subs	r3, r3, r2
 800a876:	88fa      	ldrh	r2, [r7, #6]
 800a878:	1852      	adds	r2, r2, r1
 800a87a:	b212      	sxth	r2, r2
 800a87c:	4293      	cmp	r3, r2
 800a87e:	dda5      	ble.n	800a7cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800a880:	e02e      	b.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a882:	7c23      	ldrb	r3, [r4, #16]
 800a884:	19ad      	adds	r5, r5, r6
 800a886:	2b00      	cmp	r3, #0
 800a888:	d02c      	beq.n	800a8e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x208>
 800a88a:	ab0e      	add	r3, sp, #56	@ 0x38
 800a88c:	2202      	movs	r2, #2
 800a88e:	5e9b      	ldrsh	r3, [r3, r2]
 800a890:	aa0c      	add	r2, sp, #48	@ 0x30
 800a892:	2102      	movs	r1, #2
 800a894:	5e52      	ldrsh	r2, [r2, r1]
 800a896:	195b      	adds	r3, r3, r5
 800a898:	4293      	cmp	r3, r2
 800a89a:	da96      	bge.n	800a7ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xee>
 800a89c:	ae10      	add	r6, sp, #64	@ 0x40
 800a89e:	0030      	movs	r0, r6
 800a8a0:	f7ff fde8 	bl	800a474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800a8a4:	8af6      	ldrh	r6, [r6, #22]
 800a8a6:	3e01      	subs	r6, #1
 800a8a8:	4b2a      	ldr	r3, [pc, #168]	@ (800a954 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x278>)
 800a8aa:	b2b6      	uxth	r6, r6
 800a8ac:	429e      	cmp	r6, r3
 800a8ae:	d004      	beq.n	800a8ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1de>
 800a8b0:	7961      	ldrb	r1, [r4, #5]
 800a8b2:	a819      	add	r0, sp, #100	@ 0x64
 800a8b4:	f7f9 fdb8 	bl	8004428 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800a8b8:	e7f5      	b.n	800a8a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ca>
 800a8ba:	466b      	mov	r3, sp
 800a8bc:	aa0e      	add	r2, sp, #56	@ 0x38
 800a8be:	8c1b      	ldrh	r3, [r3, #32]
 800a8c0:	8851      	ldrh	r1, [r2, #2]
 800a8c2:	1859      	adds	r1, r3, r1
 800a8c4:	8051      	strh	r1, [r2, #2]
 800a8c6:	88d1      	ldrh	r1, [r2, #6]
 800a8c8:	1acb      	subs	r3, r1, r3
 800a8ca:	80d3      	strh	r3, [r2, #6]
 800a8cc:	ab10      	add	r3, sp, #64	@ 0x40
 800a8ce:	881b      	ldrh	r3, [r3, #0]
 800a8d0:	2b00      	cmp	r3, #0
 800a8d2:	d005      	beq.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a8d4:	2333      	movs	r3, #51	@ 0x33
 800a8d6:	aa04      	add	r2, sp, #16
 800a8d8:	189b      	adds	r3, r3, r2
 800a8da:	7fdb      	ldrb	r3, [r3, #31]
 800a8dc:	2b00      	cmp	r3, #0
 800a8de:	d0d4      	beq.n	800a88a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800a8e0:	b065      	add	sp, #404	@ 0x194
 800a8e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8e4:	af0e      	add	r7, sp, #56	@ 0x38
 800a8e6:	2202      	movs	r2, #2
 800a8e8:	5ebb      	ldrsh	r3, [r7, r2]
 800a8ea:	aa0c      	add	r2, sp, #48	@ 0x30
 800a8ec:	2102      	movs	r1, #2
 800a8ee:	5e52      	ldrsh	r2, [r2, r1]
 800a8f0:	195b      	adds	r3, r3, r5
 800a8f2:	4293      	cmp	r3, r2
 800a8f4:	db00      	blt.n	800a8f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x21c>
 800a8f6:	e768      	b.n	800a7ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xee>
 800a8f8:	a819      	add	r0, sp, #100	@ 0x64
 800a8fa:	f002 feb8 	bl	800d66e <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a8fe:	2800      	cmp	r0, #0
 800a900:	d0ee      	beq.n	800a8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x204>
 800a902:	280a      	cmp	r0, #10
 800a904:	d1ee      	bne.n	800a8e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x208>
 800a906:	466b      	mov	r3, sp
 800a908:	887a      	ldrh	r2, [r7, #2]
 800a90a:	8c1b      	ldrh	r3, [r3, #32]
 800a90c:	189a      	adds	r2, r3, r2
 800a90e:	807a      	strh	r2, [r7, #2]
 800a910:	88fa      	ldrh	r2, [r7, #6]
 800a912:	1ad3      	subs	r3, r2, r3
 800a914:	80fb      	strh	r3, [r7, #6]
 800a916:	e7e5      	b.n	800a8e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x208>
 800a918:	2200      	movs	r2, #0
 800a91a:	2902      	cmp	r1, #2
 800a91c:	d000      	beq.n	800a920 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x244>
 800a91e:	e778      	b.n	800a812 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800a920:	7be1      	ldrb	r1, [r4, #15]
 800a922:	889a      	ldrh	r2, [r3, #4]
 800a924:	1a52      	subs	r2, r2, r1
 800a926:	1a12      	subs	r2, r2, r0
 800a928:	e772      	b.n	800a810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x134>
 800a92a:	7be2      	ldrb	r2, [r4, #15]
 800a92c:	e771      	b.n	800a812 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800a92e:	490a      	ldr	r1, [pc, #40]	@ (800a958 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x27c>)
 800a930:	e775      	b.n	800a81e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800a932:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a934:	2b00      	cmp	r3, #0
 800a936:	d0f8      	beq.n	800a92a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800a938:	2264      	movs	r2, #100	@ 0x64
 800a93a:	0031      	movs	r1, r6
 800a93c:	a84b      	add	r0, sp, #300	@ 0x12c
 800a93e:	f008 fa1a 	bl	8012d76 <memcpy>
 800a942:	2300      	movs	r3, #0
 800a944:	4a04      	ldr	r2, [pc, #16]	@ (800a958 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x27c>)
 800a946:	6821      	ldr	r1, [r4, #0]
 800a948:	a84b      	add	r0, sp, #300	@ 0x12c
 800a94a:	f7ff fb89 	bl	800a060 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800a94e:	b200      	sxth	r0, r0
 800a950:	e753      	b.n	800a7fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x11e>
 800a952:	46c0      	nop			@ (mov r8, r8)
 800a954:	0000ffff 	.word	0x0000ffff
 800a958:	00007fff 	.word	0x00007fff

0800a95c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800a95c:	b530      	push	{r4, r5, lr}
 800a95e:	0005      	movs	r5, r0
 800a960:	2400      	movs	r4, #0
 800a962:	2b03      	cmp	r3, #3
 800a964:	d807      	bhi.n	800a976 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1a>
 800a966:	0018      	movs	r0, r3
 800a968:	f7f5 fbde 	bl	8000128 <__gnu_thumb1_case_uqi>
 800a96c:	140e0702 	.word	0x140e0702
 800a970:	2300      	movs	r3, #0
 800a972:	5eec      	ldrsh	r4, [r5, r3]
 800a974:	1864      	adds	r4, r4, r1
 800a976:	0020      	movs	r0, r4
 800a978:	bd30      	pop	{r4, r5, pc}
 800a97a:	882c      	ldrh	r4, [r5, #0]
 800a97c:	88a8      	ldrh	r0, [r5, #4]
 800a97e:	1824      	adds	r4, r4, r0
 800a980:	b224      	sxth	r4, r4
 800a982:	1aa4      	subs	r4, r4, r2
 800a984:	3c01      	subs	r4, #1
 800a986:	e7f6      	b.n	800a976 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1a>
 800a988:	882c      	ldrh	r4, [r5, #0]
 800a98a:	88a8      	ldrh	r0, [r5, #4]
 800a98c:	1824      	adds	r4, r4, r0
 800a98e:	b224      	sxth	r4, r4
 800a990:	1a64      	subs	r4, r4, r1
 800a992:	e7f7      	b.n	800a984 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x28>
 800a994:	2300      	movs	r3, #0
 800a996:	5eec      	ldrsh	r4, [r5, r3]
 800a998:	18a4      	adds	r4, r4, r2
 800a99a:	e7ec      	b.n	800a976 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1a>

0800a99c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800a99c:	b530      	push	{r4, r5, lr}
 800a99e:	0005      	movs	r5, r0
 800a9a0:	2400      	movs	r4, #0
 800a9a2:	2b03      	cmp	r3, #3
 800a9a4:	d807      	bhi.n	800a9b6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x1a>
 800a9a6:	0018      	movs	r0, r3
 800a9a8:	f7f5 fbbe 	bl	8000128 <__gnu_thumb1_case_uqi>
 800a9ac:	120b0702 	.word	0x120b0702
 800a9b0:	2302      	movs	r3, #2
 800a9b2:	5eec      	ldrsh	r4, [r5, r3]
 800a9b4:	18a4      	adds	r4, r4, r2
 800a9b6:	0020      	movs	r0, r4
 800a9b8:	bd30      	pop	{r4, r5, pc}
 800a9ba:	2302      	movs	r3, #2
 800a9bc:	5eec      	ldrsh	r4, [r5, r3]
 800a9be:	1864      	adds	r4, r4, r1
 800a9c0:	e7f9      	b.n	800a9b6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x1a>
 800a9c2:	886c      	ldrh	r4, [r5, #2]
 800a9c4:	88e8      	ldrh	r0, [r5, #6]
 800a9c6:	1824      	adds	r4, r4, r0
 800a9c8:	b224      	sxth	r4, r4
 800a9ca:	1aa4      	subs	r4, r4, r2
 800a9cc:	3c01      	subs	r4, #1
 800a9ce:	e7f2      	b.n	800a9b6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x1a>
 800a9d0:	886c      	ldrh	r4, [r5, #2]
 800a9d2:	88e8      	ldrh	r0, [r5, #6]
 800a9d4:	1824      	adds	r4, r4, r0
 800a9d6:	b224      	sxth	r4, r4
 800a9d8:	1a64      	subs	r4, r4, r1
 800a9da:	e7f7      	b.n	800a9cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x30>

0800a9dc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800a9dc:	2200      	movs	r2, #0
 800a9de:	4b01      	ldr	r3, [pc, #4]	@ (800a9e4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800a9e0:	601a      	str	r2, [r3, #0]
 800a9e2:	4770      	bx	lr
 800a9e4:	20003580 	.word	0x20003580

0800a9e8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800a9e8:	0003      	movs	r3, r0
 800a9ea:	2020      	movs	r0, #32
 800a9ec:	2b00      	cmp	r3, #0
 800a9ee:	d014      	beq.n	800aa1a <_ZN8touchgfx16TouchCalibration4clzuEm+0x32>
 800a9f0:	2000      	movs	r0, #0
 800a9f2:	0c1a      	lsrs	r2, r3, #16
 800a9f4:	4282      	cmp	r2, r0
 800a9f6:	d101      	bne.n	800a9fc <_ZN8touchgfx16TouchCalibration4clzuEm+0x14>
 800a9f8:	041b      	lsls	r3, r3, #16
 800a9fa:	3010      	adds	r0, #16
 800a9fc:	0e1a      	lsrs	r2, r3, #24
 800a9fe:	d101      	bne.n	800aa04 <_ZN8touchgfx16TouchCalibration4clzuEm+0x1c>
 800aa00:	3008      	adds	r0, #8
 800aa02:	021b      	lsls	r3, r3, #8
 800aa04:	0f1a      	lsrs	r2, r3, #28
 800aa06:	d101      	bne.n	800aa0c <_ZN8touchgfx16TouchCalibration4clzuEm+0x24>
 800aa08:	3004      	adds	r0, #4
 800aa0a:	011b      	lsls	r3, r3, #4
 800aa0c:	0f9a      	lsrs	r2, r3, #30
 800aa0e:	d101      	bne.n	800aa14 <_ZN8touchgfx16TouchCalibration4clzuEm+0x2c>
 800aa10:	3002      	adds	r0, #2
 800aa12:	009b      	lsls	r3, r3, #2
 800aa14:	43db      	mvns	r3, r3
 800aa16:	0fdb      	lsrs	r3, r3, #31
 800aa18:	18c0      	adds	r0, r0, r3
 800aa1a:	4770      	bx	lr

0800aa1c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800aa1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa1e:	b089      	sub	sp, #36	@ 0x24
 800aa20:	0007      	movs	r7, r0
 800aa22:	000c      	movs	r4, r1
 800aa24:	0015      	movs	r5, r2
 800aa26:	9302      	str	r3, [sp, #8]
 800aa28:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 800aa2a:	2800      	cmp	r0, #0
 800aa2c:	d005      	beq.n	800aa3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800aa2e:	2a00      	cmp	r2, #0
 800aa30:	d003      	beq.n	800aa3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800aa32:	291f      	cmp	r1, #31
 800aa34:	d801      	bhi.n	800aa3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800aa36:	2b1f      	cmp	r3, #31
 800aa38:	d903      	bls.n	800aa42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x26>
 800aa3a:	2000      	movs	r0, #0
 800aa3c:	6030      	str	r0, [r6, #0]
 800aa3e:	b009      	add	sp, #36	@ 0x24
 800aa40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa42:	2900      	cmp	r1, #0
 800aa44:	d111      	bne.n	800aa6a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4e>
 800aa46:	9b02      	ldr	r3, [sp, #8]
 800aa48:	2b00      	cmp	r3, #0
 800aa4a:	d009      	beq.n	800aa60 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x44>
 800aa4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800aa4e:	0002      	movs	r2, r0
 800aa50:	9300      	str	r3, [sp, #0]
 800aa52:	9601      	str	r6, [sp, #4]
 800aa54:	000b      	movs	r3, r1
 800aa56:	0028      	movs	r0, r5
 800aa58:	9902      	ldr	r1, [sp, #8]
 800aa5a:	f7ff ffdf 	bl	800aa1c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800aa5e:	e7ee      	b.n	800aa3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800aa60:	2301      	movs	r3, #1
 800aa62:	425b      	negs	r3, r3
 800aa64:	6033      	str	r3, [r6, #0]
 800aa66:	4820      	ldr	r0, [pc, #128]	@ (800aae8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0xcc>)
 800aa68:	e7e9      	b.n	800aa3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800aa6a:	0013      	movs	r3, r2
 800aa6c:	40cb      	lsrs	r3, r1
 800aa6e:	9303      	str	r3, [sp, #12]
 800aa70:	d106      	bne.n	800aa80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x64>
 800aa72:	0010      	movs	r0, r2
 800aa74:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800aa76:	4378      	muls	r0, r7
 800aa78:	f7f5 fbfa 	bl	8000270 <__aeabi_uidivmod>
 800aa7c:	6031      	str	r1, [r6, #0]
 800aa7e:	e7de      	b.n	800aa3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800aa80:	4088      	lsls	r0, r1
 800aa82:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800aa84:	f7f5 fbf4 	bl	8000270 <__aeabi_uidivmod>
 800aa88:	9b03      	ldr	r3, [sp, #12]
 800aa8a:	9104      	str	r1, [sp, #16]
 800aa8c:	4343      	muls	r3, r0
 800aa8e:	2001      	movs	r0, #1
 800aa90:	40a0      	lsls	r0, r4
 800aa92:	3801      	subs	r0, #1
 800aa94:	4005      	ands	r5, r0
 800aa96:	0028      	movs	r0, r5
 800aa98:	9305      	str	r3, [sp, #20]
 800aa9a:	f7ff ffa5 	bl	800a9e8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800aa9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800aaa0:	0001      	movs	r1, r0
 800aaa2:	003a      	movs	r2, r7
 800aaa4:	9300      	str	r3, [sp, #0]
 800aaa6:	0028      	movs	r0, r5
 800aaa8:	0023      	movs	r3, r4
 800aaaa:	9601      	str	r6, [sp, #4]
 800aaac:	f7ff ffb6 	bl	800aa1c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800aab0:	9b02      	ldr	r3, [sp, #8]
 800aab2:	0005      	movs	r5, r0
 800aab4:	9804      	ldr	r0, [sp, #16]
 800aab6:	18e4      	adds	r4, r4, r3
 800aab8:	f7ff ff96 	bl	800a9e8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800aabc:	aa07      	add	r2, sp, #28
 800aabe:	9201      	str	r2, [sp, #4]
 800aac0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800aac2:	0003      	movs	r3, r0
 800aac4:	0021      	movs	r1, r4
 800aac6:	9200      	str	r2, [sp, #0]
 800aac8:	9803      	ldr	r0, [sp, #12]
 800aaca:	9a04      	ldr	r2, [sp, #16]
 800aacc:	f7ff ffa6 	bl	800aa1c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800aad0:	6833      	ldr	r3, [r6, #0]
 800aad2:	9a07      	ldr	r2, [sp, #28]
 800aad4:	0004      	movs	r4, r0
 800aad6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800aad8:	1898      	adds	r0, r3, r2
 800aada:	f7f5 fbc9 	bl	8000270 <__aeabi_uidivmod>
 800aade:	9b05      	ldr	r3, [sp, #20]
 800aae0:	18c0      	adds	r0, r0, r3
 800aae2:	1940      	adds	r0, r0, r5
 800aae4:	1820      	adds	r0, r4, r0
 800aae6:	e7c9      	b.n	800aa7c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x60>
 800aae8:	7fffffff 	.word	0x7fffffff

0800aaec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800aaec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aaee:	b089      	sub	sp, #36	@ 0x24
 800aaf0:	9003      	str	r0, [sp, #12]
 800aaf2:	9105      	str	r1, [sp, #20]
 800aaf4:	0017      	movs	r7, r2
 800aaf6:	001d      	movs	r5, r3
 800aaf8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800aafa:	2601      	movs	r6, #1
 800aafc:	2800      	cmp	r0, #0
 800aafe:	da05      	bge.n	800ab0c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x20>
 800ab00:	4243      	negs	r3, r0
 800ab02:	9303      	str	r3, [sp, #12]
 800ab04:	6823      	ldr	r3, [r4, #0]
 800ab06:	3e02      	subs	r6, #2
 800ab08:	425b      	negs	r3, r3
 800ab0a:	6023      	str	r3, [r4, #0]
 800ab0c:	2f00      	cmp	r7, #0
 800ab0e:	da04      	bge.n	800ab1a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x2e>
 800ab10:	6823      	ldr	r3, [r4, #0]
 800ab12:	427f      	negs	r7, r7
 800ab14:	425b      	negs	r3, r3
 800ab16:	4276      	negs	r6, r6
 800ab18:	6023      	str	r3, [r4, #0]
 800ab1a:	2301      	movs	r3, #1
 800ab1c:	9304      	str	r3, [sp, #16]
 800ab1e:	2d00      	cmp	r5, #0
 800ab20:	da02      	bge.n	800ab28 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x3c>
 800ab22:	3b02      	subs	r3, #2
 800ab24:	426d      	negs	r5, r5
 800ab26:	9304      	str	r3, [sp, #16]
 800ab28:	0038      	movs	r0, r7
 800ab2a:	f7ff ff5d 	bl	800a9e8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ab2e:	aa07      	add	r2, sp, #28
 800ab30:	0003      	movs	r3, r0
 800ab32:	9201      	str	r2, [sp, #4]
 800ab34:	9905      	ldr	r1, [sp, #20]
 800ab36:	003a      	movs	r2, r7
 800ab38:	9500      	str	r5, [sp, #0]
 800ab3a:	9803      	ldr	r0, [sp, #12]
 800ab3c:	f7ff ff6e 	bl	800aa1c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ab40:	6823      	ldr	r3, [r4, #0]
 800ab42:	9a07      	ldr	r2, [sp, #28]
 800ab44:	0007      	movs	r7, r0
 800ab46:	0029      	movs	r1, r5
 800ab48:	1898      	adds	r0, r3, r2
 800ab4a:	f7f5 fc7b 	bl	8000444 <__aeabi_idivmod>
 800ab4e:	9b04      	ldr	r3, [sp, #16]
 800ab50:	19c0      	adds	r0, r0, r7
 800ab52:	6021      	str	r1, [r4, #0]
 800ab54:	429e      	cmp	r6, r3
 800ab56:	d000      	beq.n	800ab5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x6e>
 800ab58:	4240      	negs	r0, r0
 800ab5a:	1c73      	adds	r3, r6, #1
 800ab5c:	d105      	bne.n	800ab6a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800ab5e:	424b      	negs	r3, r1
 800ab60:	2900      	cmp	r1, #0
 800ab62:	db0a      	blt.n	800ab7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8e>
 800ab64:	6023      	str	r3, [r4, #0]
 800ab66:	b009      	add	sp, #36	@ 0x24
 800ab68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab6a:	2e01      	cmp	r6, #1
 800ab6c:	d1fb      	bne.n	800ab66 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
 800ab6e:	2900      	cmp	r1, #0
 800ab70:	daf9      	bge.n	800ab66 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
 800ab72:	1949      	adds	r1, r1, r5
 800ab74:	3801      	subs	r0, #1
 800ab76:	6021      	str	r1, [r4, #0]
 800ab78:	e7f5      	b.n	800ab66 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
 800ab7a:	1b5d      	subs	r5, r3, r5
 800ab7c:	3801      	subs	r0, #1
 800ab7e:	6025      	str	r5, [r4, #0]
 800ab80:	e7f1      	b.n	800ab66 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800ab84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ab84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab86:	4c1d      	ldr	r4, [pc, #116]	@ (800abfc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800ab88:	b087      	sub	sp, #28
 800ab8a:	69a3      	ldr	r3, [r4, #24]
 800ab8c:	0005      	movs	r5, r0
 800ab8e:	6806      	ldr	r6, [r0, #0]
 800ab90:	2b00      	cmp	r3, #0
 800ab92:	d104      	bne.n	800ab9e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800ab94:	6840      	ldr	r0, [r0, #4]
 800ab96:	602e      	str	r6, [r5, #0]
 800ab98:	6068      	str	r0, [r5, #4]
 800ab9a:	b007      	add	sp, #28
 800ab9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab9e:	0fda      	lsrs	r2, r3, #31
 800aba0:	68a1      	ldr	r1, [r4, #8]
 800aba2:	18d2      	adds	r2, r2, r3
 800aba4:	af05      	add	r7, sp, #20
 800aba6:	1052      	asrs	r2, r2, #1
 800aba8:	188a      	adds	r2, r1, r2
 800abaa:	9700      	str	r7, [sp, #0]
 800abac:	9205      	str	r2, [sp, #20]
 800abae:	69e1      	ldr	r1, [r4, #28]
 800abb0:	0032      	movs	r2, r6
 800abb2:	6820      	ldr	r0, [r4, #0]
 800abb4:	f7ff ff9a 	bl	800aaec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800abb8:	9700      	str	r7, [sp, #0]
 800abba:	0006      	movs	r6, r0
 800abbc:	69a3      	ldr	r3, [r4, #24]
 800abbe:	686a      	ldr	r2, [r5, #4]
 800abc0:	6a21      	ldr	r1, [r4, #32]
 800abc2:	6860      	ldr	r0, [r4, #4]
 800abc4:	f7ff ff92 	bl	800aaec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800abc8:	69a3      	ldr	r3, [r4, #24]
 800abca:	6961      	ldr	r1, [r4, #20]
 800abcc:	0fda      	lsrs	r2, r3, #31
 800abce:	18d2      	adds	r2, r2, r3
 800abd0:	1052      	asrs	r2, r2, #1
 800abd2:	188a      	adds	r2, r1, r2
 800abd4:	9700      	str	r7, [sp, #0]
 800abd6:	9205      	str	r2, [sp, #20]
 800abd8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800abda:	682a      	ldr	r2, [r5, #0]
 800abdc:	1836      	adds	r6, r6, r0
 800abde:	68e0      	ldr	r0, [r4, #12]
 800abe0:	f7ff ff84 	bl	800aaec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800abe4:	9700      	str	r7, [sp, #0]
 800abe6:	9003      	str	r0, [sp, #12]
 800abe8:	69a3      	ldr	r3, [r4, #24]
 800abea:	686a      	ldr	r2, [r5, #4]
 800abec:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800abee:	6920      	ldr	r0, [r4, #16]
 800abf0:	f7ff ff7c 	bl	800aaec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800abf4:	9b03      	ldr	r3, [sp, #12]
 800abf6:	1818      	adds	r0, r3, r0
 800abf8:	e7cd      	b.n	800ab96 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800abfa:	46c0      	nop			@ (mov r8, r8)
 800abfc:	20003584 	.word	0x20003584

0800ac00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ac00:	b510      	push	{r4, lr}
 800ac02:	4b07      	ldr	r3, [pc, #28]	@ (800ac20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ac04:	781b      	ldrb	r3, [r3, #0]
 800ac06:	2b01      	cmp	r3, #1
 800ac08:	d109      	bne.n	800ac1e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1e>
 800ac0a:	2300      	movs	r3, #0
 800ac0c:	5ec2      	ldrsh	r2, [r0, r3]
 800ac0e:	2400      	movs	r4, #0
 800ac10:	5f0b      	ldrsh	r3, [r1, r4]
 800ac12:	8003      	strh	r3, [r0, #0]
 800ac14:	4b03      	ldr	r3, [pc, #12]	@ (800ac24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ac16:	881b      	ldrh	r3, [r3, #0]
 800ac18:	3b01      	subs	r3, #1
 800ac1a:	1a9b      	subs	r3, r3, r2
 800ac1c:	800b      	strh	r3, [r1, #0]
 800ac1e:	bd10      	pop	{r4, pc}
 800ac20:	20003570 	.word	0x20003570
 800ac24:	2000356c 	.word	0x2000356c

0800ac28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ac28:	b510      	push	{r4, lr}
 800ac2a:	4b07      	ldr	r3, [pc, #28]	@ (800ac48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ac2c:	781b      	ldrb	r3, [r3, #0]
 800ac2e:	2b01      	cmp	r3, #1
 800ac30:	d108      	bne.n	800ac44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ac32:	2300      	movs	r3, #0
 800ac34:	5ec2      	ldrsh	r2, [r0, r3]
 800ac36:	4b05      	ldr	r3, [pc, #20]	@ (800ac4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ac38:	880c      	ldrh	r4, [r1, #0]
 800ac3a:	881b      	ldrh	r3, [r3, #0]
 800ac3c:	3b01      	subs	r3, #1
 800ac3e:	1b1b      	subs	r3, r3, r4
 800ac40:	8003      	strh	r3, [r0, #0]
 800ac42:	800a      	strh	r2, [r1, #0]
 800ac44:	bd10      	pop	{r4, pc}
 800ac46:	46c0      	nop			@ (mov r8, r8)
 800ac48:	20003570 	.word	0x20003570
 800ac4c:	2000356c 	.word	0x2000356c

0800ac50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ac50:	b510      	push	{r4, lr}
 800ac52:	4b0a      	ldr	r3, [pc, #40]	@ (800ac7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ac54:	781b      	ldrb	r3, [r3, #0]
 800ac56:	2b01      	cmp	r3, #1
 800ac58:	d10e      	bne.n	800ac78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ac5a:	2306      	movs	r3, #6
 800ac5c:	5ec1      	ldrsh	r1, [r0, r3]
 800ac5e:	2300      	movs	r3, #0
 800ac60:	5ec4      	ldrsh	r4, [r0, r3]
 800ac62:	4b07      	ldr	r3, [pc, #28]	@ (800ac80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ac64:	8842      	ldrh	r2, [r0, #2]
 800ac66:	881b      	ldrh	r3, [r3, #0]
 800ac68:	1852      	adds	r2, r2, r1
 800ac6a:	1a9b      	subs	r3, r3, r2
 800ac6c:	8003      	strh	r3, [r0, #0]
 800ac6e:	2204      	movs	r2, #4
 800ac70:	5e83      	ldrsh	r3, [r0, r2]
 800ac72:	8044      	strh	r4, [r0, #2]
 800ac74:	8081      	strh	r1, [r0, #4]
 800ac76:	80c3      	strh	r3, [r0, #6]
 800ac78:	bd10      	pop	{r4, pc}
 800ac7a:	46c0      	nop			@ (mov r8, r8)
 800ac7c:	20003570 	.word	0x20003570
 800ac80:	2000356c 	.word	0x2000356c

0800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800ac84:	4b08      	ldr	r3, [pc, #32]	@ (800aca8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800ac86:	781b      	ldrb	r3, [r3, #0]
 800ac88:	2b01      	cmp	r3, #1
 800ac8a:	d10c      	bne.n	800aca6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800ac8c:	2204      	movs	r2, #4
 800ac8e:	5e81      	ldrsh	r1, [r0, r2]
 800ac90:	8803      	ldrh	r3, [r0, #0]
 800ac92:	8842      	ldrh	r2, [r0, #2]
 800ac94:	8002      	strh	r2, [r0, #0]
 800ac96:	185a      	adds	r2, r3, r1
 800ac98:	4b04      	ldr	r3, [pc, #16]	@ (800acac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800ac9a:	881b      	ldrh	r3, [r3, #0]
 800ac9c:	1a9b      	subs	r3, r3, r2
 800ac9e:	8043      	strh	r3, [r0, #2]
 800aca0:	88c3      	ldrh	r3, [r0, #6]
 800aca2:	80c1      	strh	r1, [r0, #6]
 800aca4:	8083      	strh	r3, [r0, #4]
 800aca6:	4770      	bx	lr
 800aca8:	20003570 	.word	0x20003570
 800acac:	2000356c 	.word	0x2000356c

0800acb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800acb0:	b530      	push	{r4, r5, lr}
 800acb2:	4b07      	ldr	r3, [pc, #28]	@ (800acd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800acb4:	781b      	ldrb	r3, [r3, #0]
 800acb6:	2b01      	cmp	r3, #1
 800acb8:	d108      	bne.n	800accc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800acba:	2300      	movs	r3, #0
 800acbc:	5ec4      	ldrsh	r4, [r0, r3]
 800acbe:	2500      	movs	r5, #0
 800acc0:	5f4b      	ldrsh	r3, [r1, r5]
 800acc2:	8003      	strh	r3, [r0, #0]
 800acc4:	8893      	ldrh	r3, [r2, #4]
 800acc6:	3b01      	subs	r3, #1
 800acc8:	1b1b      	subs	r3, r3, r4
 800acca:	800b      	strh	r3, [r1, #0]
 800accc:	bd30      	pop	{r4, r5, pc}
 800acce:	46c0      	nop			@ (mov r8, r8)
 800acd0:	20003570 	.word	0x20003570

0800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800acd4:	b510      	push	{r4, lr}
 800acd6:	4b0a      	ldr	r3, [pc, #40]	@ (800ad00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800acd8:	0004      	movs	r4, r0
 800acda:	781b      	ldrb	r3, [r3, #0]
 800acdc:	000a      	movs	r2, r1
 800acde:	2b01      	cmp	r3, #1
 800ace0:	d10c      	bne.n	800acfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800ace2:	8803      	ldrh	r3, [r0, #0]
 800ace4:	8881      	ldrh	r1, [r0, #4]
 800ace6:	185b      	adds	r3, r3, r1
 800ace8:	3b01      	subs	r3, #1
 800acea:	8003      	strh	r3, [r0, #0]
 800acec:	1c81      	adds	r1, r0, #2
 800acee:	f7ff ffdf 	bl	800acb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800acf2:	2204      	movs	r2, #4
 800acf4:	5ea3      	ldrsh	r3, [r4, r2]
 800acf6:	88e2      	ldrh	r2, [r4, #6]
 800acf8:	80e3      	strh	r3, [r4, #6]
 800acfa:	80a2      	strh	r2, [r4, #4]
 800acfc:	bd10      	pop	{r4, pc}
 800acfe:	46c0      	nop			@ (mov r8, r8)
 800ad00:	20003570 	.word	0x20003570

0800ad04 <_ZN8touchgfx11Application13requestRedrawEv>:
 800ad04:	b510      	push	{r4, lr}
 800ad06:	4b07      	ldr	r3, [pc, #28]	@ (800ad24 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800ad08:	2400      	movs	r4, #0
 800ad0a:	2200      	movs	r2, #0
 800ad0c:	5e9a      	ldrsh	r2, [r3, r2]
 800ad0e:	4b06      	ldr	r3, [pc, #24]	@ (800ad28 <_ZN8touchgfx11Application13requestRedrawEv+0x24>)
 800ad10:	2100      	movs	r1, #0
 800ad12:	5e5b      	ldrsh	r3, [r3, r1]
 800ad14:	0001      	movs	r1, r0
 800ad16:	30fe      	adds	r0, #254	@ 0xfe
 800ad18:	31fc      	adds	r1, #252	@ 0xfc
 800ad1a:	634c      	str	r4, [r1, #52]	@ 0x34
 800ad1c:	86c2      	strh	r2, [r0, #54]	@ 0x36
 800ad1e:	8703      	strh	r3, [r0, #56]	@ 0x38
 800ad20:	bd10      	pop	{r4, pc}
 800ad22:	46c0      	nop			@ (mov r8, r8)
 800ad24:	2000356c 	.word	0x2000356c
 800ad28:	2000356e 	.word	0x2000356e

0800ad2c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800ad2c:	b510      	push	{r4, lr}
 800ad2e:	4b04      	ldr	r3, [pc, #16]	@ (800ad40 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x14>)
 800ad30:	6818      	ldr	r0, [r3, #0]
 800ad32:	2800      	cmp	r0, #0
 800ad34:	d002      	beq.n	800ad3c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>
 800ad36:	6803      	ldr	r3, [r0, #0]
 800ad38:	699b      	ldr	r3, [r3, #24]
 800ad3a:	4798      	blx	r3
 800ad3c:	bd10      	pop	{r4, pc}
 800ad3e:	46c0      	nop			@ (mov r8, r8)
 800ad40:	200035b4 	.word	0x200035b4

0800ad44 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800ad44:	4770      	bx	lr
	...

0800ad48 <_ZN8touchgfx11Application4drawEv>:
 800ad48:	b507      	push	{r0, r1, r2, lr}
 800ad4a:	4b07      	ldr	r3, [pc, #28]	@ (800ad68 <_ZN8touchgfx11Application4drawEv+0x20>)
 800ad4c:	2200      	movs	r2, #0
 800ad4e:	5e9a      	ldrsh	r2, [r3, r2]
 800ad50:	4b06      	ldr	r3, [pc, #24]	@ (800ad6c <_ZN8touchgfx11Application4drawEv+0x24>)
 800ad52:	2100      	movs	r1, #0
 800ad54:	5e5b      	ldrsh	r3, [r3, r1]
 800ad56:	2100      	movs	r1, #0
 800ad58:	9100      	str	r1, [sp, #0]
 800ad5a:	4669      	mov	r1, sp
 800ad5c:	80cb      	strh	r3, [r1, #6]
 800ad5e:	6803      	ldr	r3, [r0, #0]
 800ad60:	808a      	strh	r2, [r1, #4]
 800ad62:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ad64:	4798      	blx	r3
 800ad66:	bd07      	pop	{r0, r1, r2, pc}
 800ad68:	2000356c 	.word	0x2000356c
 800ad6c:	2000356e 	.word	0x2000356e

0800ad70 <_ZN8touchgfx11Application10invalidateEv>:
 800ad70:	b513      	push	{r0, r1, r4, lr}
 800ad72:	4b08      	ldr	r3, [pc, #32]	@ (800ad94 <_ZN8touchgfx11Application10invalidateEv+0x24>)
 800ad74:	466c      	mov	r4, sp
 800ad76:	2200      	movs	r2, #0
 800ad78:	5e9a      	ldrsh	r2, [r3, r2]
 800ad7a:	4b07      	ldr	r3, [pc, #28]	@ (800ad98 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800ad7c:	80a2      	strh	r2, [r4, #4]
 800ad7e:	2100      	movs	r1, #0
 800ad80:	5e5b      	ldrsh	r3, [r3, r1]
 800ad82:	2100      	movs	r1, #0
 800ad84:	80e3      	strh	r3, [r4, #6]
 800ad86:	6803      	ldr	r3, [r0, #0]
 800ad88:	9100      	str	r1, [sp, #0]
 800ad8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ad8c:	9a01      	ldr	r2, [sp, #4]
 800ad8e:	4798      	blx	r3
 800ad90:	bd13      	pop	{r0, r1, r4, pc}
 800ad92:	46c0      	nop			@ (mov r8, r8)
 800ad94:	2000356c 	.word	0x2000356c
 800ad98:	2000356e 	.word	0x2000356e

0800ad9c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ad9c:	b510      	push	{r4, lr}
 800ad9e:	4b04      	ldr	r3, [pc, #16]	@ (800adb0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x14>)
 800ada0:	6818      	ldr	r0, [r3, #0]
 800ada2:	2800      	cmp	r0, #0
 800ada4:	d002      	beq.n	800adac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>
 800ada6:	6803      	ldr	r3, [r0, #0]
 800ada8:	69db      	ldr	r3, [r3, #28]
 800adaa:	4798      	blx	r3
 800adac:	bd10      	pop	{r4, pc}
 800adae:	46c0      	nop			@ (mov r8, r8)
 800adb0:	200035b4 	.word	0x200035b4

0800adb4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800adb4:	b510      	push	{r4, lr}
 800adb6:	4b04      	ldr	r3, [pc, #16]	@ (800adc8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x14>)
 800adb8:	6818      	ldr	r0, [r3, #0]
 800adba:	2800      	cmp	r0, #0
 800adbc:	d002      	beq.n	800adc4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>
 800adbe:	6803      	ldr	r3, [r0, #0]
 800adc0:	6a1b      	ldr	r3, [r3, #32]
 800adc2:	4798      	blx	r3
 800adc4:	bd10      	pop	{r4, pc}
 800adc6:	46c0      	nop			@ (mov r8, r8)
 800adc8:	200035b4 	.word	0x200035b4

0800adcc <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800adcc:	2300      	movs	r3, #0
 800adce:	30ec      	adds	r0, #236	@ 0xec
 800add0:	8003      	strh	r3, [r0, #0]
 800add2:	4770      	bx	lr

0800add4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800add4:	b510      	push	{r4, lr}
 800add6:	4b04      	ldr	r3, [pc, #16]	@ (800ade8 <_ZN8touchgfx11Application14handleKeyEventEh+0x14>)
 800add8:	6818      	ldr	r0, [r3, #0]
 800adda:	2800      	cmp	r0, #0
 800addc:	d002      	beq.n	800ade4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>
 800adde:	6803      	ldr	r3, [r0, #0]
 800ade0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ade2:	4798      	blx	r3
 800ade4:	bd10      	pop	{r4, pc}
 800ade6:	46c0      	nop			@ (mov r8, r8)
 800ade8:	200035b4 	.word	0x200035b4

0800adec <_ZN8touchgfx11ApplicationD1Ev>:
 800adec:	4770      	bx	lr

0800adee <_ZN8touchgfx11ApplicationD0Ev>:
 800adee:	219e      	movs	r1, #158	@ 0x9e
 800adf0:	b510      	push	{r4, lr}
 800adf2:	0004      	movs	r4, r0
 800adf4:	0049      	lsls	r1, r1, #1
 800adf6:	f006 fe86 	bl	8011b06 <_ZdlPvj>
 800adfa:	0020      	movs	r0, r4
 800adfc:	bd10      	pop	{r4, pc}

0800adfe <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800adfe:	b570      	push	{r4, r5, r6, lr}
 800ae00:	888a      	ldrh	r2, [r1, #4]
 800ae02:	2300      	movs	r3, #0
 800ae04:	5ecd      	ldrsh	r5, [r1, r3]
 800ae06:	2300      	movs	r3, #0
 800ae08:	5ec6      	ldrsh	r6, [r0, r3]
 800ae0a:	1952      	adds	r2, r2, r5
 800ae0c:	b212      	sxth	r2, r2
 800ae0e:	0004      	movs	r4, r0
 800ae10:	2000      	movs	r0, #0
 800ae12:	4296      	cmp	r6, r2
 800ae14:	da15      	bge.n	800ae42 <_ZNK8touchgfx4Rect9intersectERKS0_+0x44>
 800ae16:	88a3      	ldrh	r3, [r4, #4]
 800ae18:	199b      	adds	r3, r3, r6
 800ae1a:	b21b      	sxth	r3, r3
 800ae1c:	429d      	cmp	r5, r3
 800ae1e:	da10      	bge.n	800ae42 <_ZNK8touchgfx4Rect9intersectERKS0_+0x44>
 800ae20:	2302      	movs	r3, #2
 800ae22:	5ecd      	ldrsh	r5, [r1, r3]
 800ae24:	88ca      	ldrh	r2, [r1, #6]
 800ae26:	2302      	movs	r3, #2
 800ae28:	5ee6      	ldrsh	r6, [r4, r3]
 800ae2a:	1952      	adds	r2, r2, r5
 800ae2c:	b212      	sxth	r2, r2
 800ae2e:	4296      	cmp	r6, r2
 800ae30:	da07      	bge.n	800ae42 <_ZNK8touchgfx4Rect9intersectERKS0_+0x44>
 800ae32:	88e3      	ldrh	r3, [r4, #6]
 800ae34:	2201      	movs	r2, #1
 800ae36:	199b      	adds	r3, r3, r6
 800ae38:	b21b      	sxth	r3, r3
 800ae3a:	429d      	cmp	r5, r3
 800ae3c:	db00      	blt.n	800ae40 <_ZNK8touchgfx4Rect9intersectERKS0_+0x42>
 800ae3e:	1c02      	adds	r2, r0, #0
 800ae40:	b2d0      	uxtb	r0, r2
 800ae42:	bd70      	pop	{r4, r5, r6, pc}

0800ae44 <_ZN8touchgfx4Rect10restrictToEss>:
 800ae44:	b530      	push	{r4, r5, lr}
 800ae46:	2300      	movs	r3, #0
 800ae48:	5ec4      	ldrsh	r4, [r0, r3]
 800ae4a:	2c00      	cmp	r4, #0
 800ae4c:	da04      	bge.n	800ae58 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800ae4e:	8883      	ldrh	r3, [r0, #4]
 800ae50:	191b      	adds	r3, r3, r4
 800ae52:	8083      	strh	r3, [r0, #4]
 800ae54:	2300      	movs	r3, #0
 800ae56:	8003      	strh	r3, [r0, #0]
 800ae58:	2300      	movs	r3, #0
 800ae5a:	5ec4      	ldrsh	r4, [r0, r3]
 800ae5c:	2504      	movs	r5, #4
 800ae5e:	5f43      	ldrsh	r3, [r0, r5]
 800ae60:	1b09      	subs	r1, r1, r4
 800ae62:	428b      	cmp	r3, r1
 800ae64:	dd00      	ble.n	800ae68 <_ZN8touchgfx4Rect10restrictToEss+0x24>
 800ae66:	8081      	strh	r1, [r0, #4]
 800ae68:	2302      	movs	r3, #2
 800ae6a:	5ec1      	ldrsh	r1, [r0, r3]
 800ae6c:	2900      	cmp	r1, #0
 800ae6e:	da04      	bge.n	800ae7a <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800ae70:	88c3      	ldrh	r3, [r0, #6]
 800ae72:	185b      	adds	r3, r3, r1
 800ae74:	80c3      	strh	r3, [r0, #6]
 800ae76:	2300      	movs	r3, #0
 800ae78:	8043      	strh	r3, [r0, #2]
 800ae7a:	2302      	movs	r3, #2
 800ae7c:	5ec1      	ldrsh	r1, [r0, r3]
 800ae7e:	2406      	movs	r4, #6
 800ae80:	5f03      	ldrsh	r3, [r0, r4]
 800ae82:	1a52      	subs	r2, r2, r1
 800ae84:	4293      	cmp	r3, r2
 800ae86:	dd00      	ble.n	800ae8a <_ZN8touchgfx4Rect10restrictToEss+0x46>
 800ae88:	80c2      	strh	r2, [r0, #6]
 800ae8a:	bd30      	pop	{r4, r5, pc}

0800ae8c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ae8c:	b510      	push	{r4, lr}
 800ae8e:	000c      	movs	r4, r1
 800ae90:	4b0f      	ldr	r3, [pc, #60]	@ (800aed0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800ae92:	0020      	movs	r0, r4
 800ae94:	2200      	movs	r2, #0
 800ae96:	5e9a      	ldrsh	r2, [r3, r2]
 800ae98:	4b0e      	ldr	r3, [pc, #56]	@ (800aed4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800ae9a:	2100      	movs	r1, #0
 800ae9c:	5e59      	ldrsh	r1, [r3, r1]
 800ae9e:	f7ff ffd1 	bl	800ae44 <_ZN8touchgfx4Rect10restrictToEss>
 800aea2:	4b0d      	ldr	r3, [pc, #52]	@ (800aed8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800aea4:	6818      	ldr	r0, [r3, #0]
 800aea6:	2800      	cmp	r0, #0
 800aea8:	d011      	beq.n	800aece <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800aeaa:	6803      	ldr	r3, [r0, #0]
 800aeac:	0021      	movs	r1, r4
 800aeae:	689b      	ldr	r3, [r3, #8]
 800aeb0:	4798      	blx	r3
 800aeb2:	4b0a      	ldr	r3, [pc, #40]	@ (800aedc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800aeb4:	6818      	ldr	r0, [r3, #0]
 800aeb6:	2800      	cmp	r0, #0
 800aeb8:	d003      	beq.n	800aec2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x36>
 800aeba:	6803      	ldr	r3, [r0, #0]
 800aebc:	0021      	movs	r1, r4
 800aebe:	689b      	ldr	r3, [r3, #8]
 800aec0:	4798      	blx	r3
 800aec2:	4b07      	ldr	r3, [pc, #28]	@ (800aee0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800aec4:	0021      	movs	r1, r4
 800aec6:	6818      	ldr	r0, [r3, #0]
 800aec8:	6803      	ldr	r3, [r0, #0]
 800aeca:	69db      	ldr	r3, [r3, #28]
 800aecc:	4798      	blx	r3
 800aece:	bd10      	pop	{r4, pc}
 800aed0:	2000356e 	.word	0x2000356e
 800aed4:	2000356c 	.word	0x2000356c
 800aed8:	200035b4 	.word	0x200035b4
 800aedc:	200035b0 	.word	0x200035b0
 800aee0:	20003578 	.word	0x20003578

0800aee4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800aee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aee6:	0004      	movs	r4, r0
 800aee8:	0008      	movs	r0, r1
 800aeea:	000d      	movs	r5, r1
 800aeec:	f7fc f9e6 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800aef0:	2800      	cmp	r0, #0
 800aef2:	d11e      	bne.n	800af32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4e>
 800aef4:	2300      	movs	r3, #0
 800aef6:	5ee9      	ldrsh	r1, [r5, r3]
 800aef8:	2300      	movs	r3, #0
 800aefa:	5ee7      	ldrsh	r7, [r4, r3]
 800aefc:	42b9      	cmp	r1, r7
 800aefe:	db18      	blt.n	800af32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4e>
 800af00:	2302      	movs	r3, #2
 800af02:	5eea      	ldrsh	r2, [r5, r3]
 800af04:	2302      	movs	r3, #2
 800af06:	5ee6      	ldrsh	r6, [r4, r3]
 800af08:	42b2      	cmp	r2, r6
 800af0a:	db12      	blt.n	800af32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4e>
 800af0c:	88ab      	ldrh	r3, [r5, #4]
 800af0e:	185b      	adds	r3, r3, r1
 800af10:	88a1      	ldrh	r1, [r4, #4]
 800af12:	b21b      	sxth	r3, r3
 800af14:	19c9      	adds	r1, r1, r7
 800af16:	b209      	sxth	r1, r1
 800af18:	428b      	cmp	r3, r1
 800af1a:	dc0a      	bgt.n	800af32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4e>
 800af1c:	88eb      	ldrh	r3, [r5, #6]
 800af1e:	189b      	adds	r3, r3, r2
 800af20:	88e2      	ldrh	r2, [r4, #6]
 800af22:	b21b      	sxth	r3, r3
 800af24:	1992      	adds	r2, r2, r6
 800af26:	b212      	sxth	r2, r2
 800af28:	0fd8      	lsrs	r0, r3, #31
 800af2a:	17d1      	asrs	r1, r2, #31
 800af2c:	429a      	cmp	r2, r3
 800af2e:	4148      	adcs	r0, r1
 800af30:	b2c0      	uxtb	r0, r0
 800af32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800af34 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800af34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800af36:	0004      	movs	r4, r0
 800af38:	0008      	movs	r0, r1
 800af3a:	000d      	movs	r5, r1
 800af3c:	f7fc f9be 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800af40:	2800      	cmp	r0, #0
 800af42:	d110      	bne.n	800af66 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x32>
 800af44:	0020      	movs	r0, r4
 800af46:	f7fc f9b9 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800af4a:	2300      	movs	r3, #0
 800af4c:	5eea      	ldrsh	r2, [r5, r3]
 800af4e:	2800      	cmp	r0, #0
 800af50:	d00a      	beq.n	800af68 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x34>
 800af52:	8022      	strh	r2, [r4, #0]
 800af54:	2202      	movs	r2, #2
 800af56:	5eab      	ldrsh	r3, [r5, r2]
 800af58:	8063      	strh	r3, [r4, #2]
 800af5a:	2204      	movs	r2, #4
 800af5c:	5eab      	ldrsh	r3, [r5, r2]
 800af5e:	80a3      	strh	r3, [r4, #4]
 800af60:	2206      	movs	r2, #6
 800af62:	5eab      	ldrsh	r3, [r5, r2]
 800af64:	80e3      	strh	r3, [r4, #6]
 800af66:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800af68:	2300      	movs	r3, #0
 800af6a:	5ee0      	ldrsh	r0, [r4, r3]
 800af6c:	1c01      	adds	r1, r0, #0
 800af6e:	4290      	cmp	r0, r2
 800af70:	dd00      	ble.n	800af74 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x40>
 800af72:	1c11      	adds	r1, r2, #0
 800af74:	2302      	movs	r3, #2
 800af76:	5ee6      	ldrsh	r6, [r4, r3]
 800af78:	2302      	movs	r3, #2
 800af7a:	5eef      	ldrsh	r7, [r5, r3]
 800af7c:	b209      	sxth	r1, r1
 800af7e:	1c33      	adds	r3, r6, #0
 800af80:	42be      	cmp	r6, r7
 800af82:	dd00      	ble.n	800af86 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x52>
 800af84:	1c3b      	adds	r3, r7, #0
 800af86:	b21b      	sxth	r3, r3
 800af88:	469c      	mov	ip, r3
 800af8a:	88ab      	ldrh	r3, [r5, #4]
 800af8c:	189a      	adds	r2, r3, r2
 800af8e:	88a3      	ldrh	r3, [r4, #4]
 800af90:	1818      	adds	r0, r3, r0
 800af92:	466b      	mov	r3, sp
 800af94:	80da      	strh	r2, [r3, #6]
 800af96:	b213      	sxth	r3, r2
 800af98:	b202      	sxth	r2, r0
 800af9a:	4293      	cmp	r3, r2
 800af9c:	da01      	bge.n	800afa2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x6e>
 800af9e:	466b      	mov	r3, sp
 800afa0:	80d8      	strh	r0, [r3, #6]
 800afa2:	466b      	mov	r3, sp
 800afa4:	88ea      	ldrh	r2, [r5, #6]
 800afa6:	88db      	ldrh	r3, [r3, #6]
 800afa8:	19d7      	adds	r7, r2, r7
 800afaa:	88e2      	ldrh	r2, [r4, #6]
 800afac:	b21b      	sxth	r3, r3
 800afae:	1996      	adds	r6, r2, r6
 800afb0:	b230      	sxth	r0, r6
 800afb2:	1c3a      	adds	r2, r7, #0
 800afb4:	b23f      	sxth	r7, r7
 800afb6:	4287      	cmp	r7, r0
 800afb8:	da00      	bge.n	800afbc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x88>
 800afba:	1c32      	adds	r2, r6, #0
 800afbc:	4660      	mov	r0, ip
 800afbe:	1a5b      	subs	r3, r3, r1
 800afc0:	1a12      	subs	r2, r2, r0
 800afc2:	8021      	strh	r1, [r4, #0]
 800afc4:	8060      	strh	r0, [r4, #2]
 800afc6:	80a3      	strh	r3, [r4, #4]
 800afc8:	80e2      	strh	r2, [r4, #6]
 800afca:	e7cc      	b.n	800af66 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x32>

0800afcc <_ZN8touchgfx11Application11getInstanceEv>:
 800afcc:	4b01      	ldr	r3, [pc, #4]	@ (800afd4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800afce:	6818      	ldr	r0, [r3, #0]
 800afd0:	4770      	bx	lr
 800afd2:	46c0      	nop			@ (mov r8, r8)
 800afd4:	200035c4 	.word	0x200035c4

0800afd8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800afd8:	b570      	push	{r4, r5, r6, lr}
 800afda:	0005      	movs	r5, r0
 800afdc:	2300      	movs	r3, #0
 800afde:	35a4      	adds	r5, #164	@ 0xa4
 800afe0:	802b      	strh	r3, [r5, #0]
 800afe2:	0003      	movs	r3, r0
 800afe4:	0006      	movs	r6, r0
 800afe6:	0004      	movs	r4, r0
 800afe8:	3380      	adds	r3, #128	@ 0x80
 800afea:	881b      	ldrh	r3, [r3, #0]
 800afec:	36a6      	adds	r6, #166	@ 0xa6
 800afee:	8033      	strh	r3, [r6, #0]
 800aff0:	882b      	ldrh	r3, [r5, #0]
 800aff2:	8832      	ldrh	r2, [r6, #0]
 800aff4:	429a      	cmp	r2, r3
 800aff6:	d90d      	bls.n	800b014 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800aff8:	18e2      	adds	r2, r4, r3
 800affa:	3284      	adds	r2, #132	@ 0x84
 800affc:	7812      	ldrb	r2, [r2, #0]
 800affe:	2a00      	cmp	r2, #0
 800b000:	d004      	beq.n	800b00c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x34>
 800b002:	009b      	lsls	r3, r3, #2
 800b004:	5918      	ldr	r0, [r3, r4]
 800b006:	6803      	ldr	r3, [r0, #0]
 800b008:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800b00a:	4798      	blx	r3
 800b00c:	882b      	ldrh	r3, [r5, #0]
 800b00e:	3301      	adds	r3, #1
 800b010:	802b      	strh	r3, [r5, #0]
 800b012:	e7ed      	b.n	800aff0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x18>
 800b014:	bd70      	pop	{r4, r5, r6, pc}

0800b016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800b016:	0003      	movs	r3, r0
 800b018:	b530      	push	{r4, r5, lr}
 800b01a:	3380      	adds	r3, #128	@ 0x80
 800b01c:	881d      	ldrh	r5, [r3, #0]
 800b01e:	2300      	movs	r3, #0
 800b020:	b29a      	uxth	r2, r3
 800b022:	4295      	cmp	r5, r2
 800b024:	d910      	bls.n	800b048 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x32>
 800b026:	009c      	lsls	r4, r3, #2
 800b028:	5902      	ldr	r2, [r0, r4]
 800b02a:	428a      	cmp	r2, r1
 800b02c:	d10d      	bne.n	800b04a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x34>
 800b02e:	001a      	movs	r2, r3
 800b030:	3284      	adds	r2, #132	@ 0x84
 800b032:	5c82      	ldrb	r2, [r0, r2]
 800b034:	2a00      	cmp	r2, #0
 800b036:	d008      	beq.n	800b04a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x34>
 800b038:	3a01      	subs	r2, #1
 800b03a:	18c3      	adds	r3, r0, r3
 800b03c:	b2d2      	uxtb	r2, r2
 800b03e:	3384      	adds	r3, #132	@ 0x84
 800b040:	701a      	strb	r2, [r3, #0]
 800b042:	2a00      	cmp	r2, #0
 800b044:	d100      	bne.n	800b048 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x32>
 800b046:	5022      	str	r2, [r4, r0]
 800b048:	bd30      	pop	{r4, r5, pc}
 800b04a:	3301      	adds	r3, #1
 800b04c:	e7e8      	b.n	800b020 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0xa>

0800b04e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800b04e:	0003      	movs	r3, r0
 800b050:	2200      	movs	r2, #0
 800b052:	3380      	adds	r3, #128	@ 0x80
 800b054:	801a      	strh	r2, [r3, #0]
 800b056:	30a4      	adds	r0, #164	@ 0xa4
 800b058:	3304      	adds	r3, #4
 800b05a:	701a      	strb	r2, [r3, #0]
 800b05c:	3301      	adds	r3, #1
 800b05e:	4283      	cmp	r3, r0
 800b060:	d1fb      	bne.n	800b05a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800b062:	4770      	bx	lr

0800b064 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800b064:	b570      	push	{r4, r5, r6, lr}
 800b066:	4e0b      	ldr	r6, [pc, #44]	@ (800b094 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800b068:	0004      	movs	r4, r0
 800b06a:	6830      	ldr	r0, [r6, #0]
 800b06c:	000d      	movs	r5, r1
 800b06e:	2800      	cmp	r0, #0
 800b070:	d002      	beq.n	800b078 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800b072:	6803      	ldr	r3, [r0, #0]
 800b074:	695b      	ldr	r3, [r3, #20]
 800b076:	4798      	blx	r3
 800b078:	1d20      	adds	r0, r4, #4
 800b07a:	f7ff ffe8 	bl	800b04e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800b07e:	6035      	str	r5, [r6, #0]
 800b080:	682b      	ldr	r3, [r5, #0]
 800b082:	0028      	movs	r0, r5
 800b084:	68db      	ldr	r3, [r3, #12]
 800b086:	4798      	blx	r3
 800b088:	6823      	ldr	r3, [r4, #0]
 800b08a:	0020      	movs	r0, r4
 800b08c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b08e:	4798      	blx	r3
 800b090:	bd70      	pop	{r4, r5, r6, pc}
 800b092:	46c0      	nop			@ (mov r8, r8)
 800b094:	200035b4 	.word	0x200035b4

0800b098 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800b098:	0003      	movs	r3, r0
 800b09a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b09c:	3380      	adds	r3, #128	@ 0x80
 800b09e:	881b      	ldrh	r3, [r3, #0]
 800b0a0:	b085      	sub	sp, #20
 800b0a2:	9302      	str	r3, [sp, #8]
 800b0a4:	23a4      	movs	r3, #164	@ 0xa4
 800b0a6:	469c      	mov	ip, r3
 800b0a8:	4484      	add	ip, r0
 800b0aa:	4663      	mov	r3, ip
 800b0ac:	881b      	ldrh	r3, [r3, #0]
 800b0ae:	0006      	movs	r6, r0
 800b0b0:	9301      	str	r3, [sp, #4]
 800b0b2:	2300      	movs	r3, #0
 800b0b4:	001c      	movs	r4, r3
 800b0b6:	001d      	movs	r5, r3
 800b0b8:	001a      	movs	r2, r3
 800b0ba:	36a6      	adds	r6, #166	@ 0xa6
 800b0bc:	9603      	str	r6, [sp, #12]
 800b0be:	9e02      	ldr	r6, [sp, #8]
 800b0c0:	429e      	cmp	r6, r3
 800b0c2:	dd1c      	ble.n	800b0fe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x66>
 800b0c4:	001e      	movs	r6, r3
 800b0c6:	3684      	adds	r6, #132	@ 0x84
 800b0c8:	5d87      	ldrb	r7, [r0, r6]
 800b0ca:	2f00      	cmp	r7, #0
 800b0cc:	d00d      	beq.n	800b0ea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x52>
 800b0ce:	429a      	cmp	r2, r3
 800b0d0:	d008      	beq.n	800b0e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800b0d2:	009e      	lsls	r6, r3, #2
 800b0d4:	5986      	ldr	r6, [r0, r6]
 800b0d6:	0031      	movs	r1, r6
 800b0d8:	b296      	uxth	r6, r2
 800b0da:	00b6      	lsls	r6, r6, #2
 800b0dc:	5031      	str	r1, [r6, r0]
 800b0de:	1886      	adds	r6, r0, r2
 800b0e0:	3684      	adds	r6, #132	@ 0x84
 800b0e2:	7037      	strb	r7, [r6, #0]
 800b0e4:	3201      	adds	r2, #1
 800b0e6:	3301      	adds	r3, #1
 800b0e8:	e7e9      	b.n	800b0be <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x26>
 800b0ea:	9901      	ldr	r1, [sp, #4]
 800b0ec:	4299      	cmp	r1, r3
 800b0ee:	db00      	blt.n	800b0f2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5a>
 800b0f0:	3501      	adds	r5, #1
 800b0f2:	9903      	ldr	r1, [sp, #12]
 800b0f4:	880e      	ldrh	r6, [r1, #0]
 800b0f6:	429e      	cmp	r6, r3
 800b0f8:	ddf5      	ble.n	800b0e6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4e>
 800b0fa:	3401      	adds	r4, #1
 800b0fc:	e7f3      	b.n	800b0e6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4e>
 800b0fe:	9b01      	ldr	r3, [sp, #4]
 800b100:	1b59      	subs	r1, r3, r5
 800b102:	4663      	mov	r3, ip
 800b104:	8019      	strh	r1, [r3, #0]
 800b106:	0001      	movs	r1, r0
 800b108:	31a6      	adds	r1, #166	@ 0xa6
 800b10a:	880b      	ldrh	r3, [r1, #0]
 800b10c:	3080      	adds	r0, #128	@ 0x80
 800b10e:	1b1c      	subs	r4, r3, r4
 800b110:	800c      	strh	r4, [r1, #0]
 800b112:	8803      	ldrh	r3, [r0, #0]
 800b114:	4293      	cmp	r3, r2
 800b116:	dd02      	ble.n	800b11e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x86>
 800b118:	3b01      	subs	r3, #1
 800b11a:	8003      	strh	r3, [r0, #0]
 800b11c:	e7f9      	b.n	800b112 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x7a>
 800b11e:	b005      	add	sp, #20
 800b120:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800b124 <_ZN8touchgfx11Application15handleTickEventEv>:
 800b124:	239c      	movs	r3, #156	@ 0x9c
 800b126:	b570      	push	{r4, r5, r6, lr}
 800b128:	4e18      	ldr	r6, [pc, #96]	@ (800b18c <_ZN8touchgfx11Application15handleTickEventEv+0x68>)
 800b12a:	0004      	movs	r4, r0
 800b12c:	6830      	ldr	r0, [r6, #0]
 800b12e:	005b      	lsls	r3, r3, #1
 800b130:	2800      	cmp	r0, #0
 800b132:	d007      	beq.n	800b144 <_ZN8touchgfx11Application15handleTickEventEv+0x20>
 800b134:	7a02      	ldrb	r2, [r0, #8]
 800b136:	2a00      	cmp	r2, #0
 800b138:	d104      	bne.n	800b144 <_ZN8touchgfx11Application15handleTickEventEv+0x20>
 800b13a:	54e2      	strb	r2, [r4, r3]
 800b13c:	6803      	ldr	r3, [r0, #0]
 800b13e:	689b      	ldr	r3, [r3, #8]
 800b140:	4798      	blx	r3
 800b142:	bd70      	pop	{r4, r5, r6, pc}
 800b144:	5ce3      	ldrb	r3, [r4, r3]
 800b146:	4d12      	ldr	r5, [pc, #72]	@ (800b190 <_ZN8touchgfx11Application15handleTickEventEv+0x6c>)
 800b148:	2b00      	cmp	r3, #0
 800b14a:	d112      	bne.n	800b172 <_ZN8touchgfx11Application15handleTickEventEv+0x4e>
 800b14c:	2800      	cmp	r0, #0
 800b14e:	d010      	beq.n	800b172 <_ZN8touchgfx11Application15handleTickEventEv+0x4e>
 800b150:	7a03      	ldrb	r3, [r0, #8]
 800b152:	2b00      	cmp	r3, #0
 800b154:	d00d      	beq.n	800b172 <_ZN8touchgfx11Application15handleTickEventEv+0x4e>
 800b156:	6828      	ldr	r0, [r5, #0]
 800b158:	2800      	cmp	r0, #0
 800b15a:	d002      	beq.n	800b162 <_ZN8touchgfx11Application15handleTickEventEv+0x3e>
 800b15c:	6803      	ldr	r3, [r0, #0]
 800b15e:	691b      	ldr	r3, [r3, #16]
 800b160:	4798      	blx	r3
 800b162:	6830      	ldr	r0, [r6, #0]
 800b164:	6803      	ldr	r3, [r0, #0]
 800b166:	68db      	ldr	r3, [r3, #12]
 800b168:	4798      	blx	r3
 800b16a:	239c      	movs	r3, #156	@ 0x9c
 800b16c:	2201      	movs	r2, #1
 800b16e:	005b      	lsls	r3, r3, #1
 800b170:	54e2      	strb	r2, [r4, r3]
 800b172:	3404      	adds	r4, #4
 800b174:	0020      	movs	r0, r4
 800b176:	f7ff ff2f 	bl	800afd8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800b17a:	0020      	movs	r0, r4
 800b17c:	f7ff ff8c 	bl	800b098 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800b180:	6828      	ldr	r0, [r5, #0]
 800b182:	2800      	cmp	r0, #0
 800b184:	d0dd      	beq.n	800b142 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800b186:	6803      	ldr	r3, [r0, #0]
 800b188:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b18a:	e7d9      	b.n	800b140 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b18c:	200035b8 	.word	0x200035b8
 800b190:	200035b4 	.word	0x200035b4

0800b194 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800b194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b196:	0005      	movs	r5, r0
 800b198:	0004      	movs	r4, r0
 800b19a:	2000      	movs	r0, #0
 800b19c:	000e      	movs	r6, r1
 800b19e:	0001      	movs	r1, r0
 800b1a0:	3580      	adds	r5, #128	@ 0x80
 800b1a2:	882a      	ldrh	r2, [r5, #0]
 800b1a4:	b283      	uxth	r3, r0
 800b1a6:	429a      	cmp	r2, r3
 800b1a8:	d912      	bls.n	800b1d0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3c>
 800b1aa:	0003      	movs	r3, r0
 800b1ac:	0087      	lsls	r7, r0, #2
 800b1ae:	59e7      	ldr	r7, [r4, r7]
 800b1b0:	3384      	adds	r3, #132	@ 0x84
 800b1b2:	5ce3      	ldrb	r3, [r4, r3]
 800b1b4:	42b7      	cmp	r7, r6
 800b1b6:	d106      	bne.n	800b1c6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x32>
 800b1b8:	2bff      	cmp	r3, #255	@ 0xff
 800b1ba:	d003      	beq.n	800b1c4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x30>
 800b1bc:	1820      	adds	r0, r4, r0
 800b1be:	3084      	adds	r0, #132	@ 0x84
 800b1c0:	3301      	adds	r3, #1
 800b1c2:	7003      	strb	r3, [r0, #0]
 800b1c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b1c6:	2b00      	cmp	r3, #0
 800b1c8:	d100      	bne.n	800b1cc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 800b1ca:	2101      	movs	r1, #1
 800b1cc:	3001      	adds	r0, #1
 800b1ce:	e7e9      	b.n	800b1a4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x10>
 800b1d0:	2900      	cmp	r1, #0
 800b1d2:	d004      	beq.n	800b1de <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x4a>
 800b1d4:	2a20      	cmp	r2, #32
 800b1d6:	d102      	bne.n	800b1de <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x4a>
 800b1d8:	0020      	movs	r0, r4
 800b1da:	f7ff ff5d 	bl	800b098 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800b1de:	882b      	ldrh	r3, [r5, #0]
 800b1e0:	2b1f      	cmp	r3, #31
 800b1e2:	d8ef      	bhi.n	800b1c4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x30>
 800b1e4:	2101      	movs	r1, #1
 800b1e6:	18e2      	adds	r2, r4, r3
 800b1e8:	3284      	adds	r2, #132	@ 0x84
 800b1ea:	7011      	strb	r1, [r2, #0]
 800b1ec:	185a      	adds	r2, r3, r1
 800b1ee:	009b      	lsls	r3, r3, #2
 800b1f0:	802a      	strh	r2, [r5, #0]
 800b1f2:	511e      	str	r6, [r3, r4]
 800b1f4:	e7e6      	b.n	800b1c4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x30>

0800b1f6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800b1f6:	0001      	movs	r1, r0
 800b1f8:	0003      	movs	r3, r0
 800b1fa:	2200      	movs	r2, #0
 800b1fc:	3140      	adds	r1, #64	@ 0x40
 800b1fe:	801a      	strh	r2, [r3, #0]
 800b200:	805a      	strh	r2, [r3, #2]
 800b202:	809a      	strh	r2, [r3, #4]
 800b204:	80da      	strh	r2, [r3, #6]
 800b206:	3308      	adds	r3, #8
 800b208:	428b      	cmp	r3, r1
 800b20a:	d1f8      	bne.n	800b1fe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800b20c:	1c83      	adds	r3, r0, #2
 800b20e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800b210:	4770      	bx	lr
	...

0800b214 <_ZN8touchgfx11ApplicationC1Ev>:
 800b214:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b216:	0006      	movs	r6, r0
 800b218:	0004      	movs	r4, r0
 800b21a:	4b1e      	ldr	r3, [pc, #120]	@ (800b294 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800b21c:	22a8      	movs	r2, #168	@ 0xa8
 800b21e:	3308      	adds	r3, #8
 800b220:	c608      	stmia	r6!, {r3}
 800b222:	2100      	movs	r1, #0
 800b224:	0030      	movs	r0, r6
 800b226:	f007 fcba 	bl	8012b9e <memset>
 800b22a:	0023      	movs	r3, r4
 800b22c:	2500      	movs	r5, #0
 800b22e:	0020      	movs	r0, r4
 800b230:	3384      	adds	r3, #132	@ 0x84
 800b232:	801d      	strh	r5, [r3, #0]
 800b234:	30ac      	adds	r0, #172	@ 0xac
 800b236:	f7ff ffde 	bl	800b1f6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b23a:	0020      	movs	r0, r4
 800b23c:	30ee      	adds	r0, #238	@ 0xee
 800b23e:	f7ff ffda 	bl	800b1f6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b242:	2398      	movs	r3, #152	@ 0x98
 800b244:	005b      	lsls	r3, r3, #1
 800b246:	52e5      	strh	r5, [r4, r3]
 800b248:	0023      	movs	r3, r4
 800b24a:	3331      	adds	r3, #49	@ 0x31
 800b24c:	33ff      	adds	r3, #255	@ 0xff
 800b24e:	805d      	strh	r5, [r3, #2]
 800b250:	809d      	strh	r5, [r3, #4]
 800b252:	80dd      	strh	r5, [r3, #6]
 800b254:	239c      	movs	r3, #156	@ 0x9c
 800b256:	005b      	lsls	r3, r3, #1
 800b258:	54e5      	strb	r5, [r4, r3]
 800b25a:	490f      	ldr	r1, [pc, #60]	@ (800b298 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800b25c:	480f      	ldr	r0, [pc, #60]	@ (800b29c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800b25e:	f005 fbe7 	bl	8010a30 <CRC_Lock>
 800b262:	4b0f      	ldr	r3, [pc, #60]	@ (800b2a0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800b264:	4f0f      	ldr	r7, [pc, #60]	@ (800b2a4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800b266:	42a8      	cmp	r0, r5
 800b268:	d00b      	beq.n	800b282 <_ZN8touchgfx11ApplicationC1Ev+0x6e>
 800b26a:	801d      	strh	r5, [r3, #0]
 800b26c:	2300      	movs	r3, #0
 800b26e:	4a0e      	ldr	r2, [pc, #56]	@ (800b2a8 <_ZN8touchgfx11ApplicationC1Ev+0x94>)
 800b270:	0030      	movs	r0, r6
 800b272:	6013      	str	r3, [r2, #0]
 800b274:	4a0d      	ldr	r2, [pc, #52]	@ (800b2ac <_ZN8touchgfx11ApplicationC1Ev+0x98>)
 800b276:	603b      	str	r3, [r7, #0]
 800b278:	6013      	str	r3, [r2, #0]
 800b27a:	f7ff fee8 	bl	800b04e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800b27e:	0020      	movs	r0, r4
 800b280:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b282:	2280      	movs	r2, #128	@ 0x80
 800b284:	2002      	movs	r0, #2
 800b286:	00d2      	lsls	r2, r2, #3
 800b288:	801a      	strh	r2, [r3, #0]
 800b28a:	6038      	str	r0, [r7, #0]
 800b28c:	f001 fa62 	bl	800c754 <_ZN8touchgfx6Screen4drawEv>
 800b290:	e7ec      	b.n	800b26c <_ZN8touchgfx11ApplicationC1Ev+0x58>
 800b292:	46c0      	nop			@ (mov r8, r8)
 800b294:	08015a38 	.word	0x08015a38
 800b298:	b5e8b5cd 	.word	0xb5e8b5cd
 800b29c:	f407a5c2 	.word	0xf407a5c2
 800b2a0:	20000018 	.word	0x20000018
 800b2a4:	200035b4 	.word	0x200035b4
 800b2a8:	200035c4 	.word	0x200035c4
 800b2ac:	200035b8 	.word	0x200035b8

0800b2b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800b2b0:	b510      	push	{r4, lr}
 800b2b2:	1c84      	adds	r4, r0, #2
 800b2b4:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800b2b6:	3a01      	subs	r2, #1
 800b2b8:	b293      	uxth	r3, r2
 800b2ba:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800b2bc:	428b      	cmp	r3, r1
 800b2be:	d907      	bls.n	800b2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x20>
 800b2c0:	00c9      	lsls	r1, r1, #3
 800b2c2:	1844      	adds	r4, r0, r1
 800b2c4:	00db      	lsls	r3, r3, #3
 800b2c6:	18c1      	adds	r1, r0, r3
 800b2c8:	2208      	movs	r2, #8
 800b2ca:	0020      	movs	r0, r4
 800b2cc:	f007 fd53 	bl	8012d76 <memcpy>
 800b2d0:	bd10      	pop	{r4, pc}
	...

0800b2d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800b2d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2d6:	4b99      	ldr	r3, [pc, #612]	@ (800b53c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>)
 800b2d8:	b095      	sub	sp, #84	@ 0x54
 800b2da:	9211      	str	r2, [sp, #68]	@ 0x44
 800b2dc:	2200      	movs	r2, #0
 800b2de:	5e9a      	ldrsh	r2, [r3, r2]
 800b2e0:	4b97      	ldr	r3, [pc, #604]	@ (800b540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>)
 800b2e2:	9000      	str	r0, [sp, #0]
 800b2e4:	9110      	str	r1, [sp, #64]	@ 0x40
 800b2e6:	a810      	add	r0, sp, #64	@ 0x40
 800b2e8:	2100      	movs	r1, #0
 800b2ea:	5e59      	ldrsh	r1, [r3, r1]
 800b2ec:	f7ff fdaa 	bl	800ae44 <_ZN8touchgfx4Rect10restrictToEss>
 800b2f0:	a810      	add	r0, sp, #64	@ 0x40
 800b2f2:	f7fb ffe3 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800b2f6:	2800      	cmp	r0, #0
 800b2f8:	d175      	bne.n	800b3e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800b2fa:	9d00      	ldr	r5, [sp, #0]
 800b2fc:	35ec      	adds	r5, #236	@ 0xec
 800b2fe:	882c      	ldrh	r4, [r5, #0]
 800b300:	9b00      	ldr	r3, [sp, #0]
 800b302:	33ac      	adds	r3, #172	@ 0xac
 800b304:	9301      	str	r3, [sp, #4]
 800b306:	2c00      	cmp	r4, #0
 800b308:	d00e      	beq.n	800b328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54>
 800b30a:	9900      	ldr	r1, [sp, #0]
 800b30c:	00e3      	lsls	r3, r4, #3
 800b30e:	31a4      	adds	r1, #164	@ 0xa4
 800b310:	18c9      	adds	r1, r1, r3
 800b312:	a810      	add	r0, sp, #64	@ 0x40
 800b314:	f7ff fde6 	bl	800aee4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800b318:	3c01      	subs	r4, #1
 800b31a:	2800      	cmp	r0, #0
 800b31c:	d0f0      	beq.n	800b300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b31e:	b2a1      	uxth	r1, r4
 800b320:	9801      	ldr	r0, [sp, #4]
 800b322:	f7ff ffc5 	bl	800b2b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b326:	e7eb      	b.n	800b300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b328:	882b      	ldrh	r3, [r5, #0]
 800b32a:	9304      	str	r3, [sp, #16]
 800b32c:	3b01      	subs	r3, #1
 800b32e:	9302      	str	r3, [sp, #8]
 800b330:	9b04      	ldr	r3, [sp, #16]
 800b332:	00db      	lsls	r3, r3, #3
 800b334:	001d      	movs	r5, r3
 800b336:	9309      	str	r3, [sp, #36]	@ 0x24
 800b338:	9b00      	ldr	r3, [sp, #0]
 800b33a:	35a4      	adds	r5, #164	@ 0xa4
 800b33c:	195d      	adds	r5, r3, r5
 800b33e:	2600      	movs	r6, #0
 800b340:	002c      	movs	r4, r5
 800b342:	9b04      	ldr	r3, [sp, #16]
 800b344:	9603      	str	r6, [sp, #12]
 800b346:	9306      	str	r3, [sp, #24]
 800b348:	9b06      	ldr	r3, [sp, #24]
 800b34a:	2b00      	cmp	r3, #0
 800b34c:	d100      	bne.n	800b350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800b34e:	e07f      	b.n	800b450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x17c>
 800b350:	a910      	add	r1, sp, #64	@ 0x40
 800b352:	0020      	movs	r0, r4
 800b354:	f7ff fd53 	bl	800adfe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b358:	2800      	cmp	r0, #0
 800b35a:	d032      	beq.n	800b3c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800b35c:	ab10      	add	r3, sp, #64	@ 0x40
 800b35e:	2200      	movs	r2, #0
 800b360:	5e9b      	ldrsh	r3, [r3, r2]
 800b362:	9305      	str	r3, [sp, #20]
 800b364:	2300      	movs	r3, #0
 800b366:	5ee1      	ldrsh	r1, [r4, r3]
 800b368:	ab10      	add	r3, sp, #64	@ 0x40
 800b36a:	2702      	movs	r7, #2
 800b36c:	5fdf      	ldrsh	r7, [r3, r7]
 800b36e:	2202      	movs	r2, #2
 800b370:	5ea3      	ldrsh	r3, [r4, r2]
 800b372:	469c      	mov	ip, r3
 800b374:	9b05      	ldr	r3, [sp, #20]
 800b376:	428b      	cmp	r3, r1
 800b378:	db37      	blt.n	800b3ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x116>
 800b37a:	ab10      	add	r3, sp, #64	@ 0x40
 800b37c:	889a      	ldrh	r2, [r3, #4]
 800b37e:	9b05      	ldr	r3, [sp, #20]
 800b380:	18d2      	adds	r2, r2, r3
 800b382:	88a3      	ldrh	r3, [r4, #4]
 800b384:	b212      	sxth	r2, r2
 800b386:	185b      	adds	r3, r3, r1
 800b388:	b21b      	sxth	r3, r3
 800b38a:	429a      	cmp	r2, r3
 800b38c:	dc2d      	bgt.n	800b3ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x116>
 800b38e:	ab10      	add	r3, sp, #64	@ 0x40
 800b390:	88db      	ldrh	r3, [r3, #6]
 800b392:	b2ba      	uxth	r2, r7
 800b394:	9305      	str	r3, [sp, #20]
 800b396:	4663      	mov	r3, ip
 800b398:	b29b      	uxth	r3, r3
 800b39a:	9307      	str	r3, [sp, #28]
 800b39c:	9907      	ldr	r1, [sp, #28]
 800b39e:	88e3      	ldrh	r3, [r4, #6]
 800b3a0:	18cb      	adds	r3, r1, r3
 800b3a2:	b29b      	uxth	r3, r3
 800b3a4:	b219      	sxth	r1, r3
 800b3a6:	9108      	str	r1, [sp, #32]
 800b3a8:	4567      	cmp	r7, ip
 800b3aa:	db0f      	blt.n	800b3cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf8>
 800b3ac:	1a9b      	subs	r3, r3, r2
 800b3ae:	9a05      	ldr	r2, [sp, #20]
 800b3b0:	1ad1      	subs	r1, r2, r3
 800b3b2:	b209      	sxth	r1, r1
 800b3b4:	ab10      	add	r3, sp, #64	@ 0x40
 800b3b6:	80d9      	strh	r1, [r3, #6]
 800b3b8:	2900      	cmp	r1, #0
 800b3ba:	dd14      	ble.n	800b3e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800b3bc:	9a08      	ldr	r2, [sp, #32]
 800b3be:	805a      	strh	r2, [r3, #2]
 800b3c0:	0006      	movs	r6, r0
 800b3c2:	9b06      	ldr	r3, [sp, #24]
 800b3c4:	3c08      	subs	r4, #8
 800b3c6:	3b01      	subs	r3, #1
 800b3c8:	9306      	str	r3, [sp, #24]
 800b3ca:	e7bd      	b.n	800b348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800b3cc:	9b05      	ldr	r3, [sp, #20]
 800b3ce:	1899      	adds	r1, r3, r2
 800b3d0:	9b08      	ldr	r3, [sp, #32]
 800b3d2:	b209      	sxth	r1, r1
 800b3d4:	4299      	cmp	r1, r3
 800b3d6:	dc39      	bgt.n	800b44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x178>
 800b3d8:	9b07      	ldr	r3, [sp, #28]
 800b3da:	1a9a      	subs	r2, r3, r2
 800b3dc:	b212      	sxth	r2, r2
 800b3de:	ab10      	add	r3, sp, #64	@ 0x40
 800b3e0:	80da      	strh	r2, [r3, #6]
 800b3e2:	2a00      	cmp	r2, #0
 800b3e4:	dcec      	bgt.n	800b3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800b3e6:	b015      	add	sp, #84	@ 0x54
 800b3e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3ea:	4567      	cmp	r7, ip
 800b3ec:	db2e      	blt.n	800b44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x178>
 800b3ee:	ab10      	add	r3, sp, #64	@ 0x40
 800b3f0:	88e2      	ldrh	r2, [r4, #6]
 800b3f2:	88db      	ldrh	r3, [r3, #6]
 800b3f4:	4462      	add	r2, ip
 800b3f6:	19df      	adds	r7, r3, r7
 800b3f8:	b212      	sxth	r2, r2
 800b3fa:	b23f      	sxth	r7, r7
 800b3fc:	42ba      	cmp	r2, r7
 800b3fe:	db25      	blt.n	800b44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x178>
 800b400:	ab10      	add	r3, sp, #64	@ 0x40
 800b402:	889b      	ldrh	r3, [r3, #4]
 800b404:	b28a      	uxth	r2, r1
 800b406:	9307      	str	r3, [sp, #28]
 800b408:	466b      	mov	r3, sp
 800b40a:	8a9f      	ldrh	r7, [r3, #20]
 800b40c:	b28b      	uxth	r3, r1
 800b40e:	9308      	str	r3, [sp, #32]
 800b410:	88a3      	ldrh	r3, [r4, #4]
 800b412:	18d3      	adds	r3, r2, r3
 800b414:	b29b      	uxth	r3, r3
 800b416:	b21a      	sxth	r2, r3
 800b418:	4694      	mov	ip, r2
 800b41a:	9a05      	ldr	r2, [sp, #20]
 800b41c:	428a      	cmp	r2, r1
 800b41e:	db0a      	blt.n	800b436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x162>
 800b420:	9a07      	ldr	r2, [sp, #28]
 800b422:	1bdb      	subs	r3, r3, r7
 800b424:	1ad1      	subs	r1, r2, r3
 800b426:	b209      	sxth	r1, r1
 800b428:	ab10      	add	r3, sp, #64	@ 0x40
 800b42a:	8099      	strh	r1, [r3, #4]
 800b42c:	2900      	cmp	r1, #0
 800b42e:	ddda      	ble.n	800b3e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800b430:	4662      	mov	r2, ip
 800b432:	801a      	strh	r2, [r3, #0]
 800b434:	e7c4      	b.n	800b3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800b436:	9b07      	ldr	r3, [sp, #28]
 800b438:	19d9      	adds	r1, r3, r7
 800b43a:	b209      	sxth	r1, r1
 800b43c:	4561      	cmp	r1, ip
 800b43e:	dc05      	bgt.n	800b44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x178>
 800b440:	9b08      	ldr	r3, [sp, #32]
 800b442:	1bda      	subs	r2, r3, r7
 800b444:	b212      	sxth	r2, r2
 800b446:	ab10      	add	r3, sp, #64	@ 0x40
 800b448:	809a      	strh	r2, [r3, #4]
 800b44a:	e7ca      	b.n	800b3e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10e>
 800b44c:	9003      	str	r0, [sp, #12]
 800b44e:	e7b8      	b.n	800b3c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800b450:	2e00      	cmp	r6, #0
 800b452:	d000      	beq.n	800b456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x182>
 800b454:	e773      	b.n	800b33e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a>
 800b456:	9b03      	ldr	r3, [sp, #12]
 800b458:	2b00      	cmp	r3, #0
 800b45a:	d100      	bne.n	800b45e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x18a>
 800b45c:	e20c      	b.n	800b878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800b45e:	ab10      	add	r3, sp, #64	@ 0x40
 800b460:	2100      	movs	r1, #0
 800b462:	5e5a      	ldrsh	r2, [r3, r1]
 800b464:	9203      	str	r2, [sp, #12]
 800b466:	466a      	mov	r2, sp
 800b468:	8992      	ldrh	r2, [r2, #12]
 800b46a:	920a      	str	r2, [sp, #40]	@ 0x28
 800b46c:	889a      	ldrh	r2, [r3, #4]
 800b46e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800b470:	188a      	adds	r2, r1, r2
 800b472:	b292      	uxth	r2, r2
 800b474:	9208      	str	r2, [sp, #32]
 800b476:	466a      	mov	r2, sp
 800b478:	2720      	movs	r7, #32
 800b47a:	5fd7      	ldrsh	r7, [r2, r7]
 800b47c:	2102      	movs	r1, #2
 800b47e:	5e5a      	ldrsh	r2, [r3, r1]
 800b480:	9205      	str	r2, [sp, #20]
 800b482:	466a      	mov	r2, sp
 800b484:	8a92      	ldrh	r2, [r2, #20]
 800b486:	9207      	str	r2, [sp, #28]
 800b488:	88da      	ldrh	r2, [r3, #6]
 800b48a:	9907      	ldr	r1, [sp, #28]
 800b48c:	930c      	str	r3, [sp, #48]	@ 0x30
 800b48e:	188a      	adds	r2, r1, r2
 800b490:	b292      	uxth	r2, r2
 800b492:	920b      	str	r2, [sp, #44]	@ 0x2c
 800b494:	466a      	mov	r2, sp
 800b496:	242c      	movs	r4, #44	@ 0x2c
 800b498:	5f14      	ldrsh	r4, [r2, r4]
 800b49a:	9a04      	ldr	r2, [sp, #16]
 800b49c:	9206      	str	r2, [sp, #24]
 800b49e:	9b06      	ldr	r3, [sp, #24]
 800b4a0:	2b00      	cmp	r3, #0
 800b4a2:	d04f      	beq.n	800b544 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x270>
 800b4a4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b4a6:	0028      	movs	r0, r5
 800b4a8:	f7ff fca9 	bl	800adfe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b4ac:	2800      	cmp	r0, #0
 800b4ae:	d017      	beq.n	800b4e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20c>
 800b4b0:	2300      	movs	r3, #0
 800b4b2:	5ee9      	ldrsh	r1, [r5, r3]
 800b4b4:	2202      	movs	r2, #2
 800b4b6:	5eab      	ldrsh	r3, [r5, r2]
 800b4b8:	469c      	mov	ip, r3
 800b4ba:	9b03      	ldr	r3, [sp, #12]
 800b4bc:	428b      	cmp	r3, r1
 800b4be:	dc1e      	bgt.n	800b4fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x22a>
 800b4c0:	88ab      	ldrh	r3, [r5, #4]
 800b4c2:	185b      	adds	r3, r3, r1
 800b4c4:	b21b      	sxth	r3, r3
 800b4c6:	429f      	cmp	r7, r3
 800b4c8:	db19      	blt.n	800b4fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x22a>
 800b4ca:	4663      	mov	r3, ip
 800b4cc:	9905      	ldr	r1, [sp, #20]
 800b4ce:	b29a      	uxth	r2, r3
 800b4d0:	88eb      	ldrh	r3, [r5, #6]
 800b4d2:	4561      	cmp	r1, ip
 800b4d4:	dc0b      	bgt.n	800b4ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x21a>
 800b4d6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800b4d8:	806c      	strh	r4, [r5, #2]
 800b4da:	1a8a      	subs	r2, r1, r2
 800b4dc:	1a9b      	subs	r3, r3, r2
 800b4de:	80eb      	strh	r3, [r5, #6]
 800b4e0:	0030      	movs	r0, r6
 800b4e2:	9b06      	ldr	r3, [sp, #24]
 800b4e4:	3d08      	subs	r5, #8
 800b4e6:	3b01      	subs	r3, #1
 800b4e8:	9306      	str	r3, [sp, #24]
 800b4ea:	0006      	movs	r6, r0
 800b4ec:	e7d7      	b.n	800b49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1ca>
 800b4ee:	18d3      	adds	r3, r2, r3
 800b4f0:	b21b      	sxth	r3, r3
 800b4f2:	42a3      	cmp	r3, r4
 800b4f4:	dcf5      	bgt.n	800b4e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20e>
 800b4f6:	9b07      	ldr	r3, [sp, #28]
 800b4f8:	1a9a      	subs	r2, r3, r2
 800b4fa:	80ea      	strh	r2, [r5, #6]
 800b4fc:	e7f0      	b.n	800b4e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20c>
 800b4fe:	9b05      	ldr	r3, [sp, #20]
 800b500:	4563      	cmp	r3, ip
 800b502:	dcee      	bgt.n	800b4e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20e>
 800b504:	88eb      	ldrh	r3, [r5, #6]
 800b506:	4463      	add	r3, ip
 800b508:	b21b      	sxth	r3, r3
 800b50a:	429c      	cmp	r4, r3
 800b50c:	dbe9      	blt.n	800b4e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20e>
 800b50e:	88ab      	ldrh	r3, [r5, #4]
 800b510:	b28a      	uxth	r2, r1
 800b512:	469c      	mov	ip, r3
 800b514:	9b03      	ldr	r3, [sp, #12]
 800b516:	428b      	cmp	r3, r1
 800b518:	dc06      	bgt.n	800b528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>
 800b51a:	9b08      	ldr	r3, [sp, #32]
 800b51c:	802f      	strh	r7, [r5, #0]
 800b51e:	1a9a      	subs	r2, r3, r2
 800b520:	4663      	mov	r3, ip
 800b522:	1a9b      	subs	r3, r3, r2
 800b524:	80ab      	strh	r3, [r5, #4]
 800b526:	e7db      	b.n	800b4e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20c>
 800b528:	4663      	mov	r3, ip
 800b52a:	18d3      	adds	r3, r2, r3
 800b52c:	b21b      	sxth	r3, r3
 800b52e:	429f      	cmp	r7, r3
 800b530:	dbd7      	blt.n	800b4e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20e>
 800b532:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b534:	1a9a      	subs	r2, r3, r2
 800b536:	80aa      	strh	r2, [r5, #4]
 800b538:	e7d2      	b.n	800b4e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x20c>
 800b53a:	46c0      	nop			@ (mov r8, r8)
 800b53c:	2000356e 	.word	0x2000356e
 800b540:	2000356c 	.word	0x2000356c
 800b544:	2e00      	cmp	r6, #0
 800b546:	d100      	bne.n	800b54a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x276>
 800b548:	e196      	b.n	800b878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800b54a:	9b02      	ldr	r3, [sp, #8]
 800b54c:	9a01      	ldr	r2, [sp, #4]
 800b54e:	00db      	lsls	r3, r3, #3
 800b550:	18d3      	adds	r3, r2, r3
 800b552:	9303      	str	r3, [sp, #12]
 800b554:	9b04      	ldr	r3, [sp, #16]
 800b556:	00db      	lsls	r3, r3, #3
 800b558:	425b      	negs	r3, r3
 800b55a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800b55c:	9b02      	ldr	r3, [sp, #8]
 800b55e:	3301      	adds	r3, #1
 800b560:	d100      	bne.n	800b564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x290>
 800b562:	e189      	b.n	800b878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800b564:	9903      	ldr	r1, [sp, #12]
 800b566:	a810      	add	r0, sp, #64	@ 0x40
 800b568:	f7ff fcbc 	bl	800aee4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800b56c:	2800      	cmp	r0, #0
 800b56e:	d004      	beq.n	800b57a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2a6>
 800b570:	466b      	mov	r3, sp
 800b572:	9801      	ldr	r0, [sp, #4]
 800b574:	8919      	ldrh	r1, [r3, #8]
 800b576:	f7ff fe9b 	bl	800b2b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b57a:	a910      	add	r1, sp, #64	@ 0x40
 800b57c:	9803      	ldr	r0, [sp, #12]
 800b57e:	f7ff fc3e 	bl	800adfe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b582:	2800      	cmp	r0, #0
 800b584:	d100      	bne.n	800b588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2b4>
 800b586:	e0b4      	b.n	800b6f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x41e>
 800b588:	ab10      	add	r3, sp, #64	@ 0x40
 800b58a:	2200      	movs	r2, #0
 800b58c:	5e9b      	ldrsh	r3, [r3, r2]
 800b58e:	9a03      	ldr	r2, [sp, #12]
 800b590:	9306      	str	r3, [sp, #24]
 800b592:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b594:	189e      	adds	r6, r3, r2
 800b596:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b598:	5ef3      	ldrsh	r3, [r6, r3]
 800b59a:	9308      	str	r3, [sp, #32]
 800b59c:	ab10      	add	r3, sp, #64	@ 0x40
 800b59e:	2402      	movs	r4, #2
 800b5a0:	5f1c      	ldrsh	r4, [r3, r4]
 800b5a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b5a4:	18f5      	adds	r5, r6, r3
 800b5a6:	2202      	movs	r2, #2
 800b5a8:	5eab      	ldrsh	r3, [r5, r2]
 800b5aa:	2104      	movs	r1, #4
 800b5ac:	5e6a      	ldrsh	r2, [r5, r1]
 800b5ae:	469c      	mov	ip, r3
 800b5b0:	466b      	mov	r3, sp
 800b5b2:	8c1b      	ldrh	r3, [r3, #32]
 800b5b4:	920e      	str	r2, [sp, #56]	@ 0x38
 800b5b6:	1898      	adds	r0, r3, r2
 800b5b8:	466a      	mov	r2, sp
 800b5ba:	8b17      	ldrh	r7, [r2, #24]
 800b5bc:	aa10      	add	r2, sp, #64	@ 0x40
 800b5be:	8892      	ldrh	r2, [r2, #4]
 800b5c0:	b280      	uxth	r0, r0
 800b5c2:	18b9      	adds	r1, r7, r2
 800b5c4:	9204      	str	r2, [sp, #16]
 800b5c6:	b28a      	uxth	r2, r1
 800b5c8:	920a      	str	r2, [sp, #40]	@ 0x28
 800b5ca:	b212      	sxth	r2, r2
 800b5cc:	9205      	str	r2, [sp, #20]
 800b5ce:	9a00      	ldr	r2, [sp, #0]
 800b5d0:	32ec      	adds	r2, #236	@ 0xec
 800b5d2:	8812      	ldrh	r2, [r2, #0]
 800b5d4:	9207      	str	r2, [sp, #28]
 800b5d6:	9a06      	ldr	r2, [sp, #24]
 800b5d8:	0011      	movs	r1, r2
 800b5da:	9a08      	ldr	r2, [sp, #32]
 800b5dc:	4291      	cmp	r1, r2
 800b5de:	dc00      	bgt.n	800b5e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800b5e0:	e0b0      	b.n	800b744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x470>
 800b5e2:	4669      	mov	r1, sp
 800b5e4:	1aff      	subs	r7, r7, r3
 800b5e6:	b2bf      	uxth	r7, r7
 800b5e8:	970b      	str	r7, [sp, #44]	@ 0x2c
 800b5ea:	272c      	movs	r7, #44	@ 0x2c
 800b5ec:	5fcf      	ldrsh	r7, [r1, r7]
 800b5ee:	b202      	sxth	r2, r0
 800b5f0:	9706      	str	r7, [sp, #24]
 800b5f2:	4564      	cmp	r4, ip
 800b5f4:	dd29      	ble.n	800b64a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x376>
 800b5f6:	4661      	mov	r1, ip
 800b5f8:	b2a3      	uxth	r3, r4
 800b5fa:	b28c      	uxth	r4, r1
 800b5fc:	1b18      	subs	r0, r3, r4
 800b5fe:	b280      	uxth	r0, r0
 800b600:	b201      	sxth	r1, r0
 800b602:	468c      	mov	ip, r1
 800b604:	a910      	add	r1, sp, #64	@ 0x40
 800b606:	88cd      	ldrh	r5, [r1, #6]
 800b608:	9902      	ldr	r1, [sp, #8]
 800b60a:	9e00      	ldr	r6, [sp, #0]
 800b60c:	00c9      	lsls	r1, r1, #3
 800b60e:	1871      	adds	r1, r6, r1
 800b610:	9e05      	ldr	r6, [sp, #20]
 800b612:	195b      	adds	r3, r3, r5
 800b614:	1ab2      	subs	r2, r6, r2
 800b616:	4666      	mov	r6, ip
 800b618:	4372      	muls	r2, r6
 800b61a:	000e      	movs	r6, r1
 800b61c:	36b2      	adds	r6, #178	@ 0xb2
 800b61e:	8837      	ldrh	r7, [r6, #0]
 800b620:	b21b      	sxth	r3, r3
 800b622:	19e4      	adds	r4, r4, r7
 800b624:	b224      	sxth	r4, r4
 800b626:	1b1c      	subs	r4, r3, r4
 800b628:	9b06      	ldr	r3, [sp, #24]
 800b62a:	435c      	muls	r4, r3
 800b62c:	4663      	mov	r3, ip
 800b62e:	42a2      	cmp	r2, r4
 800b630:	da2c      	bge.n	800b68c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b8>
 800b632:	000b      	movs	r3, r1
 800b634:	9a06      	ldr	r2, [sp, #24]
 800b636:	33b0      	adds	r3, #176	@ 0xb0
 800b638:	801a      	strh	r2, [r3, #0]
 800b63a:	1940      	adds	r0, r0, r5
 800b63c:	ab10      	add	r3, sp, #64	@ 0x40
 800b63e:	31ae      	adds	r1, #174	@ 0xae
 800b640:	80d8      	strh	r0, [r3, #6]
 800b642:	880b      	ldrh	r3, [r1, #0]
 800b644:	aa10      	add	r2, sp, #64	@ 0x40
 800b646:	8053      	strh	r3, [r2, #2]
 800b648:	e657      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b64a:	9f05      	ldr	r7, [sp, #20]
 800b64c:	42ba      	cmp	r2, r7
 800b64e:	da31      	bge.n	800b6b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800b650:	9b02      	ldr	r3, [sp, #8]
 800b652:	4667      	mov	r7, ip
 800b654:	00d9      	lsls	r1, r3, #3
 800b656:	9b00      	ldr	r3, [sp, #0]
 800b658:	1859      	adds	r1, r3, r1
 800b65a:	000e      	movs	r6, r1
 800b65c:	ab10      	add	r3, sp, #64	@ 0x40
 800b65e:	88dd      	ldrh	r5, [r3, #6]
 800b660:	36b2      	adds	r6, #178	@ 0xb2
 800b662:	1928      	adds	r0, r5, r4
 800b664:	b280      	uxth	r0, r0
 800b666:	b203      	sxth	r3, r0
 800b668:	9301      	str	r3, [sp, #4]
 800b66a:	8833      	ldrh	r3, [r6, #0]
 800b66c:	1b3c      	subs	r4, r7, r4
 800b66e:	9f06      	ldr	r7, [sp, #24]
 800b670:	4463      	add	r3, ip
 800b672:	1a18      	subs	r0, r3, r0
 800b674:	437c      	muls	r4, r7
 800b676:	9f05      	ldr	r7, [sp, #20]
 800b678:	b280      	uxth	r0, r0
 800b67a:	b203      	sxth	r3, r0
 800b67c:	1aba      	subs	r2, r7, r2
 800b67e:	435a      	muls	r2, r3
 800b680:	4294      	cmp	r4, r2
 800b682:	dc10      	bgt.n	800b6a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d2>
 800b684:	000a      	movs	r2, r1
 800b686:	9801      	ldr	r0, [sp, #4]
 800b688:	32ae      	adds	r2, #174	@ 0xae
 800b68a:	8010      	strh	r0, [r2, #0]
 800b68c:	8033      	strh	r3, [r6, #0]
 800b68e:	31ac      	adds	r1, #172	@ 0xac
 800b690:	880b      	ldrh	r3, [r1, #0]
 800b692:	aa10      	add	r2, sp, #64	@ 0x40
 800b694:	8013      	strh	r3, [r2, #0]
 800b696:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b698:	9b04      	ldr	r3, [sp, #16]
 800b69a:	4694      	mov	ip, r2
 800b69c:	4463      	add	r3, ip
 800b69e:	001f      	movs	r7, r3
 800b6a0:	ab10      	add	r3, sp, #64	@ 0x40
 800b6a2:	809f      	strh	r7, [r3, #4]
 800b6a4:	e629      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b6a6:	9b06      	ldr	r3, [sp, #24]
 800b6a8:	31b0      	adds	r1, #176	@ 0xb0
 800b6aa:	800b      	strh	r3, [r1, #0]
 800b6ac:	1940      	adds	r0, r0, r5
 800b6ae:	ab10      	add	r3, sp, #64	@ 0x40
 800b6b0:	80d8      	strh	r0, [r3, #6]
 800b6b2:	e622      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b6b4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b6b6:	9907      	ldr	r1, [sp, #28]
 800b6b8:	1a80      	subs	r0, r0, r2
 800b6ba:	b280      	uxth	r0, r0
 800b6bc:	b202      	sxth	r2, r0
 800b6be:	2906      	cmp	r1, #6
 800b6c0:	d81e      	bhi.n	800b700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x42c>
 800b6c2:	9b03      	ldr	r3, [sp, #12]
 800b6c4:	9c05      	ldr	r4, [sp, #20]
 800b6c6:	2100      	movs	r1, #0
 800b6c8:	5e59      	ldrsh	r1, [r3, r1]
 800b6ca:	2006      	movs	r0, #6
 800b6cc:	5e2b      	ldrsh	r3, [r5, r0]
 800b6ce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800b6d0:	5234      	strh	r4, [r6, r0]
 800b6d2:	80aa      	strh	r2, [r5, #4]
 800b6d4:	9a07      	ldr	r2, [sp, #28]
 800b6d6:	1c50      	adds	r0, r2, #1
 800b6d8:	9a00      	ldr	r2, [sp, #0]
 800b6da:	32ae      	adds	r2, #174	@ 0xae
 800b6dc:	87d0      	strh	r0, [r2, #62]	@ 0x3e
 800b6de:	9a07      	ldr	r2, [sp, #28]
 800b6e0:	9801      	ldr	r0, [sp, #4]
 800b6e2:	00d2      	lsls	r2, r2, #3
 800b6e4:	1882      	adds	r2, r0, r2
 800b6e6:	8011      	strh	r1, [r2, #0]
 800b6e8:	4661      	mov	r1, ip
 800b6ea:	8051      	strh	r1, [r2, #2]
 800b6ec:	9906      	ldr	r1, [sp, #24]
 800b6ee:	80d3      	strh	r3, [r2, #6]
 800b6f0:	8091      	strh	r1, [r2, #4]
 800b6f2:	9b02      	ldr	r3, [sp, #8]
 800b6f4:	3b01      	subs	r3, #1
 800b6f6:	9302      	str	r3, [sp, #8]
 800b6f8:	9b03      	ldr	r3, [sp, #12]
 800b6fa:	3b08      	subs	r3, #8
 800b6fc:	9303      	str	r3, [sp, #12]
 800b6fe:	e72d      	b.n	800b55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800b700:	9902      	ldr	r1, [sp, #8]
 800b702:	9c06      	ldr	r4, [sp, #24]
 800b704:	00c9      	lsls	r1, r1, #3
 800b706:	42a2      	cmp	r2, r4
 800b708:	db12      	blt.n	800b730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45c>
 800b70a:	9c08      	ldr	r4, [sp, #32]
 800b70c:	a810      	add	r0, sp, #64	@ 0x40
 800b70e:	8004      	strh	r4, [r0, #0]
 800b710:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800b712:	9804      	ldr	r0, [sp, #16]
 800b714:	46a4      	mov	ip, r4
 800b716:	4460      	add	r0, ip
 800b718:	b287      	uxth	r7, r0
 800b71a:	a810      	add	r0, sp, #64	@ 0x40
 800b71c:	8087      	strh	r7, [r0, #4]
 800b71e:	9800      	ldr	r0, [sp, #0]
 800b720:	18fb      	adds	r3, r7, r3
 800b722:	1841      	adds	r1, r0, r1
 800b724:	0008      	movs	r0, r1
 800b726:	31b0      	adds	r1, #176	@ 0xb0
 800b728:	30ac      	adds	r0, #172	@ 0xac
 800b72a:	8003      	strh	r3, [r0, #0]
 800b72c:	800a      	strh	r2, [r1, #0]
 800b72e:	e5e4      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b730:	9b00      	ldr	r3, [sp, #0]
 800b732:	33ac      	adds	r3, #172	@ 0xac
 800b734:	1859      	adds	r1, r3, r1
 800b736:	9b06      	ldr	r3, [sp, #24]
 800b738:	808b      	strh	r3, [r1, #4]
 800b73a:	9b04      	ldr	r3, [sp, #16]
 800b73c:	18c0      	adds	r0, r0, r3
 800b73e:	ab10      	add	r3, sp, #64	@ 0x40
 800b740:	8098      	strh	r0, [r3, #4]
 800b742:	e5da      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b744:	4662      	mov	r2, ip
 800b746:	b292      	uxth	r2, r2
 800b748:	920c      	str	r2, [sp, #48]	@ 0x30
 800b74a:	aa10      	add	r2, sp, #64	@ 0x40
 800b74c:	88d7      	ldrh	r7, [r2, #6]
 800b74e:	b2a3      	uxth	r3, r4
 800b750:	19de      	adds	r6, r3, r7
 800b752:	b2b6      	uxth	r6, r6
 800b754:	b232      	sxth	r2, r6
 800b756:	920d      	str	r2, [sp, #52]	@ 0x34
 800b758:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b75a:	88ea      	ldrh	r2, [r5, #6]
 800b75c:	188a      	adds	r2, r1, r2
 800b75e:	b292      	uxth	r2, r2
 800b760:	4564      	cmp	r4, ip
 800b762:	da26      	bge.n	800b7b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4de>
 800b764:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b766:	1b92      	subs	r2, r2, r6
 800b768:	1ac0      	subs	r0, r0, r3
 800b76a:	4663      	mov	r3, ip
 800b76c:	9906      	ldr	r1, [sp, #24]
 800b76e:	1b1c      	subs	r4, r3, r4
 800b770:	9b08      	ldr	r3, [sp, #32]
 800b772:	b280      	uxth	r0, r0
 800b774:	b292      	uxth	r2, r2
 800b776:	1a5b      	subs	r3, r3, r1
 800b778:	b205      	sxth	r5, r0
 800b77a:	b216      	sxth	r6, r2
 800b77c:	436c      	muls	r4, r5
 800b77e:	4373      	muls	r3, r6
 800b780:	9902      	ldr	r1, [sp, #8]
 800b782:	00c9      	lsls	r1, r1, #3
 800b784:	429c      	cmp	r4, r3
 800b786:	dc08      	bgt.n	800b79a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800b788:	9b00      	ldr	r3, [sp, #0]
 800b78a:	1859      	adds	r1, r3, r1
 800b78c:	000b      	movs	r3, r1
 800b78e:	33b2      	adds	r3, #178	@ 0xb2
 800b790:	801e      	strh	r6, [r3, #0]
 800b792:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b794:	31ae      	adds	r1, #174	@ 0xae
 800b796:	800b      	strh	r3, [r1, #0]
 800b798:	e7cf      	b.n	800b73a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800b79a:	9b00      	ldr	r3, [sp, #0]
 800b79c:	1859      	adds	r1, r3, r1
 800b79e:	000b      	movs	r3, r1
 800b7a0:	33b0      	adds	r3, #176	@ 0xb0
 800b7a2:	801d      	strh	r5, [r3, #0]
 800b7a4:	9b05      	ldr	r3, [sp, #20]
 800b7a6:	31ac      	adds	r1, #172	@ 0xac
 800b7a8:	800b      	strh	r3, [r1, #0]
 800b7aa:	19d2      	adds	r2, r2, r7
 800b7ac:	ab10      	add	r3, sp, #64	@ 0x40
 800b7ae:	80da      	strh	r2, [r3, #6]
 800b7b0:	e5a3      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b7b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b7b4:	1a5b      	subs	r3, r3, r1
 800b7b6:	b29b      	uxth	r3, r3
 800b7b8:	b201      	sxth	r1, r0
 800b7ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b7bc:	b21c      	sxth	r4, r3
 800b7be:	000b      	movs	r3, r1
 800b7c0:	9905      	ldr	r1, [sp, #20]
 800b7c2:	428b      	cmp	r3, r1
 800b7c4:	dd23      	ble.n	800b80e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800b7c6:	9908      	ldr	r1, [sp, #32]
 800b7c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b7ca:	9e06      	ldr	r6, [sp, #24]
 800b7cc:	1ac0      	subs	r0, r0, r3
 800b7ce:	1b8e      	subs	r6, r1, r6
 800b7d0:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800b7d2:	b280      	uxth	r0, r0
 800b7d4:	b212      	sxth	r2, r2
 800b7d6:	1a8a      	subs	r2, r1, r2
 800b7d8:	b205      	sxth	r5, r0
 800b7da:	4366      	muls	r6, r4
 800b7dc:	436a      	muls	r2, r5
 800b7de:	9902      	ldr	r1, [sp, #8]
 800b7e0:	00c9      	lsls	r1, r1, #3
 800b7e2:	4296      	cmp	r6, r2
 800b7e4:	db04      	blt.n	800b7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51c>
 800b7e6:	9b00      	ldr	r3, [sp, #0]
 800b7e8:	33ac      	adds	r3, #172	@ 0xac
 800b7ea:	1859      	adds	r1, r3, r1
 800b7ec:	80cc      	strh	r4, [r1, #6]
 800b7ee:	e7a4      	b.n	800b73a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800b7f0:	9a00      	ldr	r2, [sp, #0]
 800b7f2:	9805      	ldr	r0, [sp, #20]
 800b7f4:	1851      	adds	r1, r2, r1
 800b7f6:	000a      	movs	r2, r1
 800b7f8:	32ac      	adds	r2, #172	@ 0xac
 800b7fa:	31ae      	adds	r1, #174	@ 0xae
 800b7fc:	8010      	strh	r0, [r2, #0]
 800b7fe:	8095      	strh	r5, [r2, #4]
 800b800:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b802:	880a      	ldrh	r2, [r1, #0]
 800b804:	19db      	adds	r3, r3, r7
 800b806:	a910      	add	r1, sp, #64	@ 0x40
 800b808:	804a      	strh	r2, [r1, #2]
 800b80a:	80cb      	strh	r3, [r1, #6]
 800b80c:	e575      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b80e:	1b92      	subs	r2, r2, r6
 800b810:	9907      	ldr	r1, [sp, #28]
 800b812:	b292      	uxth	r2, r2
 800b814:	b210      	sxth	r0, r2
 800b816:	2906      	cmp	r1, #6
 800b818:	d814      	bhi.n	800b844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x570>
 800b81a:	9b03      	ldr	r3, [sp, #12]
 800b81c:	3101      	adds	r1, #1
 800b81e:	2200      	movs	r2, #0
 800b820:	5e9b      	ldrsh	r3, [r3, r2]
 800b822:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800b824:	80e8      	strh	r0, [r5, #6]
 800b826:	806a      	strh	r2, [r5, #2]
 800b828:	9a00      	ldr	r2, [sp, #0]
 800b82a:	32ae      	adds	r2, #174	@ 0xae
 800b82c:	87d1      	strh	r1, [r2, #62]	@ 0x3e
 800b82e:	9a07      	ldr	r2, [sp, #28]
 800b830:	9901      	ldr	r1, [sp, #4]
 800b832:	00d2      	lsls	r2, r2, #3
 800b834:	188a      	adds	r2, r1, r2
 800b836:	8013      	strh	r3, [r2, #0]
 800b838:	4663      	mov	r3, ip
 800b83a:	8053      	strh	r3, [r2, #2]
 800b83c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b83e:	80d4      	strh	r4, [r2, #6]
 800b840:	8093      	strh	r3, [r2, #4]
 800b842:	e756      	b.n	800b6f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x41e>
 800b844:	9902      	ldr	r1, [sp, #8]
 800b846:	00c9      	lsls	r1, r1, #3
 800b848:	42a0      	cmp	r0, r4
 800b84a:	db10      	blt.n	800b86e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59a>
 800b84c:	4664      	mov	r4, ip
 800b84e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b850:	aa10      	add	r2, sp, #64	@ 0x40
 800b852:	19db      	adds	r3, r3, r7
 800b854:	b29b      	uxth	r3, r3
 800b856:	8054      	strh	r4, [r2, #2]
 800b858:	80d3      	strh	r3, [r2, #6]
 800b85a:	9a00      	ldr	r2, [sp, #0]
 800b85c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800b85e:	1851      	adds	r1, r2, r1
 800b860:	000a      	movs	r2, r1
 800b862:	191b      	adds	r3, r3, r4
 800b864:	32ae      	adds	r2, #174	@ 0xae
 800b866:	31b2      	adds	r1, #178	@ 0xb2
 800b868:	8013      	strh	r3, [r2, #0]
 800b86a:	8008      	strh	r0, [r1, #0]
 800b86c:	e545      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800b86e:	9b00      	ldr	r3, [sp, #0]
 800b870:	33ac      	adds	r3, #172	@ 0xac
 800b872:	1859      	adds	r1, r3, r1
 800b874:	80cc      	strh	r4, [r1, #6]
 800b876:	e798      	b.n	800b7aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 800b878:	9b00      	ldr	r3, [sp, #0]
 800b87a:	33ec      	adds	r3, #236	@ 0xec
 800b87c:	881c      	ldrh	r4, [r3, #0]
 800b87e:	9b00      	ldr	r3, [sp, #0]
 800b880:	1e65      	subs	r5, r4, #1
 800b882:	00e4      	lsls	r4, r4, #3
 800b884:	34a4      	adds	r4, #164	@ 0xa4
 800b886:	b2ad      	uxth	r5, r5
 800b888:	191c      	adds	r4, r3, r4
 800b88a:	4b71      	ldr	r3, [pc, #452]	@ (800ba50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x77c>)
 800b88c:	429d      	cmp	r5, r3
 800b88e:	d049      	beq.n	800b924 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x650>
 800b890:	ab10      	add	r3, sp, #64	@ 0x40
 800b892:	2202      	movs	r2, #2
 800b894:	5e9b      	ldrsh	r3, [r3, r2]
 800b896:	2202      	movs	r2, #2
 800b898:	5ea1      	ldrsh	r1, [r4, r2]
 800b89a:	aa10      	add	r2, sp, #64	@ 0x40
 800b89c:	2000      	movs	r0, #0
 800b89e:	5e12      	ldrsh	r2, [r2, r0]
 800b8a0:	2600      	movs	r6, #0
 800b8a2:	5fa0      	ldrsh	r0, [r4, r6]
 800b8a4:	428b      	cmp	r3, r1
 800b8a6:	d121      	bne.n	800b8ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800b8a8:	ae10      	add	r6, sp, #64	@ 0x40
 800b8aa:	2706      	movs	r7, #6
 800b8ac:	5ff7      	ldrsh	r7, [r6, r7]
 800b8ae:	46bc      	mov	ip, r7
 800b8b0:	2706      	movs	r7, #6
 800b8b2:	5fe6      	ldrsh	r6, [r4, r7]
 800b8b4:	45b4      	cmp	ip, r6
 800b8b6:	d119      	bne.n	800b8ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800b8b8:	88a3      	ldrh	r3, [r4, #4]
 800b8ba:	a910      	add	r1, sp, #64	@ 0x40
 800b8bc:	181e      	adds	r6, r3, r0
 800b8be:	b236      	sxth	r6, r6
 800b8c0:	8889      	ldrh	r1, [r1, #4]
 800b8c2:	4296      	cmp	r6, r2
 800b8c4:	d10b      	bne.n	800b8de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60a>
 800b8c6:	aa10      	add	r2, sp, #64	@ 0x40
 800b8c8:	8010      	strh	r0, [r2, #0]
 800b8ca:	185b      	adds	r3, r3, r1
 800b8cc:	8093      	strh	r3, [r2, #4]
 800b8ce:	0029      	movs	r1, r5
 800b8d0:	9801      	ldr	r0, [sp, #4]
 800b8d2:	f7ff fced 	bl	800b2b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b8d6:	3d01      	subs	r5, #1
 800b8d8:	b2ad      	uxth	r5, r5
 800b8da:	3c08      	subs	r4, #8
 800b8dc:	e7d5      	b.n	800b88a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b6>
 800b8de:	188a      	adds	r2, r1, r2
 800b8e0:	b212      	sxth	r2, r2
 800b8e2:	4282      	cmp	r2, r0
 800b8e4:	d1f7      	bne.n	800b8d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x602>
 800b8e6:	185b      	adds	r3, r3, r1
 800b8e8:	aa10      	add	r2, sp, #64	@ 0x40
 800b8ea:	e7ef      	b.n	800b8cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f8>
 800b8ec:	4282      	cmp	r2, r0
 800b8ee:	d1f2      	bne.n	800b8d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x602>
 800b8f0:	aa10      	add	r2, sp, #64	@ 0x40
 800b8f2:	2004      	movs	r0, #4
 800b8f4:	5e10      	ldrsh	r0, [r2, r0]
 800b8f6:	2604      	movs	r6, #4
 800b8f8:	5fa2      	ldrsh	r2, [r4, r6]
 800b8fa:	4290      	cmp	r0, r2
 800b8fc:	d1eb      	bne.n	800b8d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x602>
 800b8fe:	88e2      	ldrh	r2, [r4, #6]
 800b900:	a810      	add	r0, sp, #64	@ 0x40
 800b902:	1856      	adds	r6, r2, r1
 800b904:	b236      	sxth	r6, r6
 800b906:	88c0      	ldrh	r0, [r0, #6]
 800b908:	42b3      	cmp	r3, r6
 800b90a:	d104      	bne.n	800b916 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x642>
 800b90c:	ab10      	add	r3, sp, #64	@ 0x40
 800b90e:	8059      	strh	r1, [r3, #2]
 800b910:	1812      	adds	r2, r2, r0
 800b912:	80da      	strh	r2, [r3, #6]
 800b914:	e7db      	b.n	800b8ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800b916:	18c3      	adds	r3, r0, r3
 800b918:	b21b      	sxth	r3, r3
 800b91a:	4299      	cmp	r1, r3
 800b91c:	d1db      	bne.n	800b8d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x602>
 800b91e:	1812      	adds	r2, r2, r0
 800b920:	ab10      	add	r3, sp, #64	@ 0x40
 800b922:	e7f6      	b.n	800b912 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x63e>
 800b924:	9b00      	ldr	r3, [sp, #0]
 800b926:	33ec      	adds	r3, #236	@ 0xec
 800b928:	881a      	ldrh	r2, [r3, #0]
 800b92a:	00d3      	lsls	r3, r2, #3
 800b92c:	2a07      	cmp	r2, #7
 800b92e:	d816      	bhi.n	800b95e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68a>
 800b930:	a910      	add	r1, sp, #64	@ 0x40
 800b932:	2500      	movs	r5, #0
 800b934:	5f4d      	ldrsh	r5, [r1, r5]
 800b936:	a910      	add	r1, sp, #64	@ 0x40
 800b938:	2402      	movs	r4, #2
 800b93a:	5f0c      	ldrsh	r4, [r1, r4]
 800b93c:	a910      	add	r1, sp, #64	@ 0x40
 800b93e:	2004      	movs	r0, #4
 800b940:	5e08      	ldrsh	r0, [r1, r0]
 800b942:	a910      	add	r1, sp, #64	@ 0x40
 800b944:	2606      	movs	r6, #6
 800b946:	5f89      	ldrsh	r1, [r1, r6]
 800b948:	9e00      	ldr	r6, [sp, #0]
 800b94a:	3201      	adds	r2, #1
 800b94c:	36ae      	adds	r6, #174	@ 0xae
 800b94e:	87f2      	strh	r2, [r6, #62]	@ 0x3e
 800b950:	9a01      	ldr	r2, [sp, #4]
 800b952:	18d3      	adds	r3, r2, r3
 800b954:	801d      	strh	r5, [r3, #0]
 800b956:	805c      	strh	r4, [r3, #2]
 800b958:	8098      	strh	r0, [r3, #4]
 800b95a:	80d9      	strh	r1, [r3, #6]
 800b95c:	e543      	b.n	800b3e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800b95e:	1e57      	subs	r7, r2, #1
 800b960:	9a00      	ldr	r2, [sp, #0]
 800b962:	33a4      	adds	r3, #164	@ 0xa4
 800b964:	18d3      	adds	r3, r2, r3
 800b966:	9302      	str	r3, [sp, #8]
 800b968:	4b3a      	ldr	r3, [pc, #232]	@ (800ba54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x780>)
 800b96a:	9305      	str	r3, [sp, #20]
 800b96c:	2301      	movs	r3, #1
 800b96e:	425b      	negs	r3, r3
 800b970:	9304      	str	r3, [sp, #16]
 800b972:	2300      	movs	r3, #0
 800b974:	9303      	str	r3, [sp, #12]
 800b976:	9b02      	ldr	r3, [sp, #8]
 800b978:	2204      	movs	r2, #4
 800b97a:	5e9b      	ldrsh	r3, [r3, r2]
 800b97c:	9a02      	ldr	r2, [sp, #8]
 800b97e:	2106      	movs	r1, #6
 800b980:	5e52      	ldrsh	r2, [r2, r1]
 800b982:	435a      	muls	r2, r3
 800b984:	1e7b      	subs	r3, r7, #1
 800b986:	001e      	movs	r6, r3
 800b988:	9206      	str	r2, [sp, #24]
 800b98a:	9307      	str	r3, [sp, #28]
 800b98c:	ad10      	add	r5, sp, #64	@ 0x40
 800b98e:	1c73      	adds	r3, r6, #1
 800b990:	d003      	beq.n	800b99a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800b992:	9d00      	ldr	r5, [sp, #0]
 800b994:	00f3      	lsls	r3, r6, #3
 800b996:	35ac      	adds	r5, #172	@ 0xac
 800b998:	18ed      	adds	r5, r5, r3
 800b99a:	2204      	movs	r2, #4
 800b99c:	5eab      	ldrsh	r3, [r5, r2]
 800b99e:	2206      	movs	r2, #6
 800b9a0:	5eac      	ldrsh	r4, [r5, r2]
 800b9a2:	9902      	ldr	r1, [sp, #8]
 800b9a4:	435c      	muls	r4, r3
 800b9a6:	9408      	str	r4, [sp, #32]
 800b9a8:	ac12      	add	r4, sp, #72	@ 0x48
 800b9aa:	2208      	movs	r2, #8
 800b9ac:	0020      	movs	r0, r4
 800b9ae:	f007 f9e2 	bl	8012d76 <memcpy>
 800b9b2:	0029      	movs	r1, r5
 800b9b4:	0020      	movs	r0, r4
 800b9b6:	f7ff fabd 	bl	800af34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800b9ba:	2304      	movs	r3, #4
 800b9bc:	5ee2      	ldrsh	r2, [r4, r3]
 800b9be:	2106      	movs	r1, #6
 800b9c0:	5e63      	ldrsh	r3, [r4, r1]
 800b9c2:	9906      	ldr	r1, [sp, #24]
 800b9c4:	435a      	muls	r2, r3
 800b9c6:	468c      	mov	ip, r1
 800b9c8:	2107      	movs	r1, #7
 800b9ca:	9b08      	ldr	r3, [sp, #32]
 800b9cc:	4463      	add	r3, ip
 800b9ce:	1ad4      	subs	r4, r2, r3
 800b9d0:	17d3      	asrs	r3, r2, #31
 800b9d2:	400b      	ands	r3, r1
 800b9d4:	189b      	adds	r3, r3, r2
 800b9d6:	10db      	asrs	r3, r3, #3
 800b9d8:	42a3      	cmp	r3, r4
 800b9da:	dc22      	bgt.n	800ba22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74e>
 800b9dc:	9b05      	ldr	r3, [sp, #20]
 800b9de:	429c      	cmp	r4, r3
 800b9e0:	da04      	bge.n	800b9ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x718>
 800b9e2:	2c00      	cmp	r4, #0
 800b9e4:	d01d      	beq.n	800ba22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74e>
 800b9e6:	9405      	str	r4, [sp, #20]
 800b9e8:	9604      	str	r6, [sp, #16]
 800b9ea:	9703      	str	r7, [sp, #12]
 800b9ec:	3e01      	subs	r6, #1
 800b9ee:	1cb3      	adds	r3, r6, #2
 800b9f0:	d1cc      	bne.n	800b98c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b8>
 800b9f2:	9b02      	ldr	r3, [sp, #8]
 800b9f4:	9f07      	ldr	r7, [sp, #28]
 800b9f6:	3b08      	subs	r3, #8
 800b9f8:	9302      	str	r3, [sp, #8]
 800b9fa:	1c7b      	adds	r3, r7, #1
 800b9fc:	d1bb      	bne.n	800b976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800b9fe:	466b      	mov	r3, sp
 800ba00:	899d      	ldrh	r5, [r3, #12]
 800ba02:	9b03      	ldr	r3, [sp, #12]
 800ba04:	00de      	lsls	r6, r3, #3
 800ba06:	9b01      	ldr	r3, [sp, #4]
 800ba08:	1998      	adds	r0, r3, r6
 800ba0a:	9b04      	ldr	r3, [sp, #16]
 800ba0c:	3301      	adds	r3, #1
 800ba0e:	d10b      	bne.n	800ba28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x754>
 800ba10:	0001      	movs	r1, r0
 800ba12:	a810      	add	r0, sp, #64	@ 0x40
 800ba14:	f7ff fa8e 	bl	800af34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ba18:	0029      	movs	r1, r5
 800ba1a:	9801      	ldr	r0, [sp, #4]
 800ba1c:	f7ff fc48 	bl	800b2b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ba20:	e46b      	b.n	800b2fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26>
 800ba22:	9604      	str	r6, [sp, #16]
 800ba24:	9703      	str	r7, [sp, #12]
 800ba26:	e7ea      	b.n	800b9fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x72a>
 800ba28:	9b04      	ldr	r3, [sp, #16]
 800ba2a:	00dc      	lsls	r4, r3, #3
 800ba2c:	9b01      	ldr	r3, [sp, #4]
 800ba2e:	1919      	adds	r1, r3, r4
 800ba30:	f7ff fa80 	bl	800af34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ba34:	9f00      	ldr	r7, [sp, #0]
 800ba36:	a910      	add	r1, sp, #64	@ 0x40
 800ba38:	37ac      	adds	r7, #172	@ 0xac
 800ba3a:	1938      	adds	r0, r7, r4
 800ba3c:	2208      	movs	r2, #8
 800ba3e:	f007 f99a 	bl	8012d76 <memcpy>
 800ba42:	19b9      	adds	r1, r7, r6
 800ba44:	2208      	movs	r2, #8
 800ba46:	a810      	add	r0, sp, #64	@ 0x40
 800ba48:	f007 f995 	bl	8012d76 <memcpy>
 800ba4c:	e7e4      	b.n	800ba18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x744>
 800ba4e:	46c0      	nop			@ (mov r8, r8)
 800ba50:	0000ffff 	.word	0x0000ffff
 800ba54:	7fffffff 	.word	0x7fffffff

0800ba58 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800ba58:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba5a:	0006      	movs	r6, r0
 800ba5c:	3631      	adds	r6, #49	@ 0x31
 800ba5e:	36ff      	adds	r6, #255	@ 0xff
 800ba60:	b09f      	sub	sp, #124	@ 0x7c
 800ba62:	0004      	movs	r4, r0
 800ba64:	0030      	movs	r0, r6
 800ba66:	f7fb fc29 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba6a:	1e05      	subs	r5, r0, #0
 800ba6c:	d10b      	bne.n	800ba86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e>
 800ba6e:	2298      	movs	r2, #152	@ 0x98
 800ba70:	6823      	ldr	r3, [r4, #0]
 800ba72:	0052      	lsls	r2, r2, #1
 800ba74:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ba76:	58a1      	ldr	r1, [r4, r2]
 800ba78:	0020      	movs	r0, r4
 800ba7a:	6872      	ldr	r2, [r6, #4]
 800ba7c:	4798      	blx	r3
 800ba7e:	0023      	movs	r3, r4
 800ba80:	33fc      	adds	r3, #252	@ 0xfc
 800ba82:	635d      	str	r5, [r3, #52]	@ 0x34
 800ba84:	639d      	str	r5, [r3, #56]	@ 0x38
 800ba86:	0027      	movs	r7, r4
 800ba88:	4bac      	ldr	r3, [pc, #688]	@ (800bd3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>)
 800ba8a:	37ec      	adds	r7, #236	@ 0xec
 800ba8c:	681b      	ldr	r3, [r3, #0]
 800ba8e:	2b00      	cmp	r3, #0
 800ba90:	d04a      	beq.n	800bb28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd0>
 800ba92:	4dab      	ldr	r5, [pc, #684]	@ (800bd40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e8>)
 800ba94:	0028      	movs	r0, r5
 800ba96:	f7fb fc11 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba9a:	1e06      	subs	r6, r0, #0
 800ba9c:	d144      	bne.n	800bb28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd0>
 800ba9e:	0028      	movs	r0, r5
 800baa0:	f7ff f8d6 	bl	800ac50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800baa4:	8869      	ldrh	r1, [r5, #2]
 800baa6:	882a      	ldrh	r2, [r5, #0]
 800baa8:	0409      	lsls	r1, r1, #16
 800baaa:	4311      	orrs	r1, r2
 800baac:	88ea      	ldrh	r2, [r5, #6]
 800baae:	88a8      	ldrh	r0, [r5, #4]
 800bab0:	6823      	ldr	r3, [r4, #0]
 800bab2:	0412      	lsls	r2, r2, #16
 800bab4:	4302      	orrs	r2, r0
 800bab6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800bab8:	0020      	movs	r0, r4
 800baba:	4798      	blx	r3
 800babc:	802e      	strh	r6, [r5, #0]
 800babe:	806e      	strh	r6, [r5, #2]
 800bac0:	80ae      	strh	r6, [r5, #4]
 800bac2:	80ee      	strh	r6, [r5, #6]
 800bac4:	ae0d      	add	r6, sp, #52	@ 0x34
 800bac6:	0030      	movs	r0, r6
 800bac8:	f7ff fb95 	bl	800b1f6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bacc:	211e      	movs	r1, #30
 800bace:	4b9d      	ldr	r3, [pc, #628]	@ (800bd44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ec>)
 800bad0:	9605      	str	r6, [sp, #20]
 800bad2:	881d      	ldrh	r5, [r3, #0]
 800bad4:	883b      	ldrh	r3, [r7, #0]
 800bad6:	002a      	movs	r2, r5
 800bad8:	9302      	str	r3, [sp, #8]
 800bada:	ab06      	add	r3, sp, #24
 800badc:	18c9      	adds	r1, r1, r3
 800bade:	0023      	movs	r3, r4
 800bae0:	33ac      	adds	r3, #172	@ 0xac
 800bae2:	9306      	str	r3, [sp, #24]
 800bae4:	9b02      	ldr	r3, [sp, #8]
 800bae6:	429a      	cmp	r2, r3
 800bae8:	d223      	bcs.n	800bb32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xda>
 800baea:	8fcb      	ldrh	r3, [r1, #62]	@ 0x3e
 800baec:	2b07      	cmp	r3, #7
 800baee:	d818      	bhi.n	800bb22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800baf0:	9f06      	ldr	r7, [sp, #24]
 800baf2:	00d0      	lsls	r0, r2, #3
 800baf4:	1838      	adds	r0, r7, r0
 800baf6:	2600      	movs	r6, #0
 800baf8:	5f87      	ldrsh	r7, [r0, r6]
 800bafa:	9703      	str	r7, [sp, #12]
 800bafc:	2702      	movs	r7, #2
 800bafe:	5fc6      	ldrsh	r6, [r0, r7]
 800bb00:	9604      	str	r6, [sp, #16]
 800bb02:	2704      	movs	r7, #4
 800bb04:	5fc6      	ldrsh	r6, [r0, r7]
 800bb06:	0037      	movs	r7, r6
 800bb08:	2606      	movs	r6, #6
 800bb0a:	5f80      	ldrsh	r0, [r0, r6]
 800bb0c:	1c5e      	adds	r6, r3, #1
 800bb0e:	87ce      	strh	r6, [r1, #62]	@ 0x3e
 800bb10:	9e05      	ldr	r6, [sp, #20]
 800bb12:	00db      	lsls	r3, r3, #3
 800bb14:	18f3      	adds	r3, r6, r3
 800bb16:	9e03      	ldr	r6, [sp, #12]
 800bb18:	809f      	strh	r7, [r3, #4]
 800bb1a:	801e      	strh	r6, [r3, #0]
 800bb1c:	9e04      	ldr	r6, [sp, #16]
 800bb1e:	80d8      	strh	r0, [r3, #6]
 800bb20:	805e      	strh	r6, [r3, #2]
 800bb22:	3201      	adds	r2, #1
 800bb24:	b292      	uxth	r2, r2
 800bb26:	e7dd      	b.n	800bae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800bb28:	883b      	ldrh	r3, [r7, #0]
 800bb2a:	2b00      	cmp	r3, #0
 800bb2c:	d1ca      	bne.n	800bac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6c>
 800bb2e:	b01f      	add	sp, #124	@ 0x7c
 800bb30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb32:	0023      	movs	r3, r4
 800bb34:	33fe      	adds	r3, #254	@ 0xfe
 800bb36:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800bb38:	42ab      	cmp	r3, r5
 800bb3a:	d911      	bls.n	800bb60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x108>
 800bb3c:	00eb      	lsls	r3, r5, #3
 800bb3e:	18e3      	adds	r3, r4, r3
 800bb40:	33ee      	adds	r3, #238	@ 0xee
 800bb42:	8859      	ldrh	r1, [r3, #2]
 800bb44:	881a      	ldrh	r2, [r3, #0]
 800bb46:	0409      	lsls	r1, r1, #16
 800bb48:	4311      	orrs	r1, r2
 800bb4a:	88da      	ldrh	r2, [r3, #6]
 800bb4c:	6820      	ldr	r0, [r4, #0]
 800bb4e:	889e      	ldrh	r6, [r3, #4]
 800bb50:	0412      	lsls	r2, r2, #16
 800bb52:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800bb54:	4332      	orrs	r2, r6
 800bb56:	0020      	movs	r0, r4
 800bb58:	3501      	adds	r5, #1
 800bb5a:	4798      	blx	r3
 800bb5c:	b2ad      	uxth	r5, r5
 800bb5e:	e7e8      	b.n	800bb32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xda>
 800bb60:	0026      	movs	r6, r4
 800bb62:	4b79      	ldr	r3, [pc, #484]	@ (800bd48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>)
 800bb64:	36ec      	adds	r6, #236	@ 0xec
 800bb66:	681b      	ldr	r3, [r3, #0]
 800bb68:	3348      	adds	r3, #72	@ 0x48
 800bb6a:	781b      	ldrb	r3, [r3, #0]
 800bb6c:	2b01      	cmp	r3, #1
 800bb6e:	d000      	beq.n	800bb72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 800bb70:	e0f2      	b.n	800bd58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>
 800bb72:	2200      	movs	r2, #0
 800bb74:	4b73      	ldr	r3, [pc, #460]	@ (800bd44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ec>)
 800bb76:	8830      	ldrh	r0, [r6, #0]
 800bb78:	8819      	ldrh	r1, [r3, #0]
 800bb7a:	9202      	str	r2, [sp, #8]
 800bb7c:	00cb      	lsls	r3, r1, #3
 800bb7e:	33ae      	adds	r3, #174	@ 0xae
 800bb80:	18e3      	adds	r3, r4, r3
 800bb82:	4288      	cmp	r0, r1
 800bb84:	dd0a      	ble.n	800bb9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800bb86:	881d      	ldrh	r5, [r3, #0]
 800bb88:	889a      	ldrh	r2, [r3, #4]
 800bb8a:	1952      	adds	r2, r2, r5
 800bb8c:	9d02      	ldr	r5, [sp, #8]
 800bb8e:	b212      	sxth	r2, r2
 800bb90:	4295      	cmp	r5, r2
 800bb92:	da00      	bge.n	800bb96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13e>
 800bb94:	9202      	str	r2, [sp, #8]
 800bb96:	3101      	adds	r1, #1
 800bb98:	3308      	adds	r3, #8
 800bb9a:	e7f2      	b.n	800bb82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x12a>
 800bb9c:	2201      	movs	r2, #1
 800bb9e:	4b6b      	ldr	r3, [pc, #428]	@ (800bd4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>)
 800bba0:	9203      	str	r2, [sp, #12]
 800bba2:	881b      	ldrh	r3, [r3, #0]
 800bba4:	2b0f      	cmp	r3, #15
 800bba6:	d901      	bls.n	800bbac <_ZN8touchgfx11Application15drawCachedAreasEv+0x154>
 800bba8:	08db      	lsrs	r3, r3, #3
 800bbaa:	9303      	str	r3, [sp, #12]
 800bbac:	2300      	movs	r3, #0
 800bbae:	9309      	str	r3, [sp, #36]	@ 0x24
 800bbb0:	930a      	str	r3, [sp, #40]	@ 0x28
 800bbb2:	ae09      	add	r6, sp, #36	@ 0x24
 800bbb4:	8870      	ldrh	r0, [r6, #2]
 800bbb6:	88f5      	ldrh	r5, [r6, #6]
 800bbb8:	4f63      	ldr	r7, [pc, #396]	@ (800bd48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>)
 800bbba:	182d      	adds	r5, r5, r0
 800bbbc:	9a02      	ldr	r2, [sp, #8]
 800bbbe:	6838      	ldr	r0, [r7, #0]
 800bbc0:	b22d      	sxth	r5, r5
 800bbc2:	6803      	ldr	r3, [r0, #0]
 800bbc4:	4295      	cmp	r5, r2
 800bbc6:	db00      	blt.n	800bbca <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800bbc8:	e083      	b.n	800bcd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 800bbca:	339c      	adds	r3, #156	@ 0x9c
 800bbcc:	681b      	ldr	r3, [r3, #0]
 800bbce:	4798      	blx	r3
 800bbd0:	9b03      	ldr	r3, [sp, #12]
 800bbd2:	18eb      	adds	r3, r5, r3
 800bbd4:	4298      	cmp	r0, r3
 800bbd6:	da08      	bge.n	800bbea <_ZN8touchgfx11Application15drawCachedAreasEv+0x192>
 800bbd8:	9b02      	ldr	r3, [sp, #8]
 800bbda:	4298      	cmp	r0, r3
 800bbdc:	da05      	bge.n	800bbea <_ZN8touchgfx11Application15drawCachedAreasEv+0x192>
 800bbde:	4285      	cmp	r5, r0
 800bbe0:	dd6d      	ble.n	800bcbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x266>
 800bbe2:	2d00      	cmp	r5, #0
 800bbe4:	dd6b      	ble.n	800bcbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x266>
 800bbe6:	9802      	ldr	r0, [sp, #8]
 800bbe8:	e005      	b.n	800bbf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x19e>
 800bbea:	4285      	cmp	r5, r0
 800bbec:	dcfb      	bgt.n	800bbe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x18e>
 800bbee:	9b02      	ldr	r3, [sp, #8]
 800bbf0:	4298      	cmp	r0, r3
 800bbf2:	dd00      	ble.n	800bbf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x19e>
 800bbf4:	0018      	movs	r0, r3
 800bbf6:	4b56      	ldr	r3, [pc, #344]	@ (800bd50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800bbf8:	1b40      	subs	r0, r0, r5
 800bbfa:	2200      	movs	r2, #0
 800bbfc:	5e9b      	ldrsh	r3, [r3, r2]
 800bbfe:	2200      	movs	r2, #0
 800bc00:	80b3      	strh	r3, [r6, #4]
 800bc02:	4b50      	ldr	r3, [pc, #320]	@ (800bd44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ec>)
 800bc04:	8032      	strh	r2, [r6, #0]
 800bc06:	881f      	ldrh	r7, [r3, #0]
 800bc08:	8075      	strh	r5, [r6, #2]
 800bc0a:	80f0      	strh	r0, [r6, #6]
 800bc0c:	0023      	movs	r3, r4
 800bc0e:	33ec      	adds	r3, #236	@ 0xec
 800bc10:	881b      	ldrh	r3, [r3, #0]
 800bc12:	42bb      	cmp	r3, r7
 800bc14:	d9cd      	bls.n	800bbb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x15a>
 800bc16:	0021      	movs	r1, r4
 800bc18:	ad0b      	add	r5, sp, #44	@ 0x2c
 800bc1a:	00fb      	lsls	r3, r7, #3
 800bc1c:	31ac      	adds	r1, #172	@ 0xac
 800bc1e:	18c9      	adds	r1, r1, r3
 800bc20:	2208      	movs	r2, #8
 800bc22:	0028      	movs	r0, r5
 800bc24:	ae09      	add	r6, sp, #36	@ 0x24
 800bc26:	f007 f8a6 	bl	8012d76 <memcpy>
 800bc2a:	0031      	movs	r1, r6
 800bc2c:	0028      	movs	r0, r5
 800bc2e:	f7ff f8e6 	bl	800adfe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800bc32:	2800      	cmp	r0, #0
 800bc34:	d04a      	beq.n	800bccc <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 800bc36:	2300      	movs	r3, #0
 800bc38:	5eea      	ldrsh	r2, [r5, r3]
 800bc3a:	2100      	movs	r1, #0
 800bc3c:	5e73      	ldrsh	r3, [r6, r1]
 800bc3e:	1c11      	adds	r1, r2, #0
 800bc40:	429a      	cmp	r2, r3
 800bc42:	da00      	bge.n	800bc46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ee>
 800bc44:	1c19      	adds	r1, r3, #0
 800bc46:	b209      	sxth	r1, r1
 800bc48:	9104      	str	r1, [sp, #16]
 800bc4a:	2002      	movs	r0, #2
 800bc4c:	5e29      	ldrsh	r1, [r5, r0]
 800bc4e:	2502      	movs	r5, #2
 800bc50:	5f70      	ldrsh	r0, [r6, r5]
 800bc52:	1c0e      	adds	r6, r1, #0
 800bc54:	4684      	mov	ip, r0
 800bc56:	4281      	cmp	r1, r0
 800bc58:	da00      	bge.n	800bc5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x204>
 800bc5a:	1c06      	adds	r6, r0, #0
 800bc5c:	a80b      	add	r0, sp, #44	@ 0x2c
 800bc5e:	8885      	ldrh	r5, [r0, #4]
 800bc60:	b236      	sxth	r6, r6
 800bc62:	18aa      	adds	r2, r5, r2
 800bc64:	b292      	uxth	r2, r2
 800bc66:	9205      	str	r2, [sp, #20]
 800bc68:	ad09      	add	r5, sp, #36	@ 0x24
 800bc6a:	88ad      	ldrh	r5, [r5, #4]
 800bc6c:	18eb      	adds	r3, r5, r3
 800bc6e:	b29b      	uxth	r3, r3
 800bc70:	b215      	sxth	r5, r2
 800bc72:	b21a      	sxth	r2, r3
 800bc74:	4295      	cmp	r5, r2
 800bc76:	da00      	bge.n	800bc7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x222>
 800bc78:	9b05      	ldr	r3, [sp, #20]
 800bc7a:	9a04      	ldr	r2, [sp, #16]
 800bc7c:	1a9b      	subs	r3, r3, r2
 800bc7e:	8083      	strh	r3, [r0, #4]
 800bc80:	88c3      	ldrh	r3, [r0, #6]
 800bc82:	1859      	adds	r1, r3, r1
 800bc84:	ab09      	add	r3, sp, #36	@ 0x24
 800bc86:	88db      	ldrh	r3, [r3, #6]
 800bc88:	b289      	uxth	r1, r1
 800bc8a:	4463      	add	r3, ip
 800bc8c:	b29b      	uxth	r3, r3
 800bc8e:	b208      	sxth	r0, r1
 800bc90:	b21a      	sxth	r2, r3
 800bc92:	4290      	cmp	r0, r2
 800bc94:	da00      	bge.n	800bc98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800bc96:	000b      	movs	r3, r1
 800bc98:	aa0b      	add	r2, sp, #44	@ 0x2c
 800bc9a:	1b9b      	subs	r3, r3, r6
 800bc9c:	80d3      	strh	r3, [r2, #6]
 800bc9e:	9b04      	ldr	r3, [sp, #16]
 800bca0:	8056      	strh	r6, [r2, #2]
 800bca2:	8013      	strh	r3, [r2, #0]
 800bca4:	a80b      	add	r0, sp, #44	@ 0x2c
 800bca6:	f7fb fb09 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800bcaa:	2800      	cmp	r0, #0
 800bcac:	d104      	bne.n	800bcb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800bcae:	6823      	ldr	r3, [r4, #0]
 800bcb0:	a90b      	add	r1, sp, #44	@ 0x2c
 800bcb2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800bcb4:	0020      	movs	r0, r4
 800bcb6:	4798      	blx	r3
 800bcb8:	3701      	adds	r7, #1
 800bcba:	b2bf      	uxth	r7, r7
 800bcbc:	e7a6      	b.n	800bc0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b4>
 800bcbe:	6838      	ldr	r0, [r7, #0]
 800bcc0:	2101      	movs	r1, #1
 800bcc2:	6803      	ldr	r3, [r0, #0]
 800bcc4:	3398      	adds	r3, #152	@ 0x98
 800bcc6:	681b      	ldr	r3, [r3, #0]
 800bcc8:	4798      	blx	r3
 800bcca:	e772      	b.n	800bbb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x15a>
 800bccc:	900b      	str	r0, [sp, #44]	@ 0x2c
 800bcce:	900c      	str	r0, [sp, #48]	@ 0x30
 800bcd0:	e7e8      	b.n	800bca4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x24c>
 800bcd2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bcd4:	4798      	blx	r3
 800bcd6:	4b1f      	ldr	r3, [pc, #124]	@ (800bd54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 800bcd8:	781b      	ldrb	r3, [r3, #0]
 800bcda:	2b00      	cmp	r3, #0
 800bcdc:	d100      	bne.n	800bce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x288>
 800bcde:	e726      	b.n	800bb2e <_ZN8touchgfx11Application15drawCachedAreasEv+0xd6>
 800bce0:	0023      	movs	r3, r4
 800bce2:	2200      	movs	r2, #0
 800bce4:	33fe      	adds	r3, #254	@ 0xfe
 800bce6:	861a      	strh	r2, [r3, #48]	@ 0x30
 800bce8:	4b16      	ldr	r3, [pc, #88]	@ (800bd44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ec>)
 800bcea:	a906      	add	r1, sp, #24
 800bcec:	881a      	ldrh	r2, [r3, #0]
 800bcee:	231e      	movs	r3, #30
 800bcf0:	185b      	adds	r3, r3, r1
 800bcf2:	0021      	movs	r1, r4
 800bcf4:	0020      	movs	r0, r4
 800bcf6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800bcf8:	31ee      	adds	r1, #238	@ 0xee
 800bcfa:	9302      	str	r3, [sp, #8]
 800bcfc:	9103      	str	r1, [sp, #12]
 800bcfe:	30f0      	adds	r0, #240	@ 0xf0
 800bd00:	9b02      	ldr	r3, [sp, #8]
 800bd02:	429a      	cmp	r2, r3
 800bd04:	d300      	bcc.n	800bd08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800bd06:	e712      	b.n	800bb2e <_ZN8touchgfx11Application15drawCachedAreasEv+0xd6>
 800bd08:	8fc3      	ldrh	r3, [r0, #62]	@ 0x3e
 800bd0a:	2b07      	cmp	r3, #7
 800bd0c:	d813      	bhi.n	800bd36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2de>
 800bd0e:	ad0d      	add	r5, sp, #52	@ 0x34
 800bd10:	00d4      	lsls	r4, r2, #3
 800bd12:	192c      	adds	r4, r5, r4
 800bd14:	2100      	movs	r1, #0
 800bd16:	5e67      	ldrsh	r7, [r4, r1]
 800bd18:	2102      	movs	r1, #2
 800bd1a:	5e66      	ldrsh	r6, [r4, r1]
 800bd1c:	2104      	movs	r1, #4
 800bd1e:	5e65      	ldrsh	r5, [r4, r1]
 800bd20:	2106      	movs	r1, #6
 800bd22:	5e64      	ldrsh	r4, [r4, r1]
 800bd24:	1c59      	adds	r1, r3, #1
 800bd26:	87c1      	strh	r1, [r0, #62]	@ 0x3e
 800bd28:	9903      	ldr	r1, [sp, #12]
 800bd2a:	00db      	lsls	r3, r3, #3
 800bd2c:	18cb      	adds	r3, r1, r3
 800bd2e:	801f      	strh	r7, [r3, #0]
 800bd30:	805e      	strh	r6, [r3, #2]
 800bd32:	809d      	strh	r5, [r3, #4]
 800bd34:	80dc      	strh	r4, [r3, #6]
 800bd36:	3201      	adds	r2, #1
 800bd38:	b292      	uxth	r2, r2
 800bd3a:	e7e1      	b.n	800bd00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a8>
 800bd3c:	200035b0 	.word	0x200035b0
 800bd40:	200035bc 	.word	0x200035bc
 800bd44:	20000018 	.word	0x20000018
 800bd48:	20003578 	.word	0x20003578
 800bd4c:	2000356e 	.word	0x2000356e
 800bd50:	2000356c 	.word	0x2000356c
 800bd54:	20003576 	.word	0x20003576
 800bd58:	2b02      	cmp	r3, #2
 800bd5a:	d000      	beq.n	800bd5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x306>
 800bd5c:	e144      	b.n	800bfe8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x590>
 800bd5e:	4bb0      	ldr	r3, [pc, #704]	@ (800c020 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 800bd60:	781b      	ldrb	r3, [r3, #0]
 800bd62:	2b01      	cmp	r3, #1
 800bd64:	d000      	beq.n	800bd68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 800bd66:	e101      	b.n	800bf6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x514>
 800bd68:	0023      	movs	r3, r4
 800bd6a:	33ec      	adds	r3, #236	@ 0xec
 800bd6c:	881b      	ldrh	r3, [r3, #0]
 800bd6e:	9303      	str	r3, [sp, #12]
 800bd70:	2b00      	cmp	r3, #0
 800bd72:	d0b0      	beq.n	800bcd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27e>
 800bd74:	0023      	movs	r3, r4
 800bd76:	2100      	movs	r1, #0
 800bd78:	33ac      	adds	r3, #172	@ 0xac
 800bd7a:	2700      	movs	r7, #0
 800bd7c:	5fdf      	ldrsh	r7, [r3, r7]
 800bd7e:	4ba9      	ldr	r3, [pc, #676]	@ (800c024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>)
 800bd80:	9102      	str	r1, [sp, #8]
 800bd82:	881b      	ldrh	r3, [r3, #0]
 800bd84:	3301      	adds	r3, #1
 800bd86:	b29b      	uxth	r3, r3
 800bd88:	00da      	lsls	r2, r3, #3
 800bd8a:	32ac      	adds	r2, #172	@ 0xac
 800bd8c:	18a2      	adds	r2, r4, r2
 800bd8e:	9802      	ldr	r0, [sp, #8]
 800bd90:	b299      	uxth	r1, r3
 800bd92:	00c5      	lsls	r5, r0, #3
 800bd94:	9803      	ldr	r0, [sp, #12]
 800bd96:	4288      	cmp	r0, r1
 800bd98:	d92d      	bls.n	800bdf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x39e>
 800bd9a:	1965      	adds	r5, r4, r5
 800bd9c:	0028      	movs	r0, r5
 800bd9e:	0029      	movs	r1, r5
 800bda0:	30b0      	adds	r0, #176	@ 0xb0
 800bda2:	31ac      	adds	r1, #172	@ 0xac
 800bda4:	8809      	ldrh	r1, [r1, #0]
 800bda6:	8800      	ldrh	r0, [r0, #0]
 800bda8:	469c      	mov	ip, r3
 800bdaa:	1840      	adds	r0, r0, r1
 800bdac:	2100      	movs	r1, #0
 800bdae:	5e56      	ldrsh	r6, [r2, r1]
 800bdb0:	8891      	ldrh	r1, [r2, #4]
 800bdb2:	b200      	sxth	r0, r0
 800bdb4:	1989      	adds	r1, r1, r6
 800bdb6:	b209      	sxth	r1, r1
 800bdb8:	4288      	cmp	r0, r1
 800bdba:	da07      	bge.n	800bdcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 800bdbc:	0037      	movs	r7, r6
 800bdbe:	4286      	cmp	r6, r0
 800bdc0:	da00      	bge.n	800bdc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>
 800bdc2:	0007      	movs	r7, r0
 800bdc4:	9302      	str	r3, [sp, #8]
 800bdc6:	3301      	adds	r3, #1
 800bdc8:	3208      	adds	r2, #8
 800bdca:	e7e0      	b.n	800bd8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 800bdcc:	4288      	cmp	r0, r1
 800bdce:	d10e      	bne.n	800bdee <_ZN8touchgfx11Application15drawCachedAreasEv+0x396>
 800bdd0:	35b2      	adds	r5, #178	@ 0xb2
 800bdd2:	2100      	movs	r1, #0
 800bdd4:	5e68      	ldrsh	r0, [r5, r1]
 800bdd6:	2506      	movs	r5, #6
 800bdd8:	5f51      	ldrsh	r1, [r2, r5]
 800bdda:	4288      	cmp	r0, r1
 800bddc:	db01      	blt.n	800bde2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x38a>
 800bdde:	9902      	ldr	r1, [sp, #8]
 800bde0:	468c      	mov	ip, r1
 800bde2:	42b7      	cmp	r7, r6
 800bde4:	da00      	bge.n	800bde8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x390>
 800bde6:	0037      	movs	r7, r6
 800bde8:	4661      	mov	r1, ip
 800bdea:	9102      	str	r1, [sp, #8]
 800bdec:	e7eb      	b.n	800bdc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36e>
 800bdee:	428f      	cmp	r7, r1
 800bdf0:	dae9      	bge.n	800bdc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36e>
 800bdf2:	000f      	movs	r7, r1
 800bdf4:	e7e7      	b.n	800bdc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36e>
 800bdf6:	0021      	movs	r1, r4
 800bdf8:	ae0b      	add	r6, sp, #44	@ 0x2c
 800bdfa:	31ac      	adds	r1, #172	@ 0xac
 800bdfc:	2208      	movs	r2, #8
 800bdfe:	1949      	adds	r1, r1, r5
 800be00:	0030      	movs	r0, r6
 800be02:	f006 ffb8 	bl	8012d76 <memcpy>
 800be06:	2304      	movs	r3, #4
 800be08:	5ef2      	ldrsh	r2, [r6, r3]
 800be0a:	2a13      	cmp	r2, #19
 800be0c:	dc01      	bgt.n	800be12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ba>
 800be0e:	2300      	movs	r3, #0
 800be10:	5ef7      	ldrsh	r7, [r6, r3]
 800be12:	8833      	ldrh	r3, [r6, #0]
 800be14:	0030      	movs	r0, r6
 800be16:	189b      	adds	r3, r3, r2
 800be18:	1bdb      	subs	r3, r3, r7
 800be1a:	80b3      	strh	r3, [r6, #4]
 800be1c:	8037      	strh	r7, [r6, #0]
 800be1e:	f7fe ff31 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800be22:	0030      	movs	r0, r6
 800be24:	f7fb fa4a 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800be28:	2800      	cmp	r0, #0
 800be2a:	d19d      	bne.n	800bd68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 800be2c:	4b7e      	ldr	r3, [pc, #504]	@ (800c028 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5d0>)
 800be2e:	8831      	ldrh	r1, [r6, #0]
 800be30:	6818      	ldr	r0, [r3, #0]
 800be32:	88b3      	ldrh	r3, [r6, #4]
 800be34:	6807      	ldr	r7, [r0, #0]
 800be36:	9303      	str	r3, [sp, #12]
 800be38:	8872      	ldrh	r2, [r6, #2]
 800be3a:	88f6      	ldrh	r6, [r6, #6]
 800be3c:	3790      	adds	r7, #144	@ 0x90
 800be3e:	b233      	sxth	r3, r6
 800be40:	2b14      	cmp	r3, #20
 800be42:	dd00      	ble.n	800be46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ee>
 800be44:	2614      	movs	r6, #20
 800be46:	b2b6      	uxth	r6, r6
 800be48:	9600      	str	r6, [sp, #0]
 800be4a:	683e      	ldr	r6, [r7, #0]
 800be4c:	9b03      	ldr	r3, [sp, #12]
 800be4e:	47b0      	blx	r6
 800be50:	0007      	movs	r7, r0
 800be52:	ae0b      	add	r6, sp, #44	@ 0x2c
 800be54:	80f0      	strh	r0, [r6, #6]
 800be56:	0030      	movs	r0, r6
 800be58:	f7fe fefa 	bl	800ac50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800be5c:	6823      	ldr	r3, [r4, #0]
 800be5e:	1965      	adds	r5, r4, r5
 800be60:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800be62:	35b0      	adds	r5, #176	@ 0xb0
 800be64:	0031      	movs	r1, r6
 800be66:	0020      	movs	r0, r4
 800be68:	4798      	blx	r3
 800be6a:	882b      	ldrh	r3, [r5, #0]
 800be6c:	1bdf      	subs	r7, r3, r7
 800be6e:	b23f      	sxth	r7, r7
 800be70:	802f      	strh	r7, [r5, #0]
 800be72:	2f00      	cmp	r7, #0
 800be74:	d000      	beq.n	800be78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 800be76:	e777      	b.n	800bd68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 800be78:	466b      	mov	r3, sp
 800be7a:	0020      	movs	r0, r4
 800be7c:	8919      	ldrh	r1, [r3, #8]
 800be7e:	30ac      	adds	r0, #172	@ 0xac
 800be80:	f7ff fa16 	bl	800b2b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800be84:	e770      	b.n	800bd68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 800be86:	4297      	cmp	r7, r2
 800be88:	d113      	bne.n	800beb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45a>
 800be8a:	36b0      	adds	r6, #176	@ 0xb0
 800be8c:	2100      	movs	r1, #0
 800be8e:	5e77      	ldrsh	r7, [r6, r1]
 800be90:	001e      	movs	r6, r3
 800be92:	36b0      	adds	r6, #176	@ 0xb0
 800be94:	2100      	movs	r1, #0
 800be96:	5e76      	ldrsh	r6, [r6, r1]
 800be98:	42b7      	cmp	r7, r6
 800be9a:	db01      	blt.n	800bea0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 800be9c:	9902      	ldr	r1, [sp, #8]
 800be9e:	468c      	mov	ip, r1
 800bea0:	33b2      	adds	r3, #178	@ 0xb2
 800bea2:	881b      	ldrh	r3, [r3, #0]
 800bea4:	189a      	adds	r2, r3, r2
 800bea6:	b212      	sxth	r2, r2
 800bea8:	4295      	cmp	r5, r2
 800beaa:	dc00      	bgt.n	800beae <_ZN8touchgfx11Application15drawCachedAreasEv+0x456>
 800beac:	e098      	b.n	800bfe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x588>
 800beae:	0015      	movs	r5, r2
 800beb0:	e096      	b.n	800bfe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x588>
 800beb2:	4295      	cmp	r5, r2
 800beb4:	dc00      	bgt.n	800beb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x460>
 800beb6:	e095      	b.n	800bfe4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
 800beb8:	0015      	movs	r5, r2
 800beba:	e093      	b.n	800bfe4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
 800bebc:	9b04      	ldr	r3, [sp, #16]
 800bebe:	1998      	adds	r0, r3, r6
 800bec0:	19a6      	adds	r6, r4, r6
 800bec2:	0033      	movs	r3, r6
 800bec4:	33b2      	adds	r3, #178	@ 0xb2
 800bec6:	2200      	movs	r2, #0
 800bec8:	5e9b      	ldrsh	r3, [r3, r2]
 800beca:	9303      	str	r3, [sp, #12]
 800becc:	2b13      	cmp	r3, #19
 800bece:	dc05      	bgt.n	800bedc <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 800bed0:	0033      	movs	r3, r6
 800bed2:	33ae      	adds	r3, #174	@ 0xae
 800bed4:	881d      	ldrh	r5, [r3, #0]
 800bed6:	9b03      	ldr	r3, [sp, #12]
 800bed8:	18ed      	adds	r5, r5, r3
 800beda:	b22d      	sxth	r5, r5
 800bedc:	f7fb f9ee 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800bee0:	2800      	cmp	r0, #0
 800bee2:	d151      	bne.n	800bf88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x530>
 800bee4:	0033      	movs	r3, r6
 800bee6:	33ac      	adds	r3, #172	@ 0xac
 800bee8:	2700      	movs	r7, #0
 800beea:	5fdf      	ldrsh	r7, [r3, r7]
 800beec:	0033      	movs	r3, r6
 800beee:	33ae      	adds	r3, #174	@ 0xae
 800bef0:	2100      	movs	r1, #0
 800bef2:	5e59      	ldrsh	r1, [r3, r1]
 800bef4:	0033      	movs	r3, r6
 800bef6:	aa0b      	add	r2, sp, #44	@ 0x2c
 800bef8:	33b0      	adds	r3, #176	@ 0xb0
 800befa:	80d0      	strh	r0, [r2, #6]
 800befc:	2000      	movs	r0, #0
 800befe:	5e1b      	ldrsh	r3, [r3, r0]
 800bf00:	8017      	strh	r7, [r2, #0]
 800bf02:	8051      	strh	r1, [r2, #2]
 800bf04:	8093      	strh	r3, [r2, #4]
 800bf06:	4a48      	ldr	r2, [pc, #288]	@ (800c028 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5d0>)
 800bf08:	b2bf      	uxth	r7, r7
 800bf0a:	6810      	ldr	r0, [r2, #0]
 800bf0c:	9706      	str	r7, [sp, #24]
 800bf0e:	6807      	ldr	r7, [r0, #0]
 800bf10:	b29b      	uxth	r3, r3
 800bf12:	9305      	str	r3, [sp, #20]
 800bf14:	b28a      	uxth	r2, r1
 800bf16:	3790      	adds	r7, #144	@ 0x90
 800bf18:	1a6d      	subs	r5, r5, r1
 800bf1a:	2d14      	cmp	r5, #20
 800bf1c:	dd00      	ble.n	800bf20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
 800bf1e:	2514      	movs	r5, #20
 800bf20:	466b      	mov	r3, sp
 800bf22:	899b      	ldrh	r3, [r3, #12]
 800bf24:	1c29      	adds	r1, r5, #0
 800bf26:	b2ad      	uxth	r5, r5
 800bf28:	429d      	cmp	r5, r3
 800bf2a:	d900      	bls.n	800bf2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d6>
 800bf2c:	0019      	movs	r1, r3
 800bf2e:	b289      	uxth	r1, r1
 800bf30:	9100      	str	r1, [sp, #0]
 800bf32:	683d      	ldr	r5, [r7, #0]
 800bf34:	9b05      	ldr	r3, [sp, #20]
 800bf36:	9906      	ldr	r1, [sp, #24]
 800bf38:	47a8      	blx	r5
 800bf3a:	ad0b      	add	r5, sp, #44	@ 0x2c
 800bf3c:	6823      	ldr	r3, [r4, #0]
 800bf3e:	80e8      	strh	r0, [r5, #6]
 800bf40:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800bf42:	0029      	movs	r1, r5
 800bf44:	0020      	movs	r0, r4
 800bf46:	4798      	blx	r3
 800bf48:	0033      	movs	r3, r6
 800bf4a:	33ae      	adds	r3, #174	@ 0xae
 800bf4c:	88e9      	ldrh	r1, [r5, #6]
 800bf4e:	881a      	ldrh	r2, [r3, #0]
 800bf50:	36b2      	adds	r6, #178	@ 0xb2
 800bf52:	188a      	adds	r2, r1, r2
 800bf54:	801a      	strh	r2, [r3, #0]
 800bf56:	8833      	ldrh	r3, [r6, #0]
 800bf58:	1a5b      	subs	r3, r3, r1
 800bf5a:	b21b      	sxth	r3, r3
 800bf5c:	8033      	strh	r3, [r6, #0]
 800bf5e:	2b00      	cmp	r3, #0
 800bf60:	d104      	bne.n	800bf6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x514>
 800bf62:	466b      	mov	r3, sp
 800bf64:	9804      	ldr	r0, [sp, #16]
 800bf66:	8919      	ldrh	r1, [r3, #8]
 800bf68:	f7ff f9a2 	bl	800b2b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bf6c:	0023      	movs	r3, r4
 800bf6e:	33ec      	adds	r3, #236	@ 0xec
 800bf70:	881b      	ldrh	r3, [r3, #0]
 800bf72:	9306      	str	r3, [sp, #24]
 800bf74:	4b2b      	ldr	r3, [pc, #172]	@ (800c024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>)
 800bf76:	881b      	ldrh	r3, [r3, #0]
 800bf78:	3301      	adds	r3, #1
 800bf7a:	b29b      	uxth	r3, r3
 800bf7c:	9305      	str	r3, [sp, #20]
 800bf7e:	00db      	lsls	r3, r3, #3
 800bf80:	9307      	str	r3, [sp, #28]
 800bf82:	0023      	movs	r3, r4
 800bf84:	33ac      	adds	r3, #172	@ 0xac
 800bf86:	9304      	str	r3, [sp, #16]
 800bf88:	9b06      	ldr	r3, [sp, #24]
 800bf8a:	2b00      	cmp	r3, #0
 800bf8c:	d100      	bne.n	800bf90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
 800bf8e:	e6a2      	b.n	800bcd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27e>
 800bf90:	2000      	movs	r0, #0
 800bf92:	9b04      	ldr	r3, [sp, #16]
 800bf94:	885d      	ldrh	r5, [r3, #2]
 800bf96:	88db      	ldrh	r3, [r3, #6]
 800bf98:	9002      	str	r0, [sp, #8]
 800bf9a:	18ed      	adds	r5, r5, r3
 800bf9c:	b22d      	sxth	r5, r5
 800bf9e:	9b05      	ldr	r3, [sp, #20]
 800bfa0:	9a02      	ldr	r2, [sp, #8]
 800bfa2:	1819      	adds	r1, r3, r0
 800bfa4:	00d6      	lsls	r6, r2, #3
 800bfa6:	9a06      	ldr	r2, [sp, #24]
 800bfa8:	b28b      	uxth	r3, r1
 800bfaa:	429a      	cmp	r2, r3
 800bfac:	d800      	bhi.n	800bfb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x558>
 800bfae:	e785      	b.n	800bebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x464>
 800bfb0:	19a6      	adds	r6, r4, r6
 800bfb2:	0033      	movs	r3, r6
 800bfb4:	9a07      	ldr	r2, [sp, #28]
 800bfb6:	33ae      	adds	r3, #174	@ 0xae
 800bfb8:	2700      	movs	r7, #0
 800bfba:	5fdf      	ldrsh	r7, [r3, r7]
 800bfbc:	00c3      	lsls	r3, r0, #3
 800bfbe:	189b      	adds	r3, r3, r2
 800bfc0:	18e3      	adds	r3, r4, r3
 800bfc2:	001a      	movs	r2, r3
 800bfc4:	32ae      	adds	r2, #174	@ 0xae
 800bfc6:	468c      	mov	ip, r1
 800bfc8:	2100      	movs	r1, #0
 800bfca:	5e52      	ldrsh	r2, [r2, r1]
 800bfcc:	4297      	cmp	r7, r2
 800bfce:	dc00      	bgt.n	800bfd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x57a>
 800bfd0:	e759      	b.n	800be86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x42e>
 800bfd2:	33b2      	adds	r3, #178	@ 0xb2
 800bfd4:	881d      	ldrh	r5, [r3, #0]
 800bfd6:	18ad      	adds	r5, r5, r2
 800bfd8:	b22d      	sxth	r5, r5
 800bfda:	42bd      	cmp	r5, r7
 800bfdc:	dd00      	ble.n	800bfe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x588>
 800bfde:	003d      	movs	r5, r7
 800bfe0:	4663      	mov	r3, ip
 800bfe2:	9302      	str	r3, [sp, #8]
 800bfe4:	3001      	adds	r0, #1
 800bfe6:	e7da      	b.n	800bf9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x546>
 800bfe8:	4b0e      	ldr	r3, [pc, #56]	@ (800c024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>)
 800bfea:	881d      	ldrh	r5, [r3, #0]
 800bfec:	8833      	ldrh	r3, [r6, #0]
 800bfee:	42ab      	cmp	r3, r5
 800bff0:	d800      	bhi.n	800bff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x59c>
 800bff2:	e670      	b.n	800bcd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27e>
 800bff4:	0021      	movs	r1, r4
 800bff6:	00eb      	lsls	r3, r5, #3
 800bff8:	31ac      	adds	r1, #172	@ 0xac
 800bffa:	18c9      	adds	r1, r1, r3
 800bffc:	2208      	movs	r2, #8
 800bffe:	a80b      	add	r0, sp, #44	@ 0x2c
 800c000:	f006 feb9 	bl	8012d76 <memcpy>
 800c004:	a80b      	add	r0, sp, #44	@ 0x2c
 800c006:	f7fb f959 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c00a:	2800      	cmp	r0, #0
 800c00c:	d104      	bne.n	800c018 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>
 800c00e:	6823      	ldr	r3, [r4, #0]
 800c010:	a90b      	add	r1, sp, #44	@ 0x2c
 800c012:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c014:	0020      	movs	r0, r4
 800c016:	4798      	blx	r3
 800c018:	3501      	adds	r5, #1
 800c01a:	b2ad      	uxth	r5, r5
 800c01c:	e7e6      	b.n	800bfec <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 800c01e:	46c0      	nop			@ (mov r8, r8)
 800c020:	20003570 	.word	0x20003570
 800c024:	20000018 	.word	0x20000018
 800c028:	20003578 	.word	0x20003578

0800c02c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c02c:	2200      	movs	r2, #0
 800c02e:	4b03      	ldr	r3, [pc, #12]	@ (800c03c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c030:	801a      	strh	r2, [r3, #0]
 800c032:	805a      	strh	r2, [r3, #2]
 800c034:	809a      	strh	r2, [r3, #4]
 800c036:	80da      	strh	r2, [r3, #6]
 800c038:	4770      	bx	lr
 800c03a:	46c0      	nop			@ (mov r8, r8)
 800c03c:	200035bc 	.word	0x200035bc

0800c040 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c040:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c042:	0005      	movs	r5, r0
 800c044:	b0a1      	sub	sp, #132	@ 0x84
 800c046:	a807      	add	r0, sp, #28
 800c048:	0014      	movs	r4, r2
 800c04a:	9105      	str	r1, [sp, #20]
 800c04c:	001e      	movs	r6, r3
 800c04e:	f000 febf 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 800c052:	682b      	ldr	r3, [r5, #0]
 800c054:	0028      	movs	r0, r5
 800c056:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c058:	4798      	blx	r3
 800c05a:	0007      	movs	r7, r0
 800c05c:	682b      	ldr	r3, [r5, #0]
 800c05e:	0028      	movs	r0, r5
 800c060:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c062:	4798      	blx	r3
 800c064:	003b      	movs	r3, r7
 800c066:	2700      	movs	r7, #0
 800c068:	0032      	movs	r2, r6
 800c06a:	0021      	movs	r1, r4
 800c06c:	003e      	movs	r6, r7
 800c06e:	003c      	movs	r4, r7
 800c070:	9000      	str	r0, [sp, #0]
 800c072:	a807      	add	r0, sp, #28
 800c074:	f000 ff0b 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c078:	9703      	str	r7, [sp, #12]
 800c07a:	2300      	movs	r3, #0
 800c07c:	9306      	str	r3, [sp, #24]
 800c07e:	4b1a      	ldr	r3, [pc, #104]	@ (800c0e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0xa8>)
 800c080:	429c      	cmp	r4, r3
 800c082:	d003      	beq.n	800c08c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4c>
 800c084:	4b19      	ldr	r3, [pc, #100]	@ (800c0ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0xac>)
 800c086:	429c      	cmp	r4, r3
 800c088:	d000      	beq.n	800c08c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4c>
 800c08a:	0027      	movs	r7, r4
 800c08c:	ab06      	add	r3, sp, #24
 800c08e:	002a      	movs	r2, r5
 800c090:	9905      	ldr	r1, [sp, #20]
 800c092:	a807      	add	r0, sp, #28
 800c094:	f001 fa04 	bl	800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c098:	1e04      	subs	r4, r0, #0
 800c09a:	d001      	beq.n	800c0a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x60>
 800c09c:	280a      	cmp	r0, #10
 800c09e:	d10d      	bne.n	800c0bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800c0a0:	9a03      	ldr	r2, [sp, #12]
 800c0a2:	1c33      	adds	r3, r6, #0
 800c0a4:	4296      	cmp	r6, r2
 800c0a6:	d201      	bcs.n	800c0ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x6c>
 800c0a8:	466b      	mov	r3, sp
 800c0aa:	899b      	ldrh	r3, [r3, #12]
 800c0ac:	2600      	movs	r6, #0
 800c0ae:	b29b      	uxth	r3, r3
 800c0b0:	9303      	str	r3, [sp, #12]
 800c0b2:	2c00      	cmp	r4, #0
 800c0b4:	d1e1      	bne.n	800c07a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x3a>
 800c0b6:	9803      	ldr	r0, [sp, #12]
 800c0b8:	b021      	add	sp, #132	@ 0x84
 800c0ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c0bc:	9a06      	ldr	r2, [sp, #24]
 800c0be:	2a00      	cmp	r2, #0
 800c0c0:	d0db      	beq.n	800c07a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x3a>
 800c0c2:	2380      	movs	r3, #128	@ 0x80
 800c0c4:	7b50      	ldrb	r0, [r2, #13]
 800c0c6:	005b      	lsls	r3, r3, #1
 800c0c8:	0040      	lsls	r0, r0, #1
 800c0ca:	4018      	ands	r0, r3
 800c0cc:	7a93      	ldrb	r3, [r2, #10]
 800c0ce:	8894      	ldrh	r4, [r2, #4]
 800c0d0:	4303      	orrs	r3, r0
 800c0d2:	9304      	str	r3, [sp, #16]
 800c0d4:	682b      	ldr	r3, [r5, #0]
 800c0d6:	0039      	movs	r1, r7
 800c0d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c0da:	0028      	movs	r0, r5
 800c0dc:	4798      	blx	r3
 800c0de:	9b04      	ldr	r3, [sp, #16]
 800c0e0:	18c0      	adds	r0, r0, r3
 800c0e2:	1836      	adds	r6, r6, r0
 800c0e4:	b2b6      	uxth	r6, r6
 800c0e6:	e7e4      	b.n	800c0b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x72>
 800c0e8:	0000feff 	.word	0x0000feff
 800c0ec:	0000200b 	.word	0x0000200b

0800c0f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c0f0:	b510      	push	{r4, lr}
 800c0f2:	6803      	ldr	r3, [r0, #0]
 800c0f4:	68db      	ldr	r3, [r3, #12]
 800c0f6:	4798      	blx	r3
 800c0f8:	1e03      	subs	r3, r0, #0
 800c0fa:	d006      	beq.n	800c10a <_ZNK8touchgfx4Font12getCharWidthEt+0x1a>
 800c0fc:	2280      	movs	r2, #128	@ 0x80
 800c0fe:	7b43      	ldrb	r3, [r0, #13]
 800c100:	0052      	lsls	r2, r2, #1
 800c102:	005b      	lsls	r3, r3, #1
 800c104:	7a80      	ldrb	r0, [r0, #10]
 800c106:	4013      	ands	r3, r2
 800c108:	4303      	orrs	r3, r0
 800c10a:	0018      	movs	r0, r3
 800c10c:	bd10      	pop	{r4, pc}
	...

0800c110 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c110:	b40e      	push	{r1, r2, r3}
 800c112:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c114:	0005      	movs	r5, r0
 800c116:	b09e      	sub	sp, #120	@ 0x78
 800c118:	ab23      	add	r3, sp, #140	@ 0x8c
 800c11a:	cb10      	ldmia	r3!, {r4}
 800c11c:	a805      	add	r0, sp, #20
 800c11e:	9303      	str	r3, [sp, #12]
 800c120:	f000 fe56 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 800c124:	682b      	ldr	r3, [r5, #0]
 800c126:	0028      	movs	r0, r5
 800c128:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c12a:	4798      	blx	r3
 800c12c:	682b      	ldr	r3, [r5, #0]
 800c12e:	0006      	movs	r6, r0
 800c130:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c132:	0028      	movs	r0, r5
 800c134:	4798      	blx	r3
 800c136:	0021      	movs	r1, r4
 800c138:	2400      	movs	r4, #0
 800c13a:	0033      	movs	r3, r6
 800c13c:	9000      	str	r0, [sp, #0]
 800c13e:	9a03      	ldr	r2, [sp, #12]
 800c140:	a805      	add	r0, sp, #20
 800c142:	f000 fea4 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c146:	2680      	movs	r6, #128	@ 0x80
 800c148:	ab04      	add	r3, sp, #16
 800c14a:	002a      	movs	r2, r5
 800c14c:	0021      	movs	r1, r4
 800c14e:	a805      	add	r0, sp, #20
 800c150:	9404      	str	r4, [sp, #16]
 800c152:	f001 f9a5 	bl	800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c156:	0076      	lsls	r6, r6, #1
 800c158:	2800      	cmp	r0, #0
 800c15a:	d023      	beq.n	800c1a4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x94>
 800c15c:	280a      	cmp	r0, #10
 800c15e:	d01a      	beq.n	800c196 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800c160:	9b04      	ldr	r3, [sp, #16]
 800c162:	2b00      	cmp	r3, #0
 800c164:	d017      	beq.n	800c196 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800c166:	7b58      	ldrb	r0, [r3, #13]
 800c168:	7a1f      	ldrb	r7, [r3, #8]
 800c16a:	00c1      	lsls	r1, r0, #3
 800c16c:	4031      	ands	r1, r6
 800c16e:	4339      	orrs	r1, r7
 800c170:	2740      	movs	r7, #64	@ 0x40
 800c172:	88ea      	ldrh	r2, [r5, #6]
 800c174:	4238      	tst	r0, r7
 800c176:	d002      	beq.n	800c17e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x6e>
 800c178:	4f0d      	ldr	r7, [pc, #52]	@ (800c1b0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800c17a:	19c9      	adds	r1, r1, r7
 800c17c:	b209      	sxth	r1, r1
 800c17e:	0100      	lsls	r0, r0, #4
 800c180:	79db      	ldrb	r3, [r3, #7]
 800c182:	4030      	ands	r0, r6
 800c184:	4303      	orrs	r3, r0
 800c186:	18d3      	adds	r3, r2, r3
 800c188:	1a5b      	subs	r3, r3, r1
 800c18a:	1c1a      	adds	r2, r3, #0
 800c18c:	b21b      	sxth	r3, r3
 800c18e:	42a3      	cmp	r3, r4
 800c190:	da00      	bge.n	800c194 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800c192:	1c22      	adds	r2, r4, #0
 800c194:	b214      	sxth	r4, r2
 800c196:	ab04      	add	r3, sp, #16
 800c198:	002a      	movs	r2, r5
 800c19a:	2100      	movs	r1, #0
 800c19c:	a805      	add	r0, sp, #20
 800c19e:	f001 f97f 	bl	800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c1a2:	e7d9      	b.n	800c158 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x48>
 800c1a4:	b2a0      	uxth	r0, r4
 800c1a6:	b01e      	add	sp, #120	@ 0x78
 800c1a8:	bcf0      	pop	{r4, r5, r6, r7}
 800c1aa:	bc08      	pop	{r3}
 800c1ac:	b003      	add	sp, #12
 800c1ae:	4718      	bx	r3
 800c1b0:	fffffe00 	.word	0xfffffe00

0800c1b4 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800c1b4:	7a43      	ldrb	r3, [r0, #9]
 800c1b6:	8880      	ldrh	r0, [r0, #4]
 800c1b8:	1818      	adds	r0, r3, r0
 800c1ba:	b280      	uxth	r0, r0
 800c1bc:	4770      	bx	lr

0800c1be <_ZNK8touchgfx4Font13getFontHeightEv>:
 800c1be:	b510      	push	{r4, lr}
 800c1c0:	6803      	ldr	r3, [r0, #0]
 800c1c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c1c4:	4798      	blx	r3
 800c1c6:	bd10      	pop	{r4, pc}

0800c1c8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c1c8:	b40e      	push	{r1, r2, r3}
 800c1ca:	b570      	push	{r4, r5, r6, lr}
 800c1cc:	0004      	movs	r4, r0
 800c1ce:	b09d      	sub	sp, #116	@ 0x74
 800c1d0:	ab21      	add	r3, sp, #132	@ 0x84
 800c1d2:	cb20      	ldmia	r3!, {r5}
 800c1d4:	a803      	add	r0, sp, #12
 800c1d6:	9302      	str	r3, [sp, #8]
 800c1d8:	f000 fdfa 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 800c1dc:	6823      	ldr	r3, [r4, #0]
 800c1de:	0020      	movs	r0, r4
 800c1e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c1e2:	4798      	blx	r3
 800c1e4:	6823      	ldr	r3, [r4, #0]
 800c1e6:	0006      	movs	r6, r0
 800c1e8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c1ea:	0020      	movs	r0, r4
 800c1ec:	4798      	blx	r3
 800c1ee:	0033      	movs	r3, r6
 800c1f0:	9000      	str	r0, [sp, #0]
 800c1f2:	9a02      	ldr	r2, [sp, #8]
 800c1f4:	0029      	movs	r1, r5
 800c1f6:	a803      	add	r0, sp, #12
 800c1f8:	f000 fe49 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c1fc:	a803      	add	r0, sp, #12
 800c1fe:	f001 fa36 	bl	800d66e <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c202:	2401      	movs	r4, #1
 800c204:	b2a3      	uxth	r3, r4
 800c206:	2800      	cmp	r0, #0
 800c208:	d007      	beq.n	800c21a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 800c20a:	280a      	cmp	r0, #10
 800c20c:	d101      	bne.n	800c212 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x4a>
 800c20e:	3301      	adds	r3, #1
 800c210:	b21c      	sxth	r4, r3
 800c212:	a803      	add	r0, sp, #12
 800c214:	f001 fa2b 	bl	800d66e <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c218:	e7f4      	b.n	800c204 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3c>
 800c21a:	0018      	movs	r0, r3
 800c21c:	b01d      	add	sp, #116	@ 0x74
 800c21e:	bc70      	pop	{r4, r5, r6}
 800c220:	bc08      	pop	{r3}
 800c222:	b003      	add	sp, #12
 800c224:	4718      	bx	r3
	...

0800c228 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c228:	b40e      	push	{r1, r2, r3}
 800c22a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c22c:	0004      	movs	r4, r0
 800c22e:	b09e      	sub	sp, #120	@ 0x78
 800c230:	ab23      	add	r3, sp, #140	@ 0x8c
 800c232:	cb20      	ldmia	r3!, {r5}
 800c234:	a805      	add	r0, sp, #20
 800c236:	9303      	str	r3, [sp, #12]
 800c238:	f000 fdca 	bl	800cdd0 <_ZN8touchgfx12TextProviderC1Ev>
 800c23c:	6823      	ldr	r3, [r4, #0]
 800c23e:	0020      	movs	r0, r4
 800c240:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c242:	4798      	blx	r3
 800c244:	6823      	ldr	r3, [r4, #0]
 800c246:	0006      	movs	r6, r0
 800c248:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c24a:	0020      	movs	r0, r4
 800c24c:	4798      	blx	r3
 800c24e:	0033      	movs	r3, r6
 800c250:	0029      	movs	r1, r5
 800c252:	9000      	str	r0, [sp, #0]
 800c254:	9a03      	ldr	r2, [sp, #12]
 800c256:	a805      	add	r0, sp, #20
 800c258:	f000 fe19 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c25c:	2100      	movs	r1, #0
 800c25e:	ab04      	add	r3, sp, #16
 800c260:	0022      	movs	r2, r4
 800c262:	a805      	add	r0, sp, #20
 800c264:	2680      	movs	r6, #128	@ 0x80
 800c266:	9104      	str	r1, [sp, #16]
 800c268:	2740      	movs	r7, #64	@ 0x40
 800c26a:	f001 f919 	bl	800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c26e:	4d14      	ldr	r5, [pc, #80]	@ (800c2c0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x98>)
 800c270:	0076      	lsls	r6, r6, #1
 800c272:	2800      	cmp	r0, #0
 800c274:	d01d      	beq.n	800c2b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x8a>
 800c276:	280a      	cmp	r0, #10
 800c278:	d014      	beq.n	800c2a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x7c>
 800c27a:	9b04      	ldr	r3, [sp, #16]
 800c27c:	2b00      	cmp	r3, #0
 800c27e:	d011      	beq.n	800c2a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x7c>
 800c280:	7b58      	ldrb	r0, [r3, #13]
 800c282:	7a1b      	ldrb	r3, [r3, #8]
 800c284:	00c1      	lsls	r1, r0, #3
 800c286:	4031      	ands	r1, r6
 800c288:	88e2      	ldrh	r2, [r4, #6]
 800c28a:	430b      	orrs	r3, r1
 800c28c:	4238      	tst	r0, r7
 800c28e:	d002      	beq.n	800c296 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6e>
 800c290:	490c      	ldr	r1, [pc, #48]	@ (800c2c4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x9c>)
 800c292:	185b      	adds	r3, r3, r1
 800c294:	b21b      	sxth	r3, r3
 800c296:	1ad3      	subs	r3, r2, r3
 800c298:	1c1a      	adds	r2, r3, #0
 800c29a:	b21b      	sxth	r3, r3
 800c29c:	42ab      	cmp	r3, r5
 800c29e:	dd00      	ble.n	800c2a2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x7a>
 800c2a0:	1c2a      	adds	r2, r5, #0
 800c2a2:	b215      	sxth	r5, r2
 800c2a4:	ab04      	add	r3, sp, #16
 800c2a6:	0022      	movs	r2, r4
 800c2a8:	2100      	movs	r1, #0
 800c2aa:	a805      	add	r0, sp, #20
 800c2ac:	f001 f8f8 	bl	800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c2b0:	e7df      	b.n	800c272 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800c2b2:	0028      	movs	r0, r5
 800c2b4:	b01e      	add	sp, #120	@ 0x78
 800c2b6:	bcf0      	pop	{r4, r5, r6, r7}
 800c2b8:	bc08      	pop	{r3}
 800c2ba:	b003      	add	sp, #12
 800c2bc:	4718      	bx	r3
 800c2be:	46c0      	nop			@ (mov r8, r8)
 800c2c0:	00007fff 	.word	0x00007fff
 800c2c4:	fffffe00 	.word	0xfffffe00

0800c2c8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800c2c8:	b507      	push	{r0, r1, r2, lr}
 800c2ca:	2308      	movs	r3, #8
 800c2cc:	5ec2      	ldrsh	r2, [r0, r3]
 800c2ce:	210a      	movs	r1, #10
 800c2d0:	5e43      	ldrsh	r3, [r0, r1]
 800c2d2:	2100      	movs	r1, #0
 800c2d4:	9100      	str	r1, [sp, #0]
 800c2d6:	4669      	mov	r1, sp
 800c2d8:	80cb      	strh	r3, [r1, #6]
 800c2da:	6803      	ldr	r3, [r0, #0]
 800c2dc:	808a      	strh	r2, [r1, #4]
 800c2de:	691b      	ldr	r3, [r3, #16]
 800c2e0:	4798      	blx	r3
 800c2e2:	bd07      	pop	{r0, r1, r2, pc}

0800c2e4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800c2e4:	b570      	push	{r4, r5, r6, lr}
 800c2e6:	000c      	movs	r4, r1
 800c2e8:	0005      	movs	r5, r0
 800c2ea:	680b      	ldr	r3, [r1, #0]
 800c2ec:	68db      	ldr	r3, [r3, #12]
 800c2ee:	4798      	blx	r3
 800c2f0:	6823      	ldr	r3, [r4, #0]
 800c2f2:	0029      	movs	r1, r5
 800c2f4:	0020      	movs	r0, r4
 800c2f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c2f8:	4798      	blx	r3
 800c2fa:	0028      	movs	r0, r5
 800c2fc:	bd70      	pop	{r4, r5, r6, pc}

0800c2fe <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800c2fe:	b510      	push	{r4, lr}
 800c300:	880b      	ldrh	r3, [r1, #0]
 800c302:	8882      	ldrh	r2, [r0, #4]
 800c304:	189b      	adds	r3, r3, r2
 800c306:	800b      	strh	r3, [r1, #0]
 800c308:	88c2      	ldrh	r2, [r0, #6]
 800c30a:	884b      	ldrh	r3, [r1, #2]
 800c30c:	189b      	adds	r3, r3, r2
 800c30e:	804b      	strh	r3, [r1, #2]
 800c310:	6940      	ldr	r0, [r0, #20]
 800c312:	2800      	cmp	r0, #0
 800c314:	d002      	beq.n	800c31c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x1e>
 800c316:	6803      	ldr	r3, [r0, #0]
 800c318:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c31a:	4798      	blx	r3
 800c31c:	bd10      	pop	{r4, pc}

0800c31e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800c31e:	b570      	push	{r4, r5, r6, lr}
 800c320:	000c      	movs	r4, r1
 800c322:	8882      	ldrh	r2, [r0, #4]
 800c324:	880b      	ldrh	r3, [r1, #0]
 800c326:	0005      	movs	r5, r0
 800c328:	189b      	adds	r3, r3, r2
 800c32a:	800b      	strh	r3, [r1, #0]
 800c32c:	88c2      	ldrh	r2, [r0, #6]
 800c32e:	884b      	ldrh	r3, [r1, #2]
 800c330:	189b      	adds	r3, r3, r2
 800c332:	804b      	strh	r3, [r1, #2]
 800c334:	1d01      	adds	r1, r0, #4
 800c336:	0020      	movs	r0, r4
 800c338:	f7fa ff70 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800c33c:	2204      	movs	r2, #4
 800c33e:	5ea3      	ldrsh	r3, [r4, r2]
 800c340:	2b00      	cmp	r3, #0
 800c342:	dd0a      	ble.n	800c35a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3c>
 800c344:	2206      	movs	r2, #6
 800c346:	5ea3      	ldrsh	r3, [r4, r2]
 800c348:	2b00      	cmp	r3, #0
 800c34a:	dd06      	ble.n	800c35a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3c>
 800c34c:	6968      	ldr	r0, [r5, #20]
 800c34e:	2800      	cmp	r0, #0
 800c350:	d003      	beq.n	800c35a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3c>
 800c352:	6803      	ldr	r3, [r0, #0]
 800c354:	0021      	movs	r1, r4
 800c356:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c358:	4798      	blx	r3
 800c35a:	bd70      	pop	{r4, r5, r6, pc}

0800c35c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800c35c:	b570      	push	{r4, r5, r6, lr}
 800c35e:	000c      	movs	r4, r1
 800c360:	8882      	ldrh	r2, [r0, #4]
 800c362:	880b      	ldrh	r3, [r1, #0]
 800c364:	0005      	movs	r5, r0
 800c366:	189b      	adds	r3, r3, r2
 800c368:	800b      	strh	r3, [r1, #0]
 800c36a:	88c2      	ldrh	r2, [r0, #6]
 800c36c:	884b      	ldrh	r3, [r1, #2]
 800c36e:	189b      	adds	r3, r3, r2
 800c370:	804b      	strh	r3, [r1, #2]
 800c372:	1d01      	adds	r1, r0, #4
 800c374:	0020      	movs	r0, r4
 800c376:	f7fa ff51 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800c37a:	2204      	movs	r2, #4
 800c37c:	5ea3      	ldrsh	r3, [r4, r2]
 800c37e:	2b00      	cmp	r3, #0
 800c380:	dd0a      	ble.n	800c398 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3c>
 800c382:	2206      	movs	r2, #6
 800c384:	5ea3      	ldrsh	r3, [r4, r2]
 800c386:	2b00      	cmp	r3, #0
 800c388:	dd06      	ble.n	800c398 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3c>
 800c38a:	6968      	ldr	r0, [r5, #20]
 800c38c:	2800      	cmp	r0, #0
 800c38e:	d004      	beq.n	800c39a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800c390:	6803      	ldr	r3, [r0, #0]
 800c392:	0021      	movs	r1, r4
 800c394:	691b      	ldr	r3, [r3, #16]
 800c396:	4798      	blx	r3
 800c398:	bd70      	pop	{r4, r5, r6, pc}
 800c39a:	4b09      	ldr	r3, [pc, #36]	@ (800c3c0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x64>)
 800c39c:	681b      	ldr	r3, [r3, #0]
 800c39e:	3304      	adds	r3, #4
 800c3a0:	429d      	cmp	r5, r3
 800c3a2:	d1f9      	bne.n	800c398 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3c>
 800c3a4:	f7fe fe12 	bl	800afcc <_ZN8touchgfx11Application11getInstanceEv>
 800c3a8:	8861      	ldrh	r1, [r4, #2]
 800c3aa:	8822      	ldrh	r2, [r4, #0]
 800c3ac:	0409      	lsls	r1, r1, #16
 800c3ae:	4311      	orrs	r1, r2
 800c3b0:	88e2      	ldrh	r2, [r4, #6]
 800c3b2:	6803      	ldr	r3, [r0, #0]
 800c3b4:	88a5      	ldrh	r5, [r4, #4]
 800c3b6:	0412      	lsls	r2, r2, #16
 800c3b8:	432a      	orrs	r2, r5
 800c3ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c3bc:	4798      	blx	r3
 800c3be:	e7eb      	b.n	800c398 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3c>
 800c3c0:	200035b4 	.word	0x200035b4

0800c3c4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800c3c4:	000b      	movs	r3, r1
 800c3c6:	b570      	push	{r4, r5, r6, lr}
 800c3c8:	4313      	orrs	r3, r2
 800c3ca:	0004      	movs	r4, r0
 800c3cc:	000d      	movs	r5, r1
 800c3ce:	0016      	movs	r6, r2
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d00f      	beq.n	800c3f4 <_ZN8touchgfx8Drawable12moveRelativeEss+0x30>
 800c3d4:	6803      	ldr	r3, [r0, #0]
 800c3d6:	699b      	ldr	r3, [r3, #24]
 800c3d8:	4798      	blx	r3
 800c3da:	88e2      	ldrh	r2, [r4, #6]
 800c3dc:	88a1      	ldrh	r1, [r4, #4]
 800c3de:	1992      	adds	r2, r2, r6
 800c3e0:	1949      	adds	r1, r1, r5
 800c3e2:	0020      	movs	r0, r4
 800c3e4:	b212      	sxth	r2, r2
 800c3e6:	b209      	sxth	r1, r1
 800c3e8:	f7f6 fddb 	bl	8002fa2 <_ZN8touchgfx8Drawable5setXYEss>
 800c3ec:	6823      	ldr	r3, [r4, #0]
 800c3ee:	0020      	movs	r0, r4
 800c3f0:	699b      	ldr	r3, [r3, #24]
 800c3f2:	4798      	blx	r3
 800c3f4:	bd70      	pop	{r4, r5, r6, pc}

0800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800c3f6:	b510      	push	{r4, lr}
 800c3f8:	0004      	movs	r4, r0
 800c3fa:	0008      	movs	r0, r1
 800c3fc:	2308      	movs	r3, #8
 800c3fe:	5ec9      	ldrsh	r1, [r1, r3]
 800c400:	230a      	movs	r3, #10
 800c402:	5ec2      	ldrsh	r2, [r0, r3]
 800c404:	2300      	movs	r3, #0
 800c406:	8023      	strh	r3, [r4, #0]
 800c408:	8063      	strh	r3, [r4, #2]
 800c40a:	6803      	ldr	r3, [r0, #0]
 800c40c:	80a1      	strh	r1, [r4, #4]
 800c40e:	80e2      	strh	r2, [r4, #6]
 800c410:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c412:	0021      	movs	r1, r4
 800c414:	4798      	blx	r3
 800c416:	0020      	movs	r0, r4
 800c418:	bd10      	pop	{r4, pc}

0800c41a <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800c41a:	2000      	movs	r0, #0
 800c41c:	4770      	bx	lr

0800c41e <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800c41e:	2001      	movs	r0, #1
 800c420:	4770      	bx	lr

0800c422 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800c422:	2002      	movs	r0, #2
 800c424:	4770      	bx	lr

0800c426 <_ZN8touchgfx6ScreenD1Ev>:
 800c426:	4770      	bx	lr

0800c428 <_ZN8touchgfx12GestureEventD1Ev>:
 800c428:	4770      	bx	lr

0800c42a <_ZN8touchgfx9DragEventD1Ev>:
 800c42a:	4770      	bx	lr

0800c42c <_ZN8touchgfx10ClickEventD1Ev>:
 800c42c:	4770      	bx	lr

0800c42e <_ZN8touchgfx10ClickEventD0Ev>:
 800c42e:	b510      	push	{r4, lr}
 800c430:	0004      	movs	r4, r0
 800c432:	210c      	movs	r1, #12
 800c434:	f005 fb67 	bl	8011b06 <_ZdlPvj>
 800c438:	0020      	movs	r0, r4
 800c43a:	bd10      	pop	{r4, pc}

0800c43c <_ZN8touchgfx9DragEventD0Ev>:
 800c43c:	b510      	push	{r4, lr}
 800c43e:	0004      	movs	r4, r0
 800c440:	2110      	movs	r1, #16
 800c442:	f005 fb60 	bl	8011b06 <_ZdlPvj>
 800c446:	0020      	movs	r0, r4
 800c448:	bd10      	pop	{r4, pc}

0800c44a <_ZN8touchgfx12GestureEventD0Ev>:
 800c44a:	b510      	push	{r4, lr}
 800c44c:	0004      	movs	r4, r0
 800c44e:	210c      	movs	r1, #12
 800c450:	f005 fb59 	bl	8011b06 <_ZdlPvj>
 800c454:	0020      	movs	r0, r4
 800c456:	bd10      	pop	{r4, pc}

0800c458 <_ZN8touchgfx6ScreenD0Ev>:
 800c458:	b510      	push	{r4, lr}
 800c45a:	0004      	movs	r4, r0
 800c45c:	213c      	movs	r1, #60	@ 0x3c
 800c45e:	f005 fb52 	bl	8011b06 <_ZdlPvj>
 800c462:	0020      	movs	r0, r4
 800c464:	bd10      	pop	{r4, pc}
	...

0800c468 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800c468:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c46a:	000d      	movs	r5, r1
 800c46c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800c46e:	b087      	sub	sp, #28
 800c470:	0004      	movs	r4, r0
 800c472:	2900      	cmp	r1, #0
 800c474:	d01b      	beq.n	800c4ae <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x46>
 800c476:	ae01      	add	r6, sp, #4
 800c478:	0030      	movs	r0, r6
 800c47a:	f7ff ffbc 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c47e:	2306      	movs	r3, #6
 800c480:	5ee8      	ldrsh	r0, [r5, r3]
 800c482:	892a      	ldrh	r2, [r5, #8]
 800c484:	8833      	ldrh	r3, [r6, #0]
 800c486:	8871      	ldrh	r1, [r6, #2]
 800c488:	1ad2      	subs	r2, r2, r3
 800c48a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800c48c:	792f      	ldrb	r7, [r5, #4]
 800c48e:	18d2      	adds	r2, r2, r3
 800c490:	896b      	ldrh	r3, [r5, #10]
 800c492:	4d08      	ldr	r5, [pc, #32]	@ (800c4b4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4c>)
 800c494:	1a5b      	subs	r3, r3, r1
 800c496:	8ee1      	ldrh	r1, [r4, #54]	@ 0x36
 800c498:	9503      	str	r5, [sp, #12]
 800c49a:	185b      	adds	r3, r3, r1
 800c49c:	a903      	add	r1, sp, #12
 800c49e:	80c8      	strh	r0, [r1, #6]
 800c4a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800c4a2:	710f      	strb	r7, [r1, #4]
 800c4a4:	810a      	strh	r2, [r1, #8]
 800c4a6:	814b      	strh	r3, [r1, #10]
 800c4a8:	6803      	ldr	r3, [r0, #0]
 800c4aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c4ac:	4798      	blx	r3
 800c4ae:	b007      	add	sp, #28
 800c4b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c4b2:	46c0      	nop			@ (mov r8, r8)
 800c4b4:	08015b24 	.word	0x08015b24

0800c4b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800c4b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c4ba:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800c4bc:	b08d      	sub	sp, #52	@ 0x34
 800c4be:	0004      	movs	r4, r0
 800c4c0:	000d      	movs	r5, r1
 800c4c2:	2b00      	cmp	r3, #0
 800c4c4:	d002      	beq.n	800c4cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800c4c6:	790b      	ldrb	r3, [r1, #4]
 800c4c8:	2b00      	cmp	r3, #0
 800c4ca:	d046      	beq.n	800c55a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa2>
 800c4cc:	ae05      	add	r6, sp, #20
 800c4ce:	1d27      	adds	r7, r4, #4
 800c4d0:	0039      	movs	r1, r7
 800c4d2:	0030      	movs	r0, r6
 800c4d4:	f7ff ff8f 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c4d8:	2200      	movs	r2, #0
 800c4da:	5eb3      	ldrsh	r3, [r6, r2]
 800c4dc:	9302      	str	r3, [sp, #8]
 800c4de:	2202      	movs	r2, #2
 800c4e0:	5eb3      	ldrsh	r3, [r6, r2]
 800c4e2:	9303      	str	r3, [sp, #12]
 800c4e4:	792b      	ldrb	r3, [r5, #4]
 800c4e6:	2b00      	cmp	r3, #0
 800c4e8:	d110      	bne.n	800c50c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x54>
 800c4ea:	9b03      	ldr	r3, [sp, #12]
 800c4ec:	892a      	ldrh	r2, [r5, #8]
 800c4ee:	88e9      	ldrh	r1, [r5, #6]
 800c4f0:	1ad2      	subs	r2, r2, r3
 800c4f2:	9b02      	ldr	r3, [sp, #8]
 800c4f4:	b212      	sxth	r2, r2
 800c4f6:	1ac9      	subs	r1, r1, r3
 800c4f8:	0023      	movs	r3, r4
 800c4fa:	3336      	adds	r3, #54	@ 0x36
 800c4fc:	9301      	str	r3, [sp, #4]
 800c4fe:	3b02      	subs	r3, #2
 800c500:	9300      	str	r3, [sp, #0]
 800c502:	b209      	sxth	r1, r1
 800c504:	3b04      	subs	r3, #4
 800c506:	0038      	movs	r0, r7
 800c508:	f7fa fdaa 	bl	8007060 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800c50c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800c50e:	2900      	cmp	r1, #0
 800c510:	d023      	beq.n	800c55a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa2>
 800c512:	ae07      	add	r6, sp, #28
 800c514:	0030      	movs	r0, r6
 800c516:	f7ff ff6e 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c51a:	8832      	ldrh	r2, [r6, #0]
 800c51c:	9b02      	ldr	r3, [sp, #8]
 800c51e:	9903      	ldr	r1, [sp, #12]
 800c520:	1a9a      	subs	r2, r3, r2
 800c522:	88eb      	ldrh	r3, [r5, #6]
 800c524:	7928      	ldrb	r0, [r5, #4]
 800c526:	18d2      	adds	r2, r2, r3
 800c528:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800c52a:	18d2      	adds	r2, r2, r3
 800c52c:	8873      	ldrh	r3, [r6, #2]
 800c52e:	4e0c      	ldr	r6, [pc, #48]	@ (800c560 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa8>)
 800c530:	1acb      	subs	r3, r1, r3
 800c532:	9609      	str	r6, [sp, #36]	@ 0x24
 800c534:	2600      	movs	r6, #0
 800c536:	8929      	ldrh	r1, [r5, #8]
 800c538:	185b      	adds	r3, r3, r1
 800c53a:	8ee1      	ldrh	r1, [r4, #54]	@ 0x36
 800c53c:	185b      	adds	r3, r3, r1
 800c53e:	a909      	add	r1, sp, #36	@ 0x24
 800c540:	7108      	strb	r0, [r1, #4]
 800c542:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800c544:	80ca      	strh	r2, [r1, #6]
 800c546:	810b      	strh	r3, [r1, #8]
 800c548:	814e      	strh	r6, [r1, #10]
 800c54a:	6803      	ldr	r3, [r0, #0]
 800c54c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c54e:	4798      	blx	r3
 800c550:	792b      	ldrb	r3, [r5, #4]
 800c552:	42b3      	cmp	r3, r6
 800c554:	d001      	beq.n	800c55a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa2>
 800c556:	6326      	str	r6, [r4, #48]	@ 0x30
 800c558:	6366      	str	r6, [r4, #52]	@ 0x34
 800c55a:	b00d      	add	sp, #52	@ 0x34
 800c55c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c55e:	46c0      	nop			@ (mov r8, r8)
 800c560:	08015afc 	.word	0x08015afc

0800c564 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800c564:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c566:	b08b      	sub	sp, #44	@ 0x2c
 800c568:	9101      	str	r1, [sp, #4]
 800c56a:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800c56c:	0004      	movs	r4, r0
 800c56e:	2900      	cmp	r1, #0
 800c570:	d06c      	beq.n	800c64c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xe8>
 800c572:	a802      	add	r0, sp, #8
 800c574:	f7ff ff3f 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c578:	ab02      	add	r3, sp, #8
 800c57a:	2502      	movs	r5, #2
 800c57c:	5f5d      	ldrsh	r5, [r3, r5]
 800c57e:	9b01      	ldr	r3, [sp, #4]
 800c580:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800c582:	88db      	ldrh	r3, [r3, #6]
 800c584:	a902      	add	r1, sp, #8
 800c586:	18d3      	adds	r3, r2, r3
 800c588:	2600      	movs	r6, #0
 800c58a:	5f8e      	ldrsh	r6, [r1, r6]
 800c58c:	b21b      	sxth	r3, r3
 800c58e:	42b3      	cmp	r3, r6
 800c590:	db2f      	blt.n	800c5f2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c592:	a902      	add	r1, sp, #8
 800c594:	8888      	ldrh	r0, [r1, #4]
 800c596:	1980      	adds	r0, r0, r6
 800c598:	b200      	sxth	r0, r0
 800c59a:	4283      	cmp	r3, r0
 800c59c:	da29      	bge.n	800c5f2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c59e:	9901      	ldr	r1, [sp, #4]
 800c5a0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c5a2:	890f      	ldrh	r7, [r1, #8]
 800c5a4:	19df      	adds	r7, r3, r7
 800c5a6:	b23f      	sxth	r7, r7
 800c5a8:	42af      	cmp	r7, r5
 800c5aa:	db22      	blt.n	800c5f2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c5ac:	a902      	add	r1, sp, #8
 800c5ae:	88c9      	ldrh	r1, [r1, #6]
 800c5b0:	1949      	adds	r1, r1, r5
 800c5b2:	b209      	sxth	r1, r1
 800c5b4:	428f      	cmp	r7, r1
 800c5b6:	da1c      	bge.n	800c5f2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c5b8:	9f01      	ldr	r7, [sp, #4]
 800c5ba:	897f      	ldrh	r7, [r7, #10]
 800c5bc:	19d2      	adds	r2, r2, r7
 800c5be:	b212      	sxth	r2, r2
 800c5c0:	42b2      	cmp	r2, r6
 800c5c2:	db09      	blt.n	800c5d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x74>
 800c5c4:	4282      	cmp	r2, r0
 800c5c6:	da07      	bge.n	800c5d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x74>
 800c5c8:	9a01      	ldr	r2, [sp, #4]
 800c5ca:	8992      	ldrh	r2, [r2, #12]
 800c5cc:	189b      	adds	r3, r3, r2
 800c5ce:	b21b      	sxth	r3, r3
 800c5d0:	42ab      	cmp	r3, r5
 800c5d2:	db01      	blt.n	800c5d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x74>
 800c5d4:	428b      	cmp	r3, r1
 800c5d6:	db0c      	blt.n	800c5f2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c5d8:	4b1d      	ldr	r3, [pc, #116]	@ (800c650 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>)
 800c5da:	a906      	add	r1, sp, #24
 800c5dc:	9306      	str	r3, [sp, #24]
 800c5de:	2302      	movs	r3, #2
 800c5e0:	710b      	strb	r3, [r1, #4]
 800c5e2:	2300      	movs	r3, #0
 800c5e4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800c5e6:	80cb      	strh	r3, [r1, #6]
 800c5e8:	810b      	strh	r3, [r1, #8]
 800c5ea:	814b      	strh	r3, [r1, #10]
 800c5ec:	6803      	ldr	r3, [r0, #0]
 800c5ee:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c5f0:	4798      	blx	r3
 800c5f2:	af04      	add	r7, sp, #16
 800c5f4:	0038      	movs	r0, r7
 800c5f6:	1d21      	adds	r1, r4, #4
 800c5f8:	f7ff fefd 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c5fc:	9b01      	ldr	r3, [sp, #4]
 800c5fe:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800c600:	7918      	ldrb	r0, [r3, #4]
 800c602:	883b      	ldrh	r3, [r7, #0]
 800c604:	887f      	ldrh	r7, [r7, #2]
 800c606:	1b9e      	subs	r6, r3, r6
 800c608:	1b7d      	subs	r5, r7, r5
 800c60a:	9f01      	ldr	r7, [sp, #4]
 800c60c:	b2ad      	uxth	r5, r5
 800c60e:	893f      	ldrh	r7, [r7, #8]
 800c610:	9b01      	ldr	r3, [sp, #4]
 800c612:	19ef      	adds	r7, r5, r7
 800c614:	19d7      	adds	r7, r2, r7
 800c616:	46bc      	mov	ip, r7
 800c618:	9f01      	ldr	r7, [sp, #4]
 800c61a:	88db      	ldrh	r3, [r3, #6]
 800c61c:	897f      	ldrh	r7, [r7, #10]
 800c61e:	8ea1      	ldrh	r1, [r4, #52]	@ 0x34
 800c620:	b2b6      	uxth	r6, r6
 800c622:	18f3      	adds	r3, r6, r3
 800c624:	19f6      	adds	r6, r6, r7
 800c626:	18cb      	adds	r3, r1, r3
 800c628:	198e      	adds	r6, r1, r6
 800c62a:	9901      	ldr	r1, [sp, #4]
 800c62c:	8989      	ldrh	r1, [r1, #12]
 800c62e:	186d      	adds	r5, r5, r1
 800c630:	a906      	add	r1, sp, #24
 800c632:	80cb      	strh	r3, [r1, #6]
 800c634:	4663      	mov	r3, ip
 800c636:	1952      	adds	r2, r2, r5
 800c638:	4d06      	ldr	r5, [pc, #24]	@ (800c654 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf0>)
 800c63a:	7108      	strb	r0, [r1, #4]
 800c63c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800c63e:	9506      	str	r5, [sp, #24]
 800c640:	810b      	strh	r3, [r1, #8]
 800c642:	814e      	strh	r6, [r1, #10]
 800c644:	818a      	strh	r2, [r1, #12]
 800c646:	6803      	ldr	r3, [r0, #0]
 800c648:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c64a:	4798      	blx	r3
 800c64c:	b00b      	add	sp, #44	@ 0x2c
 800c64e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c650:	08015afc 	.word	0x08015afc
 800c654:	08015b10 	.word	0x08015b10

0800c658 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800c658:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c65a:	0005      	movs	r5, r0
 800c65c:	220c      	movs	r2, #12
 800c65e:	5e83      	ldrsh	r3, [r0, r2]
 800c660:	350c      	adds	r5, #12
 800c662:	3301      	adds	r3, #1
 800c664:	d10f      	bne.n	800c686 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x2e>
 800c666:	466c      	mov	r4, sp
 800c668:	2308      	movs	r3, #8
 800c66a:	5ec2      	ldrsh	r2, [r0, r3]
 800c66c:	210a      	movs	r1, #10
 800c66e:	5e43      	ldrsh	r3, [r0, r1]
 800c670:	2100      	movs	r1, #0
 800c672:	80e3      	strh	r3, [r4, #6]
 800c674:	6803      	ldr	r3, [r0, #0]
 800c676:	9100      	str	r1, [sp, #0]
 800c678:	80a2      	strh	r2, [r4, #4]
 800c67a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c67c:	0021      	movs	r1, r4
 800c67e:	4798      	blx	r3
 800c680:	002b      	movs	r3, r5
 800c682:	cc06      	ldmia	r4!, {r1, r2}
 800c684:	c306      	stmia	r3!, {r1, r2}
 800c686:	0028      	movs	r0, r5
 800c688:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800c68a <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800c68a:	b513      	push	{r0, r1, r4, lr}
 800c68c:	2220      	movs	r2, #32
 800c68e:	5e83      	ldrsh	r3, [r0, r2]
 800c690:	0004      	movs	r4, r0
 800c692:	3301      	adds	r3, #1
 800c694:	d109      	bne.n	800c6aa <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800c696:	0001      	movs	r1, r0
 800c698:	4668      	mov	r0, sp
 800c69a:	f7ff feac 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c69e:	466b      	mov	r3, sp
 800c6a0:	881b      	ldrh	r3, [r3, #0]
 800c6a2:	8423      	strh	r3, [r4, #32]
 800c6a4:	466b      	mov	r3, sp
 800c6a6:	885b      	ldrh	r3, [r3, #2]
 800c6a8:	8463      	strh	r3, [r4, #34]	@ 0x22
 800c6aa:	2320      	movs	r3, #32
 800c6ac:	5ee0      	ldrsh	r0, [r4, r3]
 800c6ae:	bd16      	pop	{r1, r2, r4, pc}

0800c6b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800c6b0:	b513      	push	{r0, r1, r4, lr}
 800c6b2:	2222      	movs	r2, #34	@ 0x22
 800c6b4:	5e83      	ldrsh	r3, [r0, r2]
 800c6b6:	0004      	movs	r4, r0
 800c6b8:	3301      	adds	r3, #1
 800c6ba:	d109      	bne.n	800c6d0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800c6bc:	0001      	movs	r1, r0
 800c6be:	4668      	mov	r0, sp
 800c6c0:	f7ff fe99 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c6c4:	466b      	mov	r3, sp
 800c6c6:	881b      	ldrh	r3, [r3, #0]
 800c6c8:	8423      	strh	r3, [r4, #32]
 800c6ca:	466b      	mov	r3, sp
 800c6cc:	885b      	ldrh	r3, [r3, #2]
 800c6ce:	8463      	strh	r3, [r4, #34]	@ 0x22
 800c6d0:	2322      	movs	r3, #34	@ 0x22
 800c6d2:	5ee0      	ldrsh	r0, [r4, r3]
 800c6d4:	bd16      	pop	{r1, r2, r4, pc}
	...

0800c6d8 <_ZN8touchgfx6ScreenC1Ev>:
 800c6d8:	b570      	push	{r4, r5, r6, lr}
 800c6da:	0005      	movs	r5, r0
 800c6dc:	4b18      	ldr	r3, [pc, #96]	@ (800c740 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800c6de:	0002      	movs	r2, r0
 800c6e0:	3308      	adds	r3, #8
 800c6e2:	c508      	stmia	r5!, {r3}
 800c6e4:	2300      	movs	r3, #0
 800c6e6:	3228      	adds	r2, #40	@ 0x28
 800c6e8:	0001      	movs	r1, r0
 800c6ea:	8103      	strh	r3, [r0, #8]
 800c6ec:	8143      	strh	r3, [r0, #10]
 800c6ee:	8183      	strh	r3, [r0, #12]
 800c6f0:	81c3      	strh	r3, [r0, #14]
 800c6f2:	8203      	strh	r3, [r0, #16]
 800c6f4:	8243      	strh	r3, [r0, #18]
 800c6f6:	8283      	strh	r3, [r0, #20]
 800c6f8:	82c3      	strh	r3, [r0, #22]
 800c6fa:	6183      	str	r3, [r0, #24]
 800c6fc:	61c3      	str	r3, [r0, #28]
 800c6fe:	6203      	str	r3, [r0, #32]
 800c700:	8483      	strh	r3, [r0, #36]	@ 0x24
 800c702:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c704:	7013      	strb	r3, [r2, #0]
 800c706:	2201      	movs	r2, #1
 800c708:	3129      	adds	r1, #41	@ 0x29
 800c70a:	700a      	strb	r2, [r1, #0]
 800c70c:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800c70e:	6303      	str	r3, [r0, #48]	@ 0x30
 800c710:	6343      	str	r3, [r0, #52]	@ 0x34
 800c712:	0003      	movs	r3, r0
 800c714:	0004      	movs	r4, r0
 800c716:	490b      	ldr	r1, [pc, #44]	@ (800c744 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800c718:	3338      	adds	r3, #56	@ 0x38
 800c71a:	6041      	str	r1, [r0, #4]
 800c71c:	701a      	strb	r2, [r3, #0]
 800c71e:	4b0a      	ldr	r3, [pc, #40]	@ (800c748 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800c720:	0028      	movs	r0, r5
 800c722:	2600      	movs	r6, #0
 800c724:	5f9e      	ldrsh	r6, [r3, r6]
 800c726:	4b09      	ldr	r3, [pc, #36]	@ (800c74c <_ZN8touchgfx6ScreenC1Ev+0x74>)
 800c728:	2100      	movs	r1, #0
 800c72a:	5e59      	ldrsh	r1, [r3, r1]
 800c72c:	4b08      	ldr	r3, [pc, #32]	@ (800c750 <_ZN8touchgfx6ScreenC1Ev+0x78>)
 800c72e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c730:	4798      	blx	r3
 800c732:	6863      	ldr	r3, [r4, #4]
 800c734:	0028      	movs	r0, r5
 800c736:	0031      	movs	r1, r6
 800c738:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c73a:	4798      	blx	r3
 800c73c:	0020      	movs	r0, r4
 800c73e:	bd70      	pop	{r4, r5, r6, pc}
 800c740:	08015b30 	.word	0x08015b30
 800c744:	080157b4 	.word	0x080157b4
 800c748:	2000356e 	.word	0x2000356e
 800c74c:	2000356c 	.word	0x2000356c
 800c750:	080157ac 	.word	0x080157ac

0800c754 <_ZN8touchgfx6Screen4drawEv>:
 800c754:	b507      	push	{r0, r1, r2, lr}
 800c756:	4b07      	ldr	r3, [pc, #28]	@ (800c774 <_ZN8touchgfx6Screen4drawEv+0x20>)
 800c758:	2200      	movs	r2, #0
 800c75a:	5e9a      	ldrsh	r2, [r3, r2]
 800c75c:	4b06      	ldr	r3, [pc, #24]	@ (800c778 <_ZN8touchgfx6Screen4drawEv+0x24>)
 800c75e:	2100      	movs	r1, #0
 800c760:	5e5b      	ldrsh	r3, [r3, r1]
 800c762:	2100      	movs	r1, #0
 800c764:	9100      	str	r1, [sp, #0]
 800c766:	4669      	mov	r1, sp
 800c768:	80cb      	strh	r3, [r1, #6]
 800c76a:	6803      	ldr	r3, [r0, #0]
 800c76c:	808a      	strh	r2, [r1, #4]
 800c76e:	689b      	ldr	r3, [r3, #8]
 800c770:	4798      	blx	r3
 800c772:	bd07      	pop	{r0, r1, r2, pc}
 800c774:	2000356c 	.word	0x2000356c
 800c778:	2000356e 	.word	0x2000356e

0800c77c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800c77c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c77e:	b08d      	sub	sp, #52	@ 0x34
 800c780:	9002      	str	r0, [sp, #8]
 800c782:	0014      	movs	r4, r2
 800c784:	2204      	movs	r2, #4
 800c786:	5e8b      	ldrsh	r3, [r1, r2]
 800c788:	000f      	movs	r7, r1
 800c78a:	2b00      	cmp	r3, #0
 800c78c:	dd0e      	ble.n	800c7ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x30>
 800c78e:	2206      	movs	r2, #6
 800c790:	5e8b      	ldrsh	r3, [r1, r2]
 800c792:	2b00      	cmp	r3, #0
 800c794:	dd0a      	ble.n	800c7ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x30>
 800c796:	0020      	movs	r0, r4
 800c798:	f7ff ff5e 	bl	800c658 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c79c:	0039      	movs	r1, r7
 800c79e:	f7fe fb2e 	bl	800adfe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c7a2:	69e3      	ldr	r3, [r4, #28]
 800c7a4:	2800      	cmp	r0, #0
 800c7a6:	d103      	bne.n	800c7b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800c7a8:	1e1c      	subs	r4, r3, #0
 800c7aa:	d1f4      	bne.n	800c796 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a>
 800c7ac:	b00d      	add	sp, #52	@ 0x34
 800c7ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c7b0:	2b00      	cmp	r3, #0
 800c7b2:	d100      	bne.n	800c7b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x3a>
 800c7b4:	e0aa      	b.n	800c90c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800c7b6:	6823      	ldr	r3, [r4, #0]
 800c7b8:	0021      	movs	r1, r4
 800c7ba:	68db      	ldr	r3, [r3, #12]
 800c7bc:	a806      	add	r0, sp, #24
 800c7be:	4798      	blx	r3
 800c7c0:	0020      	movs	r0, r4
 800c7c2:	f7ff ff62 	bl	800c68a <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800c7c6:	ab06      	add	r3, sp, #24
 800c7c8:	881d      	ldrh	r5, [r3, #0]
 800c7ca:	ae08      	add	r6, sp, #32
 800c7cc:	182d      	adds	r5, r5, r0
 800c7ce:	0020      	movs	r0, r4
 800c7d0:	f7ff ff6e 	bl	800c6b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800c7d4:	ab06      	add	r3, sp, #24
 800c7d6:	885b      	ldrh	r3, [r3, #2]
 800c7d8:	b22d      	sxth	r5, r5
 800c7da:	1818      	adds	r0, r3, r0
 800c7dc:	ab06      	add	r3, sp, #24
 800c7de:	2204      	movs	r2, #4
 800c7e0:	5e9a      	ldrsh	r2, [r3, r2]
 800c7e2:	ab06      	add	r3, sp, #24
 800c7e4:	2106      	movs	r1, #6
 800c7e6:	5e5b      	ldrsh	r3, [r3, r1]
 800c7e8:	80b2      	strh	r2, [r6, #4]
 800c7ea:	80f3      	strh	r3, [r6, #6]
 800c7ec:	8035      	strh	r5, [r6, #0]
 800c7ee:	8070      	strh	r0, [r6, #2]
 800c7f0:	0039      	movs	r1, r7
 800c7f2:	0030      	movs	r0, r6
 800c7f4:	f7fa fd12 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800c7f8:	0020      	movs	r0, r4
 800c7fa:	f7ff ff2d 	bl	800c658 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c7fe:	ad0a      	add	r5, sp, #40	@ 0x28
 800c800:	2208      	movs	r2, #8
 800c802:	0031      	movs	r1, r6
 800c804:	9001      	str	r0, [sp, #4]
 800c806:	0028      	movs	r0, r5
 800c808:	f006 fab5 	bl	8012d76 <memcpy>
 800c80c:	9901      	ldr	r1, [sp, #4]
 800c80e:	0028      	movs	r0, r5
 800c810:	f7fa fd04 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800c814:	2200      	movs	r2, #0
 800c816:	5eab      	ldrsh	r3, [r5, r2]
 800c818:	9303      	str	r3, [sp, #12]
 800c81a:	2202      	movs	r2, #2
 800c81c:	5eab      	ldrsh	r3, [r5, r2]
 800c81e:	9301      	str	r3, [sp, #4]
 800c820:	2204      	movs	r2, #4
 800c822:	5eab      	ldrsh	r3, [r5, r2]
 800c824:	9304      	str	r3, [sp, #16]
 800c826:	2306      	movs	r3, #6
 800c828:	5eee      	ldrsh	r6, [r5, r3]
 800c82a:	2300      	movs	r3, #0
 800c82c:	5efa      	ldrsh	r2, [r7, r3]
 800c82e:	9b03      	ldr	r3, [sp, #12]
 800c830:	429a      	cmp	r2, r3
 800c832:	d10d      	bne.n	800c850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800c834:	2102      	movs	r1, #2
 800c836:	5e7b      	ldrsh	r3, [r7, r1]
 800c838:	9901      	ldr	r1, [sp, #4]
 800c83a:	428b      	cmp	r3, r1
 800c83c:	d108      	bne.n	800c850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800c83e:	2104      	movs	r1, #4
 800c840:	5e7b      	ldrsh	r3, [r7, r1]
 800c842:	9904      	ldr	r1, [sp, #16]
 800c844:	428b      	cmp	r3, r1
 800c846:	d103      	bne.n	800c850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800c848:	2106      	movs	r1, #6
 800c84a:	5e7b      	ldrsh	r3, [r7, r1]
 800c84c:	42b3      	cmp	r3, r6
 800c84e:	d05d      	beq.n	800c90c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800c850:	9b04      	ldr	r3, [sp, #16]
 800c852:	2b00      	cmp	r3, #0
 800c854:	dd55      	ble.n	800c902 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x186>
 800c856:	2e00      	cmp	r6, #0
 800c858:	dd53      	ble.n	800c902 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x186>
 800c85a:	2102      	movs	r1, #2
 800c85c:	5e7b      	ldrsh	r3, [r7, r1]
 800c85e:	4669      	mov	r1, sp
 800c860:	8889      	ldrh	r1, [r1, #4]
 800c862:	9105      	str	r1, [sp, #20]
 800c864:	9901      	ldr	r1, [sp, #4]
 800c866:	428b      	cmp	r3, r1
 800c868:	da0c      	bge.n	800c884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x108>
 800c86a:	2104      	movs	r1, #4
 800c86c:	5e78      	ldrsh	r0, [r7, r1]
 800c86e:	a908      	add	r1, sp, #32
 800c870:	800a      	strh	r2, [r1, #0]
 800c872:	9a05      	ldr	r2, [sp, #20]
 800c874:	804b      	strh	r3, [r1, #2]
 800c876:	1ad3      	subs	r3, r2, r3
 800c878:	8088      	strh	r0, [r1, #4]
 800c87a:	80cb      	strh	r3, [r1, #6]
 800c87c:	69e2      	ldr	r2, [r4, #28]
 800c87e:	9802      	ldr	r0, [sp, #8]
 800c880:	f7ff ff7c 	bl	800c77c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c884:	2200      	movs	r2, #0
 800c886:	5ebb      	ldrsh	r3, [r7, r2]
 800c888:	466a      	mov	r2, sp
 800c88a:	8995      	ldrh	r5, [r2, #12]
 800c88c:	9a03      	ldr	r2, [sp, #12]
 800c88e:	4293      	cmp	r3, r2
 800c890:	da0a      	bge.n	800c8a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x12c>
 800c892:	a908      	add	r1, sp, #32
 800c894:	9a01      	ldr	r2, [sp, #4]
 800c896:	800b      	strh	r3, [r1, #0]
 800c898:	1aeb      	subs	r3, r5, r3
 800c89a:	804a      	strh	r2, [r1, #2]
 800c89c:	808b      	strh	r3, [r1, #4]
 800c89e:	80ce      	strh	r6, [r1, #6]
 800c8a0:	69e2      	ldr	r2, [r4, #28]
 800c8a2:	9802      	ldr	r0, [sp, #8]
 800c8a4:	f7ff ff6a 	bl	800c77c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c8a8:	883a      	ldrh	r2, [r7, #0]
 800c8aa:	88bb      	ldrh	r3, [r7, #4]
 800c8ac:	189b      	adds	r3, r3, r2
 800c8ae:	9a04      	ldr	r2, [sp, #16]
 800c8b0:	b29b      	uxth	r3, r3
 800c8b2:	18ad      	adds	r5, r5, r2
 800c8b4:	b2ad      	uxth	r5, r5
 800c8b6:	b22a      	sxth	r2, r5
 800c8b8:	b219      	sxth	r1, r3
 800c8ba:	4291      	cmp	r1, r2
 800c8bc:	dd0a      	ble.n	800c8d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x158>
 800c8be:	a908      	add	r1, sp, #32
 800c8c0:	800a      	strh	r2, [r1, #0]
 800c8c2:	9a01      	ldr	r2, [sp, #4]
 800c8c4:	1b5d      	subs	r5, r3, r5
 800c8c6:	804a      	strh	r2, [r1, #2]
 800c8c8:	808d      	strh	r5, [r1, #4]
 800c8ca:	80ce      	strh	r6, [r1, #6]
 800c8cc:	69e2      	ldr	r2, [r4, #28]
 800c8ce:	9802      	ldr	r0, [sp, #8]
 800c8d0:	f7ff ff54 	bl	800c77c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c8d4:	88fa      	ldrh	r2, [r7, #6]
 800c8d6:	887b      	ldrh	r3, [r7, #2]
 800c8d8:	189b      	adds	r3, r3, r2
 800c8da:	9a05      	ldr	r2, [sp, #20]
 800c8dc:	b29b      	uxth	r3, r3
 800c8de:	1992      	adds	r2, r2, r6
 800c8e0:	b292      	uxth	r2, r2
 800c8e2:	b210      	sxth	r0, r2
 800c8e4:	b219      	sxth	r1, r3
 800c8e6:	4288      	cmp	r0, r1
 800c8e8:	da10      	bge.n	800c90c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800c8ea:	2104      	movs	r1, #4
 800c8ec:	5e7d      	ldrsh	r5, [r7, r1]
 800c8ee:	2100      	movs	r1, #0
 800c8f0:	5e7e      	ldrsh	r6, [r7, r1]
 800c8f2:	1a9b      	subs	r3, r3, r2
 800c8f4:	a908      	add	r1, sp, #32
 800c8f6:	800e      	strh	r6, [r1, #0]
 800c8f8:	8048      	strh	r0, [r1, #2]
 800c8fa:	808d      	strh	r5, [r1, #4]
 800c8fc:	80cb      	strh	r3, [r1, #6]
 800c8fe:	69e2      	ldr	r2, [r4, #28]
 800c900:	e001      	b.n	800c906 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18a>
 800c902:	0039      	movs	r1, r7
 800c904:	69e2      	ldr	r2, [r4, #28]
 800c906:	9802      	ldr	r0, [sp, #8]
 800c908:	f7ff ff38 	bl	800c77c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c90c:	0020      	movs	r0, r4
 800c90e:	f7ff fea3 	bl	800c658 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c912:	0006      	movs	r6, r0
 800c914:	ad08      	add	r5, sp, #32
 800c916:	2208      	movs	r2, #8
 800c918:	0039      	movs	r1, r7
 800c91a:	0028      	movs	r0, r5
 800c91c:	f006 fa2b 	bl	8012d76 <memcpy>
 800c920:	0031      	movs	r1, r6
 800c922:	0028      	movs	r0, r5
 800c924:	f7fa fc7a 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800c928:	2204      	movs	r2, #4
 800c92a:	5eab      	ldrsh	r3, [r5, r2]
 800c92c:	2b00      	cmp	r3, #0
 800c92e:	dc00      	bgt.n	800c932 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1b6>
 800c930:	e73c      	b.n	800c7ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x30>
 800c932:	2206      	movs	r2, #6
 800c934:	5eab      	ldrsh	r3, [r5, r2]
 800c936:	2b00      	cmp	r3, #0
 800c938:	dc00      	bgt.n	800c93c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800c93a:	e737      	b.n	800c7ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x30>
 800c93c:	0020      	movs	r0, r4
 800c93e:	f7ff fea4 	bl	800c68a <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800c942:	882b      	ldrh	r3, [r5, #0]
 800c944:	1a18      	subs	r0, r3, r0
 800c946:	8028      	strh	r0, [r5, #0]
 800c948:	0020      	movs	r0, r4
 800c94a:	f7ff feb1 	bl	800c6b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800c94e:	886b      	ldrh	r3, [r5, #2]
 800c950:	0029      	movs	r1, r5
 800c952:	1a18      	subs	r0, r3, r0
 800c954:	8068      	strh	r0, [r5, #2]
 800c956:	6823      	ldr	r3, [r4, #0]
 800c958:	0020      	movs	r0, r4
 800c95a:	689b      	ldr	r3, [r3, #8]
 800c95c:	4798      	blx	r3
 800c95e:	e725      	b.n	800c7ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x30>

0800c960 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800c960:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c962:	2300      	movs	r3, #0
 800c964:	000c      	movs	r4, r1
 800c966:	b087      	sub	sp, #28
 800c968:	af02      	add	r7, sp, #8
 800c96a:	1d06      	adds	r6, r0, #4
 800c96c:	0031      	movs	r1, r6
 800c96e:	0005      	movs	r5, r0
 800c970:	0038      	movs	r0, r7
 800c972:	9301      	str	r3, [sp, #4]
 800c974:	f7ff fd3f 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c978:	883b      	ldrh	r3, [r7, #0]
 800c97a:	8822      	ldrh	r2, [r4, #0]
 800c97c:	8879      	ldrh	r1, [r7, #2]
 800c97e:	1ad2      	subs	r2, r2, r3
 800c980:	8863      	ldrh	r3, [r4, #2]
 800c982:	1a5b      	subs	r3, r3, r1
 800c984:	2106      	movs	r1, #6
 800c986:	5e60      	ldrsh	r0, [r4, r1]
 800c988:	2104      	movs	r1, #4
 800c98a:	5e67      	ldrsh	r7, [r4, r1]
 800c98c:	a904      	add	r1, sp, #16
 800c98e:	800a      	strh	r2, [r1, #0]
 800c990:	80c8      	strh	r0, [r1, #6]
 800c992:	aa01      	add	r2, sp, #4
 800c994:	0030      	movs	r0, r6
 800c996:	804b      	strh	r3, [r1, #2]
 800c998:	808f      	strh	r7, [r1, #4]
 800c99a:	f7fa fd2c 	bl	80073f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800c99e:	9a01      	ldr	r2, [sp, #4]
 800c9a0:	2a00      	cmp	r2, #0
 800c9a2:	d003      	beq.n	800c9ac <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x4c>
 800c9a4:	0021      	movs	r1, r4
 800c9a6:	0028      	movs	r0, r5
 800c9a8:	f7ff fee8 	bl	800c77c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c9ac:	b007      	add	sp, #28
 800c9ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c9b0 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800c9b0:	b530      	push	{r4, r5, lr}
 800c9b2:	000d      	movs	r5, r1
 800c9b4:	0001      	movs	r1, r0
 800c9b6:	0004      	movs	r4, r0
 800c9b8:	b085      	sub	sp, #20
 800c9ba:	3108      	adds	r1, #8
 800c9bc:	2208      	movs	r2, #8
 800c9be:	4668      	mov	r0, sp
 800c9c0:	f006 f9d9 	bl	8012d76 <memcpy>
 800c9c4:	0029      	movs	r1, r5
 800c9c6:	4668      	mov	r0, sp
 800c9c8:	f7fa fc28 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800c9cc:	0023      	movs	r3, r4
 800c9ce:	3338      	adds	r3, #56	@ 0x38
 800c9d0:	781b      	ldrb	r3, [r3, #0]
 800c9d2:	2b00      	cmp	r3, #0
 800c9d4:	d005      	beq.n	800c9e2 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x32>
 800c9d6:	4669      	mov	r1, sp
 800c9d8:	0020      	movs	r0, r4
 800c9da:	f7ff ffc1 	bl	800c960 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800c9de:	b005      	add	sp, #20
 800c9e0:	bd30      	pop	{r4, r5, pc}
 800c9e2:	ad02      	add	r5, sp, #8
 800c9e4:	3404      	adds	r4, #4
 800c9e6:	0021      	movs	r1, r4
 800c9e8:	0028      	movs	r0, r5
 800c9ea:	f7ff fd04 	bl	800c3f6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c9ee:	466b      	mov	r3, sp
 800c9f0:	882a      	ldrh	r2, [r5, #0]
 800c9f2:	881b      	ldrh	r3, [r3, #0]
 800c9f4:	4669      	mov	r1, sp
 800c9f6:	1a9b      	subs	r3, r3, r2
 800c9f8:	466a      	mov	r2, sp
 800c9fa:	8013      	strh	r3, [r2, #0]
 800c9fc:	8853      	ldrh	r3, [r2, #2]
 800c9fe:	886a      	ldrh	r2, [r5, #2]
 800ca00:	0020      	movs	r0, r4
 800ca02:	1a9b      	subs	r3, r3, r2
 800ca04:	466a      	mov	r2, sp
 800ca06:	8053      	strh	r3, [r2, #2]
 800ca08:	f7fa fcbb 	bl	8007382 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800ca0c:	e7e7      	b.n	800c9de <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>

0800ca0e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800ca0e:	0003      	movs	r3, r0
 800ca10:	0008      	movs	r0, r1
 800ca12:	b510      	push	{r4, lr}
 800ca14:	1d19      	adds	r1, r3, #4
 800ca16:	6803      	ldr	r3, [r0, #0]
 800ca18:	699b      	ldr	r3, [r3, #24]
 800ca1a:	4798      	blx	r3
 800ca1c:	bd10      	pop	{r4, pc}
	...

0800ca20 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst>:
 800ca20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca22:	000e      	movs	r6, r1
 800ca24:	0014      	movs	r4, r2
 800ca26:	001d      	movs	r5, r3
 800ca28:	4298      	cmp	r0, r3
 800ca2a:	d201      	bcs.n	800ca30 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x10>
 800ca2c:	2b00      	cmp	r3, #0
 800ca2e:	d102      	bne.n	800ca36 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x16>
 800ca30:	1934      	adds	r4, r6, r4
 800ca32:	b220      	sxth	r0, r4
 800ca34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca36:	f7f4 fc03 	bl	8001240 <__aeabi_ui2f>
 800ca3a:	1c01      	adds	r1, r0, #0
 800ca3c:	f7f3 fd42 	bl	80004c4 <__aeabi_fadd>
 800ca40:	1c07      	adds	r7, r0, #0
 800ca42:	0028      	movs	r0, r5
 800ca44:	f7f4 fbb0 	bl	80011a8 <__aeabi_i2f>
 800ca48:	1c01      	adds	r1, r0, #0
 800ca4a:	1c38      	adds	r0, r7, #0
 800ca4c:	f7f3 fec4 	bl	80007d8 <__aeabi_fdiv>
 800ca50:	1c05      	adds	r5, r0, #0
 800ca52:	0020      	movs	r0, r4
 800ca54:	f7f4 fba8 	bl	80011a8 <__aeabi_i2f>
 800ca58:	21fc      	movs	r1, #252	@ 0xfc
 800ca5a:	0589      	lsls	r1, r1, #22
 800ca5c:	f7f4 f8a2 	bl	8000ba4 <__aeabi_fmul>
 800ca60:	1c07      	adds	r7, r0, #0
 800ca62:	0030      	movs	r0, r6
 800ca64:	f7f4 fba0 	bl	80011a8 <__aeabi_i2f>
 800ca68:	21fe      	movs	r1, #254	@ 0xfe
 800ca6a:	1c06      	adds	r6, r0, #0
 800ca6c:	0589      	lsls	r1, r1, #22
 800ca6e:	1c28      	adds	r0, r5, #0
 800ca70:	f7f3 fd00 	bl	8000474 <__aeabi_fcmplt>
 800ca74:	2800      	cmp	r0, #0
 800ca76:	d024      	beq.n	800cac2 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa2>
 800ca78:	4921      	ldr	r1, [pc, #132]	@ (800cb00 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xe0>)
 800ca7a:	1c28      	adds	r0, r5, #0
 800ca7c:	f7f4 f892 	bl	8000ba4 <__aeabi_fmul>
 800ca80:	4920      	ldr	r1, [pc, #128]	@ (800cb04 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xe4>)
 800ca82:	f7f4 f9cd 	bl	8000e20 <__aeabi_fsub>
 800ca86:	1c29      	adds	r1, r5, #0
 800ca88:	1c04      	adds	r4, r0, #0
 800ca8a:	1c28      	adds	r0, r5, #0
 800ca8c:	f7f4 f88a 	bl	8000ba4 <__aeabi_fmul>
 800ca90:	1c01      	adds	r1, r0, #0
 800ca92:	1c20      	adds	r0, r4, #0
 800ca94:	f7f4 f886 	bl	8000ba4 <__aeabi_fmul>
 800ca98:	1c39      	adds	r1, r7, #0
 800ca9a:	f7f4 f883 	bl	8000ba4 <__aeabi_fmul>
 800ca9e:	1c31      	adds	r1, r6, #0
 800caa0:	f7f3 fd10 	bl	80004c4 <__aeabi_fadd>
 800caa4:	2100      	movs	r1, #0
 800caa6:	1c04      	adds	r4, r0, #0
 800caa8:	f7f3 fcf8 	bl	800049c <__aeabi_fcmpgt>
 800caac:	21fc      	movs	r1, #252	@ 0xfc
 800caae:	0589      	lsls	r1, r1, #22
 800cab0:	2800      	cmp	r0, #0
 800cab2:	d020      	beq.n	800caf6 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xd6>
 800cab4:	1c20      	adds	r0, r4, #0
 800cab6:	f7f3 fd05 	bl	80004c4 <__aeabi_fadd>
 800caba:	f7f4 fb55 	bl	8001168 <__aeabi_f2iz>
 800cabe:	b200      	sxth	r0, r0
 800cac0:	e7b8      	b.n	800ca34 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x14>
 800cac2:	2180      	movs	r1, #128	@ 0x80
 800cac4:	1c28      	adds	r0, r5, #0
 800cac6:	05c9      	lsls	r1, r1, #23
 800cac8:	f7f4 f9aa 	bl	8000e20 <__aeabi_fsub>
 800cacc:	490c      	ldr	r1, [pc, #48]	@ (800cb00 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xe0>)
 800cace:	1c04      	adds	r4, r0, #0
 800cad0:	f7f4 f868 	bl	8000ba4 <__aeabi_fmul>
 800cad4:	490b      	ldr	r1, [pc, #44]	@ (800cb04 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xe4>)
 800cad6:	f7f3 fcf5 	bl	80004c4 <__aeabi_fadd>
 800cada:	1c21      	adds	r1, r4, #0
 800cadc:	1c05      	adds	r5, r0, #0
 800cade:	1c20      	adds	r0, r4, #0
 800cae0:	f7f4 f860 	bl	8000ba4 <__aeabi_fmul>
 800cae4:	1c01      	adds	r1, r0, #0
 800cae6:	1c28      	adds	r0, r5, #0
 800cae8:	f7f4 f85c 	bl	8000ba4 <__aeabi_fmul>
 800caec:	2180      	movs	r1, #128	@ 0x80
 800caee:	05c9      	lsls	r1, r1, #23
 800caf0:	f7f3 fce8 	bl	80004c4 <__aeabi_fadd>
 800caf4:	e7d0      	b.n	800ca98 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x78>
 800caf6:	1c20      	adds	r0, r4, #0
 800caf8:	f7f4 f992 	bl	8000e20 <__aeabi_fsub>
 800cafc:	e7dd      	b.n	800caba <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x9a>
 800cafe:	46c0      	nop			@ (mov r8, r8)
 800cb00:	406612ff 	.word	0x406612ff
 800cb04:	402612ff 	.word	0x402612ff

0800cb08 <_ZN8touchgfx15EasingEquations11cubicEaseInEtsst>:
 800cb08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb0a:	000c      	movs	r4, r1
 800cb0c:	0016      	movs	r6, r2
 800cb0e:	001d      	movs	r5, r3
 800cb10:	4298      	cmp	r0, r3
 800cb12:	d201      	bcs.n	800cb18 <_ZN8touchgfx15EasingEquations11cubicEaseInEtsst+0x10>
 800cb14:	2b00      	cmp	r3, #0
 800cb16:	d102      	bne.n	800cb1e <_ZN8touchgfx15EasingEquations11cubicEaseInEtsst+0x16>
 800cb18:	19a4      	adds	r4, r4, r6
 800cb1a:	b220      	sxth	r0, r4
 800cb1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb1e:	f7f4 fb8f 	bl	8001240 <__aeabi_ui2f>
 800cb22:	1c07      	adds	r7, r0, #0
 800cb24:	0028      	movs	r0, r5
 800cb26:	f7f4 fb3f 	bl	80011a8 <__aeabi_i2f>
 800cb2a:	1c01      	adds	r1, r0, #0
 800cb2c:	1c38      	adds	r0, r7, #0
 800cb2e:	f7f3 fe53 	bl	80007d8 <__aeabi_fdiv>
 800cb32:	1c05      	adds	r5, r0, #0
 800cb34:	0030      	movs	r0, r6
 800cb36:	f7f4 fb37 	bl	80011a8 <__aeabi_i2f>
 800cb3a:	1c29      	adds	r1, r5, #0
 800cb3c:	f7f4 f832 	bl	8000ba4 <__aeabi_fmul>
 800cb40:	1c29      	adds	r1, r5, #0
 800cb42:	f7f4 f82f 	bl	8000ba4 <__aeabi_fmul>
 800cb46:	1c29      	adds	r1, r5, #0
 800cb48:	f7f4 f82c 	bl	8000ba4 <__aeabi_fmul>
 800cb4c:	1c05      	adds	r5, r0, #0
 800cb4e:	0020      	movs	r0, r4
 800cb50:	f7f4 fb2a 	bl	80011a8 <__aeabi_i2f>
 800cb54:	1c01      	adds	r1, r0, #0
 800cb56:	1c28      	adds	r0, r5, #0
 800cb58:	f7f3 fcb4 	bl	80004c4 <__aeabi_fadd>
 800cb5c:	2100      	movs	r1, #0
 800cb5e:	1c04      	adds	r4, r0, #0
 800cb60:	f7f3 fc9c 	bl	800049c <__aeabi_fcmpgt>
 800cb64:	21fc      	movs	r1, #252	@ 0xfc
 800cb66:	0589      	lsls	r1, r1, #22
 800cb68:	2800      	cmp	r0, #0
 800cb6a:	d006      	beq.n	800cb7a <_ZN8touchgfx15EasingEquations11cubicEaseInEtsst+0x72>
 800cb6c:	1c20      	adds	r0, r4, #0
 800cb6e:	f7f3 fca9 	bl	80004c4 <__aeabi_fadd>
 800cb72:	f7f4 faf9 	bl	8001168 <__aeabi_f2iz>
 800cb76:	b200      	sxth	r0, r0
 800cb78:	e7d0      	b.n	800cb1c <_ZN8touchgfx15EasingEquations11cubicEaseInEtsst+0x14>
 800cb7a:	1c20      	adds	r0, r4, #0
 800cb7c:	f7f4 f950 	bl	8000e20 <__aeabi_fsub>
 800cb80:	e7f7      	b.n	800cb72 <_ZN8touchgfx15EasingEquations11cubicEaseInEtsst+0x6a>

0800cb82 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800cb82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb84:	000c      	movs	r4, r1
 800cb86:	0016      	movs	r6, r2
 800cb88:	001d      	movs	r5, r3
 800cb8a:	4298      	cmp	r0, r3
 800cb8c:	d201      	bcs.n	800cb92 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x10>
 800cb8e:	2b00      	cmp	r3, #0
 800cb90:	d102      	bne.n	800cb98 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x16>
 800cb92:	19a4      	adds	r4, r4, r6
 800cb94:	b220      	sxth	r0, r4
 800cb96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb98:	f7f4 fb52 	bl	8001240 <__aeabi_ui2f>
 800cb9c:	1c07      	adds	r7, r0, #0
 800cb9e:	0028      	movs	r0, r5
 800cba0:	f7f4 fb02 	bl	80011a8 <__aeabi_i2f>
 800cba4:	1c01      	adds	r1, r0, #0
 800cba6:	1c38      	adds	r0, r7, #0
 800cba8:	f7f3 fe16 	bl	80007d8 <__aeabi_fdiv>
 800cbac:	21fe      	movs	r1, #254	@ 0xfe
 800cbae:	0589      	lsls	r1, r1, #22
 800cbb0:	f7f4 f936 	bl	8000e20 <__aeabi_fsub>
 800cbb4:	1c05      	adds	r5, r0, #0
 800cbb6:	1c01      	adds	r1, r0, #0
 800cbb8:	f7f3 fff4 	bl	8000ba4 <__aeabi_fmul>
 800cbbc:	1c29      	adds	r1, r5, #0
 800cbbe:	f7f3 fff1 	bl	8000ba4 <__aeabi_fmul>
 800cbc2:	21fe      	movs	r1, #254	@ 0xfe
 800cbc4:	0589      	lsls	r1, r1, #22
 800cbc6:	f7f3 fc7d 	bl	80004c4 <__aeabi_fadd>
 800cbca:	1c05      	adds	r5, r0, #0
 800cbcc:	0030      	movs	r0, r6
 800cbce:	f7f4 faeb 	bl	80011a8 <__aeabi_i2f>
 800cbd2:	1c01      	adds	r1, r0, #0
 800cbd4:	1c28      	adds	r0, r5, #0
 800cbd6:	f7f3 ffe5 	bl	8000ba4 <__aeabi_fmul>
 800cbda:	1c05      	adds	r5, r0, #0
 800cbdc:	0020      	movs	r0, r4
 800cbde:	f7f4 fae3 	bl	80011a8 <__aeabi_i2f>
 800cbe2:	1c01      	adds	r1, r0, #0
 800cbe4:	1c28      	adds	r0, r5, #0
 800cbe6:	f7f3 fc6d 	bl	80004c4 <__aeabi_fadd>
 800cbea:	2100      	movs	r1, #0
 800cbec:	1c04      	adds	r4, r0, #0
 800cbee:	f7f3 fc55 	bl	800049c <__aeabi_fcmpgt>
 800cbf2:	21fc      	movs	r1, #252	@ 0xfc
 800cbf4:	0589      	lsls	r1, r1, #22
 800cbf6:	2800      	cmp	r0, #0
 800cbf8:	d006      	beq.n	800cc08 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x86>
 800cbfa:	1c20      	adds	r0, r4, #0
 800cbfc:	f7f3 fc62 	bl	80004c4 <__aeabi_fadd>
 800cc00:	f7f4 fab2 	bl	8001168 <__aeabi_f2iz>
 800cc04:	b200      	sxth	r0, r0
 800cc06:	e7c6      	b.n	800cb96 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x14>
 800cc08:	1c20      	adds	r0, r4, #0
 800cc0a:	f7f4 f909 	bl	8000e20 <__aeabi_fsub>
 800cc0e:	e7f7      	b.n	800cc00 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x7e>

0800cc10 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst>:
 800cc10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc12:	000e      	movs	r6, r1
 800cc14:	0014      	movs	r4, r2
 800cc16:	001d      	movs	r5, r3
 800cc18:	4298      	cmp	r0, r3
 800cc1a:	d201      	bcs.n	800cc20 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x10>
 800cc1c:	2b00      	cmp	r3, #0
 800cc1e:	d102      	bne.n	800cc26 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x16>
 800cc20:	1934      	adds	r4, r6, r4
 800cc22:	b220      	sxth	r0, r4
 800cc24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cc26:	f7f4 fb0b 	bl	8001240 <__aeabi_ui2f>
 800cc2a:	1c01      	adds	r1, r0, #0
 800cc2c:	f7f3 fc4a 	bl	80004c4 <__aeabi_fadd>
 800cc30:	1c07      	adds	r7, r0, #0
 800cc32:	0028      	movs	r0, r5
 800cc34:	f7f4 fab8 	bl	80011a8 <__aeabi_i2f>
 800cc38:	1c01      	adds	r1, r0, #0
 800cc3a:	1c38      	adds	r0, r7, #0
 800cc3c:	f7f3 fdcc 	bl	80007d8 <__aeabi_fdiv>
 800cc40:	1c05      	adds	r5, r0, #0
 800cc42:	0020      	movs	r0, r4
 800cc44:	f7f4 fab0 	bl	80011a8 <__aeabi_i2f>
 800cc48:	21fc      	movs	r1, #252	@ 0xfc
 800cc4a:	0589      	lsls	r1, r1, #22
 800cc4c:	f7f3 ffaa 	bl	8000ba4 <__aeabi_fmul>
 800cc50:	1c07      	adds	r7, r0, #0
 800cc52:	0030      	movs	r0, r6
 800cc54:	f7f4 faa8 	bl	80011a8 <__aeabi_i2f>
 800cc58:	21fe      	movs	r1, #254	@ 0xfe
 800cc5a:	1c06      	adds	r6, r0, #0
 800cc5c:	0589      	lsls	r1, r1, #22
 800cc5e:	1c28      	adds	r0, r5, #0
 800cc60:	f7f3 fc08 	bl	8000474 <__aeabi_fcmplt>
 800cc64:	2800      	cmp	r0, #0
 800cc66:	d01b      	beq.n	800cca0 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x90>
 800cc68:	1c39      	adds	r1, r7, #0
 800cc6a:	1c28      	adds	r0, r5, #0
 800cc6c:	f7f3 ff9a 	bl	8000ba4 <__aeabi_fmul>
 800cc70:	1c29      	adds	r1, r5, #0
 800cc72:	f7f3 ff97 	bl	8000ba4 <__aeabi_fmul>
 800cc76:	1c29      	adds	r1, r5, #0
 800cc78:	f7f3 ff94 	bl	8000ba4 <__aeabi_fmul>
 800cc7c:	1c31      	adds	r1, r6, #0
 800cc7e:	f7f3 fc21 	bl	80004c4 <__aeabi_fadd>
 800cc82:	2100      	movs	r1, #0
 800cc84:	1c04      	adds	r4, r0, #0
 800cc86:	f7f3 fc09 	bl	800049c <__aeabi_fcmpgt>
 800cc8a:	21fc      	movs	r1, #252	@ 0xfc
 800cc8c:	0589      	lsls	r1, r1, #22
 800cc8e:	2800      	cmp	r0, #0
 800cc90:	d018      	beq.n	800ccc4 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0xb4>
 800cc92:	1c20      	adds	r0, r4, #0
 800cc94:	f7f3 fc16 	bl	80004c4 <__aeabi_fadd>
 800cc98:	f7f4 fa66 	bl	8001168 <__aeabi_f2iz>
 800cc9c:	b200      	sxth	r0, r0
 800cc9e:	e7c1      	b.n	800cc24 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x14>
 800cca0:	2180      	movs	r1, #128	@ 0x80
 800cca2:	1c28      	adds	r0, r5, #0
 800cca4:	05c9      	lsls	r1, r1, #23
 800cca6:	f7f4 f8bb 	bl	8000e20 <__aeabi_fsub>
 800ccaa:	1c04      	adds	r4, r0, #0
 800ccac:	1c01      	adds	r1, r0, #0
 800ccae:	f7f3 ff79 	bl	8000ba4 <__aeabi_fmul>
 800ccb2:	1c21      	adds	r1, r4, #0
 800ccb4:	f7f3 ff76 	bl	8000ba4 <__aeabi_fmul>
 800ccb8:	2180      	movs	r1, #128	@ 0x80
 800ccba:	05c9      	lsls	r1, r1, #23
 800ccbc:	f7f3 fc02 	bl	80004c4 <__aeabi_fadd>
 800ccc0:	1c39      	adds	r1, r7, #0
 800ccc2:	e7d9      	b.n	800cc78 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x68>
 800ccc4:	1c20      	adds	r0, r4, #0
 800ccc6:	f7f4 f8ab 	bl	8000e20 <__aeabi_fsub>
 800ccca:	e7e5      	b.n	800cc98 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x88>

0800cccc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 800cccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ccce:	0006      	movs	r6, r0
 800ccd0:	000d      	movs	r5, r1
 800ccd2:	0010      	movs	r0, r2
 800ccd4:	001c      	movs	r4, r3
 800ccd6:	429e      	cmp	r6, r3
 800ccd8:	d201      	bcs.n	800ccde <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x12>
 800ccda:	2b00      	cmp	r3, #0
 800ccdc:	d102      	bne.n	800cce4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x18>
 800ccde:	1828      	adds	r0, r5, r0
 800cce0:	b200      	sxth	r0, r0
 800cce2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cce4:	f7f4 fa60 	bl	80011a8 <__aeabi_i2f>
 800cce8:	1c07      	adds	r7, r0, #0
 800ccea:	0030      	movs	r0, r6
 800ccec:	f7f4 faa8 	bl	8001240 <__aeabi_ui2f>
 800ccf0:	1c01      	adds	r1, r0, #0
 800ccf2:	1c38      	adds	r0, r7, #0
 800ccf4:	f7f3 ff56 	bl	8000ba4 <__aeabi_fmul>
 800ccf8:	1c06      	adds	r6, r0, #0
 800ccfa:	0020      	movs	r0, r4
 800ccfc:	f7f4 fa54 	bl	80011a8 <__aeabi_i2f>
 800cd00:	1c01      	adds	r1, r0, #0
 800cd02:	1c30      	adds	r0, r6, #0
 800cd04:	f7f3 fd68 	bl	80007d8 <__aeabi_fdiv>
 800cd08:	1c04      	adds	r4, r0, #0
 800cd0a:	0028      	movs	r0, r5
 800cd0c:	f7f4 fa4c 	bl	80011a8 <__aeabi_i2f>
 800cd10:	1c01      	adds	r1, r0, #0
 800cd12:	1c20      	adds	r0, r4, #0
 800cd14:	f7f3 fbd6 	bl	80004c4 <__aeabi_fadd>
 800cd18:	2100      	movs	r1, #0
 800cd1a:	1c04      	adds	r4, r0, #0
 800cd1c:	f7f3 fbbe 	bl	800049c <__aeabi_fcmpgt>
 800cd20:	21fc      	movs	r1, #252	@ 0xfc
 800cd22:	0589      	lsls	r1, r1, #22
 800cd24:	2800      	cmp	r0, #0
 800cd26:	d005      	beq.n	800cd34 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x68>
 800cd28:	1c20      	adds	r0, r4, #0
 800cd2a:	f7f3 fbcb 	bl	80004c4 <__aeabi_fadd>
 800cd2e:	f7f4 fa1b 	bl	8001168 <__aeabi_f2iz>
 800cd32:	e7d5      	b.n	800cce0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x14>
 800cd34:	1c20      	adds	r0, r4, #0
 800cd36:	f7f4 f873 	bl	8000e20 <__aeabi_fsub>
 800cd3a:	e7f8      	b.n	800cd2e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x62>

0800cd3c <_ZN8touchgfx15EasingEquations13sineEaseInOutEtsst>:
 800cd3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd3e:	000e      	movs	r6, r1
 800cd40:	0014      	movs	r4, r2
 800cd42:	001d      	movs	r5, r3
 800cd44:	4298      	cmp	r0, r3
 800cd46:	d201      	bcs.n	800cd4c <_ZN8touchgfx15EasingEquations13sineEaseInOutEtsst+0x10>
 800cd48:	2b00      	cmp	r3, #0
 800cd4a:	d102      	bne.n	800cd52 <_ZN8touchgfx15EasingEquations13sineEaseInOutEtsst+0x16>
 800cd4c:	1934      	adds	r4, r6, r4
 800cd4e:	b220      	sxth	r0, r4
 800cd50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd52:	f7f4 fa75 	bl	8001240 <__aeabi_ui2f>
 800cd56:	491d      	ldr	r1, [pc, #116]	@ (800cdcc <_ZN8touchgfx15EasingEquations13sineEaseInOutEtsst+0x90>)
 800cd58:	f7f3 ff24 	bl	8000ba4 <__aeabi_fmul>
 800cd5c:	1c07      	adds	r7, r0, #0
 800cd5e:	0028      	movs	r0, r5
 800cd60:	f7f4 fa22 	bl	80011a8 <__aeabi_i2f>
 800cd64:	1c01      	adds	r1, r0, #0
 800cd66:	1c38      	adds	r0, r7, #0
 800cd68:	f7f3 fd36 	bl	80007d8 <__aeabi_fdiv>
 800cd6c:	f004 fef2 	bl	8011b54 <cosf>
 800cd70:	1c05      	adds	r5, r0, #0
 800cd72:	4260      	negs	r0, r4
 800cd74:	f7f4 fa18 	bl	80011a8 <__aeabi_i2f>
 800cd78:	21fc      	movs	r1, #252	@ 0xfc
 800cd7a:	0589      	lsls	r1, r1, #22
 800cd7c:	f7f3 ff12 	bl	8000ba4 <__aeabi_fmul>
 800cd80:	21fe      	movs	r1, #254	@ 0xfe
 800cd82:	1c04      	adds	r4, r0, #0
 800cd84:	0589      	lsls	r1, r1, #22
 800cd86:	1c28      	adds	r0, r5, #0
 800cd88:	f7f4 f84a 	bl	8000e20 <__aeabi_fsub>
 800cd8c:	1c01      	adds	r1, r0, #0
 800cd8e:	1c20      	adds	r0, r4, #0
 800cd90:	f7f3 ff08 	bl	8000ba4 <__aeabi_fmul>
 800cd94:	1c04      	adds	r4, r0, #0
 800cd96:	0030      	movs	r0, r6
 800cd98:	f7f4 fa06 	bl	80011a8 <__aeabi_i2f>
 800cd9c:	1c01      	adds	r1, r0, #0
 800cd9e:	1c20      	adds	r0, r4, #0
 800cda0:	f7f3 fb90 	bl	80004c4 <__aeabi_fadd>
 800cda4:	2100      	movs	r1, #0
 800cda6:	1c04      	adds	r4, r0, #0
 800cda8:	f7f3 fb78 	bl	800049c <__aeabi_fcmpgt>
 800cdac:	21fc      	movs	r1, #252	@ 0xfc
 800cdae:	0589      	lsls	r1, r1, #22
 800cdb0:	2800      	cmp	r0, #0
 800cdb2:	d006      	beq.n	800cdc2 <_ZN8touchgfx15EasingEquations13sineEaseInOutEtsst+0x86>
 800cdb4:	1c20      	adds	r0, r4, #0
 800cdb6:	f7f3 fb85 	bl	80004c4 <__aeabi_fadd>
 800cdba:	f7f4 f9d5 	bl	8001168 <__aeabi_f2iz>
 800cdbe:	b200      	sxth	r0, r0
 800cdc0:	e7c6      	b.n	800cd50 <_ZN8touchgfx15EasingEquations13sineEaseInOutEtsst+0x14>
 800cdc2:	1c20      	adds	r0, r4, #0
 800cdc4:	f7f4 f82c 	bl	8000e20 <__aeabi_fsub>
 800cdc8:	e7f7      	b.n	800cdba <_ZN8touchgfx15EasingEquations13sineEaseInOutEtsst+0x7e>
 800cdca:	46c0      	nop			@ (mov r8, r8)
 800cdcc:	40490fdb 	.word	0x40490fdb

0800cdd0 <_ZN8touchgfx12TextProviderC1Ev>:
 800cdd0:	2302      	movs	r3, #2
 800cdd2:	b570      	push	{r4, r5, r6, lr}
 800cdd4:	7403      	strb	r3, [r0, #16]
 800cdd6:	0003      	movs	r3, r0
 800cdd8:	2500      	movs	r5, #0
 800cdda:	0004      	movs	r4, r0
 800cddc:	333a      	adds	r3, #58	@ 0x3a
 800cdde:	6005      	str	r5, [r0, #0]
 800cde0:	6045      	str	r5, [r0, #4]
 800cde2:	6145      	str	r5, [r0, #20]
 800cde4:	7605      	strb	r5, [r0, #24]
 800cde6:	83c5      	strh	r5, [r0, #30]
 800cde8:	8405      	strh	r5, [r0, #32]
 800cdea:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800cdec:	8705      	strh	r5, [r0, #56]	@ 0x38
 800cdee:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800cdf0:	0029      	movs	r1, r5
 800cdf2:	80dd      	strh	r5, [r3, #6]
 800cdf4:	220e      	movs	r2, #14
 800cdf6:	6445      	str	r5, [r0, #68]	@ 0x44
 800cdf8:	6485      	str	r5, [r0, #72]	@ 0x48
 800cdfa:	304c      	adds	r0, #76	@ 0x4c
 800cdfc:	f005 fecf 	bl	8012b9e <memset>
 800ce00:	0023      	movs	r3, r4
 800ce02:	2201      	movs	r2, #1
 800ce04:	335a      	adds	r3, #90	@ 0x5a
 800ce06:	801d      	strh	r5, [r3, #0]
 800ce08:	805d      	strh	r5, [r3, #2]
 800ce0a:	809d      	strh	r5, [r3, #4]
 800ce0c:	71dd      	strb	r5, [r3, #7]
 800ce0e:	0020      	movs	r0, r4
 800ce10:	719a      	strb	r2, [r3, #6]
 800ce12:	f7f7 fb4d 	bl	80044b0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800ce16:	0020      	movs	r0, r4
 800ce18:	bd70      	pop	{r4, r5, r6, pc}

0800ce1a <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800ce1a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800ce1c:	3022      	adds	r0, #34	@ 0x22
 800ce1e:	005b      	lsls	r3, r3, #1
 800ce20:	5a18      	ldrh	r0, [r3, r0]
 800ce22:	4243      	negs	r3, r0
 800ce24:	4158      	adcs	r0, r3
 800ce26:	b2c0      	uxtb	r0, r0
 800ce28:	4770      	bx	lr

0800ce2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800ce2a:	2100      	movs	r1, #0
 800ce2c:	2201      	movs	r2, #1
 800ce2e:	b530      	push	{r4, r5, lr}
 800ce30:	6843      	ldr	r3, [r0, #4]
 800ce32:	2b00      	cmp	r3, #0
 800ce34:	d103      	bne.n	800ce3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x14>
 800ce36:	6803      	ldr	r3, [r0, #0]
 800ce38:	2b00      	cmp	r3, #0
 800ce3a:	d026      	beq.n	800ce8a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x60>
 800ce3c:	6043      	str	r3, [r0, #4]
 800ce3e:	7e03      	ldrb	r3, [r0, #24]
 800ce40:	2b00      	cmp	r3, #0
 800ce42:	d00a      	beq.n	800ce5a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x30>
 800ce44:	6943      	ldr	r3, [r0, #20]
 800ce46:	2b00      	cmp	r3, #0
 800ce48:	d006      	beq.n	800ce58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x2e>
 800ce4a:	881c      	ldrh	r4, [r3, #0]
 800ce4c:	2c00      	cmp	r4, #0
 800ce4e:	d003      	beq.n	800ce58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x2e>
 800ce50:	1c9a      	adds	r2, r3, #2
 800ce52:	6142      	str	r2, [r0, #20]
 800ce54:	8818      	ldrh	r0, [r3, #0]
 800ce56:	bd30      	pop	{r4, r5, pc}
 800ce58:	7601      	strb	r1, [r0, #24]
 800ce5a:	6843      	ldr	r3, [r0, #4]
 800ce5c:	881d      	ldrh	r5, [r3, #0]
 800ce5e:	2d00      	cmp	r5, #0
 800ce60:	d013      	beq.n	800ce8a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x60>
 800ce62:	1c9c      	adds	r4, r3, #2
 800ce64:	6044      	str	r4, [r0, #4]
 800ce66:	2d02      	cmp	r5, #2
 800ce68:	d1f4      	bne.n	800ce54 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x2a>
 800ce6a:	7c03      	ldrb	r3, [r0, #16]
 800ce6c:	2b01      	cmp	r3, #1
 800ce6e:	d8df      	bhi.n	800ce30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ce70:	1c5c      	adds	r4, r3, #1
 800ce72:	3302      	adds	r3, #2
 800ce74:	7404      	strb	r4, [r0, #16]
 800ce76:	009b      	lsls	r3, r3, #2
 800ce78:	581b      	ldr	r3, [r3, r0]
 800ce7a:	6143      	str	r3, [r0, #20]
 800ce7c:	2b00      	cmp	r3, #0
 800ce7e:	d0d7      	beq.n	800ce30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ce80:	881b      	ldrh	r3, [r3, #0]
 800ce82:	2b00      	cmp	r3, #0
 800ce84:	d0d4      	beq.n	800ce30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ce86:	7602      	strb	r2, [r0, #24]
 800ce88:	e7d2      	b.n	800ce30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ce8a:	2000      	movs	r0, #0
 800ce8c:	e7e3      	b.n	800ce56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x2c>

0800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800ce8e:	6001      	str	r1, [r0, #0]
 800ce90:	2100      	movs	r1, #0
 800ce92:	b510      	push	{r4, lr}
 800ce94:	6041      	str	r1, [r0, #4]
 800ce96:	6814      	ldr	r4, [r2, #0]
 800ce98:	6084      	str	r4, [r0, #8]
 800ce9a:	6852      	ldr	r2, [r2, #4]
 800ce9c:	7401      	strb	r1, [r0, #16]
 800ce9e:	60c2      	str	r2, [r0, #12]
 800cea0:	0002      	movs	r2, r0
 800cea2:	321a      	adds	r2, #26
 800cea4:	6141      	str	r1, [r0, #20]
 800cea6:	7601      	strb	r1, [r0, #24]
 800cea8:	8701      	strh	r1, [r0, #56]	@ 0x38
 800ceaa:	8401      	strh	r1, [r0, #32]
 800ceac:	84d1      	strh	r1, [r2, #38]	@ 0x26
 800ceae:	6443      	str	r3, [r0, #68]	@ 0x44
 800ceb0:	9b02      	ldr	r3, [sp, #8]
 800ceb2:	6483      	str	r3, [r0, #72]	@ 0x48
 800ceb4:	f7f7 fafc 	bl	80044b0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800ceb8:	bd10      	pop	{r4, pc}

0800ceba <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800ceba:	b408      	push	{r3}
 800cebc:	b510      	push	{r4, lr}
 800cebe:	b085      	sub	sp, #20
 800cec0:	0013      	movs	r3, r2
 800cec2:	aa07      	add	r2, sp, #28
 800cec4:	ca10      	ldmia	r2!, {r4}
 800cec6:	9400      	str	r4, [sp, #0]
 800cec8:	9203      	str	r2, [sp, #12]
 800ceca:	f7ff ffe0 	bl	800ce8e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800cece:	b005      	add	sp, #20
 800ced0:	bc10      	pop	{r4}
 800ced2:	bc08      	pop	{r3}
 800ced4:	b001      	add	sp, #4
 800ced6:	4718      	bx	r3

0800ced8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800ced8:	b570      	push	{r4, r5, r6, lr}
 800ceda:	0005      	movs	r5, r0
 800cedc:	2900      	cmp	r1, #0
 800cede:	d010      	beq.n	800cf02 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x2a>
 800cee0:	0004      	movs	r4, r0
 800cee2:	344c      	adds	r4, #76	@ 0x4c
 800cee4:	220e      	movs	r2, #14
 800cee6:	0020      	movs	r0, r4
 800cee8:	f005 ff45 	bl	8012d76 <memcpy>
 800ceec:	2280      	movs	r2, #128	@ 0x80
 800ceee:	0021      	movs	r1, r4
 800cef0:	7b63      	ldrb	r3, [r4, #13]
 800cef2:	0052      	lsls	r2, r2, #1
 800cef4:	015b      	lsls	r3, r3, #5
 800cef6:	401a      	ands	r2, r3
 800cef8:	79a3      	ldrb	r3, [r4, #6]
 800cefa:	3555      	adds	r5, #85	@ 0x55
 800cefc:	4313      	orrs	r3, r2
 800cefe:	425b      	negs	r3, r3
 800cf00:	702b      	strb	r3, [r5, #0]
 800cf02:	0008      	movs	r0, r1
 800cf04:	bd70      	pop	{r4, r5, r6, pc}

0800cf06 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800cf06:	b570      	push	{r4, r5, r6, lr}
 800cf08:	000c      	movs	r4, r1
 800cf0a:	6811      	ldr	r1, [r2, #0]
 800cf0c:	0010      	movs	r0, r2
 800cf0e:	68cd      	ldr	r5, [r1, #12]
 800cf10:	0019      	movs	r1, r3
 800cf12:	47a8      	blx	r5
 800cf14:	2800      	cmp	r0, #0
 800cf16:	d100      	bne.n	800cf1a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt+0x14>
 800cf18:	0020      	movs	r0, r4
 800cf1a:	bd70      	pop	{r4, r5, r6, pc}

0800cf1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800cf1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cf1e:	0005      	movs	r5, r0
 800cf20:	000e      	movs	r6, r1
 800cf22:	1e14      	subs	r4, r2, #0
 800cf24:	d107      	bne.n	800cf36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800cf26:	0003      	movs	r3, r0
 800cf28:	355e      	adds	r5, #94	@ 0x5e
 800cf2a:	335a      	adds	r3, #90	@ 0x5a
 800cf2c:	801a      	strh	r2, [r3, #0]
 800cf2e:	805a      	strh	r2, [r3, #2]
 800cf30:	802a      	strh	r2, [r5, #0]
 800cf32:	0020      	movs	r0, r4
 800cf34:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800cf36:	8893      	ldrh	r3, [r2, #4]
 800cf38:	7b51      	ldrb	r1, [r2, #13]
 800cf3a:	2280      	movs	r2, #128	@ 0x80
 800cf3c:	0108      	lsls	r0, r1, #4
 800cf3e:	0052      	lsls	r2, r2, #1
 800cf40:	4010      	ands	r0, r2
 800cf42:	79e2      	ldrb	r2, [r4, #7]
 800cf44:	4302      	orrs	r2, r0
 800cf46:	486d      	ldr	r0, [pc, #436]	@ (800d0fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e0>)
 800cf48:	b297      	uxth	r7, r2
 800cf4a:	1818      	adds	r0, r3, r0
 800cf4c:	b280      	uxth	r0, r0
 800cf4e:	9700      	str	r7, [sp, #0]
 800cf50:	281d      	cmp	r0, #29
 800cf52:	d85f      	bhi.n	800d014 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf8>
 800cf54:	10d2      	asrs	r2, r2, #3
 800cf56:	9201      	str	r2, [sp, #4]
 800cf58:	2201      	movs	r2, #1
 800cf5a:	4082      	lsls	r2, r0
 800cf5c:	4868      	ldr	r0, [pc, #416]	@ (800d100 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e4>)
 800cf5e:	4202      	tst	r2, r0
 800cf60:	d11e      	bne.n	800cfa0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x84>
 800cf62:	20e0      	movs	r0, #224	@ 0xe0
 800cf64:	0080      	lsls	r0, r0, #2
 800cf66:	4202      	tst	r2, r0
 800cf68:	d054      	beq.n	800d014 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf8>
 800cf6a:	002e      	movs	r6, r5
 800cf6c:	364c      	adds	r6, #76	@ 0x4c
 800cf6e:	0021      	movs	r1, r4
 800cf70:	220e      	movs	r2, #14
 800cf72:	0030      	movs	r0, r6
 800cf74:	f005 feff 	bl	8012d76 <memcpy>
 800cf78:	466b      	mov	r3, sp
 800cf7a:	355c      	adds	r5, #92	@ 0x5c
 800cf7c:	882a      	ldrh	r2, [r5, #0]
 800cf7e:	8899      	ldrh	r1, [r3, #4]
 800cf80:	7b70      	ldrb	r0, [r6, #13]
 800cf82:	1a53      	subs	r3, r2, r1
 800cf84:	b29b      	uxth	r3, r3
 800cf86:	7233      	strb	r3, [r6, #8]
 800cf88:	0034      	movs	r4, r6
 800cf8a:	2660      	movs	r6, #96	@ 0x60
 800cf8c:	10db      	asrs	r3, r3, #3
 800cf8e:	43b0      	bics	r0, r6
 800cf90:	4033      	ands	r3, r6
 800cf92:	4303      	orrs	r3, r0
 800cf94:	7363      	strb	r3, [r4, #13]
 800cf96:	9b00      	ldr	r3, [sp, #0]
 800cf98:	1ad2      	subs	r2, r2, r3
 800cf9a:	1a52      	subs	r2, r2, r1
 800cf9c:	802a      	strh	r2, [r5, #0]
 800cf9e:	e7c8      	b.n	800cf32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cfa0:	002f      	movs	r7, r5
 800cfa2:	374c      	adds	r7, #76	@ 0x4c
 800cfa4:	0021      	movs	r1, r4
 800cfa6:	220e      	movs	r2, #14
 800cfa8:	0038      	movs	r0, r7
 800cfaa:	f005 fee4 	bl	8012d76 <memcpy>
 800cfae:	002a      	movs	r2, r5
 800cfb0:	002c      	movs	r4, r5
 800cfb2:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 800cfb4:	3222      	adds	r2, #34	@ 0x22
 800cfb6:	005b      	lsls	r3, r3, #1
 800cfb8:	4852      	ldr	r0, [pc, #328]	@ (800d104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>)
 800cfba:	5a99      	ldrh	r1, [r3, r2]
 800cfbc:	345a      	adds	r4, #90	@ 0x5a
 800cfbe:	4281      	cmp	r1, r0
 800cfc0:	d110      	bne.n	800cfe4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xc8>
 800cfc2:	6833      	ldr	r3, [r6, #0]
 800cfc4:	0030      	movs	r0, r6
 800cfc6:	68db      	ldr	r3, [r3, #12]
 800cfc8:	4798      	blx	r3
 800cfca:	2380      	movs	r3, #128	@ 0x80
 800cfcc:	7b41      	ldrb	r1, [r0, #13]
 800cfce:	005b      	lsls	r3, r3, #1
 800cfd0:	00ca      	lsls	r2, r1, #3
 800cfd2:	401a      	ands	r2, r3
 800cfd4:	7a03      	ldrb	r3, [r0, #8]
 800cfd6:	4313      	orrs	r3, r2
 800cfd8:	064a      	lsls	r2, r1, #25
 800cfda:	d502      	bpl.n	800cfe2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xc6>
 800cfdc:	4a4a      	ldr	r2, [pc, #296]	@ (800d108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>)
 800cfde:	189b      	adds	r3, r3, r2
 800cfe0:	b21b      	sxth	r3, r3
 800cfe2:	8023      	strh	r3, [r4, #0]
 800cfe4:	2160      	movs	r1, #96	@ 0x60
 800cfe6:	8823      	ldrh	r3, [r4, #0]
 800cfe8:	9a00      	ldr	r2, [sp, #0]
 800cfea:	18d3      	adds	r3, r2, r3
 800cfec:	9a01      	ldr	r2, [sp, #4]
 800cfee:	189b      	adds	r3, r3, r2
 800cff0:	b29b      	uxth	r3, r3
 800cff2:	8023      	strh	r3, [r4, #0]
 800cff4:	7b7a      	ldrb	r2, [r7, #13]
 800cff6:	723b      	strb	r3, [r7, #8]
 800cff8:	10db      	asrs	r3, r3, #3
 800cffa:	438a      	bics	r2, r1
 800cffc:	400b      	ands	r3, r1
 800cffe:	4313      	orrs	r3, r2
 800d000:	002a      	movs	r2, r5
 800d002:	737b      	strb	r3, [r7, #13]
 800d004:	3255      	adds	r2, #85	@ 0x55
 800d006:	355e      	adds	r5, #94	@ 0x5e
 800d008:	8829      	ldrh	r1, [r5, #0]
 800d00a:	7813      	ldrb	r3, [r2, #0]
 800d00c:	003c      	movs	r4, r7
 800d00e:	1a5b      	subs	r3, r3, r1
 800d010:	7013      	strb	r3, [r2, #0]
 800d012:	e78e      	b.n	800cf32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d014:	2004      	movs	r0, #4
 800d016:	001f      	movs	r7, r3
 800d018:	4387      	bics	r7, r0
 800d01a:	0038      	movs	r0, r7
 800d01c:	002f      	movs	r7, r5
 800d01e:	4a3b      	ldr	r2, [pc, #236]	@ (800d10c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f0>)
 800d020:	375a      	adds	r7, #90	@ 0x5a
 800d022:	4290      	cmp	r0, r2
 800d024:	d002      	beq.n	800d02c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x110>
 800d026:	4a3a      	ldr	r2, [pc, #232]	@ (800d110 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>)
 800d028:	4293      	cmp	r3, r2
 800d02a:	d12f      	bne.n	800d08c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x170>
 800d02c:	3b01      	subs	r3, #1
 800d02e:	0032      	movs	r2, r6
 800d030:	b29b      	uxth	r3, r3
 800d032:	0021      	movs	r1, r4
 800d034:	0028      	movs	r0, r5
 800d036:	f7ff ff66 	bl	800cf06 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d03a:	2280      	movs	r2, #128	@ 0x80
 800d03c:	7b46      	ldrb	r6, [r0, #13]
 800d03e:	0052      	lsls	r2, r2, #1
 800d040:	00f1      	lsls	r1, r6, #3
 800d042:	7a03      	ldrb	r3, [r0, #8]
 800d044:	4011      	ands	r1, r2
 800d046:	430b      	orrs	r3, r1
 800d048:	0671      	lsls	r1, r6, #25
 800d04a:	d502      	bpl.n	800d052 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x136>
 800d04c:	492e      	ldr	r1, [pc, #184]	@ (800d108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>)
 800d04e:	185b      	adds	r3, r3, r1
 800d050:	b21b      	sxth	r3, r3
 800d052:	803b      	strh	r3, [r7, #0]
 800d054:	7b63      	ldrb	r3, [r4, #13]
 800d056:	005b      	lsls	r3, r3, #1
 800d058:	401a      	ands	r2, r3
 800d05a:	7aa3      	ldrb	r3, [r4, #10]
 800d05c:	4313      	orrs	r3, r2
 800d05e:	109a      	asrs	r2, r3, #2
 800d060:	115b      	asrs	r3, r3, #5
 800d062:	18d3      	adds	r3, r2, r3
 800d064:	002a      	movs	r2, r5
 800d066:	325e      	adds	r2, #94	@ 0x5e
 800d068:	8013      	strh	r3, [r2, #0]
 800d06a:	2280      	movs	r2, #128	@ 0x80
 800d06c:	7b61      	ldrb	r1, [r4, #13]
 800d06e:	0052      	lsls	r2, r2, #1
 800d070:	00cb      	lsls	r3, r1, #3
 800d072:	401a      	ands	r2, r3
 800d074:	7a23      	ldrb	r3, [r4, #8]
 800d076:	4313      	orrs	r3, r2
 800d078:	064a      	lsls	r2, r1, #25
 800d07a:	d502      	bpl.n	800d082 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x166>
 800d07c:	4a22      	ldr	r2, [pc, #136]	@ (800d108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>)
 800d07e:	189b      	adds	r3, r3, r2
 800d080:	b21b      	sxth	r3, r3
 800d082:	9a00      	ldr	r2, [sp, #0]
 800d084:	355c      	adds	r5, #92	@ 0x5c
 800d086:	1a9b      	subs	r3, r3, r2
 800d088:	802b      	strh	r3, [r5, #0]
 800d08a:	e752      	b.n	800cf32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d08c:	2080      	movs	r0, #128	@ 0x80
 800d08e:	00ca      	lsls	r2, r1, #3
 800d090:	0040      	lsls	r0, r0, #1
 800d092:	4010      	ands	r0, r2
 800d094:	7a22      	ldrb	r2, [r4, #8]
 800d096:	4302      	orrs	r2, r0
 800d098:	0649      	lsls	r1, r1, #25
 800d09a:	d502      	bpl.n	800d0a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800d09c:	491a      	ldr	r1, [pc, #104]	@ (800d108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>)
 800d09e:	1852      	adds	r2, r2, r1
 800d0a0:	b212      	sxth	r2, r2
 800d0a2:	803a      	strh	r2, [r7, #0]
 800d0a4:	2110      	movs	r1, #16
 800d0a6:	0018      	movs	r0, r3
 800d0a8:	002f      	movs	r7, r5
 800d0aa:	4a1a      	ldr	r2, [pc, #104]	@ (800d114 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f8>)
 800d0ac:	4388      	bics	r0, r1
 800d0ae:	375e      	adds	r7, #94	@ 0x5e
 800d0b0:	4919      	ldr	r1, [pc, #100]	@ (800d118 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1fc>)
 800d0b2:	4290      	cmp	r0, r2
 800d0b4:	d001      	beq.n	800d0ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x19e>
 800d0b6:	428b      	cmp	r3, r1
 800d0b8:	d11d      	bne.n	800d0f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1da>
 800d0ba:	2080      	movs	r0, #128	@ 0x80
 800d0bc:	7b62      	ldrb	r2, [r4, #13]
 800d0be:	0040      	lsls	r0, r0, #1
 800d0c0:	0052      	lsls	r2, r2, #1
 800d0c2:	4002      	ands	r2, r0
 800d0c4:	7aa0      	ldrb	r0, [r4, #10]
 800d0c6:	4310      	orrs	r0, r2
 800d0c8:	9001      	str	r0, [sp, #4]
 800d0ca:	428b      	cmp	r3, r1
 800d0cc:	d011      	beq.n	800d0f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1d6>
 800d0ce:	3b01      	subs	r3, #1
 800d0d0:	b29b      	uxth	r3, r3
 800d0d2:	0032      	movs	r2, r6
 800d0d4:	0021      	movs	r1, r4
 800d0d6:	0028      	movs	r0, r5
 800d0d8:	f7ff ff15 	bl	800cf06 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d0dc:	2280      	movs	r2, #128	@ 0x80
 800d0de:	7b43      	ldrb	r3, [r0, #13]
 800d0e0:	0052      	lsls	r2, r2, #1
 800d0e2:	005b      	lsls	r3, r3, #1
 800d0e4:	4013      	ands	r3, r2
 800d0e6:	7a82      	ldrb	r2, [r0, #10]
 800d0e8:	4313      	orrs	r3, r2
 800d0ea:	9a01      	ldr	r2, [sp, #4]
 800d0ec:	1ad3      	subs	r3, r2, r3
 800d0ee:	803b      	strh	r3, [r7, #0]
 800d0f0:	e7bb      	b.n	800d06a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
 800d0f2:	4b0a      	ldr	r3, [pc, #40]	@ (800d11c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x200>)
 800d0f4:	e7ed      	b.n	800d0d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 800d0f6:	2300      	movs	r3, #0
 800d0f8:	e7f9      	b.n	800d0ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1d2>
 800d0fa:	46c0      	nop			@ (mov r8, r8)
 800d0fc:	fffff1cf 	.word	0xfffff1cf
 800d100:	3fc00079 	.word	0x3fc00079
 800d104:	00000e33 	.word	0x00000e33
 800d108:	fffffe00 	.word	0xfffffe00
 800d10c:	00000e1b 	.word	0x00000e1b
 800d110:	00000e1d 	.word	0x00000e1d
 800d114:	00000e09 	.word	0x00000e09
 800d118:	00000e13 	.word	0x00000e13
 800d11c:	00000e0c 	.word	0x00000e0c

0800d120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800d120:	0003      	movs	r3, r0
 800d122:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d124:	0006      	movs	r6, r0
 800d126:	b085      	sub	sp, #20
 800d128:	335c      	adds	r3, #92	@ 0x5c
 800d12a:	0005      	movs	r5, r0
 800d12c:	0014      	movs	r4, r2
 800d12e:	365a      	adds	r6, #90	@ 0x5a
 800d130:	9301      	str	r3, [sp, #4]
 800d132:	2a00      	cmp	r2, #0
 800d134:	d106      	bne.n	800d144 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x24>
 800d136:	4bb5      	ldr	r3, [pc, #724]	@ (800d40c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2ec>)
 800d138:	9a01      	ldr	r2, [sp, #4]
 800d13a:	8033      	strh	r3, [r6, #0]
 800d13c:	355e      	adds	r5, #94	@ 0x5e
 800d13e:	8013      	strh	r3, [r2, #0]
 800d140:	802b      	strh	r3, [r5, #0]
 800d142:	e048      	b.n	800d1d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb6>
 800d144:	2080      	movs	r0, #128	@ 0x80
 800d146:	8893      	ldrh	r3, [r2, #4]
 800d148:	7b52      	ldrb	r2, [r2, #13]
 800d14a:	0040      	lsls	r0, r0, #1
 800d14c:	0111      	lsls	r1, r2, #4
 800d14e:	4001      	ands	r1, r0
 800d150:	79e0      	ldrb	r0, [r4, #7]
 800d152:	4308      	orrs	r0, r1
 800d154:	2101      	movs	r1, #1
 800d156:	9000      	str	r0, [sp, #0]
 800d158:	9103      	str	r1, [sp, #12]
 800d15a:	2804      	cmp	r0, #4
 800d15c:	dd01      	ble.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x42>
 800d15e:	0881      	lsrs	r1, r0, #2
 800d160:	9103      	str	r1, [sp, #12]
 800d162:	21dd      	movs	r1, #221	@ 0xdd
 800d164:	00c9      	lsls	r1, r1, #3
 800d166:	428b      	cmp	r3, r1
 800d168:	d900      	bls.n	800d16c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x4c>
 800d16a:	e0a1      	b.n	800d2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800d16c:	49a8      	ldr	r1, [pc, #672]	@ (800d410 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2f0>)
 800d16e:	428b      	cmp	r3, r1
 800d170:	d212      	bcs.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d172:	49a8      	ldr	r1, [pc, #672]	@ (800d414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2f4>)
 800d174:	428b      	cmp	r3, r1
 800d176:	d85b      	bhi.n	800d230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x110>
 800d178:	49a7      	ldr	r1, [pc, #668]	@ (800d418 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2f8>)
 800d17a:	428b      	cmp	r3, r1
 800d17c:	d20c      	bcs.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d17e:	49a7      	ldr	r1, [pc, #668]	@ (800d41c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>)
 800d180:	428b      	cmp	r3, r1
 800d182:	d84e      	bhi.n	800d222 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x102>
 800d184:	49a6      	ldr	r1, [pc, #664]	@ (800d420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>)
 800d186:	428b      	cmp	r3, r1
 800d188:	d206      	bcs.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d18a:	49a6      	ldr	r1, [pc, #664]	@ (800d424 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x304>)
 800d18c:	428b      	cmp	r3, r1
 800d18e:	d02b      	beq.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d190:	d824      	bhi.n	800d1dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbc>
 800d192:	390a      	subs	r1, #10
 800d194:	428b      	cmp	r3, r1
 800d196:	d365      	bcc.n	800d264 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x144>
 800d198:	2100      	movs	r1, #0
 800d19a:	5e73      	ldrsh	r3, [r6, r1]
 800d19c:	9302      	str	r3, [sp, #8]
 800d19e:	0019      	movs	r1, r3
 800d1a0:	4b9a      	ldr	r3, [pc, #616]	@ (800d40c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2ec>)
 800d1a2:	4299      	cmp	r1, r3
 800d1a4:	d000      	beq.n	800d1a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x88>
 800d1a6:	e0ba      	b.n	800d31e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1fe>
 800d1a8:	9b01      	ldr	r3, [sp, #4]
 800d1aa:	2100      	movs	r1, #0
 800d1ac:	5e5b      	ldrsh	r3, [r3, r1]
 800d1ae:	9902      	ldr	r1, [sp, #8]
 800d1b0:	428b      	cmp	r3, r1
 800d1b2:	d000      	beq.n	800d1b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x96>
 800d1b4:	e0b3      	b.n	800d31e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1fe>
 800d1b6:	2180      	movs	r1, #128	@ 0x80
 800d1b8:	00d3      	lsls	r3, r2, #3
 800d1ba:	0049      	lsls	r1, r1, #1
 800d1bc:	4019      	ands	r1, r3
 800d1be:	7a23      	ldrb	r3, [r4, #8]
 800d1c0:	430b      	orrs	r3, r1
 800d1c2:	0652      	lsls	r2, r2, #25
 800d1c4:	d502      	bpl.n	800d1cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xac>
 800d1c6:	4a98      	ldr	r2, [pc, #608]	@ (800d428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x308>)
 800d1c8:	189b      	adds	r3, r3, r2
 800d1ca:	b21b      	sxth	r3, r3
 800d1cc:	9a00      	ldr	r2, [sp, #0]
 800d1ce:	8033      	strh	r3, [r6, #0]
 800d1d0:	1a9b      	subs	r3, r3, r2
 800d1d2:	9a01      	ldr	r2, [sp, #4]
 800d1d4:	8013      	strh	r3, [r2, #0]
 800d1d6:	0020      	movs	r0, r4
 800d1d8:	b005      	add	sp, #20
 800d1da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d1dc:	4993      	ldr	r1, [pc, #588]	@ (800d42c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x30c>)
 800d1de:	428b      	cmp	r3, r1
 800d1e0:	d340      	bcc.n	800d264 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x144>
 800d1e2:	4993      	ldr	r1, [pc, #588]	@ (800d430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x310>)
 800d1e4:	428b      	cmp	r3, r1
 800d1e6:	d9d7      	bls.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d1e8:	9b01      	ldr	r3, [sp, #4]
 800d1ea:	4f88      	ldr	r7, [pc, #544]	@ (800d40c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2ec>)
 800d1ec:	2100      	movs	r1, #0
 800d1ee:	5e5b      	ldrsh	r3, [r3, r1]
 800d1f0:	9302      	str	r3, [sp, #8]
 800d1f2:	2100      	movs	r1, #0
 800d1f4:	5e73      	ldrsh	r3, [r6, r1]
 800d1f6:	42bb      	cmp	r3, r7
 800d1f8:	d000      	beq.n	800d1fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xdc>
 800d1fa:	e0ce      	b.n	800d39a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x27a>
 800d1fc:	9902      	ldr	r1, [sp, #8]
 800d1fe:	4299      	cmp	r1, r3
 800d200:	d000      	beq.n	800d204 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xe4>
 800d202:	e0ca      	b.n	800d39a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x27a>
 800d204:	2180      	movs	r1, #128	@ 0x80
 800d206:	00d3      	lsls	r3, r2, #3
 800d208:	0049      	lsls	r1, r1, #1
 800d20a:	4019      	ands	r1, r3
 800d20c:	7a23      	ldrb	r3, [r4, #8]
 800d20e:	430b      	orrs	r3, r1
 800d210:	0652      	lsls	r2, r2, #25
 800d212:	d502      	bpl.n	800d21a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfa>
 800d214:	4a84      	ldr	r2, [pc, #528]	@ (800d428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x308>)
 800d216:	189b      	adds	r3, r3, r2
 800d218:	b21b      	sxth	r3, r3
 800d21a:	9a00      	ldr	r2, [sp, #0]
 800d21c:	355c      	adds	r5, #92	@ 0x5c
 800d21e:	1a9b      	subs	r3, r3, r2
 800d220:	e78e      	b.n	800d140 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x20>
 800d222:	4984      	ldr	r1, [pc, #528]	@ (800d434 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x314>)
 800d224:	428b      	cmp	r3, r1
 800d226:	d8df      	bhi.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d228:	4983      	ldr	r1, [pc, #524]	@ (800d438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x318>)
 800d22a:	428b      	cmp	r3, r1
 800d22c:	d3dc      	bcc.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d22e:	e7b3      	b.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d230:	4982      	ldr	r1, [pc, #520]	@ (800d43c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x31c>)
 800d232:	428b      	cmp	r3, r1
 800d234:	d0b0      	beq.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d236:	d80b      	bhi.n	800d250 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x130>
 800d238:	4981      	ldr	r1, [pc, #516]	@ (800d440 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>)
 800d23a:	428b      	cmp	r3, r1
 800d23c:	d801      	bhi.n	800d242 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x122>
 800d23e:	4981      	ldr	r1, [pc, #516]	@ (800d444 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>)
 800d240:	e7f3      	b.n	800d22a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x10a>
 800d242:	4981      	ldr	r1, [pc, #516]	@ (800d448 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x328>)
 800d244:	428b      	cmp	r3, r1
 800d246:	d0cf      	beq.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d248:	3111      	adds	r1, #17
 800d24a:	428b      	cmp	r3, r1
 800d24c:	d10a      	bne.n	800d264 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x144>
 800d24e:	e7a3      	b.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d250:	497e      	ldr	r1, [pc, #504]	@ (800d44c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x32c>)
 800d252:	428b      	cmp	r3, r1
 800d254:	d827      	bhi.n	800d2a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x186>
 800d256:	497e      	ldr	r1, [pc, #504]	@ (800d450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x330>)
 800d258:	428b      	cmp	r3, r1
 800d25a:	d29d      	bcs.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d25c:	497d      	ldr	r1, [pc, #500]	@ (800d454 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x334>)
 800d25e:	185b      	adds	r3, r3, r1
 800d260:	2b05      	cmp	r3, #5
 800d262:	d999      	bls.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d264:	2180      	movs	r1, #128	@ 0x80
 800d266:	00d3      	lsls	r3, r2, #3
 800d268:	0049      	lsls	r1, r1, #1
 800d26a:	4019      	ands	r1, r3
 800d26c:	7a23      	ldrb	r3, [r4, #8]
 800d26e:	430b      	orrs	r3, r1
 800d270:	0652      	lsls	r2, r2, #25
 800d272:	d502      	bpl.n	800d27a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x15a>
 800d274:	4a6c      	ldr	r2, [pc, #432]	@ (800d428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x308>)
 800d276:	189b      	adds	r3, r3, r2
 800d278:	b21b      	sxth	r3, r3
 800d27a:	9a00      	ldr	r2, [sp, #0]
 800d27c:	8033      	strh	r3, [r6, #0]
 800d27e:	1a9b      	subs	r3, r3, r2
 800d280:	9a01      	ldr	r2, [sp, #4]
 800d282:	2105      	movs	r1, #5
 800d284:	8013      	strh	r3, [r2, #0]
 800d286:	2380      	movs	r3, #128	@ 0x80
 800d288:	7b60      	ldrb	r0, [r4, #13]
 800d28a:	005b      	lsls	r3, r3, #1
 800d28c:	0140      	lsls	r0, r0, #5
 800d28e:	4003      	ands	r3, r0
 800d290:	79a0      	ldrb	r0, [r4, #6]
 800d292:	355e      	adds	r5, #94	@ 0x5e
 800d294:	4318      	orrs	r0, r3
 800d296:	0040      	lsls	r0, r0, #1
 800d298:	f7f2 ffee 	bl	8000278 <__divsi3>
 800d29c:	2309      	movs	r3, #9
 800d29e:	56e3      	ldrsb	r3, [r4, r3]
 800d2a0:	1818      	adds	r0, r3, r0
 800d2a2:	8028      	strh	r0, [r5, #0]
 800d2a4:	e797      	b.n	800d1d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb6>
 800d2a6:	496c      	ldr	r1, [pc, #432]	@ (800d458 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x338>)
 800d2a8:	428b      	cmp	r3, r1
 800d2aa:	d09d      	beq.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d2ac:	496b      	ldr	r1, [pc, #428]	@ (800d45c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x33c>)
 800d2ae:	e7cc      	b.n	800d24a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800d2b0:	496b      	ldr	r1, [pc, #428]	@ (800d460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x340>)
 800d2b2:	428b      	cmp	r3, r1
 800d2b4:	d820      	bhi.n	800d2f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d8>
 800d2b6:	496b      	ldr	r1, [pc, #428]	@ (800d464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x344>)
 800d2b8:	428b      	cmp	r3, r1
 800d2ba:	d295      	bcs.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d2bc:	496a      	ldr	r1, [pc, #424]	@ (800d468 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x348>)
 800d2be:	428b      	cmp	r3, r1
 800d2c0:	d810      	bhi.n	800d2e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c4>
 800d2c2:	496a      	ldr	r1, [pc, #424]	@ (800d46c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x34c>)
 800d2c4:	428b      	cmp	r3, r1
 800d2c6:	d300      	bcc.n	800d2ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1aa>
 800d2c8:	e766      	b.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d2ca:	4969      	ldr	r1, [pc, #420]	@ (800d470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x350>)
 800d2cc:	428b      	cmp	r3, r1
 800d2ce:	d807      	bhi.n	800d2e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c0>
 800d2d0:	4968      	ldr	r1, [pc, #416]	@ (800d474 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x354>)
 800d2d2:	428b      	cmp	r3, r1
 800d2d4:	d300      	bcc.n	800d2d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1b8>
 800d2d6:	e75f      	b.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d2d8:	4967      	ldr	r1, [pc, #412]	@ (800d478 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x358>)
 800d2da:	428b      	cmp	r3, r1
 800d2dc:	d084      	beq.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d2de:	e7c1      	b.n	800d264 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x144>
 800d2e0:	4966      	ldr	r1, [pc, #408]	@ (800d47c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x35c>)
 800d2e2:	e7fa      	b.n	800d2da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ba>
 800d2e4:	4966      	ldr	r1, [pc, #408]	@ (800d480 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x360>)
 800d2e6:	428b      	cmp	r3, r1
 800d2e8:	d801      	bhi.n	800d2ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800d2ea:	4966      	ldr	r1, [pc, #408]	@ (800d484 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x364>)
 800d2ec:	e79d      	b.n	800d22a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x10a>
 800d2ee:	4966      	ldr	r1, [pc, #408]	@ (800d488 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x368>)
 800d2f0:	428b      	cmp	r3, r1
 800d2f2:	d000      	beq.n	800d2f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800d2f4:	e750      	b.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d2f6:	e777      	b.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d2f8:	4964      	ldr	r1, [pc, #400]	@ (800d48c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x36c>)
 800d2fa:	428b      	cmp	r3, r1
 800d2fc:	d100      	bne.n	800d300 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e0>
 800d2fe:	e773      	b.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d300:	d801      	bhi.n	800d306 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800d302:	4963      	ldr	r1, [pc, #396]	@ (800d490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x370>)
 800d304:	e7f4      	b.n	800d2f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800d306:	4963      	ldr	r1, [pc, #396]	@ (800d494 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x374>)
 800d308:	428b      	cmp	r3, r1
 800d30a:	d804      	bhi.n	800d316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f6>
 800d30c:	4962      	ldr	r1, [pc, #392]	@ (800d498 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x378>)
 800d30e:	428b      	cmp	r3, r1
 800d310:	d200      	bcs.n	800d314 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f4>
 800d312:	e741      	b.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d314:	e768      	b.n	800d1e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc8>
 800d316:	4961      	ldr	r1, [pc, #388]	@ (800d49c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x37c>)
 800d318:	428b      	cmp	r3, r1
 800d31a:	d8a3      	bhi.n	800d264 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x144>
 800d31c:	e73c      	b.n	800d198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x78>
 800d31e:	002f      	movs	r7, r5
 800d320:	374c      	adds	r7, #76	@ 0x4c
 800d322:	0021      	movs	r1, r4
 800d324:	220e      	movs	r2, #14
 800d326:	0038      	movs	r0, r7
 800d328:	f005 fd25 	bl	8012d76 <memcpy>
 800d32c:	002b      	movs	r3, r5
 800d32e:	335e      	adds	r3, #94	@ 0x5e
 800d330:	2100      	movs	r1, #0
 800d332:	5e59      	ldrsh	r1, [r3, r1]
 800d334:	4b35      	ldr	r3, [pc, #212]	@ (800d40c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2ec>)
 800d336:	4299      	cmp	r1, r3
 800d338:	d00b      	beq.n	800d352 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x232>
 800d33a:	2280      	movs	r2, #128	@ 0x80
 800d33c:	7b63      	ldrb	r3, [r4, #13]
 800d33e:	0052      	lsls	r2, r2, #1
 800d340:	015b      	lsls	r3, r3, #5
 800d342:	401a      	ands	r2, r3
 800d344:	79a3      	ldrb	r3, [r4, #6]
 800d346:	4313      	orrs	r3, r2
 800d348:	002a      	movs	r2, r5
 800d34a:	105b      	asrs	r3, r3, #1
 800d34c:	1acb      	subs	r3, r1, r3
 800d34e:	3255      	adds	r2, #85	@ 0x55
 800d350:	7013      	strb	r3, [r2, #0]
 800d352:	466b      	mov	r3, sp
 800d354:	881a      	ldrh	r2, [r3, #0]
 800d356:	9b02      	ldr	r3, [sp, #8]
 800d358:	0019      	movs	r1, r3
 800d35a:	4b2c      	ldr	r3, [pc, #176]	@ (800d40c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2ec>)
 800d35c:	4299      	cmp	r1, r3
 800d35e:	d009      	beq.n	800d374 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x254>
 800d360:	2060      	movs	r0, #96	@ 0x60
 800d362:	1853      	adds	r3, r2, r1
 800d364:	b29b      	uxth	r3, r3
 800d366:	7b79      	ldrb	r1, [r7, #13]
 800d368:	723b      	strb	r3, [r7, #8]
 800d36a:	10db      	asrs	r3, r3, #3
 800d36c:	4381      	bics	r1, r0
 800d36e:	4003      	ands	r3, r0
 800d370:	430b      	orrs	r3, r1
 800d372:	737b      	strb	r3, [r7, #13]
 800d374:	2180      	movs	r1, #128	@ 0x80
 800d376:	7b78      	ldrb	r0, [r7, #13]
 800d378:	0049      	lsls	r1, r1, #1
 800d37a:	00c3      	lsls	r3, r0, #3
 800d37c:	4019      	ands	r1, r3
 800d37e:	7a3b      	ldrb	r3, [r7, #8]
 800d380:	430b      	orrs	r3, r1
 800d382:	0641      	lsls	r1, r0, #25
 800d384:	d502      	bpl.n	800d38c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x26c>
 800d386:	4928      	ldr	r1, [pc, #160]	@ (800d428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x308>)
 800d388:	185b      	adds	r3, r3, r1
 800d38a:	b21b      	sxth	r3, r3
 800d38c:	8033      	strh	r3, [r6, #0]
 800d38e:	1a9a      	subs	r2, r3, r2
 800d390:	9b01      	ldr	r3, [sp, #4]
 800d392:	801a      	strh	r2, [r3, #0]
 800d394:	002c      	movs	r4, r5
 800d396:	344c      	adds	r4, #76	@ 0x4c
 800d398:	e71d      	b.n	800d1d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb6>
 800d39a:	002e      	movs	r6, r5
 800d39c:	364c      	adds	r6, #76	@ 0x4c
 800d39e:	0021      	movs	r1, r4
 800d3a0:	220e      	movs	r2, #14
 800d3a2:	0030      	movs	r0, r6
 800d3a4:	f005 fce7 	bl	8012d76 <memcpy>
 800d3a8:	002b      	movs	r3, r5
 800d3aa:	335e      	adds	r3, #94	@ 0x5e
 800d3ac:	2100      	movs	r1, #0
 800d3ae:	5e59      	ldrsh	r1, [r3, r1]
 800d3b0:	42b9      	cmp	r1, r7
 800d3b2:	d00b      	beq.n	800d3cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2ac>
 800d3b4:	2280      	movs	r2, #128	@ 0x80
 800d3b6:	7b63      	ldrb	r3, [r4, #13]
 800d3b8:	0052      	lsls	r2, r2, #1
 800d3ba:	015b      	lsls	r3, r3, #5
 800d3bc:	401a      	ands	r2, r3
 800d3be:	79a3      	ldrb	r3, [r4, #6]
 800d3c0:	4313      	orrs	r3, r2
 800d3c2:	002a      	movs	r2, r5
 800d3c4:	105b      	asrs	r3, r3, #1
 800d3c6:	1acb      	subs	r3, r1, r3
 800d3c8:	3255      	adds	r2, #85	@ 0x55
 800d3ca:	7013      	strb	r3, [r2, #0]
 800d3cc:	9b02      	ldr	r3, [sp, #8]
 800d3ce:	42bb      	cmp	r3, r7
 800d3d0:	d00a      	beq.n	800d3e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c8>
 800d3d2:	9a03      	ldr	r2, [sp, #12]
 800d3d4:	7b71      	ldrb	r1, [r6, #13]
 800d3d6:	1a9b      	subs	r3, r3, r2
 800d3d8:	2260      	movs	r2, #96	@ 0x60
 800d3da:	b29b      	uxth	r3, r3
 800d3dc:	7233      	strb	r3, [r6, #8]
 800d3de:	10db      	asrs	r3, r3, #3
 800d3e0:	4013      	ands	r3, r2
 800d3e2:	4391      	bics	r1, r2
 800d3e4:	430b      	orrs	r3, r1
 800d3e6:	7373      	strb	r3, [r6, #13]
 800d3e8:	2280      	movs	r2, #128	@ 0x80
 800d3ea:	7b71      	ldrb	r1, [r6, #13]
 800d3ec:	0052      	lsls	r2, r2, #1
 800d3ee:	00cb      	lsls	r3, r1, #3
 800d3f0:	401a      	ands	r2, r3
 800d3f2:	7a33      	ldrb	r3, [r6, #8]
 800d3f4:	4313      	orrs	r3, r2
 800d3f6:	064a      	lsls	r2, r1, #25
 800d3f8:	d502      	bpl.n	800d400 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2e0>
 800d3fa:	4a0b      	ldr	r2, [pc, #44]	@ (800d428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x308>)
 800d3fc:	189b      	adds	r3, r3, r2
 800d3fe:	b21b      	sxth	r3, r3
 800d400:	9a00      	ldr	r2, [sp, #0]
 800d402:	1a9b      	subs	r3, r3, r2
 800d404:	9a01      	ldr	r2, [sp, #4]
 800d406:	8013      	strh	r3, [r2, #0]
 800d408:	e7c4      	b.n	800d394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x274>
 800d40a:	46c0      	nop			@ (mov r8, r8)
 800d40c:	ffff8000 	.word	0xffff8000
 800d410:	000006e7 	.word	0x000006e7
 800d414:	0000065b 	.word	0x0000065b
 800d418:	00000657 	.word	0x00000657
 800d41c:	0000064f 	.word	0x0000064f
 800d420:	0000064e 	.word	0x0000064e
 800d424:	0000061a 	.word	0x0000061a
 800d428:	fffffe00 	.word	0xfffffe00
 800d42c:	0000064b 	.word	0x0000064b
 800d430:	0000064c 	.word	0x0000064c
 800d434:	00000654 	.word	0x00000654
 800d438:	00000651 	.word	0x00000651
 800d43c:	00000674 	.word	0x00000674
 800d440:	0000065e 	.word	0x0000065e
 800d444:	0000065d 	.word	0x0000065d
 800d448:	0000065f 	.word	0x0000065f
 800d44c:	000006e2 	.word	0x000006e2
 800d450:	000006df 	.word	0x000006df
 800d454:	fffff92a 	.word	0xfffff92a
 800d458:	000006e3 	.word	0x000006e3
 800d45c:	000006e4 	.word	0x000006e4
 800d460:	000008ef 	.word	0x000008ef
 800d464:	000008ed 	.word	0x000008ed
 800d468:	000008e5 	.word	0x000008e5
 800d46c:	000008e4 	.word	0x000008e4
 800d470:	000006ec 	.word	0x000006ec
 800d474:	000006eb 	.word	0x000006eb
 800d478:	000006ea 	.word	0x000006ea
 800d47c:	000006ed 	.word	0x000006ed
 800d480:	000008e8 	.word	0x000008e8
 800d484:	000008e7 	.word	0x000008e7
 800d488:	000008e9 	.word	0x000008e9
 800d48c:	000008f6 	.word	0x000008f6
 800d490:	000008f2 	.word	0x000008f2
 800d494:	000008fa 	.word	0x000008fa
 800d498:	000008f9 	.word	0x000008f9
 800d49c:	000008fe 	.word	0x000008fe

0800d4a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d4a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d4a2:	0017      	movs	r7, r2
 800d4a4:	0002      	movs	r2, r0
 800d4a6:	001d      	movs	r5, r3
 800d4a8:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800d4aa:	3222      	adds	r2, #34	@ 0x22
 800d4ac:	005b      	lsls	r3, r3, #1
 800d4ae:	5a9b      	ldrh	r3, [r3, r2]
 800d4b0:	0006      	movs	r6, r0
 800d4b2:	9300      	str	r3, [sp, #0]
 800d4b4:	f7f6 ffb8 	bl	8004428 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d4b8:	1e04      	subs	r4, r0, #0
 800d4ba:	d102      	bne.n	800d4c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x22>
 800d4bc:	6028      	str	r0, [r5, #0]
 800d4be:	0020      	movs	r0, r4
 800d4c0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800d4c2:	683b      	ldr	r3, [r7, #0]
 800d4c4:	0001      	movs	r1, r0
 800d4c6:	68db      	ldr	r3, [r3, #12]
 800d4c8:	0038      	movs	r0, r7
 800d4ca:	4798      	blx	r3
 800d4cc:	9b00      	ldr	r3, [sp, #0]
 800d4ce:	0002      	movs	r2, r0
 800d4d0:	6028      	str	r0, [r5, #0]
 800d4d2:	481a      	ldr	r0, [pc, #104]	@ (800d53c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x9c>)
 800d4d4:	491a      	ldr	r1, [pc, #104]	@ (800d540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa0>)
 800d4d6:	181b      	adds	r3, r3, r0
 800d4d8:	0030      	movs	r0, r6
 800d4da:	b29b      	uxth	r3, r3
 800d4dc:	3061      	adds	r0, #97	@ 0x61
 800d4de:	9001      	str	r0, [sp, #4]
 800d4e0:	428b      	cmp	r3, r1
 800d4e2:	d815      	bhi.n	800d510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x70>
 800d4e4:	9b00      	ldr	r3, [sp, #0]
 800d4e6:	0039      	movs	r1, r7
 800d4e8:	0030      	movs	r0, r6
 800d4ea:	f7ff fe19 	bl	800d120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d4ee:	6028      	str	r0, [r5, #0]
 800d4f0:	6829      	ldr	r1, [r5, #0]
 800d4f2:	1e0b      	subs	r3, r1, #0
 800d4f4:	d009      	beq.n	800d50a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6a>
 800d4f6:	2280      	movs	r2, #128	@ 0x80
 800d4f8:	7b4b      	ldrb	r3, [r1, #13]
 800d4fa:	0052      	lsls	r2, r2, #1
 800d4fc:	005b      	lsls	r3, r3, #1
 800d4fe:	401a      	ands	r2, r3
 800d500:	7a8b      	ldrb	r3, [r1, #10]
 800d502:	4313      	orrs	r3, r2
 800d504:	425a      	negs	r2, r3
 800d506:	4153      	adcs	r3, r2
 800d508:	b2db      	uxtb	r3, r3
 800d50a:	9a01      	ldr	r2, [sp, #4]
 800d50c:	7013      	strb	r3, [r2, #0]
 800d50e:	e7d6      	b.n	800d4be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800d510:	4b0c      	ldr	r3, [pc, #48]	@ (800d544 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800d512:	18e3      	adds	r3, r4, r3
 800d514:	b29b      	uxth	r3, r3
 800d516:	2b7f      	cmp	r3, #127	@ 0x7f
 800d518:	d804      	bhi.n	800d524 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x84>
 800d51a:	0039      	movs	r1, r7
 800d51c:	0030      	movs	r0, r6
 800d51e:	f7ff fcfd 	bl	800cf1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d522:	e7e4      	b.n	800d4ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800d524:	9b01      	ldr	r3, [sp, #4]
 800d526:	781b      	ldrb	r3, [r3, #0]
 800d528:	2b00      	cmp	r3, #0
 800d52a:	d0e1      	beq.n	800d4f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x50>
 800d52c:	4b06      	ldr	r3, [pc, #24]	@ (800d548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800d52e:	429c      	cmp	r4, r3
 800d530:	d1de      	bne.n	800d4f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x50>
 800d532:	0011      	movs	r1, r2
 800d534:	0030      	movs	r0, r6
 800d536:	f7ff fccf 	bl	800ced8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d53a:	e7d8      	b.n	800d4ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800d53c:	fffffa00 	.word	0xfffffa00
 800d540:	000002ff 	.word	0x000002ff
 800d544:	fffff200 	.word	0xfffff200
 800d548:	00000902 	.word	0x00000902

0800d54c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800d54c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d54e:	9200      	str	r2, [sp, #0]
 800d550:	0002      	movs	r2, r0
 800d552:	001c      	movs	r4, r3
 800d554:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800d556:	3222      	adds	r2, #34	@ 0x22
 800d558:	005b      	lsls	r3, r3, #1
 800d55a:	5a9b      	ldrh	r3, [r3, r2]
 800d55c:	0005      	movs	r5, r0
 800d55e:	9301      	str	r3, [sp, #4]
 800d560:	f7f6 ff62 	bl	8004428 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d564:	1e07      	subs	r7, r0, #0
 800d566:	d102      	bne.n	800d56e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x22>
 800d568:	6020      	str	r0, [r4, #0]
 800d56a:	0038      	movs	r0, r7
 800d56c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800d56e:	9b00      	ldr	r3, [sp, #0]
 800d570:	0001      	movs	r1, r0
 800d572:	681b      	ldr	r3, [r3, #0]
 800d574:	9a08      	ldr	r2, [sp, #32]
 800d576:	689b      	ldr	r3, [r3, #8]
 800d578:	9800      	ldr	r0, [sp, #0]
 800d57a:	001e      	movs	r6, r3
 800d57c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d57e:	47b0      	blx	r6
 800d580:	9b01      	ldr	r3, [sp, #4]
 800d582:	0002      	movs	r2, r0
 800d584:	6020      	str	r0, [r4, #0]
 800d586:	4819      	ldr	r0, [pc, #100]	@ (800d5ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa0>)
 800d588:	4919      	ldr	r1, [pc, #100]	@ (800d5f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa4>)
 800d58a:	181b      	adds	r3, r3, r0
 800d58c:	0028      	movs	r0, r5
 800d58e:	b29b      	uxth	r3, r3
 800d590:	3061      	adds	r0, #97	@ 0x61
 800d592:	0006      	movs	r6, r0
 800d594:	428b      	cmp	r3, r1
 800d596:	d814      	bhi.n	800d5c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x76>
 800d598:	9b01      	ldr	r3, [sp, #4]
 800d59a:	9900      	ldr	r1, [sp, #0]
 800d59c:	0028      	movs	r0, r5
 800d59e:	f7ff fdbf 	bl	800d120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d5a2:	6020      	str	r0, [r4, #0]
 800d5a4:	6821      	ldr	r1, [r4, #0]
 800d5a6:	1e0b      	subs	r3, r1, #0
 800d5a8:	d009      	beq.n	800d5be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x72>
 800d5aa:	2280      	movs	r2, #128	@ 0x80
 800d5ac:	7b4b      	ldrb	r3, [r1, #13]
 800d5ae:	0052      	lsls	r2, r2, #1
 800d5b0:	005b      	lsls	r3, r3, #1
 800d5b2:	401a      	ands	r2, r3
 800d5b4:	7a8b      	ldrb	r3, [r1, #10]
 800d5b6:	4313      	orrs	r3, r2
 800d5b8:	425a      	negs	r2, r3
 800d5ba:	4153      	adcs	r3, r2
 800d5bc:	b2db      	uxtb	r3, r3
 800d5be:	7033      	strb	r3, [r6, #0]
 800d5c0:	e7d3      	b.n	800d56a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800d5c2:	4b0c      	ldr	r3, [pc, #48]	@ (800d5f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800d5c4:	18fb      	adds	r3, r7, r3
 800d5c6:	b29b      	uxth	r3, r3
 800d5c8:	2b7f      	cmp	r3, #127	@ 0x7f
 800d5ca:	d804      	bhi.n	800d5d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8a>
 800d5cc:	9900      	ldr	r1, [sp, #0]
 800d5ce:	0028      	movs	r0, r5
 800d5d0:	f7ff fca4 	bl	800cf1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d5d4:	e7e5      	b.n	800d5a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x56>
 800d5d6:	7803      	ldrb	r3, [r0, #0]
 800d5d8:	2b00      	cmp	r3, #0
 800d5da:	d0e3      	beq.n	800d5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x58>
 800d5dc:	4b06      	ldr	r3, [pc, #24]	@ (800d5f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800d5de:	429f      	cmp	r7, r3
 800d5e0:	d1e0      	bne.n	800d5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x58>
 800d5e2:	0011      	movs	r1, r2
 800d5e4:	0028      	movs	r0, r5
 800d5e6:	f7ff fc77 	bl	800ced8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d5ea:	e7da      	b.n	800d5a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x56>
 800d5ec:	fffffa00 	.word	0xfffffa00
 800d5f0:	000002ff 	.word	0x000002ff
 800d5f4:	fffff200 	.word	0xfffff200
 800d5f8:	00000902 	.word	0x00000902

0800d5fc <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d5fc:	b570      	push	{r4, r5, r6, lr}
 800d5fe:	0002      	movs	r2, r0
 800d600:	0004      	movs	r4, r0
 800d602:	0005      	movs	r5, r0
 800d604:	323a      	adds	r2, #58	@ 0x3a
 800d606:	3422      	adds	r4, #34	@ 0x22
 800d608:	88d6      	ldrh	r6, [r2, #6]
 800d60a:	8ae3      	ldrh	r3, [r4, #22]
 800d60c:	2e00      	cmp	r6, #0
 800d60e:	d019      	beq.n	800d644 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800d610:	2b0a      	cmp	r3, #10
 800d612:	d02b      	beq.n	800d66c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800d614:	8891      	ldrh	r1, [r2, #4]
 800d616:	3e01      	subs	r6, #1
 800d618:	0048      	lsls	r0, r1, #1
 800d61a:	5a80      	ldrh	r0, [r0, r2]
 800d61c:	80d6      	strh	r6, [r2, #6]
 800d61e:	1c4e      	adds	r6, r1, #1
 800d620:	b2b6      	uxth	r6, r6
 800d622:	2e01      	cmp	r6, #1
 800d624:	d80b      	bhi.n	800d63e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800d626:	8096      	strh	r6, [r2, #4]
 800d628:	1c59      	adds	r1, r3, #1
 800d62a:	82e1      	strh	r1, [r4, #22]
 800d62c:	8aa1      	ldrh	r1, [r4, #20]
 800d62e:	185b      	adds	r3, r3, r1
 800d630:	b29b      	uxth	r3, r3
 800d632:	2b09      	cmp	r3, #9
 800d634:	d900      	bls.n	800d638 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x3c>
 800d636:	3b0a      	subs	r3, #10
 800d638:	005b      	lsls	r3, r3, #1
 800d63a:	52e0      	strh	r0, [r4, r3]
 800d63c:	e7e4      	b.n	800d608 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800d63e:	3901      	subs	r1, #1
 800d640:	8091      	strh	r1, [r2, #4]
 800d642:	e7f1      	b.n	800d628 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800d644:	8ae3      	ldrh	r3, [r4, #22]
 800d646:	2b0a      	cmp	r3, #10
 800d648:	d010      	beq.n	800d66c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800d64a:	0028      	movs	r0, r5
 800d64c:	f7ff fbed 	bl	800ce2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800d650:	8ae3      	ldrh	r3, [r4, #22]
 800d652:	1c5a      	adds	r2, r3, #1
 800d654:	82e2      	strh	r2, [r4, #22]
 800d656:	8aa2      	ldrh	r2, [r4, #20]
 800d658:	189b      	adds	r3, r3, r2
 800d65a:	b29b      	uxth	r3, r3
 800d65c:	001a      	movs	r2, r3
 800d65e:	3a0a      	subs	r2, #10
 800d660:	2b09      	cmp	r3, #9
 800d662:	d800      	bhi.n	800d666 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6a>
 800d664:	001a      	movs	r2, r3
 800d666:	0052      	lsls	r2, r2, #1
 800d668:	52a0      	strh	r0, [r4, r2]
 800d66a:	e7eb      	b.n	800d644 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800d66c:	bd70      	pop	{r4, r5, r6, pc}

0800d66e <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800d66e:	0003      	movs	r3, r0
 800d670:	b570      	push	{r4, r5, r6, lr}
 800d672:	3322      	adds	r3, #34	@ 0x22
 800d674:	8a9a      	ldrh	r2, [r3, #20]
 800d676:	0005      	movs	r5, r0
 800d678:	0051      	lsls	r1, r2, #1
 800d67a:	5acc      	ldrh	r4, [r1, r3]
 800d67c:	8ad9      	ldrh	r1, [r3, #22]
 800d67e:	3901      	subs	r1, #1
 800d680:	82d9      	strh	r1, [r3, #22]
 800d682:	1c51      	adds	r1, r2, #1
 800d684:	b289      	uxth	r1, r1
 800d686:	2909      	cmp	r1, #9
 800d688:	d816      	bhi.n	800d6b8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x4a>
 800d68a:	8299      	strh	r1, [r3, #20]
 800d68c:	0028      	movs	r0, r5
 800d68e:	351a      	adds	r5, #26
 800d690:	f7ff ffb4 	bl	800d5fc <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d694:	88eb      	ldrh	r3, [r5, #6]
 800d696:	2b01      	cmp	r3, #1
 800d698:	d801      	bhi.n	800d69e <_ZN8touchgfx12TextProvider11getNextCharEv+0x30>
 800d69a:	3301      	adds	r3, #1
 800d69c:	80eb      	strh	r3, [r5, #6]
 800d69e:	88ab      	ldrh	r3, [r5, #4]
 800d6a0:	2b00      	cmp	r3, #0
 800d6a2:	d101      	bne.n	800d6a8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x3a>
 800d6a4:	3302      	adds	r3, #2
 800d6a6:	80ab      	strh	r3, [r5, #4]
 800d6a8:	88ab      	ldrh	r3, [r5, #4]
 800d6aa:	0020      	movs	r0, r4
 800d6ac:	3b01      	subs	r3, #1
 800d6ae:	b29b      	uxth	r3, r3
 800d6b0:	80ab      	strh	r3, [r5, #4]
 800d6b2:	005b      	lsls	r3, r3, #1
 800d6b4:	52ec      	strh	r4, [r5, r3]
 800d6b6:	bd70      	pop	{r4, r5, r6, pc}
 800d6b8:	3a09      	subs	r2, #9
 800d6ba:	829a      	strh	r2, [r3, #20]
 800d6bc:	e7e6      	b.n	800d68c <_ZN8touchgfx12TextProvider11getNextCharEv+0x1e>

0800d6be <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800d6be:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6c0:	0007      	movs	r7, r0
 800d6c2:	b087      	sub	sp, #28
 800d6c4:	9304      	str	r3, [sp, #16]
 800d6c6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800d6c8:	3722      	adds	r7, #34	@ 0x22
 800d6ca:	9302      	str	r3, [sp, #8]
 800d6cc:	428a      	cmp	r2, r1
 800d6ce:	d92d      	bls.n	800d72c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800d6d0:	0005      	movs	r5, r0
 800d6d2:	8afb      	ldrh	r3, [r7, #22]
 800d6d4:	1a56      	subs	r6, r2, r1
 800d6d6:	9301      	str	r3, [sp, #4]
 800d6d8:	b2b3      	uxth	r3, r6
 800d6da:	9300      	str	r3, [sp, #0]
 800d6dc:	353a      	adds	r5, #58	@ 0x3a
 800d6de:	88eb      	ldrh	r3, [r5, #6]
 800d6e0:	9e02      	ldr	r6, [sp, #8]
 800d6e2:	9303      	str	r3, [sp, #12]
 800d6e4:	9b01      	ldr	r3, [sp, #4]
 800d6e6:	88ac      	ldrh	r4, [r5, #4]
 800d6e8:	199b      	adds	r3, r3, r6
 800d6ea:	3b01      	subs	r3, #1
 800d6ec:	9e00      	ldr	r6, [sp, #0]
 800d6ee:	b29b      	uxth	r3, r3
 800d6f0:	1b9e      	subs	r6, r3, r6
 800d6f2:	b2b6      	uxth	r6, r6
 800d6f4:	46b4      	mov	ip, r6
 800d6f6:	9705      	str	r7, [sp, #20]
 800d6f8:	001f      	movs	r7, r3
 800d6fa:	2b09      	cmp	r3, #9
 800d6fc:	d900      	bls.n	800d700 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800d6fe:	3f0a      	subs	r7, #10
 800d700:	9e05      	ldr	r6, [sp, #20]
 800d702:	007f      	lsls	r7, r7, #1
 800d704:	5bbe      	ldrh	r6, [r7, r6]
 800d706:	2c00      	cmp	r4, #0
 800d708:	d100      	bne.n	800d70c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x4e>
 800d70a:	3402      	adds	r4, #2
 800d70c:	3c01      	subs	r4, #1
 800d70e:	b2a4      	uxth	r4, r4
 800d710:	3b01      	subs	r3, #1
 800d712:	0067      	lsls	r7, r4, #1
 800d714:	b29b      	uxth	r3, r3
 800d716:	537e      	strh	r6, [r7, r5]
 800d718:	4563      	cmp	r3, ip
 800d71a:	d1ed      	bne.n	800d6f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x3a>
 800d71c:	9e00      	ldr	r6, [sp, #0]
 800d71e:	9b01      	ldr	r3, [sp, #4]
 800d720:	1b9b      	subs	r3, r3, r6
 800d722:	8703      	strh	r3, [r0, #56]	@ 0x38
 800d724:	9b03      	ldr	r3, [sp, #12]
 800d726:	80ac      	strh	r4, [r5, #4]
 800d728:	18f6      	adds	r6, r6, r3
 800d72a:	80ee      	strh	r6, [r5, #6]
 800d72c:	0003      	movs	r3, r0
 800d72e:	3322      	adds	r3, #34	@ 0x22
 800d730:	8adc      	ldrh	r4, [r3, #22]
 800d732:	1a64      	subs	r4, r4, r1
 800d734:	82dc      	strh	r4, [r3, #22]
 800d736:	9c02      	ldr	r4, [sp, #8]
 800d738:	1909      	adds	r1, r1, r4
 800d73a:	b289      	uxth	r1, r1
 800d73c:	2909      	cmp	r1, #9
 800d73e:	d816      	bhi.n	800d76e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb0>
 800d740:	250a      	movs	r5, #10
 800d742:	8299      	strh	r1, [r3, #20]
 800d744:	2a00      	cmp	r2, #0
 800d746:	d014      	beq.n	800d772 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb4>
 800d748:	3a01      	subs	r2, #1
 800d74a:	b292      	uxth	r2, r2
 800d74c:	9c04      	ldr	r4, [sp, #16]
 800d74e:	0051      	lsls	r1, r2, #1
 800d750:	5b0c      	ldrh	r4, [r1, r4]
 800d752:	8ad9      	ldrh	r1, [r3, #22]
 800d754:	3101      	adds	r1, #1
 800d756:	82d9      	strh	r1, [r3, #22]
 800d758:	8a99      	ldrh	r1, [r3, #20]
 800d75a:	2900      	cmp	r1, #0
 800d75c:	d100      	bne.n	800d760 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa2>
 800d75e:	829d      	strh	r5, [r3, #20]
 800d760:	8a99      	ldrh	r1, [r3, #20]
 800d762:	3901      	subs	r1, #1
 800d764:	b289      	uxth	r1, r1
 800d766:	8299      	strh	r1, [r3, #20]
 800d768:	0049      	lsls	r1, r1, #1
 800d76a:	525c      	strh	r4, [r3, r1]
 800d76c:	e7ea      	b.n	800d744 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x86>
 800d76e:	390a      	subs	r1, #10
 800d770:	e7e6      	b.n	800d740 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800d772:	f7ff ff43 	bl	800d5fc <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d776:	b007      	add	sp, #28
 800d778:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d77a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800d77a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d77c:	0007      	movs	r7, r0
 800d77e:	2500      	movs	r5, #0
 800d780:	ac05      	add	r4, sp, #20
 800d782:	8826      	ldrh	r6, [r4, #0]
 800d784:	371a      	adds	r7, #26
 800d786:	4295      	cmp	r5, r2
 800d788:	d011      	beq.n	800d7ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800d78a:	880c      	ldrh	r4, [r1, #0]
 800d78c:	46a4      	mov	ip, r4
 800d78e:	88bc      	ldrh	r4, [r7, #4]
 800d790:	1914      	adds	r4, r2, r4
 800d792:	3c01      	subs	r4, #1
 800d794:	1b64      	subs	r4, r4, r5
 800d796:	b2a4      	uxth	r4, r4
 800d798:	2c01      	cmp	r4, #1
 800d79a:	d900      	bls.n	800d79e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800d79c:	3c02      	subs	r4, #2
 800d79e:	0064      	lsls	r4, r4, #1
 800d7a0:	5b3c      	ldrh	r4, [r7, r4]
 800d7a2:	3102      	adds	r1, #2
 800d7a4:	4564      	cmp	r4, ip
 800d7a6:	d115      	bne.n	800d7d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800d7a8:	3501      	adds	r5, #1
 800d7aa:	b2ad      	uxth	r5, r5
 800d7ac:	e7eb      	b.n	800d786 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xc>
 800d7ae:	2400      	movs	r4, #0
 800d7b0:	199b      	adds	r3, r3, r6
 800d7b2:	3022      	adds	r0, #34	@ 0x22
 800d7b4:	b2a2      	uxth	r2, r4
 800d7b6:	429a      	cmp	r2, r3
 800d7b8:	da0e      	bge.n	800d7d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5e>
 800d7ba:	8a86      	ldrh	r6, [r0, #20]
 800d7bc:	0065      	lsls	r5, r4, #1
 800d7be:	1992      	adds	r2, r2, r6
 800d7c0:	b292      	uxth	r2, r2
 800d7c2:	5b4d      	ldrh	r5, [r1, r5]
 800d7c4:	2a09      	cmp	r2, #9
 800d7c6:	d900      	bls.n	800d7ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800d7c8:	3a0a      	subs	r2, #10
 800d7ca:	0052      	lsls	r2, r2, #1
 800d7cc:	5a82      	ldrh	r2, [r0, r2]
 800d7ce:	3401      	adds	r4, #1
 800d7d0:	42aa      	cmp	r2, r5
 800d7d2:	d0ef      	beq.n	800d7b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3a>
 800d7d4:	2000      	movs	r0, #0
 800d7d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d7d8:	2001      	movs	r0, #1
 800d7da:	e7fc      	b.n	800d7d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5c>

0800d7dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800d7dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7de:	b087      	sub	sp, #28
 800d7e0:	9004      	str	r0, [sp, #16]
 800d7e2:	9205      	str	r2, [sp, #20]
 800d7e4:	880a      	ldrh	r2, [r1, #0]
 800d7e6:	1c8f      	adds	r7, r1, #2
 800d7e8:	0b14      	lsrs	r4, r2, #12
 800d7ea:	0063      	lsls	r3, r4, #1
 800d7ec:	5bdb      	ldrh	r3, [r3, r7]
 800d7ee:	9905      	ldr	r1, [sp, #20]
 800d7f0:	428b      	cmp	r3, r1
 800d7f2:	d127      	bne.n	800d844 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x68>
 800d7f4:	230f      	movs	r3, #15
 800d7f6:	210f      	movs	r1, #15
 800d7f8:	1215      	asrs	r5, r2, #8
 800d7fa:	401d      	ands	r5, r3
 800d7fc:	1113      	asrs	r3, r2, #4
 800d7fe:	4019      	ands	r1, r3
 800d800:	230f      	movs	r3, #15
 800d802:	4013      	ands	r3, r2
 800d804:	9102      	str	r1, [sp, #8]
 800d806:	9303      	str	r3, [sp, #12]
 800d808:	9100      	str	r1, [sp, #0]
 800d80a:	002b      	movs	r3, r5
 800d80c:	0022      	movs	r2, r4
 800d80e:	0039      	movs	r1, r7
 800d810:	9804      	ldr	r0, [sp, #16]
 800d812:	f7ff ffb2 	bl	800d77a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800d816:	1e06      	subs	r6, r0, #0
 800d818:	d00c      	beq.n	800d834 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x58>
 800d81a:	9a02      	ldr	r2, [sp, #8]
 800d81c:	1963      	adds	r3, r4, r5
 800d81e:	189b      	adds	r3, r3, r2
 800d820:	005b      	lsls	r3, r3, #1
 800d822:	18fb      	adds	r3, r7, r3
 800d824:	9a03      	ldr	r2, [sp, #12]
 800d826:	0029      	movs	r1, r5
 800d828:	9804      	ldr	r0, [sp, #16]
 800d82a:	f7ff ff48 	bl	800d6be <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d82e:	0030      	movs	r0, r6
 800d830:	b007      	add	sp, #28
 800d832:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d834:	9b03      	ldr	r3, [sp, #12]
 800d836:	1919      	adds	r1, r3, r4
 800d838:	9b02      	ldr	r3, [sp, #8]
 800d83a:	1949      	adds	r1, r1, r5
 800d83c:	18c9      	adds	r1, r1, r3
 800d83e:	0049      	lsls	r1, r1, #1
 800d840:	1879      	adds	r1, r7, r1
 800d842:	e7cf      	b.n	800d7e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d844:	2600      	movs	r6, #0
 800d846:	e7f2      	b.n	800d82e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x52>

0800d848 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d848:	b570      	push	{r4, r5, r6, lr}
 800d84a:	8814      	ldrh	r4, [r2, #0]
 800d84c:	2000      	movs	r0, #0
 800d84e:	429c      	cmp	r4, r3
 800d850:	d815      	bhi.n	800d87e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>
 800d852:	1e4c      	subs	r4, r1, #1
 800d854:	00a4      	lsls	r4, r4, #2
 800d856:	5aa4      	ldrh	r4, [r4, r2]
 800d858:	429c      	cmp	r4, r3
 800d85a:	d310      	bcc.n	800d87e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>
 800d85c:	4288      	cmp	r0, r1
 800d85e:	d20f      	bcs.n	800d880 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d860:	1844      	adds	r4, r0, r1
 800d862:	1064      	asrs	r4, r4, #1
 800d864:	00a5      	lsls	r5, r4, #2
 800d866:	5b56      	ldrh	r6, [r2, r5]
 800d868:	42b3      	cmp	r3, r6
 800d86a:	d902      	bls.n	800d872 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2a>
 800d86c:	3401      	adds	r4, #1
 800d86e:	b2a0      	uxth	r0, r4
 800d870:	e7f4      	b.n	800d85c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d872:	42b3      	cmp	r3, r6
 800d874:	d201      	bcs.n	800d87a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d876:	b2a1      	uxth	r1, r4
 800d878:	e7f0      	b.n	800d85c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d87a:	1952      	adds	r2, r2, r5
 800d87c:	8850      	ldrh	r0, [r2, #2]
 800d87e:	bd70      	pop	{r4, r5, r6, pc}
 800d880:	2000      	movs	r0, #0
 800d882:	e7fc      	b.n	800d87e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d884 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d884:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d886:	0004      	movs	r4, r0
 800d888:	260b      	movs	r6, #11
 800d88a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800d88c:	886b      	ldrh	r3, [r5, #2]
 800d88e:	085b      	lsrs	r3, r3, #1
 800d890:	9301      	str	r3, [sp, #4]
 800d892:	3e01      	subs	r6, #1
 800d894:	2e00      	cmp	r6, #0
 800d896:	d014      	beq.n	800d8c2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800d898:	0022      	movs	r2, r4
 800d89a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d89c:	3222      	adds	r2, #34	@ 0x22
 800d89e:	005b      	lsls	r3, r3, #1
 800d8a0:	5a9f      	ldrh	r7, [r3, r2]
 800d8a2:	9901      	ldr	r1, [sp, #4]
 800d8a4:	003b      	movs	r3, r7
 800d8a6:	002a      	movs	r2, r5
 800d8a8:	0020      	movs	r0, r4
 800d8aa:	f7ff ffcd 	bl	800d848 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800d8ae:	2800      	cmp	r0, #0
 800d8b0:	d007      	beq.n	800d8c2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800d8b2:	0040      	lsls	r0, r0, #1
 800d8b4:	1829      	adds	r1, r5, r0
 800d8b6:	003a      	movs	r2, r7
 800d8b8:	0020      	movs	r0, r4
 800d8ba:	f7ff ff8f 	bl	800d7dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800d8be:	2800      	cmp	r0, #0
 800d8c0:	d1e7      	bne.n	800d892 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800d8c2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

0800d8c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800d8c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8c6:	694b      	ldr	r3, [r1, #20]
 800d8c8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800d8ca:	000e      	movs	r6, r1
 800d8cc:	0007      	movs	r7, r0
 800d8ce:	1b18      	subs	r0, r3, r4
 800d8d0:	2300      	movs	r3, #0
 800d8d2:	b08d      	sub	sp, #52	@ 0x34
 800d8d4:	6849      	ldr	r1, [r1, #4]
 800d8d6:	6af2      	ldr	r2, [r6, #44]	@ 0x2c
 800d8d8:	4298      	cmp	r0, r3
 800d8da:	d008      	beq.n	800d8ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2a>
 800d8dc:	1a89      	subs	r1, r1, r2
 800d8de:	4299      	cmp	r1, r3
 800d8e0:	d005      	beq.n	800d8ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2a>
 800d8e2:	4341      	muls	r1, r0
 800d8e4:	200f      	movs	r0, #15
 800d8e6:	17cb      	asrs	r3, r1, #31
 800d8e8:	4003      	ands	r3, r0
 800d8ea:	185b      	adds	r3, r3, r1
 800d8ec:	111b      	asrs	r3, r3, #4
 800d8ee:	2000      	movs	r0, #0
 800d8f0:	6831      	ldr	r1, [r6, #0]
 800d8f2:	1b0c      	subs	r4, r1, r4
 800d8f4:	69b1      	ldr	r1, [r6, #24]
 800d8f6:	4284      	cmp	r4, r0
 800d8f8:	d008      	beq.n	800d90c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x48>
 800d8fa:	1a8a      	subs	r2, r1, r2
 800d8fc:	4282      	cmp	r2, r0
 800d8fe:	d005      	beq.n	800d90c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x48>
 800d900:	210f      	movs	r1, #15
 800d902:	4362      	muls	r2, r4
 800d904:	17d0      	asrs	r0, r2, #31
 800d906:	4008      	ands	r0, r1
 800d908:	1880      	adds	r0, r0, r2
 800d90a:	1100      	asrs	r0, r0, #4
 800d90c:	1a18      	subs	r0, r3, r0
 800d90e:	f7f3 fc4b 	bl	80011a8 <__aeabi_i2f>
 800d912:	21f6      	movs	r1, #246	@ 0xf6
 800d914:	0589      	lsls	r1, r1, #22
 800d916:	f7f3 f945 	bl	8000ba4 <__aeabi_fmul>
 800d91a:	1c01      	adds	r1, r0, #0
 800d91c:	20fe      	movs	r0, #254	@ 0xfe
 800d91e:	0580      	lsls	r0, r0, #22
 800d920:	f7f2 ff5a 	bl	80007d8 <__aeabi_fdiv>
 800d924:	2280      	movs	r2, #128	@ 0x80
 800d926:	0612      	lsls	r2, r2, #24
 800d928:	4694      	mov	ip, r2
 800d92a:	9002      	str	r0, [sp, #8]
 800d92c:	9b02      	ldr	r3, [sp, #8]
 800d92e:	0034      	movs	r4, r6
 800d930:	4463      	add	r3, ip
 800d932:	9307      	str	r3, [sp, #28]
 800d934:	0033      	movs	r3, r6
 800d936:	003d      	movs	r5, r7
 800d938:	3344      	adds	r3, #68	@ 0x44
 800d93a:	3408      	adds	r4, #8
 800d93c:	9303      	str	r3, [sp, #12]
 800d93e:	20fe      	movs	r0, #254	@ 0xfe
 800d940:	6821      	ldr	r1, [r4, #0]
 800d942:	0580      	lsls	r0, r0, #22
 800d944:	f7f2 ff48 	bl	80007d8 <__aeabi_fdiv>
 800d948:	6028      	str	r0, [r5, #0]
 800d94a:	1c01      	adds	r1, r0, #0
 800d94c:	9001      	str	r0, [sp, #4]
 800d94e:	6860      	ldr	r0, [r4, #4]
 800d950:	f7f3 f928 	bl	8000ba4 <__aeabi_fmul>
 800d954:	60e8      	str	r0, [r5, #12]
 800d956:	68a0      	ldr	r0, [r4, #8]
 800d958:	9901      	ldr	r1, [sp, #4]
 800d95a:	f7f3 f923 	bl	8000ba4 <__aeabi_fmul>
 800d95e:	9b03      	ldr	r3, [sp, #12]
 800d960:	3414      	adds	r4, #20
 800d962:	61a8      	str	r0, [r5, #24]
 800d964:	3504      	adds	r5, #4
 800d966:	42a3      	cmp	r3, r4
 800d968:	d1e9      	bne.n	800d93e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x7a>
 800d96a:	68bb      	ldr	r3, [r7, #8]
 800d96c:	6878      	ldr	r0, [r7, #4]
 800d96e:	1c19      	adds	r1, r3, #0
 800d970:	9303      	str	r3, [sp, #12]
 800d972:	f7f3 fa55 	bl	8000e20 <__aeabi_fsub>
 800d976:	683b      	ldr	r3, [r7, #0]
 800d978:	9903      	ldr	r1, [sp, #12]
 800d97a:	1c04      	adds	r4, r0, #0
 800d97c:	1c18      	adds	r0, r3, #0
 800d97e:	9301      	str	r3, [sp, #4]
 800d980:	f7f3 fa4e 	bl	8000e20 <__aeabi_fsub>
 800d984:	6af5      	ldr	r5, [r6, #44]	@ 0x2c
 800d986:	6873      	ldr	r3, [r6, #4]
 800d988:	9004      	str	r0, [sp, #16]
 800d98a:	1b58      	subs	r0, r3, r5
 800d98c:	f7f3 fc0c 	bl	80011a8 <__aeabi_i2f>
 800d990:	21f6      	movs	r1, #246	@ 0xf6
 800d992:	0589      	lsls	r1, r1, #22
 800d994:	f7f3 f906 	bl	8000ba4 <__aeabi_fmul>
 800d998:	1c21      	adds	r1, r4, #0
 800d99a:	f7f3 f903 	bl	8000ba4 <__aeabi_fmul>
 800d99e:	69b3      	ldr	r3, [r6, #24]
 800d9a0:	9003      	str	r0, [sp, #12]
 800d9a2:	1b58      	subs	r0, r3, r5
 800d9a4:	f7f3 fc00 	bl	80011a8 <__aeabi_i2f>
 800d9a8:	21f6      	movs	r1, #246	@ 0xf6
 800d9aa:	0589      	lsls	r1, r1, #22
 800d9ac:	f7f3 f8fa 	bl	8000ba4 <__aeabi_fmul>
 800d9b0:	9904      	ldr	r1, [sp, #16]
 800d9b2:	f7f3 f8f7 	bl	8000ba4 <__aeabi_fmul>
 800d9b6:	1c01      	adds	r1, r0, #0
 800d9b8:	9803      	ldr	r0, [sp, #12]
 800d9ba:	f7f3 fa31 	bl	8000e20 <__aeabi_fsub>
 800d9be:	9902      	ldr	r1, [sp, #8]
 800d9c0:	f7f3 f8f0 	bl	8000ba4 <__aeabi_fmul>
 800d9c4:	6278      	str	r0, [r7, #36]	@ 0x24
 800d9c6:	6833      	ldr	r3, [r6, #0]
 800d9c8:	6ab5      	ldr	r5, [r6, #40]	@ 0x28
 800d9ca:	9003      	str	r0, [sp, #12]
 800d9cc:	1b58      	subs	r0, r3, r5
 800d9ce:	f7f3 fbeb 	bl	80011a8 <__aeabi_i2f>
 800d9d2:	21f6      	movs	r1, #246	@ 0xf6
 800d9d4:	0589      	lsls	r1, r1, #22
 800d9d6:	f7f3 f8e5 	bl	8000ba4 <__aeabi_fmul>
 800d9da:	1c21      	adds	r1, r4, #0
 800d9dc:	f7f3 f8e2 	bl	8000ba4 <__aeabi_fmul>
 800d9e0:	6973      	ldr	r3, [r6, #20]
 800d9e2:	1c04      	adds	r4, r0, #0
 800d9e4:	1b58      	subs	r0, r3, r5
 800d9e6:	f7f3 fbdf 	bl	80011a8 <__aeabi_i2f>
 800d9ea:	21f6      	movs	r1, #246	@ 0xf6
 800d9ec:	0589      	lsls	r1, r1, #22
 800d9ee:	f7f3 f8d9 	bl	8000ba4 <__aeabi_fmul>
 800d9f2:	9904      	ldr	r1, [sp, #16]
 800d9f4:	f7f3 f8d6 	bl	8000ba4 <__aeabi_fmul>
 800d9f8:	1c01      	adds	r1, r0, #0
 800d9fa:	1c20      	adds	r0, r4, #0
 800d9fc:	f7f3 fa10 	bl	8000e20 <__aeabi_fsub>
 800da00:	9907      	ldr	r1, [sp, #28]
 800da02:	f7f3 f8cf 	bl	8000ba4 <__aeabi_fmul>
 800da06:	697d      	ldr	r5, [r7, #20]
 800da08:	9004      	str	r0, [sp, #16]
 800da0a:	1c29      	adds	r1, r5, #0
 800da0c:	62b8      	str	r0, [r7, #40]	@ 0x28
 800da0e:	6938      	ldr	r0, [r7, #16]
 800da10:	f7f3 fa06 	bl	8000e20 <__aeabi_fsub>
 800da14:	68fb      	ldr	r3, [r7, #12]
 800da16:	1c29      	adds	r1, r5, #0
 800da18:	9006      	str	r0, [sp, #24]
 800da1a:	1c18      	adds	r0, r3, #0
 800da1c:	9305      	str	r3, [sp, #20]
 800da1e:	f7f3 f9ff 	bl	8000e20 <__aeabi_fsub>
 800da22:	6af4      	ldr	r4, [r6, #44]	@ 0x2c
 800da24:	6873      	ldr	r3, [r6, #4]
 800da26:	9008      	str	r0, [sp, #32]
 800da28:	1b18      	subs	r0, r3, r4
 800da2a:	f7f3 fbbd 	bl	80011a8 <__aeabi_i2f>
 800da2e:	21f6      	movs	r1, #246	@ 0xf6
 800da30:	0589      	lsls	r1, r1, #22
 800da32:	f7f3 f8b7 	bl	8000ba4 <__aeabi_fmul>
 800da36:	9906      	ldr	r1, [sp, #24]
 800da38:	f7f3 f8b4 	bl	8000ba4 <__aeabi_fmul>
 800da3c:	69b3      	ldr	r3, [r6, #24]
 800da3e:	1c05      	adds	r5, r0, #0
 800da40:	1b18      	subs	r0, r3, r4
 800da42:	f7f3 fbb1 	bl	80011a8 <__aeabi_i2f>
 800da46:	21f6      	movs	r1, #246	@ 0xf6
 800da48:	0589      	lsls	r1, r1, #22
 800da4a:	f7f3 f8ab 	bl	8000ba4 <__aeabi_fmul>
 800da4e:	9908      	ldr	r1, [sp, #32]
 800da50:	f7f3 f8a8 	bl	8000ba4 <__aeabi_fmul>
 800da54:	1c01      	adds	r1, r0, #0
 800da56:	1c28      	adds	r0, r5, #0
 800da58:	f7f3 f9e2 	bl	8000e20 <__aeabi_fsub>
 800da5c:	9902      	ldr	r1, [sp, #8]
 800da5e:	f7f3 f8a1 	bl	8000ba4 <__aeabi_fmul>
 800da62:	62f8      	str	r0, [r7, #44]	@ 0x2c
 800da64:	6833      	ldr	r3, [r6, #0]
 800da66:	6ab4      	ldr	r4, [r6, #40]	@ 0x28
 800da68:	9009      	str	r0, [sp, #36]	@ 0x24
 800da6a:	1b18      	subs	r0, r3, r4
 800da6c:	f7f3 fb9c 	bl	80011a8 <__aeabi_i2f>
 800da70:	21f6      	movs	r1, #246	@ 0xf6
 800da72:	0589      	lsls	r1, r1, #22
 800da74:	f7f3 f896 	bl	8000ba4 <__aeabi_fmul>
 800da78:	9906      	ldr	r1, [sp, #24]
 800da7a:	f7f3 f893 	bl	8000ba4 <__aeabi_fmul>
 800da7e:	6973      	ldr	r3, [r6, #20]
 800da80:	1c05      	adds	r5, r0, #0
 800da82:	1b18      	subs	r0, r3, r4
 800da84:	f7f3 fb90 	bl	80011a8 <__aeabi_i2f>
 800da88:	21f6      	movs	r1, #246	@ 0xf6
 800da8a:	0589      	lsls	r1, r1, #22
 800da8c:	f7f3 f88a 	bl	8000ba4 <__aeabi_fmul>
 800da90:	9908      	ldr	r1, [sp, #32]
 800da92:	f7f3 f887 	bl	8000ba4 <__aeabi_fmul>
 800da96:	1c01      	adds	r1, r0, #0
 800da98:	1c28      	adds	r0, r5, #0
 800da9a:	f7f3 f9c1 	bl	8000e20 <__aeabi_fsub>
 800da9e:	9907      	ldr	r1, [sp, #28]
 800daa0:	f7f3 f880 	bl	8000ba4 <__aeabi_fmul>
 800daa4:	6a3d      	ldr	r5, [r7, #32]
 800daa6:	9008      	str	r0, [sp, #32]
 800daa8:	1c29      	adds	r1, r5, #0
 800daaa:	6338      	str	r0, [r7, #48]	@ 0x30
 800daac:	69f8      	ldr	r0, [r7, #28]
 800daae:	f7f3 f9b7 	bl	8000e20 <__aeabi_fsub>
 800dab2:	69bb      	ldr	r3, [r7, #24]
 800dab4:	1c29      	adds	r1, r5, #0
 800dab6:	900a      	str	r0, [sp, #40]	@ 0x28
 800dab8:	1c18      	adds	r0, r3, #0
 800daba:	9306      	str	r3, [sp, #24]
 800dabc:	f7f3 f9b0 	bl	8000e20 <__aeabi_fsub>
 800dac0:	6af4      	ldr	r4, [r6, #44]	@ 0x2c
 800dac2:	6873      	ldr	r3, [r6, #4]
 800dac4:	900b      	str	r0, [sp, #44]	@ 0x2c
 800dac6:	1b18      	subs	r0, r3, r4
 800dac8:	f7f3 fb6e 	bl	80011a8 <__aeabi_i2f>
 800dacc:	21f6      	movs	r1, #246	@ 0xf6
 800dace:	0589      	lsls	r1, r1, #22
 800dad0:	f7f3 f868 	bl	8000ba4 <__aeabi_fmul>
 800dad4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800dad6:	f7f3 f865 	bl	8000ba4 <__aeabi_fmul>
 800dada:	69b3      	ldr	r3, [r6, #24]
 800dadc:	1c05      	adds	r5, r0, #0
 800dade:	1b18      	subs	r0, r3, r4
 800dae0:	f7f3 fb62 	bl	80011a8 <__aeabi_i2f>
 800dae4:	21f6      	movs	r1, #246	@ 0xf6
 800dae6:	0589      	lsls	r1, r1, #22
 800dae8:	f7f3 f85c 	bl	8000ba4 <__aeabi_fmul>
 800daec:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800daee:	f7f3 f859 	bl	8000ba4 <__aeabi_fmul>
 800daf2:	1c01      	adds	r1, r0, #0
 800daf4:	1c28      	adds	r0, r5, #0
 800daf6:	f7f3 f993 	bl	8000e20 <__aeabi_fsub>
 800dafa:	9902      	ldr	r1, [sp, #8]
 800dafc:	f7f3 f852 	bl	8000ba4 <__aeabi_fmul>
 800db00:	6378      	str	r0, [r7, #52]	@ 0x34
 800db02:	6833      	ldr	r3, [r6, #0]
 800db04:	6ab4      	ldr	r4, [r6, #40]	@ 0x28
 800db06:	9002      	str	r0, [sp, #8]
 800db08:	1b18      	subs	r0, r3, r4
 800db0a:	f7f3 fb4d 	bl	80011a8 <__aeabi_i2f>
 800db0e:	21f6      	movs	r1, #246	@ 0xf6
 800db10:	0589      	lsls	r1, r1, #22
 800db12:	f7f3 f847 	bl	8000ba4 <__aeabi_fmul>
 800db16:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800db18:	f7f3 f844 	bl	8000ba4 <__aeabi_fmul>
 800db1c:	1c05      	adds	r5, r0, #0
 800db1e:	6970      	ldr	r0, [r6, #20]
 800db20:	1b00      	subs	r0, r0, r4
 800db22:	f7f3 fb41 	bl	80011a8 <__aeabi_i2f>
 800db26:	21f6      	movs	r1, #246	@ 0xf6
 800db28:	0589      	lsls	r1, r1, #22
 800db2a:	f7f3 f83b 	bl	8000ba4 <__aeabi_fmul>
 800db2e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800db30:	f7f3 f838 	bl	8000ba4 <__aeabi_fmul>
 800db34:	1c01      	adds	r1, r0, #0
 800db36:	1c28      	adds	r0, r5, #0
 800db38:	f7f3 f972 	bl	8000e20 <__aeabi_fsub>
 800db3c:	9907      	ldr	r1, [sp, #28]
 800db3e:	f7f3 f831 	bl	8000ba4 <__aeabi_fmul>
 800db42:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800db44:	63b8      	str	r0, [r7, #56]	@ 0x38
 800db46:	1c04      	adds	r4, r0, #0
 800db48:	9801      	ldr	r0, [sp, #4]
 800db4a:	f7f3 f82b 	bl	8000ba4 <__aeabi_fmul>
 800db4e:	9905      	ldr	r1, [sp, #20]
 800db50:	1c05      	adds	r5, r0, #0
 800db52:	9803      	ldr	r0, [sp, #12]
 800db54:	f7f3 f826 	bl	8000ba4 <__aeabi_fmul>
 800db58:	1c01      	adds	r1, r0, #0
 800db5a:	1c28      	adds	r0, r5, #0
 800db5c:	f7f3 f960 	bl	8000e20 <__aeabi_fsub>
 800db60:	2100      	movs	r1, #0
 800db62:	1c05      	adds	r5, r0, #0
 800db64:	f7f2 fc9a 	bl	800049c <__aeabi_fcmpgt>
 800db68:	2800      	cmp	r0, #0
 800db6a:	d01b      	beq.n	800dba4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2e0>
 800db6c:	2380      	movs	r3, #128	@ 0x80
 800db6e:	021b      	lsls	r3, r3, #8
 800db70:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db72:	9902      	ldr	r1, [sp, #8]
 800db74:	9801      	ldr	r0, [sp, #4]
 800db76:	f7f3 f815 	bl	8000ba4 <__aeabi_fmul>
 800db7a:	9906      	ldr	r1, [sp, #24]
 800db7c:	1c05      	adds	r5, r0, #0
 800db7e:	9803      	ldr	r0, [sp, #12]
 800db80:	f7f3 f810 	bl	8000ba4 <__aeabi_fmul>
 800db84:	1c01      	adds	r1, r0, #0
 800db86:	1c28      	adds	r0, r5, #0
 800db88:	f7f3 f94a 	bl	8000e20 <__aeabi_fsub>
 800db8c:	2100      	movs	r1, #0
 800db8e:	1c05      	adds	r5, r0, #0
 800db90:	f7f2 fc84 	bl	800049c <__aeabi_fcmpgt>
 800db94:	2800      	cmp	r0, #0
 800db96:	d020      	beq.n	800dbda <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x316>
 800db98:	2380      	movs	r3, #128	@ 0x80
 800db9a:	021b      	lsls	r3, r3, #8
 800db9c:	0038      	movs	r0, r7
 800db9e:	643b      	str	r3, [r7, #64]	@ 0x40
 800dba0:	b00d      	add	sp, #52	@ 0x34
 800dba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dba4:	2100      	movs	r1, #0
 800dba6:	1c28      	adds	r0, r5, #0
 800dba8:	f7f2 fc64 	bl	8000474 <__aeabi_fcmplt>
 800dbac:	2800      	cmp	r0, #0
 800dbae:	d001      	beq.n	800dbb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2f0>
 800dbb0:	4b17      	ldr	r3, [pc, #92]	@ (800dc10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x34c>)
 800dbb2:	e7dd      	b.n	800db70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2ac>
 800dbb4:	9908      	ldr	r1, [sp, #32]
 800dbb6:	9801      	ldr	r0, [sp, #4]
 800dbb8:	f7f2 fff4 	bl	8000ba4 <__aeabi_fmul>
 800dbbc:	9905      	ldr	r1, [sp, #20]
 800dbbe:	1c05      	adds	r5, r0, #0
 800dbc0:	9804      	ldr	r0, [sp, #16]
 800dbc2:	f7f2 ffef 	bl	8000ba4 <__aeabi_fmul>
 800dbc6:	1c01      	adds	r1, r0, #0
 800dbc8:	1c28      	adds	r0, r5, #0
 800dbca:	f7f3 f929 	bl	8000e20 <__aeabi_fsub>
 800dbce:	2100      	movs	r1, #0
 800dbd0:	f7f2 fc6e 	bl	80004b0 <__aeabi_fcmpge>
 800dbd4:	2800      	cmp	r0, #0
 800dbd6:	d1c9      	bne.n	800db6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2a8>
 800dbd8:	e7ea      	b.n	800dbb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2ec>
 800dbda:	2100      	movs	r1, #0
 800dbdc:	1c28      	adds	r0, r5, #0
 800dbde:	f7f2 fc49 	bl	8000474 <__aeabi_fcmplt>
 800dbe2:	2800      	cmp	r0, #0
 800dbe4:	d001      	beq.n	800dbea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x326>
 800dbe6:	4b0a      	ldr	r3, [pc, #40]	@ (800dc10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x34c>)
 800dbe8:	e7d8      	b.n	800db9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2d8>
 800dbea:	1c21      	adds	r1, r4, #0
 800dbec:	9801      	ldr	r0, [sp, #4]
 800dbee:	f7f2 ffd9 	bl	8000ba4 <__aeabi_fmul>
 800dbf2:	9906      	ldr	r1, [sp, #24]
 800dbf4:	1c04      	adds	r4, r0, #0
 800dbf6:	9804      	ldr	r0, [sp, #16]
 800dbf8:	f7f2 ffd4 	bl	8000ba4 <__aeabi_fmul>
 800dbfc:	1c01      	adds	r1, r0, #0
 800dbfe:	1c20      	adds	r0, r4, #0
 800dc00:	f7f3 f90e 	bl	8000e20 <__aeabi_fsub>
 800dc04:	2100      	movs	r1, #0
 800dc06:	f7f2 fc53 	bl	80004b0 <__aeabi_fcmpge>
 800dc0a:	2800      	cmp	r0, #0
 800dc0c:	d1c4      	bne.n	800db98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x2d4>
 800dc0e:	e7ea      	b.n	800dbe6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x322>
 800dc10:	00007fff 	.word	0x00007fff

0800dc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800dc14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc16:	2514      	movs	r5, #20
 800dc18:	000f      	movs	r7, r1
 800dc1a:	210f      	movs	r1, #15
 800dc1c:	435d      	muls	r5, r3
 800dc1e:	b085      	sub	sp, #20
 800dc20:	1955      	adds	r5, r2, r5
 800dc22:	9303      	str	r3, [sp, #12]
 800dc24:	686b      	ldr	r3, [r5, #4]
 800dc26:	0004      	movs	r4, r0
 800dc28:	469c      	mov	ip, r3
 800dc2a:	185b      	adds	r3, r3, r1
 800dc2c:	d500      	bpl.n	800dc30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800dc2e:	e0a8      	b.n	800dd82 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x16e>
 800dc30:	111b      	asrs	r3, r3, #4
 800dc32:	2114      	movs	r1, #20
 800dc34:	9300      	str	r3, [sp, #0]
 800dc36:	9b00      	ldr	r3, [sp, #0]
 800dc38:	6163      	str	r3, [r4, #20]
 800dc3a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800dc3c:	4359      	muls	r1, r3
 800dc3e:	230f      	movs	r3, #15
 800dc40:	1852      	adds	r2, r2, r1
 800dc42:	6850      	ldr	r0, [r2, #4]
 800dc44:	18c1      	adds	r1, r0, r3
 800dc46:	d500      	bpl.n	800dc4a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x36>
 800dc48:	e0a9      	b.n	800dd9e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18a>
 800dc4a:	1109      	asrs	r1, r1, #4
 800dc4c:	9b00      	ldr	r3, [sp, #0]
 800dc4e:	1ac9      	subs	r1, r1, r3
 800dc50:	61a1      	str	r1, [r4, #24]
 800dc52:	d100      	bne.n	800dc56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x42>
 800dc54:	e092      	b.n	800dd7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x168>
 800dc56:	6853      	ldr	r3, [r2, #4]
 800dc58:	6869      	ldr	r1, [r5, #4]
 800dc5a:	6812      	ldr	r2, [r2, #0]
 800dc5c:	1a58      	subs	r0, r3, r1
 800dc5e:	682b      	ldr	r3, [r5, #0]
 800dc60:	9900      	ldr	r1, [sp, #0]
 800dc62:	1ad2      	subs	r2, r2, r3
 800dc64:	9302      	str	r3, [sp, #8]
 800dc66:	0113      	lsls	r3, r2, #4
 800dc68:	4359      	muls	r1, r3
 800dc6a:	9301      	str	r3, [sp, #4]
 800dc6c:	686b      	ldr	r3, [r5, #4]
 800dc6e:	0106      	lsls	r6, r0, #4
 800dc70:	435a      	muls	r2, r3
 800dc72:	1a8b      	subs	r3, r1, r2
 800dc74:	9a02      	ldr	r2, [sp, #8]
 800dc76:	4350      	muls	r0, r2
 800dc78:	1818      	adds	r0, r3, r0
 800dc7a:	3801      	subs	r0, #1
 800dc7c:	1980      	adds	r0, r0, r6
 800dc7e:	d500      	bpl.n	800dc82 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x6e>
 800dc80:	e09b      	b.n	800ddba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a6>
 800dc82:	0031      	movs	r1, r6
 800dc84:	f7f2 fbde 	bl	8000444 <__aeabi_idivmod>
 800dc88:	6020      	str	r0, [r4, #0]
 800dc8a:	6121      	str	r1, [r4, #16]
 800dc8c:	9b01      	ldr	r3, [sp, #4]
 800dc8e:	2b00      	cmp	r3, #0
 800dc90:	da00      	bge.n	800dc94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800dc92:	e0a0      	b.n	800ddd6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c2>
 800dc94:	0031      	movs	r1, r6
 800dc96:	0018      	movs	r0, r3
 800dc98:	f7f2 fbd4 	bl	8000444 <__aeabi_idivmod>
 800dc9c:	6060      	str	r0, [r4, #4]
 800dc9e:	60a1      	str	r1, [r4, #8]
 800dca0:	6963      	ldr	r3, [r4, #20]
 800dca2:	60e6      	str	r6, [r4, #12]
 800dca4:	0118      	lsls	r0, r3, #4
 800dca6:	686b      	ldr	r3, [r5, #4]
 800dca8:	1ac0      	subs	r0, r0, r3
 800dcaa:	f7f3 fa7d 	bl	80011a8 <__aeabi_i2f>
 800dcae:	21f6      	movs	r1, #246	@ 0xf6
 800dcb0:	0589      	lsls	r1, r1, #22
 800dcb2:	f7f2 ff77 	bl	8000ba4 <__aeabi_fmul>
 800dcb6:	6823      	ldr	r3, [r4, #0]
 800dcb8:	1c06      	adds	r6, r0, #0
 800dcba:	0118      	lsls	r0, r3, #4
 800dcbc:	682b      	ldr	r3, [r5, #0]
 800dcbe:	1ac0      	subs	r0, r0, r3
 800dcc0:	f7f3 fa72 	bl	80011a8 <__aeabi_i2f>
 800dcc4:	21f6      	movs	r1, #246	@ 0xf6
 800dcc6:	0589      	lsls	r1, r1, #22
 800dcc8:	f7f2 ff6c 	bl	8000ba4 <__aeabi_fmul>
 800dccc:	9b03      	ldr	r3, [sp, #12]
 800dcce:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800dcd0:	009d      	lsls	r5, r3, #2
 800dcd2:	197d      	adds	r5, r7, r5
 800dcd4:	9001      	str	r0, [sp, #4]
 800dcd6:	1c30      	adds	r0, r6, #0
 800dcd8:	f7f2 ff64 	bl	8000ba4 <__aeabi_fmul>
 800dcdc:	6829      	ldr	r1, [r5, #0]
 800dcde:	f7f2 fbf1 	bl	80004c4 <__aeabi_fadd>
 800dce2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800dce4:	9000      	str	r0, [sp, #0]
 800dce6:	9801      	ldr	r0, [sp, #4]
 800dce8:	f7f2 ff5c 	bl	8000ba4 <__aeabi_fmul>
 800dcec:	1c01      	adds	r1, r0, #0
 800dcee:	9800      	ldr	r0, [sp, #0]
 800dcf0:	f7f2 fbe8 	bl	80004c4 <__aeabi_fadd>
 800dcf4:	61e0      	str	r0, [r4, #28]
 800dcf6:	6860      	ldr	r0, [r4, #4]
 800dcf8:	f7f3 fa56 	bl	80011a8 <__aeabi_i2f>
 800dcfc:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800dcfe:	9000      	str	r0, [sp, #0]
 800dd00:	f7f2 ff50 	bl	8000ba4 <__aeabi_fmul>
 800dd04:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800dd06:	f7f2 fbdd 	bl	80004c4 <__aeabi_fadd>
 800dd0a:	6220      	str	r0, [r4, #32]
 800dd0c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd0e:	1c30      	adds	r0, r6, #0
 800dd10:	6263      	str	r3, [r4, #36]	@ 0x24
 800dd12:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800dd14:	f7f2 ff46 	bl	8000ba4 <__aeabi_fmul>
 800dd18:	68e9      	ldr	r1, [r5, #12]
 800dd1a:	f7f2 fbd3 	bl	80004c4 <__aeabi_fadd>
 800dd1e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800dd20:	9002      	str	r0, [sp, #8]
 800dd22:	9801      	ldr	r0, [sp, #4]
 800dd24:	f7f2 ff3e 	bl	8000ba4 <__aeabi_fmul>
 800dd28:	1c01      	adds	r1, r0, #0
 800dd2a:	9802      	ldr	r0, [sp, #8]
 800dd2c:	f7f2 fbca 	bl	80004c4 <__aeabi_fadd>
 800dd30:	62a0      	str	r0, [r4, #40]	@ 0x28
 800dd32:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800dd34:	9800      	ldr	r0, [sp, #0]
 800dd36:	f7f2 ff35 	bl	8000ba4 <__aeabi_fmul>
 800dd3a:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800dd3c:	f7f2 fbc2 	bl	80004c4 <__aeabi_fadd>
 800dd40:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800dd42:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dd44:	1c30      	adds	r0, r6, #0
 800dd46:	6323      	str	r3, [r4, #48]	@ 0x30
 800dd48:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800dd4a:	f7f2 ff2b 	bl	8000ba4 <__aeabi_fmul>
 800dd4e:	69a9      	ldr	r1, [r5, #24]
 800dd50:	f7f2 fbb8 	bl	80004c4 <__aeabi_fadd>
 800dd54:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 800dd56:	1c05      	adds	r5, r0, #0
 800dd58:	9801      	ldr	r0, [sp, #4]
 800dd5a:	f7f2 ff23 	bl	8000ba4 <__aeabi_fmul>
 800dd5e:	1c01      	adds	r1, r0, #0
 800dd60:	1c28      	adds	r0, r5, #0
 800dd62:	f7f2 fbaf 	bl	80004c4 <__aeabi_fadd>
 800dd66:	6360      	str	r0, [r4, #52]	@ 0x34
 800dd68:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 800dd6a:	9800      	ldr	r0, [sp, #0]
 800dd6c:	f7f2 ff1a 	bl	8000ba4 <__aeabi_fmul>
 800dd70:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800dd72:	f7f2 fba7 	bl	80004c4 <__aeabi_fadd>
 800dd76:	63a0      	str	r0, [r4, #56]	@ 0x38
 800dd78:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800dd7a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800dd7c:	0020      	movs	r0, r4
 800dd7e:	b005      	add	sp, #20
 800dd80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dd82:	210f      	movs	r1, #15
 800dd84:	17d8      	asrs	r0, r3, #31
 800dd86:	4008      	ands	r0, r1
 800dd88:	260f      	movs	r6, #15
 800dd8a:	18c0      	adds	r0, r0, r3
 800dd8c:	4663      	mov	r3, ip
 800dd8e:	4276      	negs	r6, r6
 800dd90:	1af6      	subs	r6, r6, r3
 800dd92:	4031      	ands	r1, r6
 800dd94:	1e4b      	subs	r3, r1, #1
 800dd96:	4199      	sbcs	r1, r3
 800dd98:	1100      	asrs	r0, r0, #4
 800dd9a:	1a43      	subs	r3, r0, r1
 800dd9c:	e749      	b.n	800dc32 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e>
 800dd9e:	260f      	movs	r6, #15
 800dda0:	17cb      	asrs	r3, r1, #31
 800dda2:	4033      	ands	r3, r6
 800dda4:	469c      	mov	ip, r3
 800dda6:	230f      	movs	r3, #15
 800dda8:	425b      	negs	r3, r3
 800ddaa:	1a18      	subs	r0, r3, r0
 800ddac:	4006      	ands	r6, r0
 800ddae:	1e70      	subs	r0, r6, #1
 800ddb0:	4186      	sbcs	r6, r0
 800ddb2:	4461      	add	r1, ip
 800ddb4:	1109      	asrs	r1, r1, #4
 800ddb6:	1b89      	subs	r1, r1, r6
 800ddb8:	e748      	b.n	800dc4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800ddba:	4240      	negs	r0, r0
 800ddbc:	0031      	movs	r1, r6
 800ddbe:	f7f2 fb41 	bl	8000444 <__aeabi_idivmod>
 800ddc2:	4243      	negs	r3, r0
 800ddc4:	6023      	str	r3, [r4, #0]
 800ddc6:	6121      	str	r1, [r4, #16]
 800ddc8:	2900      	cmp	r1, #0
 800ddca:	d100      	bne.n	800ddce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 800ddcc:	e75e      	b.n	800dc8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x78>
 800ddce:	43c0      	mvns	r0, r0
 800ddd0:	1a71      	subs	r1, r6, r1
 800ddd2:	6020      	str	r0, [r4, #0]
 800ddd4:	e759      	b.n	800dc8a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x76>
 800ddd6:	9b01      	ldr	r3, [sp, #4]
 800ddd8:	0031      	movs	r1, r6
 800ddda:	4258      	negs	r0, r3
 800dddc:	f7f2 fb32 	bl	8000444 <__aeabi_idivmod>
 800dde0:	4243      	negs	r3, r0
 800dde2:	6063      	str	r3, [r4, #4]
 800dde4:	60a1      	str	r1, [r4, #8]
 800dde6:	2900      	cmp	r1, #0
 800dde8:	d100      	bne.n	800ddec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d8>
 800ddea:	e759      	b.n	800dca0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x8c>
 800ddec:	43c0      	mvns	r0, r0
 800ddee:	1a71      	subs	r1, r6, r1
 800ddf0:	6060      	str	r0, [r4, #4]
 800ddf2:	e754      	b.n	800dc9e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x8a>

0800ddf4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800ddf4:	1e01      	subs	r1, r0, #0
 800ddf6:	d007      	beq.n	800de08 <_ZN8touchgfx7Unicode6strlenEPKt+0x14>
 800ddf8:	2300      	movs	r3, #0
 800ddfa:	b298      	uxth	r0, r3
 800ddfc:	3301      	adds	r3, #1
 800ddfe:	005a      	lsls	r2, r3, #1
 800de00:	3a02      	subs	r2, #2
 800de02:	5a8a      	ldrh	r2, [r1, r2]
 800de04:	2a00      	cmp	r2, #0
 800de06:	d1f8      	bne.n	800ddfa <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800de08:	4770      	bx	lr

0800de0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800de0a:	b570      	push	{r4, r5, r6, lr}
 800de0c:	0004      	movs	r4, r0
 800de0e:	1e08      	subs	r0, r1, #0
 800de10:	d00b      	beq.n	800de2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x20>
 800de12:	1e20      	subs	r0, r4, #0
 800de14:	d009      	beq.n	800de2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x20>
 800de16:	2300      	movs	r3, #0
 800de18:	b298      	uxth	r0, r3
 800de1a:	4282      	cmp	r2, r0
 800de1c:	d905      	bls.n	800de2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x20>
 800de1e:	5ccd      	ldrb	r5, [r1, r3]
 800de20:	005e      	lsls	r6, r3, #1
 800de22:	53a5      	strh	r5, [r4, r6]
 800de24:	3301      	adds	r3, #1
 800de26:	2d00      	cmp	r5, #0
 800de28:	d1f6      	bne.n	800de18 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xe>
 800de2a:	bd70      	pop	{r4, r5, r6, pc}

0800de2c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 800de2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de2e:	b08d      	sub	sp, #52	@ 0x34
 800de30:	9200      	str	r2, [sp, #0]
 800de32:	2200      	movs	r2, #0
 800de34:	0006      	movs	r6, r0
 800de36:	000f      	movs	r7, r1
 800de38:	251f      	movs	r5, #31
 800de3a:	9301      	str	r3, [sp, #4]
 800de3c:	ab02      	add	r3, sp, #8
 800de3e:	3305      	adds	r3, #5
 800de40:	77da      	strb	r2, [r3, #31]
 800de42:	ac03      	add	r4, sp, #12
 800de44:	9901      	ldr	r1, [sp, #4]
 800de46:	f7f2 fafd 	bl	8000444 <__aeabi_idivmod>
 800de4a:	17cb      	asrs	r3, r1, #31
 800de4c:	18c9      	adds	r1, r1, r3
 800de4e:	4059      	eors	r1, r3
 800de50:	b2ca      	uxtb	r2, r1
 800de52:	0013      	movs	r3, r2
 800de54:	3357      	adds	r3, #87	@ 0x57
 800de56:	b2db      	uxtb	r3, r3
 800de58:	2909      	cmp	r1, #9
 800de5a:	dc02      	bgt.n	800de62 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x36>
 800de5c:	0013      	movs	r3, r2
 800de5e:	3330      	adds	r3, #48	@ 0x30
 800de60:	b2db      	uxtb	r3, r3
 800de62:	1e69      	subs	r1, r5, #1
 800de64:	5563      	strb	r3, [r4, r5]
 800de66:	2800      	cmp	r0, #0
 800de68:	d10c      	bne.n	800de84 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x58>
 800de6a:	2e00      	cmp	r6, #0
 800de6c:	da02      	bge.n	800de74 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x48>
 800de6e:	232d      	movs	r3, #45	@ 0x2d
 800de70:	5463      	strb	r3, [r4, r1]
 800de72:	1ea9      	subs	r1, r5, #2
 800de74:	3101      	adds	r1, #1
 800de76:	1861      	adds	r1, r4, r1
 800de78:	9a00      	ldr	r2, [sp, #0]
 800de7a:	0038      	movs	r0, r7
 800de7c:	f7ff ffc5 	bl	800de0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800de80:	b00d      	add	sp, #52	@ 0x34
 800de82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de84:	000d      	movs	r5, r1
 800de86:	e7dd      	b.n	800de44 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x18>

0800de88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 800de88:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de8a:	b08d      	sub	sp, #52	@ 0x34
 800de8c:	9201      	str	r2, [sp, #4]
 800de8e:	2200      	movs	r2, #0
 800de90:	000e      	movs	r6, r1
 800de92:	251f      	movs	r5, #31
 800de94:	001f      	movs	r7, r3
 800de96:	ab02      	add	r3, sp, #8
 800de98:	3305      	adds	r3, #5
 800de9a:	77da      	strb	r2, [r3, #31]
 800de9c:	ac03      	add	r4, sp, #12
 800de9e:	0039      	movs	r1, r7
 800dea0:	f7f2 f9e6 	bl	8000270 <__aeabi_uidivmod>
 800dea4:	b2ca      	uxtb	r2, r1
 800dea6:	0013      	movs	r3, r2
 800dea8:	3357      	adds	r3, #87	@ 0x57
 800deaa:	b2db      	uxtb	r3, r3
 800deac:	2909      	cmp	r1, #9
 800deae:	dc02      	bgt.n	800deb6 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x2e>
 800deb0:	0013      	movs	r3, r2
 800deb2:	3330      	adds	r3, #48	@ 0x30
 800deb4:	b2db      	uxtb	r3, r3
 800deb6:	552b      	strb	r3, [r5, r4]
 800deb8:	1e6b      	subs	r3, r5, #1
 800deba:	2800      	cmp	r0, #0
 800debc:	d106      	bne.n	800decc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x44>
 800debe:	1961      	adds	r1, r4, r5
 800dec0:	9a01      	ldr	r2, [sp, #4]
 800dec2:	0030      	movs	r0, r6
 800dec4:	f7ff ffa1 	bl	800de0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800dec8:	b00d      	add	sp, #52	@ 0x34
 800deca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800decc:	001d      	movs	r5, r3
 800dece:	e7e6      	b.n	800de9e <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x16>

0800ded0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800ded0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ded2:	b087      	sub	sp, #28
 800ded4:	9302      	str	r3, [sp, #8]
 800ded6:	ab0c      	add	r3, sp, #48	@ 0x30
 800ded8:	781d      	ldrb	r5, [r3, #0]
 800deda:	ab0e      	add	r3, sp, #56	@ 0x38
 800dedc:	781b      	ldrb	r3, [r3, #0]
 800dede:	0007      	movs	r7, r0
 800dee0:	9305      	str	r3, [sp, #20]
 800dee2:	ab10      	add	r3, sp, #64	@ 0x40
 800dee4:	781b      	ldrb	r3, [r3, #0]
 800dee6:	9100      	str	r1, [sp, #0]
 800dee8:	9303      	str	r3, [sp, #12]
 800deea:	ab12      	add	r3, sp, #72	@ 0x48
 800deec:	881b      	ldrh	r3, [r3, #0]
 800deee:	0016      	movs	r6, r2
 800def0:	9304      	str	r3, [sp, #16]
 800def2:	6803      	ldr	r3, [r0, #0]
 800def4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 800def6:	0018      	movs	r0, r3
 800def8:	9301      	str	r3, [sp, #4]
 800defa:	f7ff ff7b 	bl	800ddf4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800defe:	9900      	ldr	r1, [sp, #0]
 800df00:	0002      	movs	r2, r0
 800df02:	1e4b      	subs	r3, r1, #1
 800df04:	4199      	sbcs	r1, r3
 800df06:	1841      	adds	r1, r0, r1
 800df08:	b289      	uxth	r1, r1
 800df0a:	2e69      	cmp	r6, #105	@ 0x69
 800df0c:	d009      	beq.n	800df22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x52>
 800df0e:	d822      	bhi.n	800df56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800df10:	2e63      	cmp	r6, #99	@ 0x63
 800df12:	d063      	beq.n	800dfdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x10c>
 800df14:	2e64      	cmp	r6, #100	@ 0x64
 800df16:	d004      	beq.n	800df22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x52>
 800df18:	2e58      	cmp	r6, #88	@ 0x58
 800df1a:	d122      	bne.n	800df62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x92>
 800df1c:	2300      	movs	r3, #0
 800df1e:	0011      	movs	r1, r2
 800df20:	9300      	str	r3, [sp, #0]
 800df22:	2300      	movs	r3, #0
 800df24:	9e02      	ldr	r6, [sp, #8]
 800df26:	429e      	cmp	r6, r3
 800df28:	d01c      	beq.n	800df64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x94>
 800df2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800df2c:	2b00      	cmp	r3, #0
 800df2e:	d109      	bne.n	800df44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x74>
 800df30:	2a01      	cmp	r2, #1
 800df32:	d107      	bne.n	800df44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x74>
 800df34:	9b01      	ldr	r3, [sp, #4]
 800df36:	881b      	ldrh	r3, [r3, #0]
 800df38:	2b30      	cmp	r3, #48	@ 0x30
 800df3a:	d103      	bne.n	800df44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x74>
 800df3c:	9b01      	ldr	r3, [sp, #4]
 800df3e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800df40:	3302      	adds	r3, #2
 800df42:	603b      	str	r3, [r7, #0]
 800df44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800df46:	4299      	cmp	r1, r3
 800df48:	da4e      	bge.n	800dfe8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x118>
 800df4a:	b29d      	uxth	r5, r3
 800df4c:	1a6b      	subs	r3, r5, r1
 800df4e:	0029      	movs	r1, r5
 800df50:	b29b      	uxth	r3, r3
 800df52:	2500      	movs	r5, #0
 800df54:	e006      	b.n	800df64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x94>
 800df56:	2e73      	cmp	r6, #115	@ 0x73
 800df58:	d036      	beq.n	800dfc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf8>
 800df5a:	2e78      	cmp	r6, #120	@ 0x78
 800df5c:	d0de      	beq.n	800df1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x4c>
 800df5e:	2e6f      	cmp	r6, #111	@ 0x6f
 800df60:	d0dc      	beq.n	800df1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x4c>
 800df62:	2300      	movs	r3, #0
 800df64:	2200      	movs	r2, #0
 800df66:	9e05      	ldr	r6, [sp, #20]
 800df68:	4296      	cmp	r6, r2
 800df6a:	d00e      	beq.n	800df8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xba>
 800df6c:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 800df6e:	42b1      	cmp	r1, r6
 800df70:	da0b      	bge.n	800df8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xba>
 800df72:	1a72      	subs	r2, r6, r1
 800df74:	9903      	ldr	r1, [sp, #12]
 800df76:	b292      	uxth	r2, r2
 800df78:	2900      	cmp	r1, #0
 800df7a:	d106      	bne.n	800df8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xba>
 800df7c:	2d00      	cmp	r5, #0
 800df7e:	d03a      	beq.n	800dff6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800df80:	2800      	cmp	r0, #0
 800df82:	d038      	beq.n	800dff6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800df84:	189b      	adds	r3, r3, r2
 800df86:	b29b      	uxth	r3, r3
 800df88:	2200      	movs	r2, #0
 800df8a:	9d04      	ldr	r5, [sp, #16]
 800df8c:	6821      	ldr	r1, [r4, #0]
 800df8e:	3d01      	subs	r5, #1
 800df90:	46ac      	mov	ip, r5
 800df92:	42a9      	cmp	r1, r5
 800df94:	da09      	bge.n	800dfaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xda>
 800df96:	9e00      	ldr	r6, [sp, #0]
 800df98:	2e00      	cmp	r6, #0
 800df9a:	d006      	beq.n	800dfaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xda>
 800df9c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800df9e:	9d00      	ldr	r5, [sp, #0]
 800dfa0:	0049      	lsls	r1, r1, #1
 800dfa2:	538d      	strh	r5, [r1, r6]
 800dfa4:	6821      	ldr	r1, [r4, #0]
 800dfa6:	3101      	adds	r1, #1
 800dfa8:	6021      	str	r1, [r4, #0]
 800dfaa:	2630      	movs	r6, #48	@ 0x30
 800dfac:	2b00      	cmp	r3, #0
 800dfae:	d036      	beq.n	800e01e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x14e>
 800dfb0:	6821      	ldr	r1, [r4, #0]
 800dfb2:	3b01      	subs	r3, #1
 800dfb4:	b29b      	uxth	r3, r3
 800dfb6:	458c      	cmp	ip, r1
 800dfb8:	dd31      	ble.n	800e01e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x14e>
 800dfba:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800dfbc:	0049      	lsls	r1, r1, #1
 800dfbe:	534e      	strh	r6, [r1, r5]
 800dfc0:	6821      	ldr	r1, [r4, #0]
 800dfc2:	3101      	adds	r1, #1
 800dfc4:	6021      	str	r1, [r4, #0]
 800dfc6:	e7f1      	b.n	800dfac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xdc>
 800dfc8:	9b02      	ldr	r3, [sp, #8]
 800dfca:	2b00      	cmp	r3, #0
 800dfcc:	d00e      	beq.n	800dfec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11c>
 800dfce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800dfd0:	0001      	movs	r1, r0
 800dfd2:	4298      	cmp	r0, r3
 800dfd4:	dd00      	ble.n	800dfd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800dfd6:	b298      	uxth	r0, r3
 800dfd8:	2300      	movs	r3, #0
 800dfda:	e002      	b.n	800dfe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x112>
 800dfdc:	2101      	movs	r1, #1
 800dfde:	2300      	movs	r3, #0
 800dfe0:	0008      	movs	r0, r1
 800dfe2:	001d      	movs	r5, r3
 800dfe4:	9300      	str	r3, [sp, #0]
 800dfe6:	e7bd      	b.n	800df64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x94>
 800dfe8:	2300      	movs	r3, #0
 800dfea:	e7b2      	b.n	800df52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x82>
 800dfec:	9d02      	ldr	r5, [sp, #8]
 800dfee:	0001      	movs	r1, r0
 800dff0:	002b      	movs	r3, r5
 800dff2:	9500      	str	r5, [sp, #0]
 800dff4:	e7b6      	b.n	800df64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x94>
 800dff6:	2a00      	cmp	r2, #0
 800dff8:	d0c7      	beq.n	800df8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xba>
 800dffa:	9904      	ldr	r1, [sp, #16]
 800dffc:	2520      	movs	r5, #32
 800dffe:	3901      	subs	r1, #1
 800e000:	468c      	mov	ip, r1
 800e002:	6821      	ldr	r1, [r4, #0]
 800e004:	2a00      	cmp	r2, #0
 800e006:	d0c0      	beq.n	800df8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xba>
 800e008:	3a01      	subs	r2, #1
 800e00a:	b292      	uxth	r2, r2
 800e00c:	4561      	cmp	r1, ip
 800e00e:	dabb      	bge.n	800df88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800e010:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800e012:	0049      	lsls	r1, r1, #1
 800e014:	538d      	strh	r5, [r1, r6]
 800e016:	6821      	ldr	r1, [r4, #0]
 800e018:	3101      	adds	r1, #1
 800e01a:	6021      	str	r1, [r4, #0]
 800e01c:	e7f1      	b.n	800e002 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x132>
 800e01e:	2800      	cmp	r0, #0
 800e020:	d010      	beq.n	800e044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x174>
 800e022:	6823      	ldr	r3, [r4, #0]
 800e024:	3801      	subs	r0, #1
 800e026:	b280      	uxth	r0, r0
 800e028:	459c      	cmp	ip, r3
 800e02a:	dd0b      	ble.n	800e044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x174>
 800e02c:	683b      	ldr	r3, [r7, #0]
 800e02e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800e030:	1c99      	adds	r1, r3, #2
 800e032:	6039      	str	r1, [r7, #0]
 800e034:	8819      	ldrh	r1, [r3, #0]
 800e036:	6823      	ldr	r3, [r4, #0]
 800e038:	005b      	lsls	r3, r3, #1
 800e03a:	5359      	strh	r1, [r3, r5]
 800e03c:	6823      	ldr	r3, [r4, #0]
 800e03e:	3301      	adds	r3, #1
 800e040:	6023      	str	r3, [r4, #0]
 800e042:	e7ec      	b.n	800e01e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x14e>
 800e044:	2020      	movs	r0, #32
 800e046:	2a00      	cmp	r2, #0
 800e048:	d00b      	beq.n	800e062 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x192>
 800e04a:	6821      	ldr	r1, [r4, #0]
 800e04c:	3a01      	subs	r2, #1
 800e04e:	b292      	uxth	r2, r2
 800e050:	458c      	cmp	ip, r1
 800e052:	dd06      	ble.n	800e062 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x192>
 800e054:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800e056:	0049      	lsls	r1, r1, #1
 800e058:	52c8      	strh	r0, [r1, r3]
 800e05a:	6823      	ldr	r3, [r4, #0]
 800e05c:	3301      	adds	r3, #1
 800e05e:	6023      	str	r3, [r4, #0]
 800e060:	e7f1      	b.n	800e046 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x176>
 800e062:	b007      	add	sp, #28
 800e064:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e066 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800e066:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e068:	0015      	movs	r5, r2
 800e06a:	001e      	movs	r6, r3
 800e06c:	2300      	movs	r3, #0
 800e06e:	9f05      	ldr	r7, [sp, #20]
 800e070:	802b      	strh	r3, [r5, #0]
 800e072:	7033      	strb	r3, [r6, #0]
 800e074:	703b      	strb	r3, [r7, #0]
 800e076:	9f06      	ldr	r7, [sp, #24]
 800e078:	9c08      	ldr	r4, [sp, #32]
 800e07a:	703b      	strb	r3, [r7, #0]
 800e07c:	9f07      	ldr	r7, [sp, #28]
 800e07e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e080:	703b      	strb	r3, [r7, #0]
 800e082:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800e084:	703b      	strb	r3, [r7, #0]
 800e086:	6803      	ldr	r3, [r0, #0]
 800e088:	2b00      	cmp	r3, #0
 800e08a:	d017      	beq.n	800e0bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x56>
 800e08c:	881b      	ldrh	r3, [r3, #0]
 800e08e:	2701      	movs	r7, #1
 800e090:	2b00      	cmp	r3, #0
 800e092:	d026      	beq.n	800e0e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x7c>
 800e094:	2b2b      	cmp	r3, #43	@ 0x2b
 800e096:	d001      	beq.n	800e09c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x36>
 800e098:	2b20      	cmp	r3, #32
 800e09a:	d114      	bne.n	800e0c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x60>
 800e09c:	802b      	strh	r3, [r5, #0]
 800e09e:	6803      	ldr	r3, [r0, #0]
 800e0a0:	2b00      	cmp	r3, #0
 800e0a2:	d001      	beq.n	800e0a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800e0a4:	3302      	adds	r3, #2
 800e0a6:	6003      	str	r3, [r0, #0]
 800e0a8:	680b      	ldr	r3, [r1, #0]
 800e0aa:	2b00      	cmp	r3, #0
 800e0ac:	d001      	beq.n	800e0b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4c>
 800e0ae:	3301      	adds	r3, #1
 800e0b0:	600b      	str	r3, [r1, #0]
 800e0b2:	6803      	ldr	r3, [r0, #0]
 800e0b4:	2b00      	cmp	r3, #0
 800e0b6:	d00f      	beq.n	800e0d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x72>
 800e0b8:	881b      	ldrh	r3, [r3, #0]
 800e0ba:	e7e9      	b.n	800e090 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800e0bc:	680b      	ldr	r3, [r1, #0]
 800e0be:	2b00      	cmp	r3, #0
 800e0c0:	d00f      	beq.n	800e0e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x7c>
 800e0c2:	781b      	ldrb	r3, [r3, #0]
 800e0c4:	e7e3      	b.n	800e08e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x28>
 800e0c6:	2b2d      	cmp	r3, #45	@ 0x2d
 800e0c8:	d101      	bne.n	800e0ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x68>
 800e0ca:	7037      	strb	r7, [r6, #0]
 800e0cc:	e7e7      	b.n	800e09e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800e0ce:	2b23      	cmp	r3, #35	@ 0x23
 800e0d0:	d108      	bne.n	800e0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x7e>
 800e0d2:	9b05      	ldr	r3, [sp, #20]
 800e0d4:	701f      	strb	r7, [r3, #0]
 800e0d6:	e7e2      	b.n	800e09e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800e0d8:	680b      	ldr	r3, [r1, #0]
 800e0da:	2b00      	cmp	r3, #0
 800e0dc:	d001      	beq.n	800e0e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x7c>
 800e0de:	781b      	ldrb	r3, [r3, #0]
 800e0e0:	e7d6      	b.n	800e090 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800e0e2:	2300      	movs	r3, #0
 800e0e4:	001f      	movs	r7, r3
 800e0e6:	3f30      	subs	r7, #48	@ 0x30
 800e0e8:	2f09      	cmp	r7, #9
 800e0ea:	d901      	bls.n	800e0f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x8a>
 800e0ec:	2b2a      	cmp	r3, #42	@ 0x2a
 800e0ee:	d126      	bne.n	800e13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xd8>
 800e0f0:	2701      	movs	r7, #1
 800e0f2:	9d07      	ldr	r5, [sp, #28]
 800e0f4:	702f      	strb	r7, [r5, #0]
 800e0f6:	2b30      	cmp	r3, #48	@ 0x30
 800e0f8:	d10f      	bne.n	800e11a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xb4>
 800e0fa:	9b06      	ldr	r3, [sp, #24]
 800e0fc:	701f      	strb	r7, [r3, #0]
 800e0fe:	6803      	ldr	r3, [r0, #0]
 800e100:	2b00      	cmp	r3, #0
 800e102:	d001      	beq.n	800e108 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800e104:	3302      	adds	r3, #2
 800e106:	6003      	str	r3, [r0, #0]
 800e108:	680b      	ldr	r3, [r1, #0]
 800e10a:	2b00      	cmp	r3, #0
 800e10c:	d001      	beq.n	800e112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xac>
 800e10e:	3301      	adds	r3, #1
 800e110:	600b      	str	r3, [r1, #0]
 800e112:	6803      	ldr	r3, [r0, #0]
 800e114:	2b00      	cmp	r3, #0
 800e116:	d034      	beq.n	800e182 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11c>
 800e118:	881b      	ldrh	r3, [r3, #0]
 800e11a:	2b2a      	cmp	r3, #42	@ 0x2a
 800e11c:	d13b      	bne.n	800e196 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x130>
 800e11e:	3b2b      	subs	r3, #43	@ 0x2b
 800e120:	6023      	str	r3, [r4, #0]
 800e122:	6803      	ldr	r3, [r0, #0]
 800e124:	2b00      	cmp	r3, #0
 800e126:	d001      	beq.n	800e12c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc6>
 800e128:	3302      	adds	r3, #2
 800e12a:	6003      	str	r3, [r0, #0]
 800e12c:	680b      	ldr	r3, [r1, #0]
 800e12e:	2b00      	cmp	r3, #0
 800e130:	d001      	beq.n	800e136 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xd0>
 800e132:	3301      	adds	r3, #1
 800e134:	600b      	str	r3, [r1, #0]
 800e136:	6803      	ldr	r3, [r0, #0]
 800e138:	2b00      	cmp	r3, #0
 800e13a:	d027      	beq.n	800e18c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x126>
 800e13c:	881b      	ldrh	r3, [r3, #0]
 800e13e:	2b2e      	cmp	r3, #46	@ 0x2e
 800e140:	d11e      	bne.n	800e180 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800e142:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 800e144:	3b2d      	subs	r3, #45	@ 0x2d
 800e146:	7023      	strb	r3, [r4, #0]
 800e148:	6803      	ldr	r3, [r0, #0]
 800e14a:	2b00      	cmp	r3, #0
 800e14c:	d001      	beq.n	800e152 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xec>
 800e14e:	3302      	adds	r3, #2
 800e150:	6003      	str	r3, [r0, #0]
 800e152:	680b      	ldr	r3, [r1, #0]
 800e154:	2b00      	cmp	r3, #0
 800e156:	d001      	beq.n	800e15c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xf6>
 800e158:	3301      	adds	r3, #1
 800e15a:	600b      	str	r3, [r1, #0]
 800e15c:	6803      	ldr	r3, [r0, #0]
 800e15e:	2b00      	cmp	r3, #0
 800e160:	d039      	beq.n	800e1d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x170>
 800e162:	881b      	ldrh	r3, [r3, #0]
 800e164:	2b2a      	cmp	r3, #42	@ 0x2a
 800e166:	d13b      	bne.n	800e1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17a>
 800e168:	3b2b      	subs	r3, #43	@ 0x2b
 800e16a:	6013      	str	r3, [r2, #0]
 800e16c:	6803      	ldr	r3, [r0, #0]
 800e16e:	2b00      	cmp	r3, #0
 800e170:	d001      	beq.n	800e176 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800e172:	3302      	adds	r3, #2
 800e174:	6003      	str	r3, [r0, #0]
 800e176:	680b      	ldr	r3, [r1, #0]
 800e178:	2b00      	cmp	r3, #0
 800e17a:	d001      	beq.n	800e180 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800e17c:	3301      	adds	r3, #1
 800e17e:	600b      	str	r3, [r1, #0]
 800e180:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e182:	680b      	ldr	r3, [r1, #0]
 800e184:	2b00      	cmp	r3, #0
 800e186:	d006      	beq.n	800e196 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x130>
 800e188:	781b      	ldrb	r3, [r3, #0]
 800e18a:	e7c6      	b.n	800e11a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xb4>
 800e18c:	680b      	ldr	r3, [r1, #0]
 800e18e:	2b00      	cmp	r3, #0
 800e190:	d0f6      	beq.n	800e180 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800e192:	781b      	ldrb	r3, [r3, #0]
 800e194:	e7d3      	b.n	800e13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xd8>
 800e196:	2500      	movs	r5, #0
 800e198:	6025      	str	r5, [r4, #0]
 800e19a:	350a      	adds	r5, #10
 800e19c:	001e      	movs	r6, r3
 800e19e:	3e30      	subs	r6, #48	@ 0x30
 800e1a0:	b2b7      	uxth	r7, r6
 800e1a2:	2f09      	cmp	r7, #9
 800e1a4:	d8cb      	bhi.n	800e13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xd8>
 800e1a6:	6823      	ldr	r3, [r4, #0]
 800e1a8:	436b      	muls	r3, r5
 800e1aa:	199b      	adds	r3, r3, r6
 800e1ac:	6023      	str	r3, [r4, #0]
 800e1ae:	6803      	ldr	r3, [r0, #0]
 800e1b0:	2b00      	cmp	r3, #0
 800e1b2:	d001      	beq.n	800e1b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x152>
 800e1b4:	3302      	adds	r3, #2
 800e1b6:	6003      	str	r3, [r0, #0]
 800e1b8:	680b      	ldr	r3, [r1, #0]
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	d001      	beq.n	800e1c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15c>
 800e1be:	3301      	adds	r3, #1
 800e1c0:	600b      	str	r3, [r1, #0]
 800e1c2:	6803      	ldr	r3, [r0, #0]
 800e1c4:	2b00      	cmp	r3, #0
 800e1c6:	d001      	beq.n	800e1cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x166>
 800e1c8:	881b      	ldrh	r3, [r3, #0]
 800e1ca:	e7e7      	b.n	800e19c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x136>
 800e1cc:	680e      	ldr	r6, [r1, #0]
 800e1ce:	1e33      	subs	r3, r6, #0
 800e1d0:	d0e4      	beq.n	800e19c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x136>
 800e1d2:	7833      	ldrb	r3, [r6, #0]
 800e1d4:	e7e2      	b.n	800e19c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x136>
 800e1d6:	680b      	ldr	r3, [r1, #0]
 800e1d8:	2b00      	cmp	r3, #0
 800e1da:	d001      	beq.n	800e1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17a>
 800e1dc:	781b      	ldrb	r3, [r3, #0]
 800e1de:	e7c1      	b.n	800e164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfe>
 800e1e0:	2400      	movs	r4, #0
 800e1e2:	250a      	movs	r5, #10
 800e1e4:	6014      	str	r4, [r2, #0]
 800e1e6:	3b30      	subs	r3, #48	@ 0x30
 800e1e8:	b29e      	uxth	r6, r3
 800e1ea:	6814      	ldr	r4, [r2, #0]
 800e1ec:	2e09      	cmp	r6, #9
 800e1ee:	d816      	bhi.n	800e21e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x1b8>
 800e1f0:	436c      	muls	r4, r5
 800e1f2:	18e3      	adds	r3, r4, r3
 800e1f4:	6013      	str	r3, [r2, #0]
 800e1f6:	6803      	ldr	r3, [r0, #0]
 800e1f8:	2b00      	cmp	r3, #0
 800e1fa:	d001      	beq.n	800e200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x19a>
 800e1fc:	3302      	adds	r3, #2
 800e1fe:	6003      	str	r3, [r0, #0]
 800e200:	680b      	ldr	r3, [r1, #0]
 800e202:	2b00      	cmp	r3, #0
 800e204:	d001      	beq.n	800e20a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x1a4>
 800e206:	3301      	adds	r3, #1
 800e208:	600b      	str	r3, [r1, #0]
 800e20a:	6803      	ldr	r3, [r0, #0]
 800e20c:	2b00      	cmp	r3, #0
 800e20e:	d001      	beq.n	800e214 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x1ae>
 800e210:	881b      	ldrh	r3, [r3, #0]
 800e212:	e7e8      	b.n	800e1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x180>
 800e214:	680c      	ldr	r4, [r1, #0]
 800e216:	1e23      	subs	r3, r4, #0
 800e218:	d0e5      	beq.n	800e1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x180>
 800e21a:	7823      	ldrb	r3, [r4, #0]
 800e21c:	e7e3      	b.n	800e1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x180>
 800e21e:	2c06      	cmp	r4, #6
 800e220:	dd00      	ble.n	800e224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x1be>
 800e222:	2406      	movs	r4, #6
 800e224:	6014      	str	r4, [r2, #0]
 800e226:	e7ab      	b.n	800e180 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>

0800e228 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800e228:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e22a:	b0a5      	sub	sp, #148	@ 0x94
 800e22c:	9109      	str	r1, [sp, #36]	@ 0x24
 800e22e:	2100      	movs	r1, #0
 800e230:	0007      	movs	r7, r0
 800e232:	920b      	str	r2, [sp, #44]	@ 0x2c
 800e234:	a813      	add	r0, sp, #76	@ 0x4c
 800e236:	2242      	movs	r2, #66	@ 0x42
 800e238:	930a      	str	r3, [sp, #40]	@ 0x28
 800e23a:	9c2a      	ldr	r4, [sp, #168]	@ 0xa8
 800e23c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800e23e:	f004 fcae 	bl	8012b9e <memset>
 800e242:	2f00      	cmp	r7, #0
 800e244:	d00d      	beq.n	800e262 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3a>
 800e246:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e248:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e24a:	2a00      	cmp	r2, #0
 800e24c:	d00c      	beq.n	800e268 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x40>
 800e24e:	8812      	ldrh	r2, [r2, #0]
 800e250:	2a00      	cmp	r2, #0
 800e252:	d003      	beq.n	800e25c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x34>
 800e254:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e256:	1e51      	subs	r1, r2, #1
 800e258:	4299      	cmp	r1, r3
 800e25a:	dc2b      	bgt.n	800e2b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8c>
 800e25c:	2200      	movs	r2, #0
 800e25e:	005b      	lsls	r3, r3, #1
 800e260:	53da      	strh	r2, [r3, r7]
 800e262:	0038      	movs	r0, r7
 800e264:	b025      	add	sp, #148	@ 0x94
 800e266:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e268:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e26a:	2a00      	cmp	r2, #0
 800e26c:	d0f6      	beq.n	800e25c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x34>
 800e26e:	7812      	ldrb	r2, [r2, #0]
 800e270:	e7ee      	b.n	800e250 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800e272:	2d00      	cmp	r5, #0
 800e274:	d0e7      	beq.n	800e246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1e>
 800e276:	782a      	ldrb	r2, [r5, #0]
 800e278:	2a00      	cmp	r2, #0
 800e27a:	d007      	beq.n	800e28c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x64>
 800e27c:	2a25      	cmp	r2, #37	@ 0x25
 800e27e:	d001      	beq.n	800e284 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5c>
 800e280:	4299      	cmp	r1, r3
 800e282:	dc06      	bgt.n	800e292 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x6a>
 800e284:	2e00      	cmp	r6, #0
 800e286:	d11d      	bne.n	800e2c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x9c>
 800e288:	2d00      	cmp	r5, #0
 800e28a:	d0dc      	beq.n	800e246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1e>
 800e28c:	782a      	ldrb	r2, [r5, #0]
 800e28e:	2600      	movs	r6, #0
 800e290:	e019      	b.n	800e2c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x9e>
 800e292:	005a      	lsls	r2, r3, #1
 800e294:	18ba      	adds	r2, r7, r2
 800e296:	2e00      	cmp	r6, #0
 800e298:	d100      	bne.n	800e29c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x74>
 800e29a:	e07a      	b.n	800e392 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16a>
 800e29c:	8830      	ldrh	r0, [r6, #0]
 800e29e:	8010      	strh	r0, [r2, #0]
 800e2a0:	2e00      	cmp	r6, #0
 800e2a2:	d001      	beq.n	800e2a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x80>
 800e2a4:	3602      	adds	r6, #2
 800e2a6:	960b      	str	r6, [sp, #44]	@ 0x2c
 800e2a8:	2d00      	cmp	r5, #0
 800e2aa:	d001      	beq.n	800e2b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x88>
 800e2ac:	3501      	adds	r5, #1
 800e2ae:	950a      	str	r5, [sp, #40]	@ 0x28
 800e2b0:	3301      	adds	r3, #1
 800e2b2:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e2b4:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800e2b6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800e2b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e2ba:	2e00      	cmp	r6, #0
 800e2bc:	d0d9      	beq.n	800e272 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4a>
 800e2be:	8832      	ldrh	r2, [r6, #0]
 800e2c0:	2a00      	cmp	r2, #0
 800e2c2:	d1db      	bne.n	800e27c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x54>
 800e2c4:	8832      	ldrh	r2, [r6, #0]
 800e2c6:	2a00      	cmp	r2, #0
 800e2c8:	d0bd      	beq.n	800e246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1e>
 800e2ca:	4299      	cmp	r1, r3
 800e2cc:	ddbb      	ble.n	800e246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1e>
 800e2ce:	2232      	movs	r2, #50	@ 0x32
 800e2d0:	ab02      	add	r3, sp, #8
 800e2d2:	18d2      	adds	r2, r2, r3
 800e2d4:	232d      	movs	r3, #45	@ 0x2d
 800e2d6:	2100      	movs	r1, #0
 800e2d8:	a802      	add	r0, sp, #8
 800e2da:	181b      	adds	r3, r3, r0
 800e2dc:	202e      	movs	r0, #46	@ 0x2e
 800e2de:	469c      	mov	ip, r3
 800e2e0:	7019      	strb	r1, [r3, #0]
 800e2e2:	ab02      	add	r3, sp, #8
 800e2e4:	18c0      	adds	r0, r0, r3
 800e2e6:	7001      	strb	r1, [r0, #0]
 800e2e8:	202f      	movs	r0, #47	@ 0x2f
 800e2ea:	18c0      	adds	r0, r0, r3
 800e2ec:	7001      	strb	r1, [r0, #0]
 800e2ee:	a80e      	add	r0, sp, #56	@ 0x38
 800e2f0:	7001      	strb	r1, [r0, #0]
 800e2f2:	0018      	movs	r0, r3
 800e2f4:	2331      	movs	r3, #49	@ 0x31
 800e2f6:	18c0      	adds	r0, r0, r3
 800e2f8:	8011      	strh	r1, [r2, #0]
 800e2fa:	9110      	str	r1, [sp, #64]	@ 0x40
 800e2fc:	7001      	strb	r1, [r0, #0]
 800e2fe:	9111      	str	r1, [sp, #68]	@ 0x44
 800e300:	428e      	cmp	r6, r1
 800e302:	d001      	beq.n	800e308 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe0>
 800e304:	1cb1      	adds	r1, r6, #2
 800e306:	910b      	str	r1, [sp, #44]	@ 0x2c
 800e308:	2d00      	cmp	r5, #0
 800e30a:	d001      	beq.n	800e310 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe8>
 800e30c:	1c69      	adds	r1, r5, #1
 800e30e:	910a      	str	r1, [sp, #40]	@ 0x28
 800e310:	a911      	add	r1, sp, #68	@ 0x44
 800e312:	9105      	str	r1, [sp, #20]
 800e314:	2131      	movs	r1, #49	@ 0x31
 800e316:	ab02      	add	r3, sp, #8
 800e318:	18c9      	adds	r1, r1, r3
 800e31a:	9104      	str	r1, [sp, #16]
 800e31c:	a910      	add	r1, sp, #64	@ 0x40
 800e31e:	9103      	str	r1, [sp, #12]
 800e320:	a90e      	add	r1, sp, #56	@ 0x38
 800e322:	9102      	str	r1, [sp, #8]
 800e324:	212f      	movs	r1, #47	@ 0x2f
 800e326:	18c9      	adds	r1, r1, r3
 800e328:	9101      	str	r1, [sp, #4]
 800e32a:	212e      	movs	r1, #46	@ 0x2e
 800e32c:	18c9      	adds	r1, r1, r3
 800e32e:	9100      	str	r1, [sp, #0]
 800e330:	4663      	mov	r3, ip
 800e332:	a90a      	add	r1, sp, #40	@ 0x28
 800e334:	a80b      	add	r0, sp, #44	@ 0x2c
 800e336:	f7ff fe96 	bl	800e066 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800e33a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e33c:	2b00      	cmp	r3, #0
 800e33e:	da05      	bge.n	800e34c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x124>
 800e340:	6823      	ldr	r3, [r4, #0]
 800e342:	3404      	adds	r4, #4
 800e344:	43da      	mvns	r2, r3
 800e346:	17d2      	asrs	r2, r2, #31
 800e348:	4013      	ands	r3, r2
 800e34a:	9310      	str	r3, [sp, #64]	@ 0x40
 800e34c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800e34e:	2b00      	cmp	r3, #0
 800e350:	da05      	bge.n	800e35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x136>
 800e352:	6823      	ldr	r3, [r4, #0]
 800e354:	3404      	adds	r4, #4
 800e356:	43da      	mvns	r2, r3
 800e358:	17d2      	asrs	r2, r2, #31
 800e35a:	4013      	ands	r3, r2
 800e35c:	9311      	str	r3, [sp, #68]	@ 0x44
 800e35e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800e360:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e362:	2900      	cmp	r1, #0
 800e364:	d01a      	beq.n	800e39c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x174>
 800e366:	880b      	ldrh	r3, [r1, #0]
 800e368:	2b69      	cmp	r3, #105	@ 0x69
 800e36a:	d01e      	beq.n	800e3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x182>
 800e36c:	d830      	bhi.n	800e3d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 800e36e:	2b58      	cmp	r3, #88	@ 0x58
 800e370:	d01b      	beq.n	800e3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x182>
 800e372:	d817      	bhi.n	800e3a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 800e374:	2b25      	cmp	r3, #37	@ 0x25
 800e376:	d036      	beq.n	800e3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1be>
 800e378:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e37a:	960b      	str	r6, [sp, #44]	@ 0x2c
 800e37c:	005a      	lsls	r2, r3, #1
 800e37e:	950a      	str	r5, [sp, #40]	@ 0x28
 800e380:	18ba      	adds	r2, r7, r2
 800e382:	2e00      	cmp	r6, #0
 800e384:	d100      	bne.n	800e388 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x160>
 800e386:	e0c2      	b.n	800e50e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2e6>
 800e388:	8831      	ldrh	r1, [r6, #0]
 800e38a:	3301      	adds	r3, #1
 800e38c:	8011      	strh	r1, [r2, #0]
 800e38e:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e390:	e02c      	b.n	800e3ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800e392:	1e28      	subs	r0, r5, #0
 800e394:	d100      	bne.n	800e398 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 800e396:	e782      	b.n	800e29e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x76>
 800e398:	7828      	ldrb	r0, [r5, #0]
 800e39a:	e780      	b.n	800e29e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x76>
 800e39c:	2a00      	cmp	r2, #0
 800e39e:	d0eb      	beq.n	800e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x150>
 800e3a0:	7813      	ldrb	r3, [r2, #0]
 800e3a2:	e7e1      	b.n	800e368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x140>
 800e3a4:	3b63      	subs	r3, #99	@ 0x63
 800e3a6:	2b01      	cmp	r3, #1
 800e3a8:	d8e6      	bhi.n	800e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x150>
 800e3aa:	ad13      	add	r5, sp, #76	@ 0x4c
 800e3ac:	9512      	str	r5, [sp, #72]	@ 0x48
 800e3ae:	2900      	cmp	r1, #0
 800e3b0:	d028      	beq.n	800e404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1dc>
 800e3b2:	880b      	ldrh	r3, [r1, #0]
 800e3b4:	2b69      	cmp	r3, #105	@ 0x69
 800e3b6:	d06f      	beq.n	800e498 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x270>
 800e3b8:	d828      	bhi.n	800e40c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1e4>
 800e3ba:	2b63      	cmp	r3, #99	@ 0x63
 800e3bc:	d03d      	beq.n	800e43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x212>
 800e3be:	2b64      	cmp	r3, #100	@ 0x64
 800e3c0:	d06a      	beq.n	800e498 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x270>
 800e3c2:	2b58      	cmp	r3, #88	@ 0x58
 800e3c4:	d100      	bne.n	800e3c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 800e3c6:	e087      	b.n	800e4d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2b0>
 800e3c8:	2300      	movs	r3, #0
 800e3ca:	0026      	movs	r6, r4
 800e3cc:	802b      	strh	r3, [r5, #0]
 800e3ce:	e039      	b.n	800e444 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800e3d0:	2b73      	cmp	r3, #115	@ 0x73
 800e3d2:	d0ea      	beq.n	800e3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x182>
 800e3d4:	d802      	bhi.n	800e3dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 800e3d6:	2b6f      	cmp	r3, #111	@ 0x6f
 800e3d8:	d1ce      	bne.n	800e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x150>
 800e3da:	e7e6      	b.n	800e3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x182>
 800e3dc:	2b75      	cmp	r3, #117	@ 0x75
 800e3de:	d0e4      	beq.n	800e3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x182>
 800e3e0:	2b78      	cmp	r3, #120	@ 0x78
 800e3e2:	d1c9      	bne.n	800e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x150>
 800e3e4:	e7e1      	b.n	800e3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x182>
 800e3e6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e3e8:	0052      	lsls	r2, r2, #1
 800e3ea:	53d3      	strh	r3, [r2, r7]
 800e3ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e3ee:	2b00      	cmp	r3, #0
 800e3f0:	d001      	beq.n	800e3f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ce>
 800e3f2:	3302      	adds	r3, #2
 800e3f4:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e3f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e3f8:	2b00      	cmp	r3, #0
 800e3fa:	d100      	bne.n	800e3fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d6>
 800e3fc:	e723      	b.n	800e246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1e>
 800e3fe:	3301      	adds	r3, #1
 800e400:	930a      	str	r3, [sp, #40]	@ 0x28
 800e402:	e720      	b.n	800e246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1e>
 800e404:	2a00      	cmp	r2, #0
 800e406:	d0df      	beq.n	800e3c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 800e408:	7813      	ldrb	r3, [r2, #0]
 800e40a:	e7d3      	b.n	800e3b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x18c>
 800e40c:	2b73      	cmp	r3, #115	@ 0x73
 800e40e:	d03f      	beq.n	800e490 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x268>
 800e410:	d808      	bhi.n	800e424 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1fc>
 800e412:	2b6f      	cmp	r3, #111	@ 0x6f
 800e414:	d1d8      	bne.n	800e3c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 800e416:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e418:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e41a:	1d26      	adds	r6, r4, #4
 800e41c:	1a9a      	subs	r2, r3, r2
 800e41e:	b292      	uxth	r2, r2
 800e420:	2308      	movs	r3, #8
 800e422:	e054      	b.n	800e4ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 800e424:	2b75      	cmp	r3, #117	@ 0x75
 800e426:	d04c      	beq.n	800e4c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x29a>
 800e428:	2b78      	cmp	r3, #120	@ 0x78
 800e42a:	d1cd      	bne.n	800e3c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 800e42c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e42e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e430:	1d26      	adds	r6, r4, #4
 800e432:	1a9a      	subs	r2, r3, r2
 800e434:	b292      	uxth	r2, r2
 800e436:	2310      	movs	r3, #16
 800e438:	e049      	b.n	800e4ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 800e43a:	6823      	ldr	r3, [r4, #0]
 800e43c:	1d26      	adds	r6, r4, #4
 800e43e:	802b      	strh	r3, [r5, #0]
 800e440:	2300      	movs	r3, #0
 800e442:	806b      	strh	r3, [r5, #2]
 800e444:	2332      	movs	r3, #50	@ 0x32
 800e446:	aa02      	add	r2, sp, #8
 800e448:	189b      	adds	r3, r3, r2
 800e44a:	8819      	ldrh	r1, [r3, #0]
 800e44c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e44e:	2b00      	cmp	r3, #0
 800e450:	d058      	beq.n	800e504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2dc>
 800e452:	881a      	ldrh	r2, [r3, #0]
 800e454:	2031      	movs	r0, #49	@ 0x31
 800e456:	ab02      	add	r3, sp, #8
 800e458:	181b      	adds	r3, r3, r0
 800e45a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e45c:	781b      	ldrb	r3, [r3, #0]
 800e45e:	9006      	str	r0, [sp, #24]
 800e460:	a80f      	add	r0, sp, #60	@ 0x3c
 800e462:	9005      	str	r0, [sp, #20]
 800e464:	202d      	movs	r0, #45	@ 0x2d
 800e466:	ac02      	add	r4, sp, #8
 800e468:	9707      	str	r7, [sp, #28]
 800e46a:	1900      	adds	r0, r0, r4
 800e46c:	7800      	ldrb	r0, [r0, #0]
 800e46e:	9004      	str	r0, [sp, #16]
 800e470:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800e472:	9003      	str	r0, [sp, #12]
 800e474:	a80e      	add	r0, sp, #56	@ 0x38
 800e476:	7800      	ldrb	r0, [r0, #0]
 800e478:	9002      	str	r0, [sp, #8]
 800e47a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800e47c:	9001      	str	r0, [sp, #4]
 800e47e:	202f      	movs	r0, #47	@ 0x2f
 800e480:	1900      	adds	r0, r0, r4
 800e482:	7800      	ldrb	r0, [r0, #0]
 800e484:	0034      	movs	r4, r6
 800e486:	9000      	str	r0, [sp, #0]
 800e488:	a812      	add	r0, sp, #72	@ 0x48
 800e48a:	f7ff fd21 	bl	800ded0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800e48e:	e7ad      	b.n	800e3ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800e490:	6823      	ldr	r3, [r4, #0]
 800e492:	1d26      	adds	r6, r4, #4
 800e494:	9312      	str	r3, [sp, #72]	@ 0x48
 800e496:	e7d5      	b.n	800e444 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800e498:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e49a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e49c:	ad13      	add	r5, sp, #76	@ 0x4c
 800e49e:	1a9a      	subs	r2, r3, r2
 800e4a0:	b292      	uxth	r2, r2
 800e4a2:	230a      	movs	r3, #10
 800e4a4:	0029      	movs	r1, r5
 800e4a6:	6820      	ldr	r0, [r4, #0]
 800e4a8:	f7ff fcc0 	bl	800de2c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 800e4ac:	882b      	ldrh	r3, [r5, #0]
 800e4ae:	1d26      	adds	r6, r4, #4
 800e4b0:	2b2d      	cmp	r3, #45	@ 0x2d
 800e4b2:	d1c7      	bne.n	800e444 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800e4b4:	2232      	movs	r2, #50	@ 0x32
 800e4b6:	a902      	add	r1, sp, #8
 800e4b8:	1852      	adds	r2, r2, r1
 800e4ba:	8013      	strh	r3, [r2, #0]
 800e4bc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800e4be:	3302      	adds	r3, #2
 800e4c0:	e7e8      	b.n	800e494 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x26c>
 800e4c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e4c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e4c6:	1d26      	adds	r6, r4, #4
 800e4c8:	1a9a      	subs	r2, r3, r2
 800e4ca:	230a      	movs	r3, #10
 800e4cc:	b292      	uxth	r2, r2
 800e4ce:	0029      	movs	r1, r5
 800e4d0:	6820      	ldr	r0, [r4, #0]
 800e4d2:	f7ff fcd9 	bl	800de88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800e4d6:	e7b5      	b.n	800e444 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800e4d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e4da:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e4dc:	0029      	movs	r1, r5
 800e4de:	1a9a      	subs	r2, r3, r2
 800e4e0:	b292      	uxth	r2, r2
 800e4e2:	2310      	movs	r3, #16
 800e4e4:	6820      	ldr	r0, [r4, #0]
 800e4e6:	f7ff fccf 	bl	800de88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800e4ea:	2200      	movs	r2, #0
 800e4ec:	1d26      	adds	r6, r4, #4
 800e4ee:	5aab      	ldrh	r3, [r5, r2]
 800e4f0:	2b00      	cmp	r3, #0
 800e4f2:	d0a7      	beq.n	800e444 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800e4f4:	0019      	movs	r1, r3
 800e4f6:	3961      	subs	r1, #97	@ 0x61
 800e4f8:	2919      	cmp	r1, #25
 800e4fa:	d801      	bhi.n	800e500 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2d8>
 800e4fc:	3b20      	subs	r3, #32
 800e4fe:	52ab      	strh	r3, [r5, r2]
 800e500:	3202      	adds	r2, #2
 800e502:	e7f4      	b.n	800e4ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 800e504:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e506:	1e1a      	subs	r2, r3, #0
 800e508:	d0a4      	beq.n	800e454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x22c>
 800e50a:	781a      	ldrb	r2, [r3, #0]
 800e50c:	e7a2      	b.n	800e454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x22c>
 800e50e:	1e29      	subs	r1, r5, #0
 800e510:	d100      	bne.n	800e514 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ec>
 800e512:	e73a      	b.n	800e38a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x162>
 800e514:	7829      	ldrb	r1, [r5, #0]
 800e516:	e738      	b.n	800e38a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x162>

0800e518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800e518:	b507      	push	{r0, r1, r2, lr}
 800e51a:	9300      	str	r3, [sp, #0]
 800e51c:	0013      	movs	r3, r2
 800e51e:	2200      	movs	r2, #0
 800e520:	f7ff fe82 	bl	800e228 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800e524:	bd0e      	pop	{r1, r2, r3, pc}

0800e526 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800e526:	b40c      	push	{r2, r3}
 800e528:	b507      	push	{r0, r1, r2, lr}
 800e52a:	ab04      	add	r3, sp, #16
 800e52c:	cb04      	ldmia	r3!, {r2}
 800e52e:	9301      	str	r3, [sp, #4]
 800e530:	f7ff fff2 	bl	800e518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800e534:	b003      	add	sp, #12
 800e536:	bc08      	pop	{r3}
 800e538:	b002      	add	sp, #8
 800e53a:	4718      	bx	r3

0800e53c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800e53c:	4b01      	ldr	r3, [pc, #4]	@ (800e544 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800e53e:	6018      	str	r0, [r3, #0]
 800e540:	4770      	bx	lr
 800e542:	46c0      	nop			@ (mov r8, r8)
 800e544:	200035d8 	.word	0x200035d8

0800e548 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800e548:	4b07      	ldr	r3, [pc, #28]	@ (800e568 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800e54a:	8819      	ldrh	r1, [r3, #0]
 800e54c:	2300      	movs	r3, #0
 800e54e:	4281      	cmp	r1, r0
 800e550:	d807      	bhi.n	800e562 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1a>
 800e552:	4a06      	ldr	r2, [pc, #24]	@ (800e56c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x24>)
 800e554:	8812      	ldrh	r2, [r2, #0]
 800e556:	1852      	adds	r2, r2, r1
 800e558:	2101      	movs	r1, #1
 800e55a:	4290      	cmp	r0, r2
 800e55c:	db00      	blt.n	800e560 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800e55e:	1c19      	adds	r1, r3, #0
 800e560:	b2cb      	uxtb	r3, r1
 800e562:	0018      	movs	r0, r3
 800e564:	4770      	bx	lr
 800e566:	46c0      	nop			@ (mov r8, r8)
 800e568:	200035f8 	.word	0x200035f8
 800e56c:	200035fc 	.word	0x200035fc

0800e570 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800e570:	b510      	push	{r4, lr}
 800e572:	0004      	movs	r4, r0
 800e574:	f7ff ffe8 	bl	800e548 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800e578:	1e03      	subs	r3, r0, #0
 800e57a:	d003      	beq.n	800e584 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>
 800e57c:	4b02      	ldr	r3, [pc, #8]	@ (800e588 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x18>)
 800e57e:	00a4      	lsls	r4, r4, #2
 800e580:	681b      	ldr	r3, [r3, #0]
 800e582:	58e3      	ldr	r3, [r4, r3]
 800e584:	0018      	movs	r0, r3
 800e586:	bd10      	pop	{r4, pc}
 800e588:	200035dc 	.word	0x200035dc

0800e58c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800e58c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e58e:	4c23      	ldr	r4, [pc, #140]	@ (800e61c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>)
 800e590:	6823      	ldr	r3, [r4, #0]
 800e592:	2b00      	cmp	r3, #0
 800e594:	d041      	beq.n	800e61a <_ZN8touchgfx6Bitmap10clearCacheEv+0x8e>
 800e596:	4d22      	ldr	r5, [pc, #136]	@ (800e620 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800e598:	4822      	ldr	r0, [pc, #136]	@ (800e624 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800e59a:	882a      	ldrh	r2, [r5, #0]
 800e59c:	4694      	mov	ip, r2
 800e59e:	4a22      	ldr	r2, [pc, #136]	@ (800e628 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800e5a0:	8811      	ldrh	r1, [r2, #0]
 800e5a2:	4461      	add	r1, ip
 800e5a4:	1c4a      	adds	r2, r1, #1
 800e5a6:	008f      	lsls	r7, r1, #2
 800e5a8:	4002      	ands	r2, r0
 800e5aa:	4820      	ldr	r0, [pc, #128]	@ (800e62c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800e5ac:	19de      	adds	r6, r3, r7
 800e5ae:	0052      	lsls	r2, r2, #1
 800e5b0:	18bf      	adds	r7, r7, r2
 800e5b2:	6006      	str	r6, [r0, #0]
 800e5b4:	4e1e      	ldr	r6, [pc, #120]	@ (800e630 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800e5b6:	19da      	adds	r2, r3, r7
 800e5b8:	4660      	mov	r0, ip
 800e5ba:	6032      	str	r2, [r6, #0]
 800e5bc:	220e      	movs	r2, #14
 800e5be:	4342      	muls	r2, r0
 800e5c0:	2003      	movs	r0, #3
 800e5c2:	3203      	adds	r2, #3
 800e5c4:	4382      	bics	r2, r0
 800e5c6:	19d2      	adds	r2, r2, r7
 800e5c8:	4f1a      	ldr	r7, [pc, #104]	@ (800e634 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800e5ca:	189b      	adds	r3, r3, r2
 800e5cc:	603b      	str	r3, [r7, #0]
 800e5ce:	2300      	movs	r3, #0
 800e5d0:	469c      	mov	ip, r3
 800e5d2:	4f19      	ldr	r7, [pc, #100]	@ (800e638 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800e5d4:	803b      	strh	r3, [r7, #0]
 800e5d6:	4f19      	ldr	r7, [pc, #100]	@ (800e63c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800e5d8:	683f      	ldr	r7, [r7, #0]
 800e5da:	1aba      	subs	r2, r7, r2
 800e5dc:	4f18      	ldr	r7, [pc, #96]	@ (800e640 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800e5de:	603a      	str	r2, [r7, #0]
 800e5e0:	4a18      	ldr	r2, [pc, #96]	@ (800e644 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800e5e2:	8013      	strh	r3, [r2, #0]
 800e5e4:	428b      	cmp	r3, r1
 800e5e6:	d10c      	bne.n	800e602 <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800e5e8:	220e      	movs	r2, #14
 800e5ea:	2020      	movs	r0, #32
 800e5ec:	8829      	ldrh	r1, [r5, #0]
 800e5ee:	6833      	ldr	r3, [r6, #0]
 800e5f0:	434a      	muls	r2, r1
 800e5f2:	18d2      	adds	r2, r2, r3
 800e5f4:	4293      	cmp	r3, r2
 800e5f6:	d010      	beq.n	800e61a <_ZN8touchgfx6Bitmap10clearCacheEv+0x8e>
 800e5f8:	7b19      	ldrb	r1, [r3, #12]
 800e5fa:	4381      	bics	r1, r0
 800e5fc:	7319      	strb	r1, [r3, #12]
 800e5fe:	330e      	adds	r3, #14
 800e600:	e7f8      	b.n	800e5f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x68>
 800e602:	4667      	mov	r7, ip
 800e604:	6820      	ldr	r0, [r4, #0]
 800e606:	009a      	lsls	r2, r3, #2
 800e608:	5017      	str	r7, [r2, r0]
 800e60a:	2701      	movs	r7, #1
 800e60c:	4807      	ldr	r0, [pc, #28]	@ (800e62c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800e60e:	005a      	lsls	r2, r3, #1
 800e610:	6800      	ldr	r0, [r0, #0]
 800e612:	427f      	negs	r7, r7
 800e614:	5217      	strh	r7, [r2, r0]
 800e616:	3301      	adds	r3, #1
 800e618:	e7e4      	b.n	800e5e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x58>
 800e61a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e61c:	200035dc 	.word	0x200035dc
 800e620:	200035fc 	.word	0x200035fc
 800e624:	0000fffe 	.word	0x0000fffe
 800e628:	200035f8 	.word	0x200035f8
 800e62c:	200035f0 	.word	0x200035f0
 800e630:	200035e0 	.word	0x200035e0
 800e634:	200035e8 	.word	0x200035e8
 800e638:	200035fa 	.word	0x200035fa
 800e63c:	200035e4 	.word	0x200035e4
 800e640:	200035f4 	.word	0x200035f4
 800e644:	200035ec 	.word	0x200035ec

0800e648 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800e648:	b510      	push	{r4, lr}
 800e64a:	4b07      	ldr	r3, [pc, #28]	@ (800e668 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800e64c:	681b      	ldr	r3, [r3, #0]
 800e64e:	2b00      	cmp	r3, #0
 800e650:	d109      	bne.n	800e666 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1e>
 800e652:	2900      	cmp	r1, #0
 800e654:	d007      	beq.n	800e666 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1e>
 800e656:	4b05      	ldr	r3, [pc, #20]	@ (800e66c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800e658:	801a      	strh	r2, [r3, #0]
 800e65a:	4b05      	ldr	r3, [pc, #20]	@ (800e670 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800e65c:	6019      	str	r1, [r3, #0]
 800e65e:	4b05      	ldr	r3, [pc, #20]	@ (800e674 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x2c>)
 800e660:	6018      	str	r0, [r3, #0]
 800e662:	f7ff ff93 	bl	800e58c <_ZN8touchgfx6Bitmap10clearCacheEv>
 800e666:	bd10      	pop	{r4, pc}
 800e668:	200035e8 	.word	0x200035e8
 800e66c:	200035fc 	.word	0x200035fc
 800e670:	200035e4 	.word	0x200035e4
 800e674:	200035dc 	.word	0x200035dc

0800e678 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800e678:	b570      	push	{r4, r5, r6, lr}
 800e67a:	0004      	movs	r4, r0
 800e67c:	0010      	movs	r0, r2
 800e67e:	4a06      	ldr	r2, [pc, #24]	@ (800e698 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800e680:	6815      	ldr	r5, [r2, #0]
 800e682:	2d00      	cmp	r5, #0
 800e684:	d106      	bne.n	800e694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800e686:	6014      	str	r4, [r2, #0]
 800e688:	4a04      	ldr	r2, [pc, #16]	@ (800e69c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800e68a:	8011      	strh	r1, [r2, #0]
 800e68c:	9a04      	ldr	r2, [sp, #16]
 800e68e:	0019      	movs	r1, r3
 800e690:	f7ff ffda 	bl	800e648 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800e694:	bd70      	pop	{r4, r5, r6, pc}
 800e696:	46c0      	nop			@ (mov r8, r8)
 800e698:	20003600 	.word	0x20003600
 800e69c:	200035f8 	.word	0x200035f8

0800e6a0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800e6a0:	4a13      	ldr	r2, [pc, #76]	@ (800e6f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800e6a2:	8803      	ldrh	r3, [r0, #0]
 800e6a4:	8812      	ldrh	r2, [r2, #0]
 800e6a6:	4293      	cmp	r3, r2
 800e6a8:	d207      	bcs.n	800e6ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800e6aa:	2114      	movs	r1, #20
 800e6ac:	4a11      	ldr	r2, [pc, #68]	@ (800e6f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800e6ae:	434b      	muls	r3, r1
 800e6b0:	6812      	ldr	r2, [r2, #0]
 800e6b2:	18d3      	adds	r3, r2, r3
 800e6b4:	2008      	movs	r0, #8
 800e6b6:	5e18      	ldrsh	r0, [r3, r0]
 800e6b8:	4770      	bx	lr
 800e6ba:	490f      	ldr	r1, [pc, #60]	@ (800e6f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800e6bc:	8809      	ldrh	r1, [r1, #0]
 800e6be:	1889      	adds	r1, r1, r2
 800e6c0:	428b      	cmp	r3, r1
 800e6c2:	da06      	bge.n	800e6d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x32>
 800e6c4:	1a9b      	subs	r3, r3, r2
 800e6c6:	4a0d      	ldr	r2, [pc, #52]	@ (800e6fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800e6c8:	6811      	ldr	r1, [r2, #0]
 800e6ca:	220e      	movs	r2, #14
 800e6cc:	4353      	muls	r3, r2
 800e6ce:	18cb      	adds	r3, r1, r3
 800e6d0:	e7f0      	b.n	800e6b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x14>
 800e6d2:	4a0b      	ldr	r2, [pc, #44]	@ (800e700 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800e6d4:	2000      	movs	r0, #0
 800e6d6:	4293      	cmp	r3, r2
 800e6d8:	d1ee      	bne.n	800e6b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x18>
 800e6da:	4b0a      	ldr	r3, [pc, #40]	@ (800e704 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800e6dc:	781b      	ldrb	r3, [r3, #0]
 800e6de:	4283      	cmp	r3, r0
 800e6e0:	d103      	bne.n	800e6ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x4a>
 800e6e2:	4b09      	ldr	r3, [pc, #36]	@ (800e708 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800e6e4:	2000      	movs	r0, #0
 800e6e6:	5e18      	ldrsh	r0, [r3, r0]
 800e6e8:	e7e6      	b.n	800e6b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x18>
 800e6ea:	4b08      	ldr	r3, [pc, #32]	@ (800e70c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800e6ec:	e7fa      	b.n	800e6e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800e6ee:	46c0      	nop			@ (mov r8, r8)
 800e6f0:	200035f8 	.word	0x200035f8
 800e6f4:	20003600 	.word	0x20003600
 800e6f8:	200035fc 	.word	0x200035fc
 800e6fc:	200035e0 	.word	0x200035e0
 800e700:	0000fffe 	.word	0x0000fffe
 800e704:	20003570 	.word	0x20003570
 800e708:	20003572 	.word	0x20003572
 800e70c:	20003574 	.word	0x20003574

0800e710 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800e710:	4a13      	ldr	r2, [pc, #76]	@ (800e760 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800e712:	8803      	ldrh	r3, [r0, #0]
 800e714:	8812      	ldrh	r2, [r2, #0]
 800e716:	4293      	cmp	r3, r2
 800e718:	d207      	bcs.n	800e72a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800e71a:	2114      	movs	r1, #20
 800e71c:	4a11      	ldr	r2, [pc, #68]	@ (800e764 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800e71e:	434b      	muls	r3, r1
 800e720:	6812      	ldr	r2, [r2, #0]
 800e722:	18d3      	adds	r3, r2, r3
 800e724:	200a      	movs	r0, #10
 800e726:	5e18      	ldrsh	r0, [r3, r0]
 800e728:	4770      	bx	lr
 800e72a:	490f      	ldr	r1, [pc, #60]	@ (800e768 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800e72c:	8809      	ldrh	r1, [r1, #0]
 800e72e:	1889      	adds	r1, r1, r2
 800e730:	428b      	cmp	r3, r1
 800e732:	da06      	bge.n	800e742 <_ZNK8touchgfx6Bitmap9getHeightEv+0x32>
 800e734:	1a9b      	subs	r3, r3, r2
 800e736:	4a0d      	ldr	r2, [pc, #52]	@ (800e76c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800e738:	6811      	ldr	r1, [r2, #0]
 800e73a:	220e      	movs	r2, #14
 800e73c:	4353      	muls	r3, r2
 800e73e:	18cb      	adds	r3, r1, r3
 800e740:	e7f0      	b.n	800e724 <_ZNK8touchgfx6Bitmap9getHeightEv+0x14>
 800e742:	4a0b      	ldr	r2, [pc, #44]	@ (800e770 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800e744:	2000      	movs	r0, #0
 800e746:	4293      	cmp	r3, r2
 800e748:	d1ee      	bne.n	800e728 <_ZNK8touchgfx6Bitmap9getHeightEv+0x18>
 800e74a:	4b0a      	ldr	r3, [pc, #40]	@ (800e774 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800e74c:	781b      	ldrb	r3, [r3, #0]
 800e74e:	4283      	cmp	r3, r0
 800e750:	d103      	bne.n	800e75a <_ZNK8touchgfx6Bitmap9getHeightEv+0x4a>
 800e752:	4b09      	ldr	r3, [pc, #36]	@ (800e778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800e754:	2000      	movs	r0, #0
 800e756:	5e18      	ldrsh	r0, [r3, r0]
 800e758:	e7e6      	b.n	800e728 <_ZNK8touchgfx6Bitmap9getHeightEv+0x18>
 800e75a:	4b08      	ldr	r3, [pc, #32]	@ (800e77c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800e75c:	e7fa      	b.n	800e754 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 800e75e:	46c0      	nop			@ (mov r8, r8)
 800e760:	200035f8 	.word	0x200035f8
 800e764:	20003600 	.word	0x20003600
 800e768:	200035fc 	.word	0x200035fc
 800e76c:	200035e0 	.word	0x200035e0
 800e770:	0000fffe 	.word	0x0000fffe
 800e774:	20003570 	.word	0x20003570
 800e778:	20003574 	.word	0x20003574
 800e77c:	20003572 	.word	0x20003572

0800e780 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800e780:	b530      	push	{r4, r5, lr}
 800e782:	4a20      	ldr	r2, [pc, #128]	@ (800e804 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 800e784:	880b      	ldrh	r3, [r1, #0]
 800e786:	8812      	ldrh	r2, [r2, #0]
 800e788:	4293      	cmp	r3, r2
 800e78a:	d213      	bcs.n	800e7b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 800e78c:	2214      	movs	r2, #20
 800e78e:	435a      	muls	r2, r3
 800e790:	4b1d      	ldr	r3, [pc, #116]	@ (800e808 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 800e792:	681b      	ldr	r3, [r3, #0]
 800e794:	189b      	adds	r3, r3, r2
 800e796:	220c      	movs	r2, #12
 800e798:	5e9c      	ldrsh	r4, [r3, r2]
 800e79a:	220e      	movs	r2, #14
 800e79c:	5e99      	ldrsh	r1, [r3, r2]
 800e79e:	8a1a      	ldrh	r2, [r3, #16]
 800e7a0:	8a5b      	ldrh	r3, [r3, #18]
 800e7a2:	04d2      	lsls	r2, r2, #19
 800e7a4:	04db      	lsls	r3, r3, #19
 800e7a6:	0cd2      	lsrs	r2, r2, #19
 800e7a8:	0cdb      	lsrs	r3, r3, #19
 800e7aa:	8004      	strh	r4, [r0, #0]
 800e7ac:	8041      	strh	r1, [r0, #2]
 800e7ae:	8082      	strh	r2, [r0, #4]
 800e7b0:	80c3      	strh	r3, [r0, #6]
 800e7b2:	e021      	b.n	800e7f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x78>
 800e7b4:	4915      	ldr	r1, [pc, #84]	@ (800e80c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 800e7b6:	8809      	ldrh	r1, [r1, #0]
 800e7b8:	1889      	adds	r1, r1, r2
 800e7ba:	428b      	cmp	r3, r1
 800e7bc:	da0e      	bge.n	800e7dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x5c>
 800e7be:	1a9b      	subs	r3, r3, r2
 800e7c0:	220e      	movs	r2, #14
 800e7c2:	435a      	muls	r2, r3
 800e7c4:	4b12      	ldr	r3, [pc, #72]	@ (800e810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800e7c6:	681b      	ldr	r3, [r3, #0]
 800e7c8:	189b      	adds	r3, r3, r2
 800e7ca:	2200      	movs	r2, #0
 800e7cc:	5e9c      	ldrsh	r4, [r3, r2]
 800e7ce:	2202      	movs	r2, #2
 800e7d0:	5e99      	ldrsh	r1, [r3, r2]
 800e7d2:	2504      	movs	r5, #4
 800e7d4:	5f5a      	ldrsh	r2, [r3, r5]
 800e7d6:	2506      	movs	r5, #6
 800e7d8:	5f5b      	ldrsh	r3, [r3, r5]
 800e7da:	e7e6      	b.n	800e7aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x2a>
 800e7dc:	4a0d      	ldr	r2, [pc, #52]	@ (800e814 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800e7de:	4293      	cmp	r3, r2
 800e7e0:	d10b      	bne.n	800e7fa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7a>
 800e7e2:	4b0d      	ldr	r3, [pc, #52]	@ (800e818 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800e7e4:	2100      	movs	r1, #0
 800e7e6:	5e59      	ldrsh	r1, [r3, r1]
 800e7e8:	4b0c      	ldr	r3, [pc, #48]	@ (800e81c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800e7ea:	8081      	strh	r1, [r0, #4]
 800e7ec:	2200      	movs	r2, #0
 800e7ee:	5e9a      	ldrsh	r2, [r3, r2]
 800e7f0:	2300      	movs	r3, #0
 800e7f2:	80c2      	strh	r2, [r0, #6]
 800e7f4:	8003      	strh	r3, [r0, #0]
 800e7f6:	8043      	strh	r3, [r0, #2]
 800e7f8:	bd30      	pop	{r4, r5, pc}
 800e7fa:	2300      	movs	r3, #0
 800e7fc:	8003      	strh	r3, [r0, #0]
 800e7fe:	8043      	strh	r3, [r0, #2]
 800e800:	8083      	strh	r3, [r0, #4]
 800e802:	e7d5      	b.n	800e7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800e804:	200035f8 	.word	0x200035f8
 800e808:	20003600 	.word	0x20003600
 800e80c:	200035fc 	.word	0x200035fc
 800e810:	200035e0 	.word	0x200035e0
 800e814:	0000fffe 	.word	0x0000fffe
 800e818:	2000356c 	.word	0x2000356c
 800e81c:	2000356e 	.word	0x2000356e

0800e820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800e820:	4a17      	ldr	r2, [pc, #92]	@ (800e880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 800e822:	8803      	ldrh	r3, [r0, #0]
 800e824:	8812      	ldrh	r2, [r2, #0]
 800e826:	4293      	cmp	r3, r2
 800e828:	d214      	bcs.n	800e854 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800e82a:	2214      	movs	r2, #20
 800e82c:	435a      	muls	r2, r3
 800e82e:	4b15      	ldr	r3, [pc, #84]	@ (800e884 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800e830:	2001      	movs	r0, #1
 800e832:	681b      	ldr	r3, [r3, #0]
 800e834:	189b      	adds	r3, r3, r2
 800e836:	8a1a      	ldrh	r2, [r3, #16]
 800e838:	8919      	ldrh	r1, [r3, #8]
 800e83a:	04d2      	lsls	r2, r2, #19
 800e83c:	0cd2      	lsrs	r2, r2, #19
 800e83e:	428a      	cmp	r2, r1
 800e840:	db07      	blt.n	800e852 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800e842:	8a5a      	ldrh	r2, [r3, #18]
 800e844:	04d2      	lsls	r2, r2, #19
 800e846:	0cd2      	lsrs	r2, r2, #19
 800e848:	895b      	ldrh	r3, [r3, #10]
 800e84a:	429a      	cmp	r2, r3
 800e84c:	db00      	blt.n	800e850 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x30>
 800e84e:	2000      	movs	r0, #0
 800e850:	b2c0      	uxtb	r0, r0
 800e852:	4770      	bx	lr
 800e854:	490c      	ldr	r1, [pc, #48]	@ (800e888 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800e856:	2000      	movs	r0, #0
 800e858:	8809      	ldrh	r1, [r1, #0]
 800e85a:	1889      	adds	r1, r1, r2
 800e85c:	428b      	cmp	r3, r1
 800e85e:	daf8      	bge.n	800e852 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800e860:	1a9b      	subs	r3, r3, r2
 800e862:	220e      	movs	r2, #14
 800e864:	435a      	muls	r2, r3
 800e866:	4b09      	ldr	r3, [pc, #36]	@ (800e88c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800e868:	3001      	adds	r0, #1
 800e86a:	681b      	ldr	r3, [r3, #0]
 800e86c:	189b      	adds	r3, r3, r2
 800e86e:	2204      	movs	r2, #4
 800e870:	5e99      	ldrsh	r1, [r3, r2]
 800e872:	891a      	ldrh	r2, [r3, #8]
 800e874:	4291      	cmp	r1, r2
 800e876:	dbec      	blt.n	800e852 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800e878:	2106      	movs	r1, #6
 800e87a:	5e5a      	ldrsh	r2, [r3, r1]
 800e87c:	e7e4      	b.n	800e848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800e87e:	46c0      	nop			@ (mov r8, r8)
 800e880:	200035f8 	.word	0x200035f8
 800e884:	20003600 	.word	0x20003600
 800e888:	200035fc 	.word	0x200035fc
 800e88c:	200035e0 	.word	0x200035e0

0800e890 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800e890:	4a12      	ldr	r2, [pc, #72]	@ (800e8dc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800e892:	8803      	ldrh	r3, [r0, #0]
 800e894:	8811      	ldrh	r1, [r2, #0]
 800e896:	428b      	cmp	r3, r1
 800e898:	d20d      	bcs.n	800e8b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x26>
 800e89a:	4a11      	ldr	r2, [pc, #68]	@ (800e8e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800e89c:	6812      	ldr	r2, [r2, #0]
 800e89e:	2a00      	cmp	r2, #0
 800e8a0:	d003      	beq.n	800e8aa <_ZNK8touchgfx6Bitmap7getDataEv+0x1a>
 800e8a2:	0099      	lsls	r1, r3, #2
 800e8a4:	5888      	ldr	r0, [r1, r2]
 800e8a6:	2800      	cmp	r0, #0
 800e8a8:	d104      	bne.n	800e8b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x24>
 800e8aa:	4a0e      	ldr	r2, [pc, #56]	@ (800e8e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800e8ac:	6811      	ldr	r1, [r2, #0]
 800e8ae:	2214      	movs	r2, #20
 800e8b0:	4353      	muls	r3, r2
 800e8b2:	5858      	ldr	r0, [r3, r1]
 800e8b4:	4770      	bx	lr
 800e8b6:	4a0c      	ldr	r2, [pc, #48]	@ (800e8e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800e8b8:	8812      	ldrh	r2, [r2, #0]
 800e8ba:	1852      	adds	r2, r2, r1
 800e8bc:	4293      	cmp	r3, r2
 800e8be:	da04      	bge.n	800e8ca <_ZNK8touchgfx6Bitmap7getDataEv+0x3a>
 800e8c0:	4a07      	ldr	r2, [pc, #28]	@ (800e8e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800e8c2:	009b      	lsls	r3, r3, #2
 800e8c4:	6812      	ldr	r2, [r2, #0]
 800e8c6:	5898      	ldr	r0, [r3, r2]
 800e8c8:	e7f4      	b.n	800e8b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x24>
 800e8ca:	4a08      	ldr	r2, [pc, #32]	@ (800e8ec <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800e8cc:	2000      	movs	r0, #0
 800e8ce:	4293      	cmp	r3, r2
 800e8d0:	d1f0      	bne.n	800e8b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x24>
 800e8d2:	4b07      	ldr	r3, [pc, #28]	@ (800e8f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800e8d4:	681b      	ldr	r3, [r3, #0]
 800e8d6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 800e8d8:	e7ec      	b.n	800e8b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x24>
 800e8da:	46c0      	nop			@ (mov r8, r8)
 800e8dc:	200035f8 	.word	0x200035f8
 800e8e0:	200035dc 	.word	0x200035dc
 800e8e4:	20003600 	.word	0x20003600
 800e8e8:	200035fc 	.word	0x200035fc
 800e8ec:	0000fffe 	.word	0x0000fffe
 800e8f0:	20003578 	.word	0x20003578

0800e8f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800e8f4:	b530      	push	{r4, r5, lr}
 800e8f6:	4a25      	ldr	r2, [pc, #148]	@ (800e98c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800e8f8:	8803      	ldrh	r3, [r0, #0]
 800e8fa:	8812      	ldrh	r2, [r2, #0]
 800e8fc:	4293      	cmp	r3, r2
 800e8fe:	d221      	bcs.n	800e944 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x50>
 800e900:	2214      	movs	r2, #20
 800e902:	4923      	ldr	r1, [pc, #140]	@ (800e990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800e904:	435a      	muls	r2, r3
 800e906:	680d      	ldr	r5, [r1, #0]
 800e908:	18ad      	adds	r5, r5, r2
 800e90a:	6868      	ldr	r0, [r5, #4]
 800e90c:	2800      	cmp	r0, #0
 800e90e:	d018      	beq.n	800e942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e910:	4a20      	ldr	r2, [pc, #128]	@ (800e994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800e912:	6811      	ldr	r1, [r2, #0]
 800e914:	2900      	cmp	r1, #0
 800e916:	d014      	beq.n	800e942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e918:	009b      	lsls	r3, r3, #2
 800e91a:	585a      	ldr	r2, [r3, r1]
 800e91c:	2a00      	cmp	r2, #0
 800e91e:	d010      	beq.n	800e942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e920:	892b      	ldrh	r3, [r5, #8]
 800e922:	896c      	ldrh	r4, [r5, #10]
 800e924:	7ce9      	ldrb	r1, [r5, #19]
 800e926:	435c      	muls	r4, r3
 800e928:	7c6b      	ldrb	r3, [r5, #17]
 800e92a:	0949      	lsrs	r1, r1, #5
 800e92c:	095b      	lsrs	r3, r3, #5
 800e92e:	00db      	lsls	r3, r3, #3
 800e930:	430b      	orrs	r3, r1
 800e932:	0060      	lsls	r0, r4, #1
 800e934:	2b0b      	cmp	r3, #11
 800e936:	d100      	bne.n	800e93a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x46>
 800e938:	0020      	movs	r0, r4
 800e93a:	2303      	movs	r3, #3
 800e93c:	3003      	adds	r0, #3
 800e93e:	4398      	bics	r0, r3
 800e940:	1810      	adds	r0, r2, r0
 800e942:	bd30      	pop	{r4, r5, pc}
 800e944:	4914      	ldr	r1, [pc, #80]	@ (800e998 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800e946:	2000      	movs	r0, #0
 800e948:	8809      	ldrh	r1, [r1, #0]
 800e94a:	1889      	adds	r1, r1, r2
 800e94c:	428b      	cmp	r3, r1
 800e94e:	daf8      	bge.n	800e942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e950:	210e      	movs	r1, #14
 800e952:	1a9a      	subs	r2, r3, r2
 800e954:	4351      	muls	r1, r2
 800e956:	4a11      	ldr	r2, [pc, #68]	@ (800e99c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800e958:	301f      	adds	r0, #31
 800e95a:	6812      	ldr	r2, [r2, #0]
 800e95c:	1852      	adds	r2, r2, r1
 800e95e:	7b11      	ldrb	r1, [r2, #12]
 800e960:	4001      	ands	r1, r0
 800e962:	290b      	cmp	r1, #11
 800e964:	d10b      	bne.n	800e97e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8a>
 800e966:	8911      	ldrh	r1, [r2, #8]
 800e968:	8950      	ldrh	r0, [r2, #10]
 800e96a:	4a0a      	ldr	r2, [pc, #40]	@ (800e994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800e96c:	4348      	muls	r0, r1
 800e96e:	2103      	movs	r1, #3
 800e970:	6812      	ldr	r2, [r2, #0]
 800e972:	009b      	lsls	r3, r3, #2
 800e974:	3003      	adds	r0, #3
 800e976:	589b      	ldr	r3, [r3, r2]
 800e978:	4388      	bics	r0, r1
 800e97a:	1818      	adds	r0, r3, r0
 800e97c:	e7e1      	b.n	800e942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e97e:	2000      	movs	r0, #0
 800e980:	290d      	cmp	r1, #13
 800e982:	d1de      	bne.n	800e942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e984:	320d      	adds	r2, #13
 800e986:	0010      	movs	r0, r2
 800e988:	e7db      	b.n	800e942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800e98a:	46c0      	nop			@ (mov r8, r8)
 800e98c:	200035f8 	.word	0x200035f8
 800e990:	20003600 	.word	0x20003600
 800e994:	200035dc 	.word	0x200035dc
 800e998:	200035fc 	.word	0x200035fc
 800e99c:	200035e0 	.word	0x200035e0

0800e9a0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800e9a0:	b510      	push	{r4, lr}
 800e9a2:	4a1f      	ldr	r2, [pc, #124]	@ (800ea20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 800e9a4:	8803      	ldrh	r3, [r0, #0]
 800e9a6:	8812      	ldrh	r2, [r2, #0]
 800e9a8:	4293      	cmp	r3, r2
 800e9aa:	d21b      	bcs.n	800e9e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800e9ac:	2214      	movs	r2, #20
 800e9ae:	491d      	ldr	r1, [pc, #116]	@ (800ea24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 800e9b0:	435a      	muls	r2, r3
 800e9b2:	6809      	ldr	r1, [r1, #0]
 800e9b4:	1889      	adds	r1, r1, r2
 800e9b6:	7c4a      	ldrb	r2, [r1, #17]
 800e9b8:	7cc9      	ldrb	r1, [r1, #19]
 800e9ba:	0952      	lsrs	r2, r2, #5
 800e9bc:	0949      	lsrs	r1, r1, #5
 800e9be:	00d2      	lsls	r2, r2, #3
 800e9c0:	430a      	orrs	r2, r1
 800e9c2:	4919      	ldr	r1, [pc, #100]	@ (800ea28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 800e9c4:	b2d0      	uxtb	r0, r2
 800e9c6:	6809      	ldr	r1, [r1, #0]
 800e9c8:	2900      	cmp	r1, #0
 800e9ca:	d00a      	beq.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800e9cc:	009b      	lsls	r3, r3, #2
 800e9ce:	585b      	ldr	r3, [r3, r1]
 800e9d0:	2b00      	cmp	r3, #0
 800e9d2:	d006      	beq.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800e9d4:	2a0e      	cmp	r2, #14
 800e9d6:	d01e      	beq.n	800ea16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 800e9d8:	280f      	cmp	r0, #15
 800e9da:	d01e      	beq.n	800ea1a <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 800e9dc:	2810      	cmp	r0, #16
 800e9de:	d100      	bne.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800e9e0:	380e      	subs	r0, #14
 800e9e2:	bd10      	pop	{r4, pc}
 800e9e4:	4911      	ldr	r1, [pc, #68]	@ (800ea2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 800e9e6:	8809      	ldrh	r1, [r1, #0]
 800e9e8:	1889      	adds	r1, r1, r2
 800e9ea:	428b      	cmp	r3, r1
 800e9ec:	da09      	bge.n	800ea02 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800e9ee:	1a9b      	subs	r3, r3, r2
 800e9f0:	4a0f      	ldr	r2, [pc, #60]	@ (800ea30 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 800e9f2:	6811      	ldr	r1, [r2, #0]
 800e9f4:	220e      	movs	r2, #14
 800e9f6:	4353      	muls	r3, r2
 800e9f8:	18cb      	adds	r3, r1, r3
 800e9fa:	7b18      	ldrb	r0, [r3, #12]
 800e9fc:	06c0      	lsls	r0, r0, #27
 800e9fe:	0ec0      	lsrs	r0, r0, #27
 800ea00:	e7ef      	b.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800ea02:	4a0c      	ldr	r2, [pc, #48]	@ (800ea34 <_ZNK8touchgfx6Bitmap9getFormatEv+0x94>)
 800ea04:	2000      	movs	r0, #0
 800ea06:	4293      	cmp	r3, r2
 800ea08:	d1eb      	bne.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800ea0a:	f7f8 ffe1 	bl	80079d0 <_ZN8touchgfx3HAL3lcdEv>
 800ea0e:	6803      	ldr	r3, [r0, #0]
 800ea10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea12:	4798      	blx	r3
 800ea14:	e7e5      	b.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800ea16:	2000      	movs	r0, #0
 800ea18:	e7e3      	b.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800ea1a:	2001      	movs	r0, #1
 800ea1c:	e7e1      	b.n	800e9e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 800ea1e:	46c0      	nop			@ (mov r8, r8)
 800ea20:	200035f8 	.word	0x200035f8
 800ea24:	20003600 	.word	0x20003600
 800ea28:	200035dc 	.word	0x200035dc
 800ea2c:	200035fc 	.word	0x200035fc
 800ea30:	200035e0 	.word	0x200035e0
 800ea34:	0000fffe 	.word	0x0000fffe

0800ea38 <_ZNK8touchgfx19LCD16bppSerialFlash8bitDepthEv>:
 800ea38:	2010      	movs	r0, #16
 800ea3a:	4770      	bx	lr

0800ea3c <_ZNK8touchgfx19LCD16bppSerialFlash17framebufferFormatEv>:
 800ea3c:	2000      	movs	r0, #0
 800ea3e:	4770      	bx	lr

0800ea40 <_ZNK8touchgfx19LCD16bppSerialFlash17framebufferStrideEv>:
 800ea40:	4b02      	ldr	r3, [pc, #8]	@ (800ea4c <_ZNK8touchgfx19LCD16bppSerialFlash17framebufferStrideEv+0xc>)
 800ea42:	8818      	ldrh	r0, [r3, #0]
 800ea44:	0040      	lsls	r0, r0, #1
 800ea46:	b280      	uxth	r0, r0
 800ea48:	4770      	bx	lr
 800ea4a:	46c0      	nop			@ (mov r8, r8)
 800ea4c:	20003572 	.word	0x20003572

0800ea50 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 800ea50:	2300      	movs	r3, #0
 800ea52:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea54:	b085      	sub	sp, #20
 800ea56:	9302      	str	r3, [sp, #8]
 800ea58:	4b12      	ldr	r3, [pc, #72]	@ (800eaa4 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x54>)
 800ea5a:	0005      	movs	r5, r0
 800ea5c:	781b      	ldrb	r3, [r3, #0]
 800ea5e:	000e      	movs	r6, r1
 800ea60:	4a11      	ldr	r2, [pc, #68]	@ (800eaa8 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x58>)
 800ea62:	2b00      	cmp	r3, #0
 800ea64:	d000      	beq.n	800ea68 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x18>
 800ea66:	4a11      	ldr	r2, [pc, #68]	@ (800eaac <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x5c>)
 800ea68:	2100      	movs	r1, #0
 800ea6a:	5e52      	ldrsh	r2, [r2, r1]
 800ea6c:	ac02      	add	r4, sp, #8
 800ea6e:	80a2      	strh	r2, [r4, #4]
 800ea70:	2b00      	cmp	r3, #0
 800ea72:	d115      	bne.n	800eaa0 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x50>
 800ea74:	4b0d      	ldr	r3, [pc, #52]	@ (800eaac <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x5c>)
 800ea76:	2200      	movs	r2, #0
 800ea78:	5e9b      	ldrsh	r3, [r3, r2]
 800ea7a:	80e3      	strh	r3, [r4, #6]
 800ea7c:	4b0c      	ldr	r3, [pc, #48]	@ (800eab0 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x60>)
 800ea7e:	6818      	ldr	r0, [r3, #0]
 800ea80:	6803      	ldr	r3, [r0, #0]
 800ea82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ea84:	4798      	blx	r3
 800ea86:	2200      	movs	r2, #0
 800ea88:	682b      	ldr	r3, [r5, #0]
 800ea8a:	9201      	str	r2, [sp, #4]
 800ea8c:	32ff      	adds	r2, #255	@ 0xff
 800ea8e:	9200      	str	r2, [sp, #0]
 800ea90:	0001      	movs	r1, r0
 800ea92:	68df      	ldr	r7, [r3, #12]
 800ea94:	0022      	movs	r2, r4
 800ea96:	0033      	movs	r3, r6
 800ea98:	0028      	movs	r0, r5
 800ea9a:	47b8      	blx	r7
 800ea9c:	b005      	add	sp, #20
 800ea9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eaa0:	4b01      	ldr	r3, [pc, #4]	@ (800eaa8 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x58>)
 800eaa2:	e7e8      	b.n	800ea76 <_ZN8touchgfx19LCD16bppSerialFlash29copyAreaFromTFTToClientBufferERKNS_4RectE+0x26>
 800eaa4:	20003570 	.word	0x20003570
 800eaa8:	20003572 	.word	0x20003572
 800eaac:	20003574 	.word	0x20003574
 800eab0:	20003578 	.word	0x20003578

0800eab4 <_ZN8touchgfx19LCD16bppSerialFlashD1Ev>:
 800eab4:	4770      	bx	lr

0800eab6 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800eab6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eab8:	000e      	movs	r6, r1
 800eaba:	6809      	ldr	r1, [r1, #0]
 800eabc:	0005      	movs	r5, r0
 800eabe:	0014      	movs	r4, r2
 800eac0:	001f      	movs	r7, r3
 800eac2:	2900      	cmp	r1, #0
 800eac4:	d114      	bne.n	800eaf0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3a>
 800eac6:	6871      	ldr	r1, [r6, #4]
 800eac8:	2900      	cmp	r1, #0
 800eaca:	d11e      	bne.n	800eb0a <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 800eacc:	2fff      	cmp	r7, #255	@ 0xff
 800eace:	d100      	bne.n	800ead2 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1c>
 800ead0:	e07c      	b.n	800ebcc <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x116>
 800ead2:	2c0b      	cmp	r4, #11
 800ead4:	d100      	bne.n	800ead8 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x22>
 800ead6:	e075      	b.n	800ebc4 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10e>
 800ead8:	d825      	bhi.n	800eb26 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x70>
 800eada:	2c03      	cmp	r4, #3
 800eadc:	d100      	bne.n	800eae0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2a>
 800eade:	e069      	b.n	800ebb4 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800eae0:	d81a      	bhi.n	800eb18 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x62>
 800eae2:	2c01      	cmp	r4, #1
 800eae4:	d100      	bne.n	800eae8 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32>
 800eae6:	e067      	b.n	800ebb8 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x102>
 800eae8:	d800      	bhi.n	800eaec <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36>
 800eaea:	e067      	b.n	800ebbc <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x106>
 800eaec:	6c28      	ldr	r0, [r5, #64]	@ 0x40
 800eaee:	e00b      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eaf0:	68c0      	ldr	r0, [r0, #12]
 800eaf2:	6803      	ldr	r3, [r0, #0]
 800eaf4:	689b      	ldr	r3, [r3, #8]
 800eaf6:	4798      	blx	r3
 800eaf8:	2800      	cmp	r0, #0
 800eafa:	d1e4      	bne.n	800eac6 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10>
 800eafc:	003b      	movs	r3, r7
 800eafe:	0022      	movs	r2, r4
 800eb00:	0031      	movs	r1, r6
 800eb02:	0028      	movs	r0, r5
 800eb04:	f7fa fcce 	bl	80094a4 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>
 800eb08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eb0a:	68e8      	ldr	r0, [r5, #12]
 800eb0c:	6803      	ldr	r3, [r0, #0]
 800eb0e:	689b      	ldr	r3, [r3, #8]
 800eb10:	4798      	blx	r3
 800eb12:	2800      	cmp	r0, #0
 800eb14:	d1da      	bne.n	800eacc <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16>
 800eb16:	e7f1      	b.n	800eafc <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46>
 800eb18:	2c09      	cmp	r4, #9
 800eb1a:	d053      	beq.n	800ebc4 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10e>
 800eb1c:	d850      	bhi.n	800ebc0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 800eb1e:	2c08      	cmp	r4, #8
 800eb20:	d04e      	beq.n	800ebc0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 800eb22:	2000      	movs	r0, #0
 800eb24:	e7f0      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb26:	2c2f      	cmp	r4, #47	@ 0x2f
 800eb28:	d02e      	beq.n	800eb88 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd2>
 800eb2a:	d812      	bhi.n	800eb52 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 800eb2c:	2c2d      	cmp	r4, #45	@ 0x2d
 800eb2e:	d019      	beq.n	800eb64 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 800eb30:	d835      	bhi.n	800eb9e <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe8>
 800eb32:	2c2c      	cmp	r4, #44	@ 0x2c
 800eb34:	d1f5      	bne.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800eb36:	2000      	movs	r0, #0
 800eb38:	6872      	ldr	r2, [r6, #4]
 800eb3a:	7813      	ldrb	r3, [r2, #0]
 800eb3c:	7852      	ldrb	r2, [r2, #1]
 800eb3e:	4282      	cmp	r2, r0
 800eb40:	d1e2      	bne.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb42:	2b01      	cmp	r3, #1
 800eb44:	d01e      	beq.n	800eb84 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xce>
 800eb46:	4283      	cmp	r3, r0
 800eb48:	d032      	beq.n	800ebb0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800eb4a:	2b02      	cmp	r3, #2
 800eb4c:	d1e9      	bne.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800eb4e:	6928      	ldr	r0, [r5, #16]
 800eb50:	e7da      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb52:	2c31      	cmp	r4, #49	@ 0x31
 800eb54:	d004      	beq.n	800eb60 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 800eb56:	d337      	bcc.n	800ebc8 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 800eb58:	2c32      	cmp	r4, #50	@ 0x32
 800eb5a:	d035      	beq.n	800ebc8 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 800eb5c:	2c33      	cmp	r4, #51	@ 0x33
 800eb5e:	d1e0      	bne.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800eb60:	6fa8      	ldr	r0, [r5, #120]	@ 0x78
 800eb62:	e7d1      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb64:	2000      	movs	r0, #0
 800eb66:	6872      	ldr	r2, [r6, #4]
 800eb68:	7813      	ldrb	r3, [r2, #0]
 800eb6a:	7852      	ldrb	r2, [r2, #1]
 800eb6c:	4282      	cmp	r2, r0
 800eb6e:	d1cb      	bne.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb70:	2b01      	cmp	r3, #1
 800eb72:	d005      	beq.n	800eb80 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800eb74:	4283      	cmp	r3, r0
 800eb76:	d010      	beq.n	800eb9a <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe4>
 800eb78:	2b02      	cmp	r3, #2
 800eb7a:	d1d2      	bne.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800eb7c:	69a8      	ldr	r0, [r5, #24]
 800eb7e:	e7c3      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb80:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 800eb82:	e7c1      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb84:	6a28      	ldr	r0, [r5, #32]
 800eb86:	e7bf      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb88:	2000      	movs	r0, #0
 800eb8a:	6873      	ldr	r3, [r6, #4]
 800eb8c:	781a      	ldrb	r2, [r3, #0]
 800eb8e:	785b      	ldrb	r3, [r3, #1]
 800eb90:	4283      	cmp	r3, r0
 800eb92:	d1b9      	bne.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb94:	0018      	movs	r0, r3
 800eb96:	2a00      	cmp	r2, #0
 800eb98:	d1b6      	bne.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb9a:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 800eb9c:	e7b4      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eb9e:	2000      	movs	r0, #0
 800eba0:	6873      	ldr	r3, [r6, #4]
 800eba2:	781a      	ldrb	r2, [r3, #0]
 800eba4:	785b      	ldrb	r3, [r3, #1]
 800eba6:	4283      	cmp	r3, r0
 800eba8:	d1ae      	bne.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebaa:	0018      	movs	r0, r3
 800ebac:	2a00      	cmp	r2, #0
 800ebae:	d1ab      	bne.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebb0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ebb2:	e7a9      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebb4:	6d28      	ldr	r0, [r5, #80]	@ 0x50
 800ebb6:	e7a7      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebb8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800ebba:	e7a5      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebbc:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 800ebbe:	e7a3      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebc0:	6e28      	ldr	r0, [r5, #96]	@ 0x60
 800ebc2:	e7a1      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebc4:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
 800ebc6:	e79f      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebc8:	6f28      	ldr	r0, [r5, #112]	@ 0x70
 800ebca:	e79d      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebcc:	2c0b      	cmp	r4, #11
 800ebce:	d065      	beq.n	800ec9c <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 800ebd0:	d80e      	bhi.n	800ebf0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800ebd2:	2c03      	cmp	r4, #3
 800ebd4:	d05c      	beq.n	800ec90 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1da>
 800ebd6:	d804      	bhi.n	800ebe2 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12c>
 800ebd8:	2c01      	cmp	r4, #1
 800ebda:	d05b      	beq.n	800ec94 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1de>
 800ebdc:	d95c      	bls.n	800ec98 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e2>
 800ebde:	6c68      	ldr	r0, [r5, #68]	@ 0x44
 800ebe0:	e792      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebe2:	2c09      	cmp	r4, #9
 800ebe4:	d05a      	beq.n	800ec9c <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 800ebe6:	d801      	bhi.n	800ebec <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800ebe8:	2c08      	cmp	r4, #8
 800ebea:	d19a      	bne.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800ebec:	6e68      	ldr	r0, [r5, #100]	@ 0x64
 800ebee:	e78b      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ebf0:	2c2f      	cmp	r4, #47	@ 0x2f
 800ebf2:	d033      	beq.n	800ec5c <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a6>
 800ebf4:	d814      	bhi.n	800ec20 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 800ebf6:	2c2d      	cmp	r4, #45	@ 0x2d
 800ebf8:	d01c      	beq.n	800ec34 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 800ebfa:	d83c      	bhi.n	800ec76 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1c0>
 800ebfc:	2c2c      	cmp	r4, #44	@ 0x2c
 800ebfe:	d190      	bne.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800ec00:	2000      	movs	r0, #0
 800ec02:	6872      	ldr	r2, [r6, #4]
 800ec04:	7813      	ldrb	r3, [r2, #0]
 800ec06:	7852      	ldrb	r2, [r2, #1]
 800ec08:	4282      	cmp	r2, r0
 800ec0a:	d000      	beq.n	800ec0e <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x158>
 800ec0c:	e77c      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec0e:	2b01      	cmp	r3, #1
 800ec10:	d022      	beq.n	800ec58 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a2>
 800ec12:	4283      	cmp	r3, r0
 800ec14:	d03a      	beq.n	800ec8c <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1d6>
 800ec16:	2b02      	cmp	r3, #2
 800ec18:	d000      	beq.n	800ec1c <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x166>
 800ec1a:	e782      	b.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800ec1c:	6968      	ldr	r0, [r5, #20]
 800ec1e:	e773      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec20:	2c31      	cmp	r4, #49	@ 0x31
 800ec22:	d005      	beq.n	800ec30 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 800ec24:	d33c      	bcc.n	800eca0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ea>
 800ec26:	2c32      	cmp	r4, #50	@ 0x32
 800ec28:	d03a      	beq.n	800eca0 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ea>
 800ec2a:	2c33      	cmp	r4, #51	@ 0x33
 800ec2c:	d000      	beq.n	800ec30 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 800ec2e:	e778      	b.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800ec30:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
 800ec32:	e769      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec34:	2000      	movs	r0, #0
 800ec36:	6872      	ldr	r2, [r6, #4]
 800ec38:	7813      	ldrb	r3, [r2, #0]
 800ec3a:	7852      	ldrb	r2, [r2, #1]
 800ec3c:	4282      	cmp	r2, r0
 800ec3e:	d000      	beq.n	800ec42 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18c>
 800ec40:	e762      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec42:	2b01      	cmp	r3, #1
 800ec44:	d006      	beq.n	800ec54 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x19e>
 800ec46:	4283      	cmp	r3, r0
 800ec48:	d013      	beq.n	800ec72 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1bc>
 800ec4a:	2b02      	cmp	r3, #2
 800ec4c:	d000      	beq.n	800ec50 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x19a>
 800ec4e:	e768      	b.n	800eb22 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 800ec50:	69e8      	ldr	r0, [r5, #28]
 800ec52:	e759      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec54:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
 800ec56:	e757      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec58:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 800ec5a:	e755      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec5c:	2000      	movs	r0, #0
 800ec5e:	6873      	ldr	r3, [r6, #4]
 800ec60:	781a      	ldrb	r2, [r3, #0]
 800ec62:	785b      	ldrb	r3, [r3, #1]
 800ec64:	4283      	cmp	r3, r0
 800ec66:	d000      	beq.n	800ec6a <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1b4>
 800ec68:	e74e      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec6a:	0018      	movs	r0, r3
 800ec6c:	2a00      	cmp	r2, #0
 800ec6e:	d000      	beq.n	800ec72 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1bc>
 800ec70:	e74a      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec72:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
 800ec74:	e748      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec76:	2000      	movs	r0, #0
 800ec78:	6873      	ldr	r3, [r6, #4]
 800ec7a:	781a      	ldrb	r2, [r3, #0]
 800ec7c:	785b      	ldrb	r3, [r3, #1]
 800ec7e:	4283      	cmp	r3, r0
 800ec80:	d000      	beq.n	800ec84 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ce>
 800ec82:	e741      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec84:	0018      	movs	r0, r3
 800ec86:	2a00      	cmp	r2, #0
 800ec88:	d000      	beq.n	800ec8c <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1d6>
 800ec8a:	e73d      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec8c:	6b68      	ldr	r0, [r5, #52]	@ 0x34
 800ec8e:	e73b      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec90:	6d68      	ldr	r0, [r5, #84]	@ 0x54
 800ec92:	e739      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec94:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
 800ec96:	e737      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec98:	6ce8      	ldr	r0, [r5, #76]	@ 0x4c
 800ec9a:	e735      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800ec9c:	6ee8      	ldr	r0, [r5, #108]	@ 0x6c
 800ec9e:	e733      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 800eca0:	6f68      	ldr	r0, [r5, #116]	@ 0x74
 800eca2:	e731      	b.n	800eb08 <_ZN8touchgfx19LCD16bppSerialFlash28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>

0800eca4 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 800eca4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eca6:	0006      	movs	r6, r0
 800eca8:	b08d      	sub	sp, #52	@ 0x34
 800ecaa:	ac09      	add	r4, sp, #36	@ 0x24
 800ecac:	0020      	movs	r0, r4
 800ecae:	9106      	str	r1, [sp, #24]
 800ecb0:	9207      	str	r2, [sp, #28]
 800ecb2:	8023      	strh	r3, [r4, #0]
 800ecb4:	f7ff fdec 	bl	800e890 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ecb8:	6833      	ldr	r3, [r6, #0]
 800ecba:	0005      	movs	r5, r0
 800ecbc:	699b      	ldr	r3, [r3, #24]
 800ecbe:	0020      	movs	r0, r4
 800ecc0:	9305      	str	r3, [sp, #20]
 800ecc2:	f7ff fced 	bl	800e6a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ecc6:	0007      	movs	r7, r0
 800ecc8:	0020      	movs	r0, r4
 800ecca:	f7ff fd21 	bl	800e710 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ecce:	9701      	str	r7, [sp, #4]
 800ecd0:	9002      	str	r0, [sp, #8]
 800ecd2:	9500      	str	r5, [sp, #0]
 800ecd4:	a80a      	add	r0, sp, #40	@ 0x28
 800ecd6:	9b07      	ldr	r3, [sp, #28]
 800ecd8:	9a06      	ldr	r2, [sp, #24]
 800ecda:	0031      	movs	r1, r6
 800ecdc:	9c05      	ldr	r4, [sp, #20]
 800ecde:	47a0      	blx	r4
 800ece0:	0028      	movs	r0, r5
 800ece2:	b00d      	add	sp, #52	@ 0x34
 800ece4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ece6 <_ZN8touchgfx19LCD16bppSerialFlashD0Ev>:
 800ece6:	b510      	push	{r4, lr}
 800ece8:	0004      	movs	r4, r0
 800ecea:	2190      	movs	r1, #144	@ 0x90
 800ecec:	f002 ff0b 	bl	8011b06 <_ZdlPvj>
 800ecf0:	0020      	movs	r0, r4
 800ecf2:	bd10      	pop	{r4, pc}

0800ecf4 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb>:
 800ecf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ecf6:	b08f      	sub	sp, #60	@ 0x3c
 800ecf8:	001f      	movs	r7, r3
 800ecfa:	ab14      	add	r3, sp, #80	@ 0x50
 800ecfc:	781b      	ldrb	r3, [r3, #0]
 800ecfe:	0006      	movs	r6, r0
 800ed00:	9101      	str	r1, [sp, #4]
 800ed02:	0015      	movs	r5, r2
 800ed04:	9302      	str	r3, [sp, #8]
 800ed06:	2b00      	cmp	r3, #0
 800ed08:	d100      	bne.n	800ed0c <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x18>
 800ed0a:	e163      	b.n	800efd4 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e0>
 800ed0c:	ac0c      	add	r4, sp, #48	@ 0x30
 800ed0e:	0029      	movs	r1, r5
 800ed10:	2208      	movs	r2, #8
 800ed12:	a80a      	add	r0, sp, #40	@ 0x28
 800ed14:	f004 f82f 	bl	8012d76 <memcpy>
 800ed18:	2208      	movs	r2, #8
 800ed1a:	0039      	movs	r1, r7
 800ed1c:	0020      	movs	r0, r4
 800ed1e:	f004 f82a 	bl	8012d76 <memcpy>
 800ed22:	a80a      	add	r0, sp, #40	@ 0x28
 800ed24:	f7fb ffae 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ed28:	0020      	movs	r0, r4
 800ed2a:	0029      	movs	r1, r5
 800ed2c:	f7fb ffd2 	bl	800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ed30:	2302      	movs	r3, #2
 800ed32:	5ee2      	ldrsh	r2, [r4, r3]
 800ed34:	2300      	movs	r3, #0
 800ed36:	5ee1      	ldrsh	r1, [r4, r3]
 800ed38:	ab0a      	add	r3, sp, #40	@ 0x28
 800ed3a:	2004      	movs	r0, #4
 800ed3c:	5e1b      	ldrsh	r3, [r3, r0]
 800ed3e:	9801      	ldr	r0, [sp, #4]
 800ed40:	4353      	muls	r3, r2
 800ed42:	185b      	adds	r3, r3, r1
 800ed44:	005b      	lsls	r3, r3, #1
 800ed46:	18c3      	adds	r3, r0, r3
 800ed48:	9301      	str	r3, [sp, #4]
 800ed4a:	ab0a      	add	r3, sp, #40	@ 0x28
 800ed4c:	881b      	ldrh	r3, [r3, #0]
 800ed4e:	1859      	adds	r1, r3, r1
 800ed50:	8021      	strh	r1, [r4, #0]
 800ed52:	ab0a      	add	r3, sp, #40	@ 0x28
 800ed54:	885b      	ldrh	r3, [r3, #2]
 800ed56:	189a      	adds	r2, r3, r2
 800ed58:	8062      	strh	r2, [r4, #2]
 800ed5a:	2204      	movs	r2, #4
 800ed5c:	5ea3      	ldrsh	r3, [r4, r2]
 800ed5e:	9305      	str	r3, [sp, #20]
 800ed60:	2306      	movs	r3, #6
 800ed62:	5ee5      	ldrsh	r5, [r4, r3]
 800ed64:	4b9c      	ldr	r3, [pc, #624]	@ (800efd8 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e4>)
 800ed66:	6818      	ldr	r0, [r3, #0]
 800ed68:	6803      	ldr	r3, [r0, #0]
 800ed6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ed6c:	4798      	blx	r3
 800ed6e:	4b9b      	ldr	r3, [pc, #620]	@ (800efdc <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e8>)
 800ed70:	881a      	ldrh	r2, [r3, #0]
 800ed72:	2102      	movs	r1, #2
 800ed74:	5e63      	ldrsh	r3, [r4, r1]
 800ed76:	4355      	muls	r5, r2
 800ed78:	4353      	muls	r3, r2
 800ed7a:	2100      	movs	r1, #0
 800ed7c:	5e64      	ldrsh	r4, [r4, r1]
 800ed7e:	006d      	lsls	r5, r5, #1
 800ed80:	191c      	adds	r4, r3, r4
 800ed82:	0064      	lsls	r4, r4, #1
 800ed84:	1904      	adds	r4, r0, r4
 800ed86:	68f0      	ldr	r0, [r6, #12]
 800ed88:	1963      	adds	r3, r4, r5
 800ed8a:	9304      	str	r3, [sp, #16]
 800ed8c:	6803      	ldr	r3, [r0, #0]
 800ed8e:	9901      	ldr	r1, [sp, #4]
 800ed90:	689b      	ldr	r3, [r3, #8]
 800ed92:	4798      	blx	r3
 800ed94:	9b05      	ldr	r3, [sp, #20]
 800ed96:	005b      	lsls	r3, r3, #1
 800ed98:	9303      	str	r3, [sp, #12]
 800ed9a:	9b02      	ldr	r3, [sp, #8]
 800ed9c:	2800      	cmp	r0, #0
 800ed9e:	d100      	bne.n	800eda2 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 800eda0:	e07d      	b.n	800ee9e <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x1aa>
 800eda2:	2bff      	cmp	r3, #255	@ 0xff
 800eda4:	d063      	beq.n	800ee6e <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 800eda6:	23ff      	movs	r3, #255	@ 0xff
 800eda8:	9a02      	ldr	r2, [sp, #8]
 800edaa:	1a9b      	subs	r3, r3, r2
 800edac:	9306      	str	r3, [sp, #24]
 800edae:	2303      	movs	r3, #3
 800edb0:	469c      	mov	ip, r3
 800edb2:	9b04      	ldr	r3, [sp, #16]
 800edb4:	42a3      	cmp	r3, r4
 800edb6:	d800      	bhi.n	800edba <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0xc6>
 800edb8:	e107      	b.n	800efca <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2d6>
 800edba:	0020      	movs	r0, r4
 800edbc:	9b03      	ldr	r3, [sp, #12]
 800edbe:	18e3      	adds	r3, r4, r3
 800edc0:	9307      	str	r3, [sp, #28]
 800edc2:	9b07      	ldr	r3, [sp, #28]
 800edc4:	4283      	cmp	r3, r0
 800edc6:	d942      	bls.n	800ee4e <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x15a>
 800edc8:	466a      	mov	r2, sp
 800edca:	2607      	movs	r6, #7
 800edcc:	9b01      	ldr	r3, [sp, #4]
 800edce:	8805      	ldrh	r5, [r0, #0]
 800edd0:	881b      	ldrh	r3, [r3, #0]
 800edd2:	8917      	ldrh	r7, [r2, #8]
 800edd4:	8b14      	ldrh	r4, [r2, #24]
 800edd6:	1219      	asrs	r1, r3, #8
 800edd8:	122a      	asrs	r2, r5, #8
 800edda:	43b1      	bics	r1, r6
 800eddc:	43b2      	bics	r2, r6
 800edde:	4666      	mov	r6, ip
 800ede0:	4362      	muls	r2, r4
 800ede2:	4379      	muls	r1, r7
 800ede4:	1889      	adds	r1, r1, r2
 800ede6:	10da      	asrs	r2, r3, #3
 800ede8:	43b2      	bics	r2, r6
 800edea:	b2d2      	uxtb	r2, r2
 800edec:	437a      	muls	r2, r7
 800edee:	9208      	str	r2, [sp, #32]
 800edf0:	4662      	mov	r2, ip
 800edf2:	10ee      	asrs	r6, r5, #3
 800edf4:	4396      	bics	r6, r2
 800edf6:	00db      	lsls	r3, r3, #3
 800edf8:	00ed      	lsls	r5, r5, #3
 800edfa:	b2f6      	uxtb	r6, r6
 800edfc:	b2db      	uxtb	r3, r3
 800edfe:	b2ed      	uxtb	r5, r5
 800ee00:	4366      	muls	r6, r4
 800ee02:	437b      	muls	r3, r7
 800ee04:	436c      	muls	r4, r5
 800ee06:	b289      	uxth	r1, r1
 800ee08:	191b      	adds	r3, r3, r4
 800ee0a:	1c4c      	adds	r4, r1, #1
 800ee0c:	1209      	asrs	r1, r1, #8
 800ee0e:	1861      	adds	r1, r4, r1
 800ee10:	24ff      	movs	r4, #255	@ 0xff
 800ee12:	9a08      	ldr	r2, [sp, #32]
 800ee14:	b29b      	uxth	r3, r3
 800ee16:	1992      	adds	r2, r2, r6
 800ee18:	0224      	lsls	r4, r4, #8
 800ee1a:	1c5e      	adds	r6, r3, #1
 800ee1c:	121b      	asrs	r3, r3, #8
 800ee1e:	4021      	ands	r1, r4
 800ee20:	18f3      	adds	r3, r6, r3
 800ee22:	0ac9      	lsrs	r1, r1, #11
 800ee24:	041b      	lsls	r3, r3, #16
 800ee26:	b292      	uxth	r2, r2
 800ee28:	0edb      	lsrs	r3, r3, #27
 800ee2a:	02c9      	lsls	r1, r1, #11
 800ee2c:	4319      	orrs	r1, r3
 800ee2e:	1c53      	adds	r3, r2, #1
 800ee30:	1212      	asrs	r2, r2, #8
 800ee32:	189a      	adds	r2, r3, r2
 800ee34:	23ff      	movs	r3, #255	@ 0xff
 800ee36:	0952      	lsrs	r2, r2, #5
 800ee38:	00db      	lsls	r3, r3, #3
 800ee3a:	401a      	ands	r2, r3
 800ee3c:	3b18      	subs	r3, #24
 800ee3e:	401a      	ands	r2, r3
 800ee40:	9b01      	ldr	r3, [sp, #4]
 800ee42:	4311      	orrs	r1, r2
 800ee44:	3302      	adds	r3, #2
 800ee46:	8001      	strh	r1, [r0, #0]
 800ee48:	9301      	str	r3, [sp, #4]
 800ee4a:	3002      	adds	r0, #2
 800ee4c:	e7b9      	b.n	800edc2 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0xce>
 800ee4e:	4b63      	ldr	r3, [pc, #396]	@ (800efdc <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e8>)
 800ee50:	881c      	ldrh	r4, [r3, #0]
 800ee52:	9b05      	ldr	r3, [sp, #20]
 800ee54:	1ae4      	subs	r4, r4, r3
 800ee56:	ab0a      	add	r3, sp, #40	@ 0x28
 800ee58:	2204      	movs	r2, #4
 800ee5a:	5e9b      	ldrsh	r3, [r3, r2]
 800ee5c:	9a05      	ldr	r2, [sp, #20]
 800ee5e:	0064      	lsls	r4, r4, #1
 800ee60:	1a9b      	subs	r3, r3, r2
 800ee62:	9a01      	ldr	r2, [sp, #4]
 800ee64:	005b      	lsls	r3, r3, #1
 800ee66:	18d3      	adds	r3, r2, r3
 800ee68:	1904      	adds	r4, r0, r4
 800ee6a:	9301      	str	r3, [sp, #4]
 800ee6c:	e7a1      	b.n	800edb2 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0xbe>
 800ee6e:	4b5a      	ldr	r3, [pc, #360]	@ (800efd8 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e4>)
 800ee70:	9a04      	ldr	r2, [sp, #16]
 800ee72:	6818      	ldr	r0, [r3, #0]
 800ee74:	6803      	ldr	r3, [r0, #0]
 800ee76:	42a2      	cmp	r2, r4
 800ee78:	d800      	bhi.n	800ee7c <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x188>
 800ee7a:	e0a6      	b.n	800efca <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2d6>
 800ee7c:	9a01      	ldr	r2, [sp, #4]
 800ee7e:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
 800ee80:	0021      	movs	r1, r4
 800ee82:	9b03      	ldr	r3, [sp, #12]
 800ee84:	47a8      	blx	r5
 800ee86:	4b55      	ldr	r3, [pc, #340]	@ (800efdc <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e8>)
 800ee88:	881b      	ldrh	r3, [r3, #0]
 800ee8a:	005b      	lsls	r3, r3, #1
 800ee8c:	18e4      	adds	r4, r4, r3
 800ee8e:	ab0a      	add	r3, sp, #40	@ 0x28
 800ee90:	2204      	movs	r2, #4
 800ee92:	5e9b      	ldrsh	r3, [r3, r2]
 800ee94:	9a01      	ldr	r2, [sp, #4]
 800ee96:	005b      	lsls	r3, r3, #1
 800ee98:	18d3      	adds	r3, r2, r3
 800ee9a:	9301      	str	r3, [sp, #4]
 800ee9c:	e7e7      	b.n	800ee6e <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 800ee9e:	2bff      	cmp	r3, #255	@ 0xff
 800eea0:	d100      	bne.n	800eea4 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x1b0>
 800eea2:	e07c      	b.n	800ef9e <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2aa>
 800eea4:	23ff      	movs	r3, #255	@ 0xff
 800eea6:	9a02      	ldr	r2, [sp, #8]
 800eea8:	68f0      	ldr	r0, [r6, #12]
 800eeaa:	1a9b      	subs	r3, r3, r2
 800eeac:	9308      	str	r3, [sp, #32]
 800eeae:	6803      	ldr	r3, [r0, #0]
 800eeb0:	9a03      	ldr	r2, [sp, #12]
 800eeb2:	691b      	ldr	r3, [r3, #16]
 800eeb4:	9901      	ldr	r1, [sp, #4]
 800eeb6:	4798      	blx	r3
 800eeb8:	9b04      	ldr	r3, [sp, #16]
 800eeba:	42a3      	cmp	r3, r4
 800eebc:	d800      	bhi.n	800eec0 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>
 800eebe:	e084      	b.n	800efca <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2d6>
 800eec0:	68f0      	ldr	r0, [r6, #12]
 800eec2:	6803      	ldr	r3, [r0, #0]
 800eec4:	695b      	ldr	r3, [r3, #20]
 800eec6:	4798      	blx	r3
 800eec8:	4b44      	ldr	r3, [pc, #272]	@ (800efdc <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e8>)
 800eeca:	9a04      	ldr	r2, [sp, #16]
 800eecc:	881b      	ldrh	r3, [r3, #0]
 800eece:	9006      	str	r0, [sp, #24]
 800eed0:	005b      	lsls	r3, r3, #1
 800eed2:	18e3      	adds	r3, r4, r3
 800eed4:	429a      	cmp	r2, r3
 800eed6:	d90c      	bls.n	800eef2 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x1fe>
 800eed8:	ab0a      	add	r3, sp, #40	@ 0x28
 800eeda:	2204      	movs	r2, #4
 800eedc:	5e9b      	ldrsh	r3, [r3, r2]
 800eede:	9a01      	ldr	r2, [sp, #4]
 800eee0:	005b      	lsls	r3, r3, #1
 800eee2:	68f0      	ldr	r0, [r6, #12]
 800eee4:	18d3      	adds	r3, r2, r3
 800eee6:	9301      	str	r3, [sp, #4]
 800eee8:	6803      	ldr	r3, [r0, #0]
 800eeea:	9a03      	ldr	r2, [sp, #12]
 800eeec:	691b      	ldr	r3, [r3, #16]
 800eeee:	9901      	ldr	r1, [sp, #4]
 800eef0:	4798      	blx	r3
 800eef2:	0020      	movs	r0, r4
 800eef4:	9b03      	ldr	r3, [sp, #12]
 800eef6:	18e3      	adds	r3, r4, r3
 800eef8:	9309      	str	r3, [sp, #36]	@ 0x24
 800eefa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800eefc:	4283      	cmp	r3, r0
 800eefe:	d947      	bls.n	800ef90 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x29c>
 800ef00:	8803      	ldrh	r3, [r0, #0]
 800ef02:	466a      	mov	r2, sp
 800ef04:	469c      	mov	ip, r3
 800ef06:	4664      	mov	r4, ip
 800ef08:	2707      	movs	r7, #7
 800ef0a:	9b06      	ldr	r3, [sp, #24]
 800ef0c:	8911      	ldrh	r1, [r2, #8]
 800ef0e:	881b      	ldrh	r3, [r3, #0]
 800ef10:	8c12      	ldrh	r2, [r2, #32]
 800ef12:	121d      	asrs	r5, r3, #8
 800ef14:	1224      	asrs	r4, r4, #8
 800ef16:	43bd      	bics	r5, r7
 800ef18:	43bc      	bics	r4, r7
 800ef1a:	4354      	muls	r4, r2
 800ef1c:	434d      	muls	r5, r1
 800ef1e:	192d      	adds	r5, r5, r4
 800ef20:	b2ac      	uxth	r4, r5
 800ef22:	4665      	mov	r5, ip
 800ef24:	9407      	str	r4, [sp, #28]
 800ef26:	3f04      	subs	r7, #4
 800ef28:	10dc      	asrs	r4, r3, #3
 800ef2a:	43bc      	bics	r4, r7
 800ef2c:	10ef      	asrs	r7, r5, #3
 800ef2e:	2503      	movs	r5, #3
 800ef30:	40ab      	lsls	r3, r5
 800ef32:	b2e4      	uxtb	r4, r4
 800ef34:	b2db      	uxtb	r3, r3
 800ef36:	434c      	muls	r4, r1
 800ef38:	434b      	muls	r3, r1
 800ef3a:	4661      	mov	r1, ip
 800ef3c:	40a9      	lsls	r1, r5
 800ef3e:	43af      	bics	r7, r5
 800ef40:	b2c9      	uxtb	r1, r1
 800ef42:	b2ff      	uxtb	r7, r7
 800ef44:	4357      	muls	r7, r2
 800ef46:	434a      	muls	r2, r1
 800ef48:	9907      	ldr	r1, [sp, #28]
 800ef4a:	189b      	adds	r3, r3, r2
 800ef4c:	9a07      	ldr	r2, [sp, #28]
 800ef4e:	120d      	asrs	r5, r1, #8
 800ef50:	3201      	adds	r2, #1
 800ef52:	1955      	adds	r5, r2, r5
 800ef54:	22ff      	movs	r2, #255	@ 0xff
 800ef56:	b29b      	uxth	r3, r3
 800ef58:	19e4      	adds	r4, r4, r7
 800ef5a:	0212      	lsls	r2, r2, #8
 800ef5c:	1c5f      	adds	r7, r3, #1
 800ef5e:	121b      	asrs	r3, r3, #8
 800ef60:	4015      	ands	r5, r2
 800ef62:	18fb      	adds	r3, r7, r3
 800ef64:	0aed      	lsrs	r5, r5, #11
 800ef66:	041b      	lsls	r3, r3, #16
 800ef68:	b2a4      	uxth	r4, r4
 800ef6a:	0edb      	lsrs	r3, r3, #27
 800ef6c:	02ed      	lsls	r5, r5, #11
 800ef6e:	431d      	orrs	r5, r3
 800ef70:	1c63      	adds	r3, r4, #1
 800ef72:	1224      	asrs	r4, r4, #8
 800ef74:	191c      	adds	r4, r3, r4
 800ef76:	23ff      	movs	r3, #255	@ 0xff
 800ef78:	0964      	lsrs	r4, r4, #5
 800ef7a:	00db      	lsls	r3, r3, #3
 800ef7c:	401c      	ands	r4, r3
 800ef7e:	3b18      	subs	r3, #24
 800ef80:	401c      	ands	r4, r3
 800ef82:	9b06      	ldr	r3, [sp, #24]
 800ef84:	4325      	orrs	r5, r4
 800ef86:	3302      	adds	r3, #2
 800ef88:	8005      	strh	r5, [r0, #0]
 800ef8a:	9306      	str	r3, [sp, #24]
 800ef8c:	3002      	adds	r0, #2
 800ef8e:	e7b4      	b.n	800eefa <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x206>
 800ef90:	4b12      	ldr	r3, [pc, #72]	@ (800efdc <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e8>)
 800ef92:	881c      	ldrh	r4, [r3, #0]
 800ef94:	9b05      	ldr	r3, [sp, #20]
 800ef96:	1ae4      	subs	r4, r4, r3
 800ef98:	0064      	lsls	r4, r4, #1
 800ef9a:	1904      	adds	r4, r0, r4
 800ef9c:	e78c      	b.n	800eeb8 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x1c4>
 800ef9e:	9b04      	ldr	r3, [sp, #16]
 800efa0:	42a3      	cmp	r3, r4
 800efa2:	d912      	bls.n	800efca <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2d6>
 800efa4:	68f0      	ldr	r0, [r6, #12]
 800efa6:	0022      	movs	r2, r4
 800efa8:	6803      	ldr	r3, [r0, #0]
 800efaa:	9901      	ldr	r1, [sp, #4]
 800efac:	68dd      	ldr	r5, [r3, #12]
 800efae:	9b03      	ldr	r3, [sp, #12]
 800efb0:	47a8      	blx	r5
 800efb2:	4b0a      	ldr	r3, [pc, #40]	@ (800efdc <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e8>)
 800efb4:	881b      	ldrh	r3, [r3, #0]
 800efb6:	005b      	lsls	r3, r3, #1
 800efb8:	18e4      	adds	r4, r4, r3
 800efba:	ab0a      	add	r3, sp, #40	@ 0x28
 800efbc:	2204      	movs	r2, #4
 800efbe:	5e9b      	ldrsh	r3, [r3, r2]
 800efc0:	9a01      	ldr	r2, [sp, #4]
 800efc2:	005b      	lsls	r3, r3, #1
 800efc4:	18d3      	adds	r3, r2, r3
 800efc6:	9301      	str	r3, [sp, #4]
 800efc8:	e7e9      	b.n	800ef9e <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2aa>
 800efca:	4b03      	ldr	r3, [pc, #12]	@ (800efd8 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKtRKNS_4RectES5_hb+0x2e4>)
 800efcc:	6818      	ldr	r0, [r3, #0]
 800efce:	6803      	ldr	r3, [r0, #0]
 800efd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800efd2:	4798      	blx	r3
 800efd4:	b00f      	add	sp, #60	@ 0x3c
 800efd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efd8:	20003578 	.word	0x20003578
 800efdc:	20003572 	.word	0x20003572

0800efe0 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 800efe0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efe2:	001d      	movs	r5, r3
 800efe4:	b091      	sub	sp, #68	@ 0x44
 800efe6:	ab16      	add	r3, sp, #88	@ 0x58
 800efe8:	0014      	movs	r4, r2
 800efea:	cb04      	ldmia	r3!, {r2}
 800efec:	9000      	str	r0, [sp, #0]
 800efee:	9209      	str	r2, [sp, #36]	@ 0x24
 800eff0:	2200      	movs	r2, #0
 800eff2:	5e9b      	ldrsh	r3, [r3, r2]
 800eff4:	000e      	movs	r6, r1
 800eff6:	9301      	str	r3, [sp, #4]
 800eff8:	ab18      	add	r3, sp, #96	@ 0x60
 800effa:	2200      	movs	r2, #0
 800effc:	5e9b      	ldrsh	r3, [r3, r2]
 800effe:	9302      	str	r3, [sp, #8]
 800f000:	2300      	movs	r3, #0
 800f002:	5eea      	ldrsh	r2, [r5, r3]
 800f004:	2102      	movs	r1, #2
 800f006:	5e6b      	ldrsh	r3, [r5, r1]
 800f008:	a90a      	add	r1, sp, #40	@ 0x28
 800f00a:	804b      	strh	r3, [r1, #2]
 800f00c:	000b      	movs	r3, r1
 800f00e:	800a      	strh	r2, [r1, #0]
 800f010:	9a01      	ldr	r2, [sp, #4]
 800f012:	0018      	movs	r0, r3
 800f014:	808a      	strh	r2, [r1, #4]
 800f016:	9a02      	ldr	r2, [sp, #8]
 800f018:	80ca      	strh	r2, [r1, #6]
 800f01a:	0029      	movs	r1, r5
 800f01c:	f7f8 f8fe 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800f020:	0021      	movs	r1, r4
 800f022:	a80a      	add	r0, sp, #40	@ 0x28
 800f024:	f7f8 f8fa 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 800f028:	4b6d      	ldr	r3, [pc, #436]	@ (800f1e0 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x200>)
 800f02a:	ac0a      	add	r4, sp, #40	@ 0x28
 800f02c:	881a      	ldrh	r2, [r3, #0]
 800f02e:	4b6d      	ldr	r3, [pc, #436]	@ (800f1e4 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x204>)
 800f030:	2700      	movs	r7, #0
 800f032:	5fe7      	ldrsh	r7, [r4, r7]
 800f034:	881b      	ldrh	r3, [r3, #0]
 800f036:	b210      	sxth	r0, r2
 800f038:	b219      	sxth	r1, r3
 800f03a:	468c      	mov	ip, r1
 800f03c:	2f00      	cmp	r7, #0
 800f03e:	da06      	bge.n	800f04e <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x6e>
 800f040:	ac0a      	add	r4, sp, #40	@ 0x28
 800f042:	88a4      	ldrh	r4, [r4, #4]
 800f044:	19e4      	adds	r4, r4, r7
 800f046:	af0a      	add	r7, sp, #40	@ 0x28
 800f048:	80bc      	strh	r4, [r7, #4]
 800f04a:	2400      	movs	r4, #0
 800f04c:	803c      	strh	r4, [r7, #0]
 800f04e:	ac0a      	add	r4, sp, #40	@ 0x28
 800f050:	2700      	movs	r7, #0
 800f052:	5fe7      	ldrsh	r7, [r4, r7]
 800f054:	ac0a      	add	r4, sp, #40	@ 0x28
 800f056:	2104      	movs	r1, #4
 800f058:	5e64      	ldrsh	r4, [r4, r1]
 800f05a:	1bc0      	subs	r0, r0, r7
 800f05c:	4284      	cmp	r4, r0
 800f05e:	dd02      	ble.n	800f066 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x86>
 800f060:	1bd0      	subs	r0, r2, r7
 800f062:	ac0a      	add	r4, sp, #40	@ 0x28
 800f064:	80a0      	strh	r0, [r4, #4]
 800f066:	a80a      	add	r0, sp, #40	@ 0x28
 800f068:	2102      	movs	r1, #2
 800f06a:	5e44      	ldrsh	r4, [r0, r1]
 800f06c:	2c00      	cmp	r4, #0
 800f06e:	da05      	bge.n	800f07c <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x9c>
 800f070:	88c0      	ldrh	r0, [r0, #6]
 800f072:	1900      	adds	r0, r0, r4
 800f074:	ac0a      	add	r4, sp, #40	@ 0x28
 800f076:	80e0      	strh	r0, [r4, #6]
 800f078:	2000      	movs	r0, #0
 800f07a:	8060      	strh	r0, [r4, #2]
 800f07c:	a80a      	add	r0, sp, #40	@ 0x28
 800f07e:	2102      	movs	r1, #2
 800f080:	5e44      	ldrsh	r4, [r0, r1]
 800f082:	2106      	movs	r1, #6
 800f084:	5e40      	ldrsh	r0, [r0, r1]
 800f086:	4661      	mov	r1, ip
 800f088:	1b09      	subs	r1, r1, r4
 800f08a:	4288      	cmp	r0, r1
 800f08c:	dd02      	ble.n	800f094 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb4>
 800f08e:	1b19      	subs	r1, r3, r4
 800f090:	a80a      	add	r0, sp, #40	@ 0x28
 800f092:	80c1      	strh	r1, [r0, #6]
 800f094:	4954      	ldr	r1, [pc, #336]	@ (800f1e8 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x208>)
 800f096:	7809      	ldrb	r1, [r1, #0]
 800f098:	2900      	cmp	r1, #0
 800f09a:	d115      	bne.n	800f0c8 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe8>
 800f09c:	ab0a      	add	r3, sp, #40	@ 0x28
 800f09e:	2104      	movs	r1, #4
 800f0a0:	5e5b      	ldrsh	r3, [r3, r1]
 800f0a2:	1a9a      	subs	r2, r3, r2
 800f0a4:	4253      	negs	r3, r2
 800f0a6:	415a      	adcs	r2, r3
 800f0a8:	b2d3      	uxtb	r3, r2
 800f0aa:	a80a      	add	r0, sp, #40	@ 0x28
 800f0ac:	9306      	str	r3, [sp, #24]
 800f0ae:	f7f8 f905 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800f0b2:	2800      	cmp	r0, #0
 800f0b4:	d010      	beq.n	800f0d8 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xf8>
 800f0b6:	2300      	movs	r3, #0
 800f0b8:	9a00      	ldr	r2, [sp, #0]
 800f0ba:	8013      	strh	r3, [r2, #0]
 800f0bc:	8053      	strh	r3, [r2, #2]
 800f0be:	8093      	strh	r3, [r2, #4]
 800f0c0:	80d3      	strh	r3, [r2, #6]
 800f0c2:	9800      	ldr	r0, [sp, #0]
 800f0c4:	b011      	add	sp, #68	@ 0x44
 800f0c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f0c8:	aa0a      	add	r2, sp, #40	@ 0x28
 800f0ca:	2106      	movs	r1, #6
 800f0cc:	5e52      	ldrsh	r2, [r2, r1]
 800f0ce:	1ad3      	subs	r3, r2, r3
 800f0d0:	425a      	negs	r2, r3
 800f0d2:	4153      	adcs	r3, r2
 800f0d4:	b2db      	uxtb	r3, r3
 800f0d6:	e7e8      	b.n	800f0aa <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xca>
 800f0d8:	ab0a      	add	r3, sp, #40	@ 0x28
 800f0da:	2204      	movs	r2, #4
 800f0dc:	5e9b      	ldrsh	r3, [r3, r2]
 800f0de:	9307      	str	r3, [sp, #28]
 800f0e0:	ab0a      	add	r3, sp, #40	@ 0x28
 800f0e2:	2206      	movs	r2, #6
 800f0e4:	5e9b      	ldrsh	r3, [r3, r2]
 800f0e6:	9305      	str	r3, [sp, #20]
 800f0e8:	882b      	ldrh	r3, [r5, #0]
 800f0ea:	1aff      	subs	r7, r7, r3
 800f0ec:	b23b      	sxth	r3, r7
 800f0ee:	9303      	str	r3, [sp, #12]
 800f0f0:	886b      	ldrh	r3, [r5, #2]
 800f0f2:	ad0c      	add	r5, sp, #48	@ 0x30
 800f0f4:	1ae4      	subs	r4, r4, r3
 800f0f6:	b223      	sxth	r3, r4
 800f0f8:	9304      	str	r3, [sp, #16]
 800f0fa:	9b03      	ldr	r3, [sp, #12]
 800f0fc:	ac0e      	add	r4, sp, #56	@ 0x38
 800f0fe:	802b      	strh	r3, [r5, #0]
 800f100:	9b04      	ldr	r3, [sp, #16]
 800f102:	0021      	movs	r1, r4
 800f104:	806b      	strh	r3, [r5, #2]
 800f106:	9b07      	ldr	r3, [sp, #28]
 800f108:	900e      	str	r0, [sp, #56]	@ 0x38
 800f10a:	80ab      	strh	r3, [r5, #4]
 800f10c:	9b05      	ldr	r3, [sp, #20]
 800f10e:	0028      	movs	r0, r5
 800f110:	80eb      	strh	r3, [r5, #6]
 800f112:	9b01      	ldr	r3, [sp, #4]
 800f114:	80a3      	strh	r3, [r4, #4]
 800f116:	9b02      	ldr	r3, [sp, #8]
 800f118:	80e3      	strh	r3, [r4, #6]
 800f11a:	f7fb fddb 	bl	800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800f11e:	a80a      	add	r0, sp, #40	@ 0x28
 800f120:	f7fb fdb0 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f124:	0020      	movs	r0, r4
 800f126:	f7fb fdad 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f12a:	2204      	movs	r2, #4
 800f12c:	5ea3      	ldrsh	r3, [r4, r2]
 800f12e:	0030      	movs	r0, r6
 800f130:	9301      	str	r3, [sp, #4]
 800f132:	4b2e      	ldr	r3, [pc, #184]	@ (800f1ec <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20c>)
 800f134:	881b      	ldrh	r3, [r3, #0]
 800f136:	9308      	str	r3, [sp, #32]
 800f138:	6833      	ldr	r3, [r6, #0]
 800f13a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f13c:	4798      	blx	r3
 800f13e:	9002      	str	r0, [sp, #8]
 800f140:	2302      	movs	r3, #2
 800f142:	5eec      	ldrsh	r4, [r5, r3]
 800f144:	9b01      	ldr	r3, [sp, #4]
 800f146:	4f2a      	ldr	r7, [pc, #168]	@ (800f1f0 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x210>)
 800f148:	435c      	muls	r4, r3
 800f14a:	2200      	movs	r2, #0
 800f14c:	5eab      	ldrsh	r3, [r5, r2]
 800f14e:	6838      	ldr	r0, [r7, #0]
 800f150:	18e4      	adds	r4, r4, r3
 800f152:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f154:	0064      	lsls	r4, r4, #1
 800f156:	191c      	adds	r4, r3, r4
 800f158:	6803      	ldr	r3, [r0, #0]
 800f15a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f15c:	4798      	blx	r3
 800f15e:	ab0a      	add	r3, sp, #40	@ 0x28
 800f160:	2600      	movs	r6, #0
 800f162:	5f9e      	ldrsh	r6, [r3, r6]
 800f164:	ab0a      	add	r3, sp, #40	@ 0x28
 800f166:	2202      	movs	r2, #2
 800f168:	5e9b      	ldrsh	r3, [r3, r2]
 800f16a:	9a02      	ldr	r2, [sp, #8]
 800f16c:	0076      	lsls	r6, r6, #1
 800f16e:	4353      	muls	r3, r2
 800f170:	18f6      	adds	r6, r6, r3
 800f172:	9b06      	ldr	r3, [sp, #24]
 800f174:	1986      	adds	r6, r0, r6
 800f176:	2b00      	cmp	r3, #0
 800f178:	d018      	beq.n	800f1ac <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1cc>
 800f17a:	9b01      	ldr	r3, [sp, #4]
 800f17c:	9a08      	ldr	r2, [sp, #32]
 800f17e:	4293      	cmp	r3, r2
 800f180:	d114      	bne.n	800f1ac <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1cc>
 800f182:	2206      	movs	r2, #6
 800f184:	5eab      	ldrsh	r3, [r5, r2]
 800f186:	9a02      	ldr	r2, [sp, #8]
 800f188:	6838      	ldr	r0, [r7, #0]
 800f18a:	435a      	muls	r2, r3
 800f18c:	0013      	movs	r3, r2
 800f18e:	6802      	ldr	r2, [r0, #0]
 800f190:	0021      	movs	r1, r4
 800f192:	6b55      	ldr	r5, [r2, #52]	@ 0x34
 800f194:	0032      	movs	r2, r6
 800f196:	47a8      	blx	r5
 800f198:	9b00      	ldr	r3, [sp, #0]
 800f19a:	9a03      	ldr	r2, [sp, #12]
 800f19c:	801a      	strh	r2, [r3, #0]
 800f19e:	9a04      	ldr	r2, [sp, #16]
 800f1a0:	805a      	strh	r2, [r3, #2]
 800f1a2:	9a07      	ldr	r2, [sp, #28]
 800f1a4:	809a      	strh	r2, [r3, #4]
 800f1a6:	9a05      	ldr	r2, [sp, #20]
 800f1a8:	80da      	strh	r2, [r3, #6]
 800f1aa:	e78a      	b.n	800f0c2 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 800f1ac:	2206      	movs	r2, #6
 800f1ae:	5eab      	ldrsh	r3, [r5, r2]
 800f1b0:	9a01      	ldr	r2, [sp, #4]
 800f1b2:	4353      	muls	r3, r2
 800f1b4:	005b      	lsls	r3, r3, #1
 800f1b6:	18e3      	adds	r3, r4, r3
 800f1b8:	9306      	str	r3, [sp, #24]
 800f1ba:	0055      	lsls	r5, r2, #1
 800f1bc:	9b06      	ldr	r3, [sp, #24]
 800f1be:	429c      	cmp	r4, r3
 800f1c0:	d2ea      	bcs.n	800f198 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 800f1c2:	4b0b      	ldr	r3, [pc, #44]	@ (800f1f0 <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x210>)
 800f1c4:	0021      	movs	r1, r4
 800f1c6:	6818      	ldr	r0, [r3, #0]
 800f1c8:	ab0c      	add	r3, sp, #48	@ 0x30
 800f1ca:	2204      	movs	r2, #4
 800f1cc:	5e9b      	ldrsh	r3, [r3, r2]
 800f1ce:	6802      	ldr	r2, [r0, #0]
 800f1d0:	005b      	lsls	r3, r3, #1
 800f1d2:	6b57      	ldr	r7, [r2, #52]	@ 0x34
 800f1d4:	0032      	movs	r2, r6
 800f1d6:	47b8      	blx	r7
 800f1d8:	9b02      	ldr	r3, [sp, #8]
 800f1da:	1964      	adds	r4, r4, r5
 800f1dc:	18f6      	adds	r6, r6, r3
 800f1de:	e7ed      	b.n	800f1bc <_ZN8touchgfx19LCD16bppSerialFlash29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1dc>
 800f1e0:	2000356c 	.word	0x2000356c
 800f1e4:	2000356e 	.word	0x2000356e
 800f1e8:	20003570 	.word	0x20003570
 800f1ec:	20003572 	.word	0x20003572
 800f1f0:	20003578 	.word	0x20003578

0800f1f4 <_ZN8touchgfx19LCD16bppSerialFlash8fillRectERKNS_4RectENS_9colortypeEh>:
 800f1f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1f6:	0005      	movs	r5, r0
 800f1f8:	b085      	sub	sp, #20
 800f1fa:	000c      	movs	r4, r1
 800f1fc:	0017      	movs	r7, r2
 800f1fe:	1e1e      	subs	r6, r3, #0
 800f200:	d01f      	beq.n	800f242 <_ZN8touchgfx19LCD16bppSerialFlash8fillRectERKNS_4RectENS_9colortypeEh+0x4e>
 800f202:	0008      	movs	r0, r1
 800f204:	f7f8 f85a 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800f208:	2800      	cmp	r0, #0
 800f20a:	d11a      	bne.n	800f242 <_ZN8touchgfx19LCD16bppSerialFlash8fillRectERKNS_4RectENS_9colortypeEh+0x4e>
 800f20c:	0021      	movs	r1, r4
 800f20e:	2208      	movs	r2, #8
 800f210:	a802      	add	r0, sp, #8
 800f212:	f003 fdb0 	bl	8012d76 <memcpy>
 800f216:	a802      	add	r0, sp, #8
 800f218:	f7fb fd34 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f21c:	4c0a      	ldr	r4, [pc, #40]	@ (800f248 <_ZN8touchgfx19LCD16bppSerialFlash8fillRectERKNS_4RectENS_9colortypeEh+0x54>)
 800f21e:	6820      	ldr	r0, [r4, #0]
 800f220:	6803      	ldr	r3, [r0, #0]
 800f222:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f224:	4798      	blx	r3
 800f226:	4b09      	ldr	r3, [pc, #36]	@ (800f24c <_ZN8touchgfx19LCD16bppSerialFlash8fillRectERKNS_4RectENS_9colortypeEh+0x58>)
 800f228:	0001      	movs	r1, r0
 800f22a:	881a      	ldrh	r2, [r3, #0]
 800f22c:	682b      	ldr	r3, [r5, #0]
 800f22e:	9601      	str	r6, [sp, #4]
 800f230:	9700      	str	r7, [sp, #0]
 800f232:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 800f234:	0028      	movs	r0, r5
 800f236:	ab02      	add	r3, sp, #8
 800f238:	47b0      	blx	r6
 800f23a:	6820      	ldr	r0, [r4, #0]
 800f23c:	6803      	ldr	r3, [r0, #0]
 800f23e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f240:	4798      	blx	r3
 800f242:	b005      	add	sp, #20
 800f244:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f246:	46c0      	nop			@ (mov r8, r8)
 800f248:	20003578 	.word	0x20003578
 800f24c:	20003572 	.word	0x20003572

0800f250 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 800f250:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f252:	b087      	sub	sp, #28
 800f254:	001f      	movs	r7, r3
 800f256:	ab0c      	add	r3, sp, #48	@ 0x30
 800f258:	cb10      	ldmia	r3!, {r4}
 800f25a:	9100      	str	r1, [sp, #0]
 800f25c:	781e      	ldrb	r6, [r3, #0]
 800f25e:	0015      	movs	r5, r2
 800f260:	2e00      	cmp	r6, #0
 800f262:	d100      	bne.n	800f266 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16>
 800f264:	e0ba      	b.n	800f3dc <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>
 800f266:	0038      	movs	r0, r7
 800f268:	f7f8 f828 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 800f26c:	2800      	cmp	r0, #0
 800f26e:	d000      	beq.n	800f272 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x22>
 800f270:	e0b4      	b.n	800f3dc <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>
 800f272:	2304      	movs	r3, #4
 800f274:	5ef9      	ldrsh	r1, [r7, r3]
 800f276:	2002      	movs	r0, #2
 800f278:	5e3b      	ldrsh	r3, [r7, r0]
 800f27a:	000a      	movs	r2, r1
 800f27c:	436b      	muls	r3, r5
 800f27e:	469c      	mov	ip, r3
 800f280:	2300      	movs	r3, #0
 800f282:	5ef8      	ldrsh	r0, [r7, r3]
 800f284:	0003      	movs	r3, r0
 800f286:	9800      	ldr	r0, [sp, #0]
 800f288:	4463      	add	r3, ip
 800f28a:	005b      	lsls	r3, r3, #1
 800f28c:	18c3      	adds	r3, r0, r3
 800f28e:	1a68      	subs	r0, r5, r1
 800f290:	4684      	mov	ip, r0
 800f292:	2006      	movs	r0, #6
 800f294:	5e38      	ldrsh	r0, [r7, r0]
 800f296:	0a27      	lsrs	r7, r4, #8
 800f298:	4368      	muls	r0, r5
 800f29a:	0040      	lsls	r0, r0, #1
 800f29c:	1818      	adds	r0, r3, r0
 800f29e:	2eff      	cmp	r6, #255	@ 0xff
 800f2a0:	d059      	beq.n	800f356 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 800f2a2:	22ff      	movs	r2, #255	@ 0xff
 800f2a4:	1b92      	subs	r2, r2, r6
 800f2a6:	9204      	str	r2, [sp, #16]
 800f2a8:	004a      	lsls	r2, r1, #1
 800f2aa:	9200      	str	r2, [sp, #0]
 800f2ac:	0c22      	lsrs	r2, r4, #16
 800f2ae:	b2b6      	uxth	r6, r6
 800f2b0:	b2d2      	uxtb	r2, r2
 800f2b2:	4372      	muls	r2, r6
 800f2b4:	9201      	str	r2, [sp, #4]
 800f2b6:	4662      	mov	r2, ip
 800f2b8:	b2e4      	uxtb	r4, r4
 800f2ba:	b2ff      	uxtb	r7, r7
 800f2bc:	4374      	muls	r4, r6
 800f2be:	4377      	muls	r7, r6
 800f2c0:	0052      	lsls	r2, r2, #1
 800f2c2:	9402      	str	r4, [sp, #8]
 800f2c4:	9203      	str	r2, [sp, #12]
 800f2c6:	4283      	cmp	r3, r0
 800f2c8:	d300      	bcc.n	800f2cc <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x7c>
 800f2ca:	e087      	b.n	800f3dc <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>
 800f2cc:	9a00      	ldr	r2, [sp, #0]
 800f2ce:	189a      	adds	r2, r3, r2
 800f2d0:	9205      	str	r2, [sp, #20]
 800f2d2:	9a05      	ldr	r2, [sp, #20]
 800f2d4:	4293      	cmp	r3, r2
 800f2d6:	d23b      	bcs.n	800f350 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 800f2d8:	2107      	movs	r1, #7
 800f2da:	2503      	movs	r5, #3
 800f2dc:	881c      	ldrh	r4, [r3, #0]
 800f2de:	1222      	asrs	r2, r4, #8
 800f2e0:	438a      	bics	r2, r1
 800f2e2:	10e1      	asrs	r1, r4, #3
 800f2e4:	43a9      	bics	r1, r5
 800f2e6:	b2c9      	uxtb	r1, r1
 800f2e8:	468c      	mov	ip, r1
 800f2ea:	4669      	mov	r1, sp
 800f2ec:	40ac      	lsls	r4, r5
 800f2ee:	8a0d      	ldrh	r5, [r1, #16]
 800f2f0:	1151      	asrs	r1, r2, #5
 800f2f2:	4311      	orrs	r1, r2
 800f2f4:	4369      	muls	r1, r5
 800f2f6:	9a01      	ldr	r2, [sp, #4]
 800f2f8:	4666      	mov	r6, ip
 800f2fa:	1851      	adds	r1, r2, r1
 800f2fc:	4662      	mov	r2, ip
 800f2fe:	b2e4      	uxtb	r4, r4
 800f300:	1192      	asrs	r2, r2, #6
 800f302:	4332      	orrs	r2, r6
 800f304:	1166      	asrs	r6, r4, #5
 800f306:	4334      	orrs	r4, r6
 800f308:	436c      	muls	r4, r5
 800f30a:	436a      	muls	r2, r5
 800f30c:	9d02      	ldr	r5, [sp, #8]
 800f30e:	b289      	uxth	r1, r1
 800f310:	192c      	adds	r4, r5, r4
 800f312:	b2a5      	uxth	r5, r4
 800f314:	1c4c      	adds	r4, r1, #1
 800f316:	1209      	asrs	r1, r1, #8
 800f318:	1864      	adds	r4, r4, r1
 800f31a:	21ff      	movs	r1, #255	@ 0xff
 800f31c:	0209      	lsls	r1, r1, #8
 800f31e:	400c      	ands	r4, r1
 800f320:	18ba      	adds	r2, r7, r2
 800f322:	1c69      	adds	r1, r5, #1
 800f324:	122d      	asrs	r5, r5, #8
 800f326:	b292      	uxth	r2, r2
 800f328:	194d      	adds	r5, r1, r5
 800f32a:	0ae4      	lsrs	r4, r4, #11
 800f32c:	1c51      	adds	r1, r2, #1
 800f32e:	042d      	lsls	r5, r5, #16
 800f330:	1212      	asrs	r2, r2, #8
 800f332:	0eed      	lsrs	r5, r5, #27
 800f334:	188a      	adds	r2, r1, r2
 800f336:	02e4      	lsls	r4, r4, #11
 800f338:	21ff      	movs	r1, #255	@ 0xff
 800f33a:	432c      	orrs	r4, r5
 800f33c:	25fc      	movs	r5, #252	@ 0xfc
 800f33e:	0952      	lsrs	r2, r2, #5
 800f340:	00c9      	lsls	r1, r1, #3
 800f342:	400a      	ands	r2, r1
 800f344:	00ed      	lsls	r5, r5, #3
 800f346:	402a      	ands	r2, r5
 800f348:	4314      	orrs	r4, r2
 800f34a:	801c      	strh	r4, [r3, #0]
 800f34c:	3302      	adds	r3, #2
 800f34e:	e7c0      	b.n	800f2d2 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x82>
 800f350:	9a03      	ldr	r2, [sp, #12]
 800f352:	189b      	adds	r3, r3, r2
 800f354:	e7b7      	b.n	800f2c6 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 800f356:	26fc      	movs	r6, #252	@ 0xfc
 800f358:	0967      	lsrs	r7, r4, #5
 800f35a:	00f6      	lsls	r6, r6, #3
 800f35c:	403e      	ands	r6, r7
 800f35e:	0ce7      	lsrs	r7, r4, #19
 800f360:	02ff      	lsls	r7, r7, #11
 800f362:	0624      	lsls	r4, r4, #24
 800f364:	433e      	orrs	r6, r7
 800f366:	0ee4      	lsrs	r4, r4, #27
 800f368:	4326      	orrs	r6, r4
 800f36a:	b2b6      	uxth	r6, r6
 800f36c:	07ec      	lsls	r4, r5, #31
 800f36e:	d50c      	bpl.n	800f38a <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 800f370:	4662      	mov	r2, ip
 800f372:	0049      	lsls	r1, r1, #1
 800f374:	0052      	lsls	r2, r2, #1
 800f376:	4283      	cmp	r3, r0
 800f378:	d230      	bcs.n	800f3dc <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>
 800f37a:	185c      	adds	r4, r3, r1
 800f37c:	42a3      	cmp	r3, r4
 800f37e:	d202      	bcs.n	800f386 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x136>
 800f380:	801e      	strh	r6, [r3, #0]
 800f382:	3302      	adds	r3, #2
 800f384:	e7fa      	b.n	800f37c <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 800f386:	189b      	adds	r3, r3, r2
 800f388:	e7f5      	b.n	800f376 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 800f38a:	079c      	lsls	r4, r3, #30
 800f38c:	d008      	beq.n	800f3a0 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x150>
 800f38e:	001a      	movs	r2, r3
 800f390:	006c      	lsls	r4, r5, #1
 800f392:	4282      	cmp	r2, r0
 800f394:	d202      	bcs.n	800f39c <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14c>
 800f396:	8016      	strh	r6, [r2, #0]
 800f398:	1912      	adds	r2, r2, r4
 800f39a:	e7fa      	b.n	800f392 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x142>
 800f39c:	3302      	adds	r3, #2
 800f39e:	1e4a      	subs	r2, r1, #1
 800f3a0:	07d1      	lsls	r1, r2, #31
 800f3a2:	d50a      	bpl.n	800f3ba <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 800f3a4:	490e      	ldr	r1, [pc, #56]	@ (800f3e0 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x190>)
 800f3a6:	006c      	lsls	r4, r5, #1
 800f3a8:	1851      	adds	r1, r2, r1
 800f3aa:	0049      	lsls	r1, r1, #1
 800f3ac:	1859      	adds	r1, r3, r1
 800f3ae:	4281      	cmp	r1, r0
 800f3b0:	d202      	bcs.n	800f3b8 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 800f3b2:	800e      	strh	r6, [r1, #0]
 800f3b4:	1909      	adds	r1, r1, r4
 800f3b6:	e7fa      	b.n	800f3ae <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 800f3b8:	3a01      	subs	r2, #1
 800f3ba:	2a00      	cmp	r2, #0
 800f3bc:	d00e      	beq.n	800f3dc <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>
 800f3be:	0434      	lsls	r4, r6, #16
 800f3c0:	1052      	asrs	r2, r2, #1
 800f3c2:	4326      	orrs	r6, r4
 800f3c4:	0092      	lsls	r2, r2, #2
 800f3c6:	006d      	lsls	r5, r5, #1
 800f3c8:	4283      	cmp	r3, r0
 800f3ca:	d207      	bcs.n	800f3dc <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>
 800f3cc:	0019      	movs	r1, r3
 800f3ce:	18d4      	adds	r4, r2, r3
 800f3d0:	42a1      	cmp	r1, r4
 800f3d2:	d201      	bcs.n	800f3d8 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>
 800f3d4:	c140      	stmia	r1!, {r6}
 800f3d6:	e7fb      	b.n	800f3d0 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>
 800f3d8:	195b      	adds	r3, r3, r5
 800f3da:	e7f5      	b.n	800f3c8 <_ZN8touchgfx19LCD16bppSerialFlash10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 800f3dc:	b007      	add	sp, #28
 800f3de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3e0:	7fffffff 	.word	0x7fffffff

0800f3e4 <_ZN8touchgfx19LCD16bppSerialFlashC1ERNS_15FlashDataReaderE>:
 800f3e4:	2300      	movs	r3, #0
 800f3e6:	4a15      	ldr	r2, [pc, #84]	@ (800f43c <_ZN8touchgfx19LCD16bppSerialFlashC1ERNS_15FlashDataReaderE+0x58>)
 800f3e8:	6043      	str	r3, [r0, #4]
 800f3ea:	3208      	adds	r2, #8
 800f3ec:	6002      	str	r2, [r0, #0]
 800f3ee:	1d02      	adds	r2, r0, #4
 800f3f0:	6083      	str	r3, [r0, #8]
 800f3f2:	60c1      	str	r1, [r0, #12]
 800f3f4:	6103      	str	r3, [r0, #16]
 800f3f6:	6143      	str	r3, [r0, #20]
 800f3f8:	6183      	str	r3, [r0, #24]
 800f3fa:	61c3      	str	r3, [r0, #28]
 800f3fc:	6203      	str	r3, [r0, #32]
 800f3fe:	6243      	str	r3, [r0, #36]	@ 0x24
 800f400:	6283      	str	r3, [r0, #40]	@ 0x28
 800f402:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800f404:	6303      	str	r3, [r0, #48]	@ 0x30
 800f406:	6343      	str	r3, [r0, #52]	@ 0x34
 800f408:	6383      	str	r3, [r0, #56]	@ 0x38
 800f40a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800f40c:	6403      	str	r3, [r0, #64]	@ 0x40
 800f40e:	6443      	str	r3, [r0, #68]	@ 0x44
 800f410:	6483      	str	r3, [r0, #72]	@ 0x48
 800f412:	64c3      	str	r3, [r0, #76]	@ 0x4c
 800f414:	6503      	str	r3, [r0, #80]	@ 0x50
 800f416:	6543      	str	r3, [r0, #84]	@ 0x54
 800f418:	6583      	str	r3, [r0, #88]	@ 0x58
 800f41a:	65c3      	str	r3, [r0, #92]	@ 0x5c
 800f41c:	6603      	str	r3, [r0, #96]	@ 0x60
 800f41e:	6643      	str	r3, [r0, #100]	@ 0x64
 800f420:	6683      	str	r3, [r0, #104]	@ 0x68
 800f422:	66c3      	str	r3, [r0, #108]	@ 0x6c
 800f424:	6703      	str	r3, [r0, #112]	@ 0x70
 800f426:	6743      	str	r3, [r0, #116]	@ 0x74
 800f428:	6783      	str	r3, [r0, #120]	@ 0x78
 800f42a:	3204      	adds	r2, #4
 800f42c:	67c3      	str	r3, [r0, #124]	@ 0x7c
 800f42e:	6793      	str	r3, [r2, #120]	@ 0x78
 800f430:	67d3      	str	r3, [r2, #124]	@ 0x7c
 800f432:	3280      	adds	r2, #128	@ 0x80
 800f434:	6013      	str	r3, [r2, #0]
 800f436:	6053      	str	r3, [r2, #4]
 800f438:	4770      	bx	lr
 800f43a:	46c0      	nop			@ (mov r8, r8)
 800f43c:	08015b64 	.word	0x08015b64

0800f440 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 800f440:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f442:	0015      	movs	r5, r2
 800f444:	000e      	movs	r6, r1
 800f446:	b08f      	sub	sp, #60	@ 0x3c
 800f448:	9300      	str	r3, [sp, #0]
 800f44a:	ab14      	add	r3, sp, #80	@ 0x50
 800f44c:	781b      	ldrb	r3, [r3, #0]
 800f44e:	ac0c      	add	r4, sp, #48	@ 0x30
 800f450:	0029      	movs	r1, r5
 800f452:	0007      	movs	r7, r0
 800f454:	2208      	movs	r2, #8
 800f456:	a80a      	add	r0, sp, #40	@ 0x28
 800f458:	9302      	str	r3, [sp, #8]
 800f45a:	f003 fc8c 	bl	8012d76 <memcpy>
 800f45e:	2208      	movs	r2, #8
 800f460:	9900      	ldr	r1, [sp, #0]
 800f462:	0020      	movs	r0, r4
 800f464:	f003 fc87 	bl	8012d76 <memcpy>
 800f468:	a80a      	add	r0, sp, #40	@ 0x28
 800f46a:	f7fb fc0b 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f46e:	0020      	movs	r0, r4
 800f470:	0029      	movs	r1, r5
 800f472:	f7fb fc2f 	bl	800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800f476:	2302      	movs	r3, #2
 800f478:	5ee2      	ldrsh	r2, [r4, r3]
 800f47a:	2300      	movs	r3, #0
 800f47c:	5ee1      	ldrsh	r1, [r4, r3]
 800f47e:	ab0a      	add	r3, sp, #40	@ 0x28
 800f480:	2004      	movs	r0, #4
 800f482:	5e1b      	ldrsh	r3, [r3, r0]
 800f484:	4353      	muls	r3, r2
 800f486:	185b      	adds	r3, r3, r1
 800f488:	009b      	lsls	r3, r3, #2
 800f48a:	18f3      	adds	r3, r6, r3
 800f48c:	9300      	str	r3, [sp, #0]
 800f48e:	ab0a      	add	r3, sp, #40	@ 0x28
 800f490:	881b      	ldrh	r3, [r3, #0]
 800f492:	1859      	adds	r1, r3, r1
 800f494:	8021      	strh	r1, [r4, #0]
 800f496:	ab0a      	add	r3, sp, #40	@ 0x28
 800f498:	885b      	ldrh	r3, [r3, #2]
 800f49a:	189a      	adds	r2, r3, r2
 800f49c:	8062      	strh	r2, [r4, #2]
 800f49e:	2204      	movs	r2, #4
 800f4a0:	5ea3      	ldrsh	r3, [r4, r2]
 800f4a2:	9301      	str	r3, [sp, #4]
 800f4a4:	2306      	movs	r3, #6
 800f4a6:	5ee5      	ldrsh	r5, [r4, r3]
 800f4a8:	4b9f      	ldr	r3, [pc, #636]	@ (800f728 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2e8>)
 800f4aa:	6818      	ldr	r0, [r3, #0]
 800f4ac:	6803      	ldr	r3, [r0, #0]
 800f4ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f4b0:	4798      	blx	r3
 800f4b2:	4b9e      	ldr	r3, [pc, #632]	@ (800f72c <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2ec>)
 800f4b4:	881a      	ldrh	r2, [r3, #0]
 800f4b6:	2102      	movs	r1, #2
 800f4b8:	5e63      	ldrsh	r3, [r4, r1]
 800f4ba:	4355      	muls	r5, r2
 800f4bc:	4353      	muls	r3, r2
 800f4be:	2100      	movs	r1, #0
 800f4c0:	5e64      	ldrsh	r4, [r4, r1]
 800f4c2:	006d      	lsls	r5, r5, #1
 800f4c4:	191c      	adds	r4, r3, r4
 800f4c6:	0064      	lsls	r4, r4, #1
 800f4c8:	1904      	adds	r4, r0, r4
 800f4ca:	68f8      	ldr	r0, [r7, #12]
 800f4cc:	1963      	adds	r3, r4, r5
 800f4ce:	9304      	str	r3, [sp, #16]
 800f4d0:	6803      	ldr	r3, [r0, #0]
 800f4d2:	9900      	ldr	r1, [sp, #0]
 800f4d4:	689b      	ldr	r3, [r3, #8]
 800f4d6:	4798      	blx	r3
 800f4d8:	2800      	cmp	r0, #0
 800f4da:	d100      	bne.n	800f4de <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 800f4dc:	e07f      	b.n	800f5de <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19e>
 800f4de:	9b01      	ldr	r3, [sp, #4]
 800f4e0:	005b      	lsls	r3, r3, #1
 800f4e2:	9303      	str	r3, [sp, #12]
 800f4e4:	9b04      	ldr	r3, [sp, #16]
 800f4e6:	429c      	cmp	r4, r3
 800f4e8:	d300      	bcc.n	800f4ec <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xac>
 800f4ea:	e116      	b.n	800f71a <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2da>
 800f4ec:	9b03      	ldr	r3, [sp, #12]
 800f4ee:	18e3      	adds	r3, r4, r3
 800f4f0:	9305      	str	r3, [sp, #20]
 800f4f2:	9b05      	ldr	r3, [sp, #20]
 800f4f4:	429c      	cmp	r4, r3
 800f4f6:	d262      	bcs.n	800f5be <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x17e>
 800f4f8:	9b00      	ldr	r3, [sp, #0]
 800f4fa:	681b      	ldr	r3, [r3, #0]
 800f4fc:	0e1a      	lsrs	r2, r3, #24
 800f4fe:	d010      	beq.n	800f522 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xe2>
 800f500:	0a1f      	lsrs	r7, r3, #8
 800f502:	2aff      	cmp	r2, #255	@ 0xff
 800f504:	d112      	bne.n	800f52c <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xec>
 800f506:	9902      	ldr	r1, [sp, #8]
 800f508:	29ff      	cmp	r1, #255	@ 0xff
 800f50a:	d10f      	bne.n	800f52c <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xec>
 800f50c:	22fc      	movs	r2, #252	@ 0xfc
 800f50e:	0959      	lsrs	r1, r3, #5
 800f510:	00d2      	lsls	r2, r2, #3
 800f512:	4011      	ands	r1, r2
 800f514:	0cda      	lsrs	r2, r3, #19
 800f516:	02d2      	lsls	r2, r2, #11
 800f518:	061b      	lsls	r3, r3, #24
 800f51a:	430a      	orrs	r2, r1
 800f51c:	0edb      	lsrs	r3, r3, #27
 800f51e:	431a      	orrs	r2, r3
 800f520:	8022      	strh	r2, [r4, #0]
 800f522:	9b00      	ldr	r3, [sp, #0]
 800f524:	3402      	adds	r4, #2
 800f526:	3304      	adds	r3, #4
 800f528:	9300      	str	r3, [sp, #0]
 800f52a:	e7e2      	b.n	800f4f2 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xb2>
 800f52c:	9902      	ldr	r1, [sp, #8]
 800f52e:	8825      	ldrh	r5, [r4, #0]
 800f530:	434a      	muls	r2, r1
 800f532:	1c50      	adds	r0, r2, #1
 800f534:	1212      	asrs	r2, r2, #8
 800f536:	1880      	adds	r0, r0, r2
 800f538:	1200      	asrs	r0, r0, #8
 800f53a:	b282      	uxth	r2, r0
 800f53c:	4694      	mov	ip, r2
 800f53e:	2207      	movs	r2, #7
 800f540:	43c0      	mvns	r0, r0
 800f542:	1229      	asrs	r1, r5, #8
 800f544:	4391      	bics	r1, r2
 800f546:	10ee      	asrs	r6, r5, #3
 800f548:	3a04      	subs	r2, #4
 800f54a:	4396      	bics	r6, r2
 800f54c:	4095      	lsls	r5, r2
 800f54e:	114a      	asrs	r2, r1, #5
 800f550:	b2c0      	uxtb	r0, r0
 800f552:	4311      	orrs	r1, r2
 800f554:	4341      	muls	r1, r0
 800f556:	9106      	str	r1, [sp, #24]
 800f558:	4661      	mov	r1, ip
 800f55a:	0c1a      	lsrs	r2, r3, #16
 800f55c:	b2d2      	uxtb	r2, r2
 800f55e:	434a      	muls	r2, r1
 800f560:	9906      	ldr	r1, [sp, #24]
 800f562:	b2f6      	uxtb	r6, r6
 800f564:	1889      	adds	r1, r1, r2
 800f566:	11b2      	asrs	r2, r6, #6
 800f568:	4332      	orrs	r2, r6
 800f56a:	4666      	mov	r6, ip
 800f56c:	b2ff      	uxtb	r7, r7
 800f56e:	4377      	muls	r7, r6
 800f570:	4342      	muls	r2, r0
 800f572:	b2ed      	uxtb	r5, r5
 800f574:	19d2      	adds	r2, r2, r7
 800f576:	116f      	asrs	r7, r5, #5
 800f578:	433d      	orrs	r5, r7
 800f57a:	b2db      	uxtb	r3, r3
 800f57c:	4373      	muls	r3, r6
 800f57e:	4345      	muls	r5, r0
 800f580:	b289      	uxth	r1, r1
 800f582:	18ed      	adds	r5, r5, r3
 800f584:	1c4b      	adds	r3, r1, #1
 800f586:	1209      	asrs	r1, r1, #8
 800f588:	1859      	adds	r1, r3, r1
 800f58a:	23ff      	movs	r3, #255	@ 0xff
 800f58c:	b292      	uxth	r2, r2
 800f58e:	021b      	lsls	r3, r3, #8
 800f590:	b2ad      	uxth	r5, r5
 800f592:	4019      	ands	r1, r3
 800f594:	1c53      	adds	r3, r2, #1
 800f596:	1212      	asrs	r2, r2, #8
 800f598:	1c6e      	adds	r6, r5, #1
 800f59a:	189a      	adds	r2, r3, r2
 800f59c:	122d      	asrs	r5, r5, #8
 800f59e:	23ff      	movs	r3, #255	@ 0xff
 800f5a0:	1976      	adds	r6, r6, r5
 800f5a2:	25fc      	movs	r5, #252	@ 0xfc
 800f5a4:	0436      	lsls	r6, r6, #16
 800f5a6:	0ac9      	lsrs	r1, r1, #11
 800f5a8:	0952      	lsrs	r2, r2, #5
 800f5aa:	00db      	lsls	r3, r3, #3
 800f5ac:	0ef6      	lsrs	r6, r6, #27
 800f5ae:	02c9      	lsls	r1, r1, #11
 800f5b0:	401a      	ands	r2, r3
 800f5b2:	00ed      	lsls	r5, r5, #3
 800f5b4:	430e      	orrs	r6, r1
 800f5b6:	402a      	ands	r2, r5
 800f5b8:	4316      	orrs	r6, r2
 800f5ba:	8026      	strh	r6, [r4, #0]
 800f5bc:	e7b1      	b.n	800f522 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xe2>
 800f5be:	4b5b      	ldr	r3, [pc, #364]	@ (800f72c <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2ec>)
 800f5c0:	9a01      	ldr	r2, [sp, #4]
 800f5c2:	881b      	ldrh	r3, [r3, #0]
 800f5c4:	1a9b      	subs	r3, r3, r2
 800f5c6:	005b      	lsls	r3, r3, #1
 800f5c8:	18e4      	adds	r4, r4, r3
 800f5ca:	ab0a      	add	r3, sp, #40	@ 0x28
 800f5cc:	2204      	movs	r2, #4
 800f5ce:	5e9b      	ldrsh	r3, [r3, r2]
 800f5d0:	9a01      	ldr	r2, [sp, #4]
 800f5d2:	1a9b      	subs	r3, r3, r2
 800f5d4:	9a00      	ldr	r2, [sp, #0]
 800f5d6:	009b      	lsls	r3, r3, #2
 800f5d8:	18d3      	adds	r3, r2, r3
 800f5da:	9300      	str	r3, [sp, #0]
 800f5dc:	e782      	b.n	800f4e4 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 800f5de:	9b01      	ldr	r3, [sp, #4]
 800f5e0:	68f8      	ldr	r0, [r7, #12]
 800f5e2:	009b      	lsls	r3, r3, #2
 800f5e4:	9305      	str	r3, [sp, #20]
 800f5e6:	6803      	ldr	r3, [r0, #0]
 800f5e8:	9a05      	ldr	r2, [sp, #20]
 800f5ea:	691b      	ldr	r3, [r3, #16]
 800f5ec:	9900      	ldr	r1, [sp, #0]
 800f5ee:	4798      	blx	r3
 800f5f0:	9b01      	ldr	r3, [sp, #4]
 800f5f2:	005b      	lsls	r3, r3, #1
 800f5f4:	9307      	str	r3, [sp, #28]
 800f5f6:	9b04      	ldr	r3, [sp, #16]
 800f5f8:	429c      	cmp	r4, r3
 800f5fa:	d300      	bcc.n	800f5fe <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1be>
 800f5fc:	e08d      	b.n	800f71a <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2da>
 800f5fe:	68f8      	ldr	r0, [r7, #12]
 800f600:	6803      	ldr	r3, [r0, #0]
 800f602:	695b      	ldr	r3, [r3, #20]
 800f604:	4798      	blx	r3
 800f606:	4b49      	ldr	r3, [pc, #292]	@ (800f72c <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2ec>)
 800f608:	9a04      	ldr	r2, [sp, #16]
 800f60a:	881b      	ldrh	r3, [r3, #0]
 800f60c:	9003      	str	r0, [sp, #12]
 800f60e:	005b      	lsls	r3, r3, #1
 800f610:	18e3      	adds	r3, r4, r3
 800f612:	429a      	cmp	r2, r3
 800f614:	d90c      	bls.n	800f630 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1f0>
 800f616:	ab0a      	add	r3, sp, #40	@ 0x28
 800f618:	2204      	movs	r2, #4
 800f61a:	5e9b      	ldrsh	r3, [r3, r2]
 800f61c:	9a00      	ldr	r2, [sp, #0]
 800f61e:	009b      	lsls	r3, r3, #2
 800f620:	68f8      	ldr	r0, [r7, #12]
 800f622:	18d3      	adds	r3, r2, r3
 800f624:	9300      	str	r3, [sp, #0]
 800f626:	6803      	ldr	r3, [r0, #0]
 800f628:	9a05      	ldr	r2, [sp, #20]
 800f62a:	691b      	ldr	r3, [r3, #16]
 800f62c:	9900      	ldr	r1, [sp, #0]
 800f62e:	4798      	blx	r3
 800f630:	9b07      	ldr	r3, [sp, #28]
 800f632:	18e3      	adds	r3, r4, r3
 800f634:	9308      	str	r3, [sp, #32]
 800f636:	9b08      	ldr	r3, [sp, #32]
 800f638:	429c      	cmp	r4, r3
 800f63a:	d267      	bcs.n	800f70c <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2cc>
 800f63c:	9b03      	ldr	r3, [sp, #12]
 800f63e:	681b      	ldr	r3, [r3, #0]
 800f640:	0e1a      	lsrs	r2, r3, #24
 800f642:	d011      	beq.n	800f668 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x228>
 800f644:	0a19      	lsrs	r1, r3, #8
 800f646:	9109      	str	r1, [sp, #36]	@ 0x24
 800f648:	2aff      	cmp	r2, #255	@ 0xff
 800f64a:	d112      	bne.n	800f672 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x232>
 800f64c:	9902      	ldr	r1, [sp, #8]
 800f64e:	29ff      	cmp	r1, #255	@ 0xff
 800f650:	d10f      	bne.n	800f672 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x232>
 800f652:	22fc      	movs	r2, #252	@ 0xfc
 800f654:	0959      	lsrs	r1, r3, #5
 800f656:	00d2      	lsls	r2, r2, #3
 800f658:	4011      	ands	r1, r2
 800f65a:	0cda      	lsrs	r2, r3, #19
 800f65c:	02d2      	lsls	r2, r2, #11
 800f65e:	061b      	lsls	r3, r3, #24
 800f660:	430a      	orrs	r2, r1
 800f662:	0edb      	lsrs	r3, r3, #27
 800f664:	431a      	orrs	r2, r3
 800f666:	8022      	strh	r2, [r4, #0]
 800f668:	9b03      	ldr	r3, [sp, #12]
 800f66a:	3402      	adds	r4, #2
 800f66c:	3304      	adds	r3, #4
 800f66e:	9303      	str	r3, [sp, #12]
 800f670:	e7e1      	b.n	800f636 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1f6>
 800f672:	9902      	ldr	r1, [sp, #8]
 800f674:	8825      	ldrh	r5, [r4, #0]
 800f676:	434a      	muls	r2, r1
 800f678:	1c50      	adds	r0, r2, #1
 800f67a:	1212      	asrs	r2, r2, #8
 800f67c:	1880      	adds	r0, r0, r2
 800f67e:	1200      	asrs	r0, r0, #8
 800f680:	b282      	uxth	r2, r0
 800f682:	4694      	mov	ip, r2
 800f684:	2207      	movs	r2, #7
 800f686:	1229      	asrs	r1, r5, #8
 800f688:	4391      	bics	r1, r2
 800f68a:	3a04      	subs	r2, #4
 800f68c:	10ee      	asrs	r6, r5, #3
 800f68e:	4095      	lsls	r5, r2
 800f690:	43c0      	mvns	r0, r0
 800f692:	4396      	bics	r6, r2
 800f694:	b2ea      	uxtb	r2, r5
 800f696:	4665      	mov	r5, ip
 800f698:	9206      	str	r2, [sp, #24]
 800f69a:	114a      	asrs	r2, r1, #5
 800f69c:	4311      	orrs	r1, r2
 800f69e:	0c1a      	lsrs	r2, r3, #16
 800f6a0:	b2c0      	uxtb	r0, r0
 800f6a2:	b2d2      	uxtb	r2, r2
 800f6a4:	436a      	muls	r2, r5
 800f6a6:	4341      	muls	r1, r0
 800f6a8:	b2f6      	uxtb	r6, r6
 800f6aa:	1889      	adds	r1, r1, r2
 800f6ac:	11b2      	asrs	r2, r6, #6
 800f6ae:	4332      	orrs	r2, r6
 800f6b0:	466d      	mov	r5, sp
 800f6b2:	2624      	movs	r6, #36	@ 0x24
 800f6b4:	19ad      	adds	r5, r5, r6
 800f6b6:	782e      	ldrb	r6, [r5, #0]
 800f6b8:	4665      	mov	r5, ip
 800f6ba:	4342      	muls	r2, r0
 800f6bc:	436e      	muls	r6, r5
 800f6be:	9d06      	ldr	r5, [sp, #24]
 800f6c0:	1992      	adds	r2, r2, r6
 800f6c2:	116e      	asrs	r6, r5, #5
 800f6c4:	4335      	orrs	r5, r6
 800f6c6:	4345      	muls	r5, r0
 800f6c8:	4660      	mov	r0, ip
 800f6ca:	b2db      	uxtb	r3, r3
 800f6cc:	4343      	muls	r3, r0
 800f6ce:	18ed      	adds	r5, r5, r3
 800f6d0:	23ff      	movs	r3, #255	@ 0xff
 800f6d2:	b289      	uxth	r1, r1
 800f6d4:	b2ad      	uxth	r5, r5
 800f6d6:	1c4e      	adds	r6, r1, #1
 800f6d8:	1209      	asrs	r1, r1, #8
 800f6da:	1876      	adds	r6, r6, r1
 800f6dc:	021b      	lsls	r3, r3, #8
 800f6de:	1c69      	adds	r1, r5, #1
 800f6e0:	122d      	asrs	r5, r5, #8
 800f6e2:	b292      	uxth	r2, r2
 800f6e4:	401e      	ands	r6, r3
 800f6e6:	194d      	adds	r5, r1, r5
 800f6e8:	1c53      	adds	r3, r2, #1
 800f6ea:	0af6      	lsrs	r6, r6, #11
 800f6ec:	042d      	lsls	r5, r5, #16
 800f6ee:	1212      	asrs	r2, r2, #8
 800f6f0:	0eed      	lsrs	r5, r5, #27
 800f6f2:	189a      	adds	r2, r3, r2
 800f6f4:	02f6      	lsls	r6, r6, #11
 800f6f6:	23ff      	movs	r3, #255	@ 0xff
 800f6f8:	432e      	orrs	r6, r5
 800f6fa:	25fc      	movs	r5, #252	@ 0xfc
 800f6fc:	0952      	lsrs	r2, r2, #5
 800f6fe:	00db      	lsls	r3, r3, #3
 800f700:	401a      	ands	r2, r3
 800f702:	00ed      	lsls	r5, r5, #3
 800f704:	402a      	ands	r2, r5
 800f706:	4316      	orrs	r6, r2
 800f708:	8026      	strh	r6, [r4, #0]
 800f70a:	e7ad      	b.n	800f668 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x228>
 800f70c:	4b07      	ldr	r3, [pc, #28]	@ (800f72c <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2ec>)
 800f70e:	9a01      	ldr	r2, [sp, #4]
 800f710:	881b      	ldrh	r3, [r3, #0]
 800f712:	1a9b      	subs	r3, r3, r2
 800f714:	005b      	lsls	r3, r3, #1
 800f716:	18e4      	adds	r4, r4, r3
 800f718:	e76d      	b.n	800f5f6 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 800f71a:	4b03      	ldr	r3, [pc, #12]	@ (800f728 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x2e8>)
 800f71c:	6818      	ldr	r0, [r3, #0]
 800f71e:	6803      	ldr	r3, [r0, #0]
 800f720:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f722:	4798      	blx	r3
 800f724:	b00f      	add	sp, #60	@ 0x3c
 800f726:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f728:	20003578 	.word	0x20003578
 800f72c:	20003572 	.word	0x20003572

0800f730 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 800f730:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f732:	0015      	movs	r5, r2
 800f734:	000e      	movs	r6, r1
 800f736:	b089      	sub	sp, #36	@ 0x24
 800f738:	ac06      	add	r4, sp, #24
 800f73a:	0029      	movs	r1, r5
 800f73c:	0007      	movs	r7, r0
 800f73e:	2208      	movs	r2, #8
 800f740:	a804      	add	r0, sp, #16
 800f742:	9300      	str	r3, [sp, #0]
 800f744:	f003 fb17 	bl	8012d76 <memcpy>
 800f748:	2208      	movs	r2, #8
 800f74a:	9900      	ldr	r1, [sp, #0]
 800f74c:	0020      	movs	r0, r4
 800f74e:	f003 fb12 	bl	8012d76 <memcpy>
 800f752:	a804      	add	r0, sp, #16
 800f754:	f7fb fa96 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f758:	0020      	movs	r0, r4
 800f75a:	0029      	movs	r1, r5
 800f75c:	f7fb faba 	bl	800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800f760:	2302      	movs	r3, #2
 800f762:	5ee2      	ldrsh	r2, [r4, r3]
 800f764:	2300      	movs	r3, #0
 800f766:	5ee1      	ldrsh	r1, [r4, r3]
 800f768:	ab04      	add	r3, sp, #16
 800f76a:	2004      	movs	r0, #4
 800f76c:	5e1b      	ldrsh	r3, [r3, r0]
 800f76e:	4353      	muls	r3, r2
 800f770:	185b      	adds	r3, r3, r1
 800f772:	009b      	lsls	r3, r3, #2
 800f774:	18f6      	adds	r6, r6, r3
 800f776:	ab04      	add	r3, sp, #16
 800f778:	881b      	ldrh	r3, [r3, #0]
 800f77a:	1859      	adds	r1, r3, r1
 800f77c:	8021      	strh	r1, [r4, #0]
 800f77e:	ab04      	add	r3, sp, #16
 800f780:	885b      	ldrh	r3, [r3, #2]
 800f782:	189a      	adds	r2, r3, r2
 800f784:	8062      	strh	r2, [r4, #2]
 800f786:	2204      	movs	r2, #4
 800f788:	5ea3      	ldrsh	r3, [r4, r2]
 800f78a:	9300      	str	r3, [sp, #0]
 800f78c:	2306      	movs	r3, #6
 800f78e:	5ee5      	ldrsh	r5, [r4, r3]
 800f790:	4b44      	ldr	r3, [pc, #272]	@ (800f8a4 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x174>)
 800f792:	6818      	ldr	r0, [r3, #0]
 800f794:	6803      	ldr	r3, [r0, #0]
 800f796:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f798:	4798      	blx	r3
 800f79a:	4b43      	ldr	r3, [pc, #268]	@ (800f8a8 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x178>)
 800f79c:	881a      	ldrh	r2, [r3, #0]
 800f79e:	2102      	movs	r1, #2
 800f7a0:	5e63      	ldrsh	r3, [r4, r1]
 800f7a2:	4355      	muls	r5, r2
 800f7a4:	4353      	muls	r3, r2
 800f7a6:	2100      	movs	r1, #0
 800f7a8:	5e64      	ldrsh	r4, [r4, r1]
 800f7aa:	006d      	lsls	r5, r5, #1
 800f7ac:	191c      	adds	r4, r3, r4
 800f7ae:	0064      	lsls	r4, r4, #1
 800f7b0:	1904      	adds	r4, r0, r4
 800f7b2:	68f8      	ldr	r0, [r7, #12]
 800f7b4:	1963      	adds	r3, r4, r5
 800f7b6:	9301      	str	r3, [sp, #4]
 800f7b8:	6803      	ldr	r3, [r0, #0]
 800f7ba:	0031      	movs	r1, r6
 800f7bc:	689b      	ldr	r3, [r3, #8]
 800f7be:	4798      	blx	r3
 800f7c0:	2800      	cmp	r0, #0
 800f7c2:	d026      	beq.n	800f812 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xe2>
 800f7c4:	271f      	movs	r7, #31
 800f7c6:	9b00      	ldr	r3, [sp, #0]
 800f7c8:	0059      	lsls	r1, r3, #1
 800f7ca:	9b01      	ldr	r3, [sp, #4]
 800f7cc:	429c      	cmp	r4, r3
 800f7ce:	d262      	bcs.n	800f896 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x166>
 800f7d0:	1860      	adds	r0, r4, r1
 800f7d2:	4284      	cmp	r4, r0
 800f7d4:	d20f      	bcs.n	800f7f6 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc6>
 800f7d6:	ce04      	ldmia	r6!, {r2}
 800f7d8:	25fc      	movs	r5, #252	@ 0xfc
 800f7da:	0cd3      	lsrs	r3, r2, #19
 800f7dc:	02db      	lsls	r3, r3, #11
 800f7de:	469c      	mov	ip, r3
 800f7e0:	00ed      	lsls	r5, r5, #3
 800f7e2:	0953      	lsrs	r3, r2, #5
 800f7e4:	402b      	ands	r3, r5
 800f7e6:	4665      	mov	r5, ip
 800f7e8:	08d2      	lsrs	r2, r2, #3
 800f7ea:	432b      	orrs	r3, r5
 800f7ec:	403a      	ands	r2, r7
 800f7ee:	4313      	orrs	r3, r2
 800f7f0:	8023      	strh	r3, [r4, #0]
 800f7f2:	3402      	adds	r4, #2
 800f7f4:	e7ed      	b.n	800f7d2 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xa2>
 800f7f6:	4b2c      	ldr	r3, [pc, #176]	@ (800f8a8 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x178>)
 800f7f8:	8818      	ldrh	r0, [r3, #0]
 800f7fa:	9b00      	ldr	r3, [sp, #0]
 800f7fc:	1ac0      	subs	r0, r0, r3
 800f7fe:	ab04      	add	r3, sp, #16
 800f800:	2204      	movs	r2, #4
 800f802:	5e9b      	ldrsh	r3, [r3, r2]
 800f804:	9a00      	ldr	r2, [sp, #0]
 800f806:	0040      	lsls	r0, r0, #1
 800f808:	1a9b      	subs	r3, r3, r2
 800f80a:	009b      	lsls	r3, r3, #2
 800f80c:	1824      	adds	r4, r4, r0
 800f80e:	18f6      	adds	r6, r6, r3
 800f810:	e7db      	b.n	800f7ca <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x9a>
 800f812:	9b00      	ldr	r3, [sp, #0]
 800f814:	68f8      	ldr	r0, [r7, #12]
 800f816:	009b      	lsls	r3, r3, #2
 800f818:	9302      	str	r3, [sp, #8]
 800f81a:	6803      	ldr	r3, [r0, #0]
 800f81c:	9a02      	ldr	r2, [sp, #8]
 800f81e:	691b      	ldr	r3, [r3, #16]
 800f820:	0031      	movs	r1, r6
 800f822:	4798      	blx	r3
 800f824:	9b00      	ldr	r3, [sp, #0]
 800f826:	005b      	lsls	r3, r3, #1
 800f828:	9303      	str	r3, [sp, #12]
 800f82a:	9b01      	ldr	r3, [sp, #4]
 800f82c:	429c      	cmp	r4, r3
 800f82e:	d232      	bcs.n	800f896 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x166>
 800f830:	68f8      	ldr	r0, [r7, #12]
 800f832:	6803      	ldr	r3, [r0, #0]
 800f834:	695b      	ldr	r3, [r3, #20]
 800f836:	4798      	blx	r3
 800f838:	4b1b      	ldr	r3, [pc, #108]	@ (800f8a8 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x178>)
 800f83a:	9a01      	ldr	r2, [sp, #4]
 800f83c:	881b      	ldrh	r3, [r3, #0]
 800f83e:	0005      	movs	r5, r0
 800f840:	005b      	lsls	r3, r3, #1
 800f842:	18e3      	adds	r3, r4, r3
 800f844:	429a      	cmp	r2, r3
 800f846:	d90a      	bls.n	800f85e <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x12e>
 800f848:	ab04      	add	r3, sp, #16
 800f84a:	2204      	movs	r2, #4
 800f84c:	5e9b      	ldrsh	r3, [r3, r2]
 800f84e:	68f8      	ldr	r0, [r7, #12]
 800f850:	009b      	lsls	r3, r3, #2
 800f852:	18f6      	adds	r6, r6, r3
 800f854:	6803      	ldr	r3, [r0, #0]
 800f856:	9a02      	ldr	r2, [sp, #8]
 800f858:	691b      	ldr	r3, [r3, #16]
 800f85a:	0031      	movs	r1, r6
 800f85c:	4798      	blx	r3
 800f85e:	9b03      	ldr	r3, [sp, #12]
 800f860:	18e0      	adds	r0, r4, r3
 800f862:	4284      	cmp	r4, r0
 800f864:	d210      	bcs.n	800f888 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x158>
 800f866:	cd04      	ldmia	r5!, {r2}
 800f868:	0cd1      	lsrs	r1, r2, #19
 800f86a:	02cb      	lsls	r3, r1, #11
 800f86c:	21fc      	movs	r1, #252	@ 0xfc
 800f86e:	469c      	mov	ip, r3
 800f870:	00c9      	lsls	r1, r1, #3
 800f872:	0953      	lsrs	r3, r2, #5
 800f874:	400b      	ands	r3, r1
 800f876:	4661      	mov	r1, ip
 800f878:	430b      	orrs	r3, r1
 800f87a:	211f      	movs	r1, #31
 800f87c:	08d2      	lsrs	r2, r2, #3
 800f87e:	400a      	ands	r2, r1
 800f880:	4313      	orrs	r3, r2
 800f882:	8023      	strh	r3, [r4, #0]
 800f884:	3402      	adds	r4, #2
 800f886:	e7ec      	b.n	800f862 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x132>
 800f888:	4b07      	ldr	r3, [pc, #28]	@ (800f8a8 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x178>)
 800f88a:	8818      	ldrh	r0, [r3, #0]
 800f88c:	9b00      	ldr	r3, [sp, #0]
 800f88e:	1ac0      	subs	r0, r0, r3
 800f890:	0040      	lsls	r0, r0, #1
 800f892:	1824      	adds	r4, r4, r0
 800f894:	e7c9      	b.n	800f82a <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xfa>
 800f896:	4b03      	ldr	r3, [pc, #12]	@ (800f8a4 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x174>)
 800f898:	6818      	ldr	r0, [r3, #0]
 800f89a:	6803      	ldr	r3, [r0, #0]
 800f89c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f89e:	4798      	blx	r3
 800f8a0:	b009      	add	sp, #36	@ 0x24
 800f8a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8a4:	20003578 	.word	0x20003578
 800f8a8:	20003572 	.word	0x20003572

0800f8ac <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 800f8ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8ae:	0015      	movs	r5, r2
 800f8b0:	b08d      	sub	sp, #52	@ 0x34
 800f8b2:	9300      	str	r3, [sp, #0]
 800f8b4:	ab12      	add	r3, sp, #72	@ 0x48
 800f8b6:	781b      	ldrb	r3, [r3, #0]
 800f8b8:	ac0a      	add	r4, sp, #40	@ 0x28
 800f8ba:	000e      	movs	r6, r1
 800f8bc:	0007      	movs	r7, r0
 800f8be:	0029      	movs	r1, r5
 800f8c0:	2208      	movs	r2, #8
 800f8c2:	a808      	add	r0, sp, #32
 800f8c4:	9302      	str	r3, [sp, #8]
 800f8c6:	f003 fa56 	bl	8012d76 <memcpy>
 800f8ca:	2208      	movs	r2, #8
 800f8cc:	9900      	ldr	r1, [sp, #0]
 800f8ce:	0020      	movs	r0, r4
 800f8d0:	f003 fa51 	bl	8012d76 <memcpy>
 800f8d4:	a808      	add	r0, sp, #32
 800f8d6:	f7fb f9d5 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f8da:	0029      	movs	r1, r5
 800f8dc:	2503      	movs	r5, #3
 800f8de:	0020      	movs	r0, r4
 800f8e0:	f7fb f9f8 	bl	800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800f8e4:	2302      	movs	r3, #2
 800f8e6:	5ee2      	ldrsh	r2, [r4, r3]
 800f8e8:	2300      	movs	r3, #0
 800f8ea:	5ee1      	ldrsh	r1, [r4, r3]
 800f8ec:	ab08      	add	r3, sp, #32
 800f8ee:	2004      	movs	r0, #4
 800f8f0:	5e1b      	ldrsh	r3, [r3, r0]
 800f8f2:	4353      	muls	r3, r2
 800f8f4:	185b      	adds	r3, r3, r1
 800f8f6:	436b      	muls	r3, r5
 800f8f8:	18f3      	adds	r3, r6, r3
 800f8fa:	9300      	str	r3, [sp, #0]
 800f8fc:	ab08      	add	r3, sp, #32
 800f8fe:	881b      	ldrh	r3, [r3, #0]
 800f900:	1859      	adds	r1, r3, r1
 800f902:	8021      	strh	r1, [r4, #0]
 800f904:	ab08      	add	r3, sp, #32
 800f906:	885b      	ldrh	r3, [r3, #2]
 800f908:	189a      	adds	r2, r3, r2
 800f90a:	8062      	strh	r2, [r4, #2]
 800f90c:	2304      	movs	r3, #4
 800f90e:	5ee6      	ldrsh	r6, [r4, r3]
 800f910:	2206      	movs	r2, #6
 800f912:	5ea3      	ldrsh	r3, [r4, r2]
 800f914:	9301      	str	r3, [sp, #4]
 800f916:	4ba7      	ldr	r3, [pc, #668]	@ (800fbb4 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x308>)
 800f918:	6818      	ldr	r0, [r3, #0]
 800f91a:	6803      	ldr	r3, [r0, #0]
 800f91c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f91e:	4798      	blx	r3
 800f920:	4ba5      	ldr	r3, [pc, #660]	@ (800fbb8 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x30c>)
 800f922:	881a      	ldrh	r2, [r3, #0]
 800f924:	2102      	movs	r1, #2
 800f926:	5e63      	ldrsh	r3, [r4, r1]
 800f928:	2100      	movs	r1, #0
 800f92a:	5e64      	ldrsh	r4, [r4, r1]
 800f92c:	4353      	muls	r3, r2
 800f92e:	191c      	adds	r4, r3, r4
 800f930:	9b01      	ldr	r3, [sp, #4]
 800f932:	0064      	lsls	r4, r4, #1
 800f934:	4353      	muls	r3, r2
 800f936:	1904      	adds	r4, r0, r4
 800f938:	005b      	lsls	r3, r3, #1
 800f93a:	18e3      	adds	r3, r4, r3
 800f93c:	9301      	str	r3, [sp, #4]
 800f93e:	1b93      	subs	r3, r2, r6
 800f940:	9303      	str	r3, [sp, #12]
 800f942:	ab08      	add	r3, sp, #32
 800f944:	2204      	movs	r2, #4
 800f946:	5e9b      	ldrsh	r3, [r3, r2]
 800f948:	68f8      	ldr	r0, [r7, #12]
 800f94a:	9304      	str	r3, [sp, #16]
 800f94c:	6803      	ldr	r3, [r0, #0]
 800f94e:	9900      	ldr	r1, [sp, #0]
 800f950:	689b      	ldr	r3, [r3, #8]
 800f952:	4798      	blx	r3
 800f954:	9b03      	ldr	r3, [sp, #12]
 800f956:	005b      	lsls	r3, r3, #1
 800f958:	9303      	str	r3, [sp, #12]
 800f95a:	2800      	cmp	r0, #0
 800f95c:	d077      	beq.n	800fa4e <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1a2>
 800f95e:	9b04      	ldr	r3, [sp, #16]
 800f960:	1b9b      	subs	r3, r3, r6
 800f962:	435d      	muls	r5, r3
 800f964:	9b02      	ldr	r3, [sp, #8]
 800f966:	46ac      	mov	ip, r5
 800f968:	43d9      	mvns	r1, r3
 800f96a:	0076      	lsls	r6, r6, #1
 800f96c:	b2c9      	uxtb	r1, r1
 800f96e:	2bff      	cmp	r3, #255	@ 0xff
 800f970:	d127      	bne.n	800f9c2 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x116>
 800f972:	22fc      	movs	r2, #252	@ 0xfc
 800f974:	00d2      	lsls	r2, r2, #3
 800f976:	9b01      	ldr	r3, [sp, #4]
 800f978:	429c      	cmp	r4, r3
 800f97a:	d300      	bcc.n	800f97e <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0xd2>
 800f97c:	e112      	b.n	800fba4 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2f8>
 800f97e:	19a1      	adds	r1, r4, r6
 800f980:	428c      	cmp	r4, r1
 800f982:	d213      	bcs.n	800f9ac <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x100>
 800f984:	9b00      	ldr	r3, [sp, #0]
 800f986:	785b      	ldrb	r3, [r3, #1]
 800f988:	00db      	lsls	r3, r3, #3
 800f98a:	4013      	ands	r3, r2
 800f98c:	0018      	movs	r0, r3
 800f98e:	9b00      	ldr	r3, [sp, #0]
 800f990:	789b      	ldrb	r3, [r3, #2]
 800f992:	08db      	lsrs	r3, r3, #3
 800f994:	02db      	lsls	r3, r3, #11
 800f996:	4303      	orrs	r3, r0
 800f998:	9800      	ldr	r0, [sp, #0]
 800f99a:	7800      	ldrb	r0, [r0, #0]
 800f99c:	08c0      	lsrs	r0, r0, #3
 800f99e:	4303      	orrs	r3, r0
 800f9a0:	8023      	strh	r3, [r4, #0]
 800f9a2:	9b00      	ldr	r3, [sp, #0]
 800f9a4:	3402      	adds	r4, #2
 800f9a6:	3303      	adds	r3, #3
 800f9a8:	9300      	str	r3, [sp, #0]
 800f9aa:	e7e9      	b.n	800f980 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0xd4>
 800f9ac:	9b03      	ldr	r3, [sp, #12]
 800f9ae:	18e4      	adds	r4, r4, r3
 800f9b0:	9b00      	ldr	r3, [sp, #0]
 800f9b2:	4463      	add	r3, ip
 800f9b4:	9300      	str	r3, [sp, #0]
 800f9b6:	e7de      	b.n	800f976 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0xca>
 800f9b8:	9b03      	ldr	r3, [sp, #12]
 800f9ba:	18e4      	adds	r4, r4, r3
 800f9bc:	9b00      	ldr	r3, [sp, #0]
 800f9be:	4463      	add	r3, ip
 800f9c0:	9300      	str	r3, [sp, #0]
 800f9c2:	9b01      	ldr	r3, [sp, #4]
 800f9c4:	429c      	cmp	r4, r3
 800f9c6:	d300      	bcc.n	800f9ca <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x11e>
 800f9c8:	e0ec      	b.n	800fba4 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2f8>
 800f9ca:	19a3      	adds	r3, r4, r6
 800f9cc:	9304      	str	r3, [sp, #16]
 800f9ce:	9b04      	ldr	r3, [sp, #16]
 800f9d0:	429c      	cmp	r4, r3
 800f9d2:	d2f1      	bcs.n	800f9b8 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10c>
 800f9d4:	466b      	mov	r3, sp
 800f9d6:	2507      	movs	r5, #7
 800f9d8:	8822      	ldrh	r2, [r4, #0]
 800f9da:	8918      	ldrh	r0, [r3, #8]
 800f9dc:	1213      	asrs	r3, r2, #8
 800f9de:	43ab      	bics	r3, r5
 800f9e0:	10d7      	asrs	r7, r2, #3
 800f9e2:	35f5      	adds	r5, #245	@ 0xf5
 800f9e4:	403d      	ands	r5, r7
 800f9e6:	115f      	asrs	r7, r3, #5
 800f9e8:	433b      	orrs	r3, r7
 800f9ea:	9f00      	ldr	r7, [sp, #0]
 800f9ec:	434b      	muls	r3, r1
 800f9ee:	78bf      	ldrb	r7, [r7, #2]
 800f9f0:	00d2      	lsls	r2, r2, #3
 800f9f2:	4347      	muls	r7, r0
 800f9f4:	19db      	adds	r3, r3, r7
 800f9f6:	11af      	asrs	r7, r5, #6
 800f9f8:	433d      	orrs	r5, r7
 800f9fa:	9f00      	ldr	r7, [sp, #0]
 800f9fc:	434d      	muls	r5, r1
 800f9fe:	787f      	ldrb	r7, [r7, #1]
 800fa00:	b2d2      	uxtb	r2, r2
 800fa02:	4347      	muls	r7, r0
 800fa04:	19ed      	adds	r5, r5, r7
 800fa06:	1157      	asrs	r7, r2, #5
 800fa08:	433a      	orrs	r2, r7
 800fa0a:	9f00      	ldr	r7, [sp, #0]
 800fa0c:	434a      	muls	r2, r1
 800fa0e:	783f      	ldrb	r7, [r7, #0]
 800fa10:	b29b      	uxth	r3, r3
 800fa12:	4378      	muls	r0, r7
 800fa14:	27f8      	movs	r7, #248	@ 0xf8
 800fa16:	1812      	adds	r2, r2, r0
 800fa18:	1c58      	adds	r0, r3, #1
 800fa1a:	121b      	asrs	r3, r3, #8
 800fa1c:	b292      	uxth	r2, r2
 800fa1e:	023f      	lsls	r7, r7, #8
 800fa20:	18c3      	adds	r3, r0, r3
 800fa22:	403b      	ands	r3, r7
 800fa24:	1c57      	adds	r7, r2, #1
 800fa26:	1212      	asrs	r2, r2, #8
 800fa28:	18ba      	adds	r2, r7, r2
 800fa2a:	0412      	lsls	r2, r2, #16
 800fa2c:	b2ad      	uxth	r5, r5
 800fa2e:	0ed2      	lsrs	r2, r2, #27
 800fa30:	4313      	orrs	r3, r2
 800fa32:	1c6a      	adds	r2, r5, #1
 800fa34:	122d      	asrs	r5, r5, #8
 800fa36:	1955      	adds	r5, r2, r5
 800fa38:	22fc      	movs	r2, #252	@ 0xfc
 800fa3a:	096d      	lsrs	r5, r5, #5
 800fa3c:	00d2      	lsls	r2, r2, #3
 800fa3e:	4015      	ands	r5, r2
 800fa40:	432b      	orrs	r3, r5
 800fa42:	8023      	strh	r3, [r4, #0]
 800fa44:	9b00      	ldr	r3, [sp, #0]
 800fa46:	3402      	adds	r4, #2
 800fa48:	3303      	adds	r3, #3
 800fa4a:	9300      	str	r3, [sp, #0]
 800fa4c:	e7bf      	b.n	800f9ce <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x122>
 800fa4e:	002b      	movs	r3, r5
 800fa50:	4373      	muls	r3, r6
 800fa52:	68f8      	ldr	r0, [r7, #12]
 800fa54:	9304      	str	r3, [sp, #16]
 800fa56:	6803      	ldr	r3, [r0, #0]
 800fa58:	9a04      	ldr	r2, [sp, #16]
 800fa5a:	691b      	ldr	r3, [r3, #16]
 800fa5c:	9900      	ldr	r1, [sp, #0]
 800fa5e:	4798      	blx	r3
 800fa60:	0073      	lsls	r3, r6, #1
 800fa62:	9305      	str	r3, [sp, #20]
 800fa64:	9b02      	ldr	r3, [sp, #8]
 800fa66:	2bff      	cmp	r3, #255	@ 0xff
 800fa68:	d064      	beq.n	800fb34 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x288>
 800fa6a:	9506      	str	r5, [sp, #24]
 800fa6c:	9b01      	ldr	r3, [sp, #4]
 800fa6e:	429c      	cmp	r4, r3
 800fa70:	d300      	bcc.n	800fa74 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 800fa72:	e097      	b.n	800fba4 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2f8>
 800fa74:	68f8      	ldr	r0, [r7, #12]
 800fa76:	6803      	ldr	r3, [r0, #0]
 800fa78:	695b      	ldr	r3, [r3, #20]
 800fa7a:	4798      	blx	r3
 800fa7c:	4b4e      	ldr	r3, [pc, #312]	@ (800fbb8 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x30c>)
 800fa7e:	9a01      	ldr	r2, [sp, #4]
 800fa80:	881b      	ldrh	r3, [r3, #0]
 800fa82:	0005      	movs	r5, r0
 800fa84:	005b      	lsls	r3, r3, #1
 800fa86:	18e3      	adds	r3, r4, r3
 800fa88:	429a      	cmp	r2, r3
 800fa8a:	d90d      	bls.n	800faa8 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1fc>
 800fa8c:	ab08      	add	r3, sp, #32
 800fa8e:	2204      	movs	r2, #4
 800fa90:	5e9b      	ldrsh	r3, [r3, r2]
 800fa92:	9a06      	ldr	r2, [sp, #24]
 800fa94:	68f8      	ldr	r0, [r7, #12]
 800fa96:	4353      	muls	r3, r2
 800fa98:	9a00      	ldr	r2, [sp, #0]
 800fa9a:	18d3      	adds	r3, r2, r3
 800fa9c:	9300      	str	r3, [sp, #0]
 800fa9e:	6803      	ldr	r3, [r0, #0]
 800faa0:	9a04      	ldr	r2, [sp, #16]
 800faa2:	691b      	ldr	r3, [r3, #16]
 800faa4:	9900      	ldr	r1, [sp, #0]
 800faa6:	4798      	blx	r3
 800faa8:	9b05      	ldr	r3, [sp, #20]
 800faaa:	18e3      	adds	r3, r4, r3
 800faac:	9307      	str	r3, [sp, #28]
 800faae:	9b02      	ldr	r3, [sp, #8]
 800fab0:	43db      	mvns	r3, r3
 800fab2:	b2db      	uxtb	r3, r3
 800fab4:	469c      	mov	ip, r3
 800fab6:	9b07      	ldr	r3, [sp, #28]
 800fab8:	429c      	cmp	r4, r3
 800faba:	d270      	bcs.n	800fb9e <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2f2>
 800fabc:	466b      	mov	r3, sp
 800fabe:	2107      	movs	r1, #7
 800fac0:	8822      	ldrh	r2, [r4, #0]
 800fac2:	8918      	ldrh	r0, [r3, #8]
 800fac4:	9e06      	ldr	r6, [sp, #24]
 800fac6:	1213      	asrs	r3, r2, #8
 800fac8:	438b      	bics	r3, r1
 800faca:	10d1      	asrs	r1, r2, #3
 800facc:	43b1      	bics	r1, r6
 800face:	115e      	asrs	r6, r3, #5
 800fad0:	4333      	orrs	r3, r6
 800fad2:	4666      	mov	r6, ip
 800fad4:	4373      	muls	r3, r6
 800fad6:	78ae      	ldrb	r6, [r5, #2]
 800fad8:	b2c9      	uxtb	r1, r1
 800fada:	4346      	muls	r6, r0
 800fadc:	199b      	adds	r3, r3, r6
 800fade:	118e      	asrs	r6, r1, #6
 800fae0:	4331      	orrs	r1, r6
 800fae2:	4666      	mov	r6, ip
 800fae4:	4371      	muls	r1, r6
 800fae6:	786e      	ldrb	r6, [r5, #1]
 800fae8:	00d2      	lsls	r2, r2, #3
 800faea:	4346      	muls	r6, r0
 800faec:	b2d2      	uxtb	r2, r2
 800faee:	1989      	adds	r1, r1, r6
 800faf0:	1156      	asrs	r6, r2, #5
 800faf2:	4332      	orrs	r2, r6
 800faf4:	4666      	mov	r6, ip
 800faf6:	4372      	muls	r2, r6
 800faf8:	782e      	ldrb	r6, [r5, #0]
 800fafa:	b29b      	uxth	r3, r3
 800fafc:	4370      	muls	r0, r6
 800fafe:	26f8      	movs	r6, #248	@ 0xf8
 800fb00:	1812      	adds	r2, r2, r0
 800fb02:	1c58      	adds	r0, r3, #1
 800fb04:	121b      	asrs	r3, r3, #8
 800fb06:	b292      	uxth	r2, r2
 800fb08:	0236      	lsls	r6, r6, #8
 800fb0a:	18c3      	adds	r3, r0, r3
 800fb0c:	4033      	ands	r3, r6
 800fb0e:	1c56      	adds	r6, r2, #1
 800fb10:	1212      	asrs	r2, r2, #8
 800fb12:	18b2      	adds	r2, r6, r2
 800fb14:	0412      	lsls	r2, r2, #16
 800fb16:	b289      	uxth	r1, r1
 800fb18:	0ed2      	lsrs	r2, r2, #27
 800fb1a:	4313      	orrs	r3, r2
 800fb1c:	1c4a      	adds	r2, r1, #1
 800fb1e:	1209      	asrs	r1, r1, #8
 800fb20:	1851      	adds	r1, r2, r1
 800fb22:	22fc      	movs	r2, #252	@ 0xfc
 800fb24:	0949      	lsrs	r1, r1, #5
 800fb26:	00d2      	lsls	r2, r2, #3
 800fb28:	4011      	ands	r1, r2
 800fb2a:	430b      	orrs	r3, r1
 800fb2c:	8023      	strh	r3, [r4, #0]
 800fb2e:	3503      	adds	r5, #3
 800fb30:	3402      	adds	r4, #2
 800fb32:	e7c0      	b.n	800fab6 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x20a>
 800fb34:	26fc      	movs	r6, #252	@ 0xfc
 800fb36:	9502      	str	r5, [sp, #8]
 800fb38:	00f6      	lsls	r6, r6, #3
 800fb3a:	9b01      	ldr	r3, [sp, #4]
 800fb3c:	429c      	cmp	r4, r3
 800fb3e:	d231      	bcs.n	800fba4 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2f8>
 800fb40:	68f8      	ldr	r0, [r7, #12]
 800fb42:	6803      	ldr	r3, [r0, #0]
 800fb44:	695b      	ldr	r3, [r3, #20]
 800fb46:	4798      	blx	r3
 800fb48:	4b1b      	ldr	r3, [pc, #108]	@ (800fbb8 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x30c>)
 800fb4a:	9a01      	ldr	r2, [sp, #4]
 800fb4c:	881b      	ldrh	r3, [r3, #0]
 800fb4e:	0005      	movs	r5, r0
 800fb50:	005b      	lsls	r3, r3, #1
 800fb52:	18e3      	adds	r3, r4, r3
 800fb54:	429a      	cmp	r2, r3
 800fb56:	d90d      	bls.n	800fb74 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2c8>
 800fb58:	ab08      	add	r3, sp, #32
 800fb5a:	2204      	movs	r2, #4
 800fb5c:	5e9b      	ldrsh	r3, [r3, r2]
 800fb5e:	9a02      	ldr	r2, [sp, #8]
 800fb60:	68f8      	ldr	r0, [r7, #12]
 800fb62:	4353      	muls	r3, r2
 800fb64:	9a00      	ldr	r2, [sp, #0]
 800fb66:	18d3      	adds	r3, r2, r3
 800fb68:	9300      	str	r3, [sp, #0]
 800fb6a:	6803      	ldr	r3, [r0, #0]
 800fb6c:	9a04      	ldr	r2, [sp, #16]
 800fb6e:	691b      	ldr	r3, [r3, #16]
 800fb70:	9900      	ldr	r1, [sp, #0]
 800fb72:	4798      	blx	r3
 800fb74:	9b05      	ldr	r3, [sp, #20]
 800fb76:	18e2      	adds	r2, r4, r3
 800fb78:	4294      	cmp	r4, r2
 800fb7a:	d20d      	bcs.n	800fb98 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2ec>
 800fb7c:	78ab      	ldrb	r3, [r5, #2]
 800fb7e:	7869      	ldrb	r1, [r5, #1]
 800fb80:	08db      	lsrs	r3, r3, #3
 800fb82:	00c9      	lsls	r1, r1, #3
 800fb84:	02db      	lsls	r3, r3, #11
 800fb86:	4031      	ands	r1, r6
 800fb88:	4319      	orrs	r1, r3
 800fb8a:	782b      	ldrb	r3, [r5, #0]
 800fb8c:	3503      	adds	r5, #3
 800fb8e:	08db      	lsrs	r3, r3, #3
 800fb90:	430b      	orrs	r3, r1
 800fb92:	8023      	strh	r3, [r4, #0]
 800fb94:	3402      	adds	r4, #2
 800fb96:	e7ef      	b.n	800fb78 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x2cc>
 800fb98:	9b03      	ldr	r3, [sp, #12]
 800fb9a:	18e4      	adds	r4, r4, r3
 800fb9c:	e7cd      	b.n	800fb3a <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x28e>
 800fb9e:	9b03      	ldr	r3, [sp, #12]
 800fba0:	18e4      	adds	r4, r4, r3
 800fba2:	e763      	b.n	800fa6c <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c0>
 800fba4:	4b03      	ldr	r3, [pc, #12]	@ (800fbb4 <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h+0x308>)
 800fba6:	6818      	ldr	r0, [r3, #0]
 800fba8:	6803      	ldr	r3, [r0, #0]
 800fbaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fbac:	4798      	blx	r3
 800fbae:	b00d      	add	sp, #52	@ 0x34
 800fbb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fbb2:	46c0      	nop			@ (mov r8, r8)
 800fbb4:	20003578 	.word	0x20003578
 800fbb8:	20003572 	.word	0x20003572

0800fbbc <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 800fbbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fbbe:	ac06      	add	r4, sp, #24
 800fbc0:	0015      	movs	r5, r2
 800fbc2:	001a      	movs	r2, r3
 800fbc4:	cc08      	ldmia	r4!, {r3}
 800fbc6:	ae08      	add	r6, sp, #32
 800fbc8:	7824      	ldrb	r4, [r4, #0]
 800fbca:	7836      	ldrb	r6, [r6, #0]
 800fbcc:	2d01      	cmp	r5, #1
 800fbce:	d00e      	beq.n	800fbee <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 800fbd0:	2d00      	cmp	r5, #0
 800fbd2:	d002      	beq.n	800fbda <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x1e>
 800fbd4:	2d02      	cmp	r5, #2
 800fbd6:	d006      	beq.n	800fbe6 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x2a>
 800fbd8:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
 800fbda:	6805      	ldr	r5, [r0, #0]
 800fbdc:	9601      	str	r6, [sp, #4]
 800fbde:	9400      	str	r4, [sp, #0]
 800fbe0:	68ec      	ldr	r4, [r5, #12]
 800fbe2:	47a0      	blx	r4
 800fbe4:	e7f8      	b.n	800fbd8 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x1c>
 800fbe6:	9400      	str	r4, [sp, #0]
 800fbe8:	f7ff fc2a 	bl	800f440 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 800fbec:	e7f4      	b.n	800fbd8 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x1c>
 800fbee:	9400      	str	r4, [sp, #0]
 800fbf0:	f7ff fe5c 	bl	800f8ac <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h>
 800fbf4:	e7f0      	b.n	800fbd8 <_ZN8touchgfx19LCD16bppSerialFlash8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x1c>
	...

0800fbf8 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 800fbf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fbfa:	001d      	movs	r5, r3
 800fbfc:	000e      	movs	r6, r1
 800fbfe:	b08f      	sub	sp, #60	@ 0x3c
 800fc00:	ab14      	add	r3, sp, #80	@ 0x50
 800fc02:	9203      	str	r2, [sp, #12]
 800fc04:	cb04      	ldmia	r3!, {r2}
 800fc06:	ac0c      	add	r4, sp, #48	@ 0x30
 800fc08:	781b      	ldrb	r3, [r3, #0]
 800fc0a:	0029      	movs	r1, r5
 800fc0c:	0007      	movs	r7, r0
 800fc0e:	9200      	str	r2, [sp, #0]
 800fc10:	a80a      	add	r0, sp, #40	@ 0x28
 800fc12:	2208      	movs	r2, #8
 800fc14:	9302      	str	r3, [sp, #8]
 800fc16:	f003 f8ae 	bl	8012d76 <memcpy>
 800fc1a:	2208      	movs	r2, #8
 800fc1c:	9900      	ldr	r1, [sp, #0]
 800fc1e:	0020      	movs	r0, r4
 800fc20:	f003 f8a9 	bl	8012d76 <memcpy>
 800fc24:	a80a      	add	r0, sp, #40	@ 0x28
 800fc26:	f7fb f82d 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fc2a:	0020      	movs	r0, r4
 800fc2c:	0029      	movs	r1, r5
 800fc2e:	f7fb f851 	bl	800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800fc32:	2302      	movs	r3, #2
 800fc34:	5ee2      	ldrsh	r2, [r4, r3]
 800fc36:	2300      	movs	r3, #0
 800fc38:	5ee1      	ldrsh	r1, [r4, r3]
 800fc3a:	ab0a      	add	r3, sp, #40	@ 0x28
 800fc3c:	2004      	movs	r0, #4
 800fc3e:	5e1b      	ldrsh	r3, [r3, r0]
 800fc40:	4353      	muls	r3, r2
 800fc42:	185b      	adds	r3, r3, r1
 800fc44:	18f3      	adds	r3, r6, r3
 800fc46:	9300      	str	r3, [sp, #0]
 800fc48:	ab0a      	add	r3, sp, #40	@ 0x28
 800fc4a:	881b      	ldrh	r3, [r3, #0]
 800fc4c:	185b      	adds	r3, r3, r1
 800fc4e:	8023      	strh	r3, [r4, #0]
 800fc50:	ab0a      	add	r3, sp, #40	@ 0x28
 800fc52:	885b      	ldrh	r3, [r3, #2]
 800fc54:	189b      	adds	r3, r3, r2
 800fc56:	8063      	strh	r3, [r4, #2]
 800fc58:	2204      	movs	r2, #4
 800fc5a:	5ea3      	ldrsh	r3, [r4, r2]
 800fc5c:	9301      	str	r3, [sp, #4]
 800fc5e:	2306      	movs	r3, #6
 800fc60:	5ee5      	ldrsh	r5, [r4, r3]
 800fc62:	4ba6      	ldr	r3, [pc, #664]	@ (800fefc <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x304>)
 800fc64:	6818      	ldr	r0, [r3, #0]
 800fc66:	6803      	ldr	r3, [r0, #0]
 800fc68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fc6a:	4798      	blx	r3
 800fc6c:	4ba4      	ldr	r3, [pc, #656]	@ (800ff00 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x308>)
 800fc6e:	881a      	ldrh	r2, [r3, #0]
 800fc70:	2102      	movs	r1, #2
 800fc72:	5e63      	ldrsh	r3, [r4, r1]
 800fc74:	4355      	muls	r5, r2
 800fc76:	4353      	muls	r3, r2
 800fc78:	2100      	movs	r1, #0
 800fc7a:	5e64      	ldrsh	r4, [r4, r1]
 800fc7c:	006d      	lsls	r5, r5, #1
 800fc7e:	191c      	adds	r4, r3, r4
 800fc80:	0064      	lsls	r4, r4, #1
 800fc82:	1904      	adds	r4, r0, r4
 800fc84:	1963      	adds	r3, r4, r5
 800fc86:	9304      	str	r3, [sp, #16]
 800fc88:	9b03      	ldr	r3, [sp, #12]
 800fc8a:	68f8      	ldr	r0, [r7, #12]
 800fc8c:	3304      	adds	r3, #4
 800fc8e:	9305      	str	r3, [sp, #20]
 800fc90:	6803      	ldr	r3, [r0, #0]
 800fc92:	9900      	ldr	r1, [sp, #0]
 800fc94:	689b      	ldr	r3, [r3, #8]
 800fc96:	4798      	blx	r3
 800fc98:	2800      	cmp	r0, #0
 800fc9a:	d031      	beq.n	800fd00 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x108>
 800fc9c:	68f8      	ldr	r0, [r7, #12]
 800fc9e:	9905      	ldr	r1, [sp, #20]
 800fca0:	6803      	ldr	r3, [r0, #0]
 800fca2:	689b      	ldr	r3, [r3, #8]
 800fca4:	4798      	blx	r3
 800fca6:	2800      	cmp	r0, #0
 800fca8:	d02a      	beq.n	800fd00 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x108>
 800fcaa:	9b01      	ldr	r3, [sp, #4]
 800fcac:	005b      	lsls	r3, r3, #1
 800fcae:	9306      	str	r3, [sp, #24]
 800fcb0:	9b04      	ldr	r3, [sp, #16]
 800fcb2:	429c      	cmp	r4, r3
 800fcb4:	d300      	bcc.n	800fcb8 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 800fcb6:	e119      	b.n	800feec <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x2f4>
 800fcb8:	9b06      	ldr	r3, [sp, #24]
 800fcba:	18e3      	adds	r3, r4, r3
 800fcbc:	9303      	str	r3, [sp, #12]
 800fcbe:	9b03      	ldr	r3, [sp, #12]
 800fcc0:	429c      	cmp	r4, r3
 800fcc2:	d300      	bcc.n	800fcc6 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xce>
 800fcc4:	e0af      	b.n	800fe26 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22e>
 800fcc6:	9b00      	ldr	r3, [sp, #0]
 800fcc8:	9a05      	ldr	r2, [sp, #20]
 800fcca:	781b      	ldrb	r3, [r3, #0]
 800fccc:	009b      	lsls	r3, r3, #2
 800fcce:	589b      	ldr	r3, [r3, r2]
 800fcd0:	0e1a      	lsrs	r2, r3, #24
 800fcd2:	d010      	beq.n	800fcf6 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfe>
 800fcd4:	0a1f      	lsrs	r7, r3, #8
 800fcd6:	2aff      	cmp	r2, #255	@ 0xff
 800fcd8:	d15c      	bne.n	800fd94 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x19c>
 800fcda:	9902      	ldr	r1, [sp, #8]
 800fcdc:	29ff      	cmp	r1, #255	@ 0xff
 800fcde:	d159      	bne.n	800fd94 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x19c>
 800fce0:	22fc      	movs	r2, #252	@ 0xfc
 800fce2:	0959      	lsrs	r1, r3, #5
 800fce4:	00d2      	lsls	r2, r2, #3
 800fce6:	4011      	ands	r1, r2
 800fce8:	0cda      	lsrs	r2, r3, #19
 800fcea:	02d2      	lsls	r2, r2, #11
 800fcec:	061b      	lsls	r3, r3, #24
 800fcee:	430a      	orrs	r2, r1
 800fcf0:	0edb      	lsrs	r3, r3, #27
 800fcf2:	431a      	orrs	r2, r3
 800fcf4:	8022      	strh	r2, [r4, #0]
 800fcf6:	9b00      	ldr	r3, [sp, #0]
 800fcf8:	3402      	adds	r4, #2
 800fcfa:	3301      	adds	r3, #1
 800fcfc:	9300      	str	r3, [sp, #0]
 800fcfe:	e7de      	b.n	800fcbe <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc6>
 800fd00:	68f8      	ldr	r0, [r7, #12]
 800fd02:	9a01      	ldr	r2, [sp, #4]
 800fd04:	6803      	ldr	r3, [r0, #0]
 800fd06:	9900      	ldr	r1, [sp, #0]
 800fd08:	691b      	ldr	r3, [r3, #16]
 800fd0a:	4798      	blx	r3
 800fd0c:	9b01      	ldr	r3, [sp, #4]
 800fd0e:	005b      	lsls	r3, r3, #1
 800fd10:	9307      	str	r3, [sp, #28]
 800fd12:	9b04      	ldr	r3, [sp, #16]
 800fd14:	429c      	cmp	r4, r3
 800fd16:	d300      	bcc.n	800fd1a <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x122>
 800fd18:	e0e8      	b.n	800feec <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x2f4>
 800fd1a:	68f8      	ldr	r0, [r7, #12]
 800fd1c:	6803      	ldr	r3, [r0, #0]
 800fd1e:	695b      	ldr	r3, [r3, #20]
 800fd20:	4798      	blx	r3
 800fd22:	4b77      	ldr	r3, [pc, #476]	@ (800ff00 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x308>)
 800fd24:	9a04      	ldr	r2, [sp, #16]
 800fd26:	881b      	ldrh	r3, [r3, #0]
 800fd28:	9003      	str	r0, [sp, #12]
 800fd2a:	005b      	lsls	r3, r3, #1
 800fd2c:	18e3      	adds	r3, r4, r3
 800fd2e:	429a      	cmp	r2, r3
 800fd30:	d90b      	bls.n	800fd4a <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x152>
 800fd32:	ab0a      	add	r3, sp, #40	@ 0x28
 800fd34:	2204      	movs	r2, #4
 800fd36:	5e9b      	ldrsh	r3, [r3, r2]
 800fd38:	9a00      	ldr	r2, [sp, #0]
 800fd3a:	68f8      	ldr	r0, [r7, #12]
 800fd3c:	18d3      	adds	r3, r2, r3
 800fd3e:	9300      	str	r3, [sp, #0]
 800fd40:	6803      	ldr	r3, [r0, #0]
 800fd42:	9a01      	ldr	r2, [sp, #4]
 800fd44:	691b      	ldr	r3, [r3, #16]
 800fd46:	9900      	ldr	r1, [sp, #0]
 800fd48:	4798      	blx	r3
 800fd4a:	9b07      	ldr	r3, [sp, #28]
 800fd4c:	18e3      	adds	r3, r4, r3
 800fd4e:	9308      	str	r3, [sp, #32]
 800fd50:	9b08      	ldr	r3, [sp, #32]
 800fd52:	429c      	cmp	r4, r3
 800fd54:	d300      	bcc.n	800fd58 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x160>
 800fd56:	e0c2      	b.n	800fede <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x2e6>
 800fd58:	9b03      	ldr	r3, [sp, #12]
 800fd5a:	9a05      	ldr	r2, [sp, #20]
 800fd5c:	781b      	ldrb	r3, [r3, #0]
 800fd5e:	009b      	lsls	r3, r3, #2
 800fd60:	589b      	ldr	r3, [r3, r2]
 800fd62:	0e1a      	lsrs	r2, r3, #24
 800fd64:	d011      	beq.n	800fd8a <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x192>
 800fd66:	0a19      	lsrs	r1, r3, #8
 800fd68:	9109      	str	r1, [sp, #36]	@ 0x24
 800fd6a:	2aff      	cmp	r2, #255	@ 0xff
 800fd6c:	d16a      	bne.n	800fe44 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x24c>
 800fd6e:	9902      	ldr	r1, [sp, #8]
 800fd70:	29ff      	cmp	r1, #255	@ 0xff
 800fd72:	d167      	bne.n	800fe44 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x24c>
 800fd74:	22fc      	movs	r2, #252	@ 0xfc
 800fd76:	0959      	lsrs	r1, r3, #5
 800fd78:	00d2      	lsls	r2, r2, #3
 800fd7a:	4011      	ands	r1, r2
 800fd7c:	0cda      	lsrs	r2, r3, #19
 800fd7e:	02d2      	lsls	r2, r2, #11
 800fd80:	061b      	lsls	r3, r3, #24
 800fd82:	430a      	orrs	r2, r1
 800fd84:	0edb      	lsrs	r3, r3, #27
 800fd86:	431a      	orrs	r2, r3
 800fd88:	8022      	strh	r2, [r4, #0]
 800fd8a:	9b03      	ldr	r3, [sp, #12]
 800fd8c:	3402      	adds	r4, #2
 800fd8e:	3301      	adds	r3, #1
 800fd90:	9303      	str	r3, [sp, #12]
 800fd92:	e7dd      	b.n	800fd50 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x158>
 800fd94:	2007      	movs	r0, #7
 800fd96:	8825      	ldrh	r5, [r4, #0]
 800fd98:	b2ff      	uxtb	r7, r7
 800fd9a:	1229      	asrs	r1, r5, #8
 800fd9c:	4381      	bics	r1, r0
 800fd9e:	10ee      	asrs	r6, r5, #3
 800fda0:	3804      	subs	r0, #4
 800fda2:	4386      	bics	r6, r0
 800fda4:	4085      	lsls	r5, r0
 800fda6:	9802      	ldr	r0, [sp, #8]
 800fda8:	b2f6      	uxtb	r6, r6
 800fdaa:	4342      	muls	r2, r0
 800fdac:	1c50      	adds	r0, r2, #1
 800fdae:	1212      	asrs	r2, r2, #8
 800fdb0:	1880      	adds	r0, r0, r2
 800fdb2:	1200      	asrs	r0, r0, #8
 800fdb4:	b282      	uxth	r2, r0
 800fdb6:	43c0      	mvns	r0, r0
 800fdb8:	4694      	mov	ip, r2
 800fdba:	114a      	asrs	r2, r1, #5
 800fdbc:	b2c0      	uxtb	r0, r0
 800fdbe:	4311      	orrs	r1, r2
 800fdc0:	4341      	muls	r1, r0
 800fdc2:	9107      	str	r1, [sp, #28]
 800fdc4:	4661      	mov	r1, ip
 800fdc6:	0c1a      	lsrs	r2, r3, #16
 800fdc8:	b2d2      	uxtb	r2, r2
 800fdca:	434a      	muls	r2, r1
 800fdcc:	9907      	ldr	r1, [sp, #28]
 800fdce:	b2ed      	uxtb	r5, r5
 800fdd0:	1889      	adds	r1, r1, r2
 800fdd2:	11b2      	asrs	r2, r6, #6
 800fdd4:	4332      	orrs	r2, r6
 800fdd6:	4666      	mov	r6, ip
 800fdd8:	4342      	muls	r2, r0
 800fdda:	4377      	muls	r7, r6
 800fddc:	19d2      	adds	r2, r2, r7
 800fdde:	116f      	asrs	r7, r5, #5
 800fde0:	433d      	orrs	r5, r7
 800fde2:	b2db      	uxtb	r3, r3
 800fde4:	4373      	muls	r3, r6
 800fde6:	4345      	muls	r5, r0
 800fde8:	b289      	uxth	r1, r1
 800fdea:	18ed      	adds	r5, r5, r3
 800fdec:	1c4b      	adds	r3, r1, #1
 800fdee:	1209      	asrs	r1, r1, #8
 800fdf0:	1859      	adds	r1, r3, r1
 800fdf2:	23ff      	movs	r3, #255	@ 0xff
 800fdf4:	b292      	uxth	r2, r2
 800fdf6:	021b      	lsls	r3, r3, #8
 800fdf8:	b2ad      	uxth	r5, r5
 800fdfa:	4019      	ands	r1, r3
 800fdfc:	1c53      	adds	r3, r2, #1
 800fdfe:	1212      	asrs	r2, r2, #8
 800fe00:	1c6e      	adds	r6, r5, #1
 800fe02:	189a      	adds	r2, r3, r2
 800fe04:	122d      	asrs	r5, r5, #8
 800fe06:	23ff      	movs	r3, #255	@ 0xff
 800fe08:	1976      	adds	r6, r6, r5
 800fe0a:	25fc      	movs	r5, #252	@ 0xfc
 800fe0c:	0436      	lsls	r6, r6, #16
 800fe0e:	0ac9      	lsrs	r1, r1, #11
 800fe10:	0952      	lsrs	r2, r2, #5
 800fe12:	00db      	lsls	r3, r3, #3
 800fe14:	0ef6      	lsrs	r6, r6, #27
 800fe16:	02c9      	lsls	r1, r1, #11
 800fe18:	401a      	ands	r2, r3
 800fe1a:	00ed      	lsls	r5, r5, #3
 800fe1c:	430e      	orrs	r6, r1
 800fe1e:	402a      	ands	r2, r5
 800fe20:	4316      	orrs	r6, r2
 800fe22:	8026      	strh	r6, [r4, #0]
 800fe24:	e767      	b.n	800fcf6 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfe>
 800fe26:	4b36      	ldr	r3, [pc, #216]	@ (800ff00 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x308>)
 800fe28:	9a01      	ldr	r2, [sp, #4]
 800fe2a:	881b      	ldrh	r3, [r3, #0]
 800fe2c:	1a9b      	subs	r3, r3, r2
 800fe2e:	005b      	lsls	r3, r3, #1
 800fe30:	18e4      	adds	r4, r4, r3
 800fe32:	ab0a      	add	r3, sp, #40	@ 0x28
 800fe34:	2204      	movs	r2, #4
 800fe36:	5e9b      	ldrsh	r3, [r3, r2]
 800fe38:	9a01      	ldr	r2, [sp, #4]
 800fe3a:	1a9b      	subs	r3, r3, r2
 800fe3c:	9a00      	ldr	r2, [sp, #0]
 800fe3e:	18d3      	adds	r3, r2, r3
 800fe40:	9300      	str	r3, [sp, #0]
 800fe42:	e735      	b.n	800fcb0 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 800fe44:	2007      	movs	r0, #7
 800fe46:	8825      	ldrh	r5, [r4, #0]
 800fe48:	1229      	asrs	r1, r5, #8
 800fe4a:	4381      	bics	r1, r0
 800fe4c:	3804      	subs	r0, #4
 800fe4e:	10ee      	asrs	r6, r5, #3
 800fe50:	4085      	lsls	r5, r0
 800fe52:	4386      	bics	r6, r0
 800fe54:	b2e8      	uxtb	r0, r5
 800fe56:	9006      	str	r0, [sp, #24]
 800fe58:	9802      	ldr	r0, [sp, #8]
 800fe5a:	b2f6      	uxtb	r6, r6
 800fe5c:	4342      	muls	r2, r0
 800fe5e:	1c50      	adds	r0, r2, #1
 800fe60:	1212      	asrs	r2, r2, #8
 800fe62:	1880      	adds	r0, r0, r2
 800fe64:	1200      	asrs	r0, r0, #8
 800fe66:	b282      	uxth	r2, r0
 800fe68:	4694      	mov	ip, r2
 800fe6a:	43c0      	mvns	r0, r0
 800fe6c:	4665      	mov	r5, ip
 800fe6e:	114a      	asrs	r2, r1, #5
 800fe70:	4311      	orrs	r1, r2
 800fe72:	0c1a      	lsrs	r2, r3, #16
 800fe74:	b2c0      	uxtb	r0, r0
 800fe76:	b2d2      	uxtb	r2, r2
 800fe78:	436a      	muls	r2, r5
 800fe7a:	4341      	muls	r1, r0
 800fe7c:	1889      	adds	r1, r1, r2
 800fe7e:	11b2      	asrs	r2, r6, #6
 800fe80:	4332      	orrs	r2, r6
 800fe82:	466d      	mov	r5, sp
 800fe84:	2624      	movs	r6, #36	@ 0x24
 800fe86:	19ad      	adds	r5, r5, r6
 800fe88:	782e      	ldrb	r6, [r5, #0]
 800fe8a:	4665      	mov	r5, ip
 800fe8c:	4342      	muls	r2, r0
 800fe8e:	436e      	muls	r6, r5
 800fe90:	9d06      	ldr	r5, [sp, #24]
 800fe92:	1992      	adds	r2, r2, r6
 800fe94:	116e      	asrs	r6, r5, #5
 800fe96:	4335      	orrs	r5, r6
 800fe98:	4345      	muls	r5, r0
 800fe9a:	4660      	mov	r0, ip
 800fe9c:	b2db      	uxtb	r3, r3
 800fe9e:	4343      	muls	r3, r0
 800fea0:	18ed      	adds	r5, r5, r3
 800fea2:	23ff      	movs	r3, #255	@ 0xff
 800fea4:	b289      	uxth	r1, r1
 800fea6:	b2ad      	uxth	r5, r5
 800fea8:	1c4e      	adds	r6, r1, #1
 800feaa:	1209      	asrs	r1, r1, #8
 800feac:	1876      	adds	r6, r6, r1
 800feae:	021b      	lsls	r3, r3, #8
 800feb0:	1c69      	adds	r1, r5, #1
 800feb2:	122d      	asrs	r5, r5, #8
 800feb4:	b292      	uxth	r2, r2
 800feb6:	401e      	ands	r6, r3
 800feb8:	194d      	adds	r5, r1, r5
 800feba:	1c53      	adds	r3, r2, #1
 800febc:	0af6      	lsrs	r6, r6, #11
 800febe:	042d      	lsls	r5, r5, #16
 800fec0:	1212      	asrs	r2, r2, #8
 800fec2:	0eed      	lsrs	r5, r5, #27
 800fec4:	189a      	adds	r2, r3, r2
 800fec6:	02f6      	lsls	r6, r6, #11
 800fec8:	23ff      	movs	r3, #255	@ 0xff
 800feca:	432e      	orrs	r6, r5
 800fecc:	25fc      	movs	r5, #252	@ 0xfc
 800fece:	0952      	lsrs	r2, r2, #5
 800fed0:	00db      	lsls	r3, r3, #3
 800fed2:	401a      	ands	r2, r3
 800fed4:	00ed      	lsls	r5, r5, #3
 800fed6:	402a      	ands	r2, r5
 800fed8:	4316      	orrs	r6, r2
 800feda:	8026      	strh	r6, [r4, #0]
 800fedc:	e755      	b.n	800fd8a <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x192>
 800fede:	4b08      	ldr	r3, [pc, #32]	@ (800ff00 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x308>)
 800fee0:	9a01      	ldr	r2, [sp, #4]
 800fee2:	881b      	ldrh	r3, [r3, #0]
 800fee4:	1a9b      	subs	r3, r3, r2
 800fee6:	005b      	lsls	r3, r3, #1
 800fee8:	18e4      	adds	r4, r4, r3
 800feea:	e712      	b.n	800fd12 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x11a>
 800feec:	4b03      	ldr	r3, [pc, #12]	@ (800fefc <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x304>)
 800feee:	6818      	ldr	r0, [r3, #0]
 800fef0:	6803      	ldr	r3, [r0, #0]
 800fef2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fef4:	4798      	blx	r3
 800fef6:	b00f      	add	sp, #60	@ 0x3c
 800fef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fefa:	46c0      	nop			@ (mov r8, r8)
 800fefc:	20003578 	.word	0x20003578
 800ff00:	20003572 	.word	0x20003572

0800ff04 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 800ff04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff06:	b091      	sub	sp, #68	@ 0x44
 800ff08:	001d      	movs	r5, r3
 800ff0a:	ab16      	add	r3, sp, #88	@ 0x58
 800ff0c:	9205      	str	r2, [sp, #20]
 800ff0e:	cb04      	ldmia	r3!, {r2}
 800ff10:	0006      	movs	r6, r0
 800ff12:	781b      	ldrb	r3, [r3, #0]
 800ff14:	9101      	str	r1, [sp, #4]
 800ff16:	9202      	str	r2, [sp, #8]
 800ff18:	9303      	str	r3, [sp, #12]
 800ff1a:	2b00      	cmp	r3, #0
 800ff1c:	d100      	bne.n	800ff20 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1c>
 800ff1e:	e194      	b.n	801024a <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x346>
 800ff20:	af0c      	add	r7, sp, #48	@ 0x30
 800ff22:	ac0e      	add	r4, sp, #56	@ 0x38
 800ff24:	0029      	movs	r1, r5
 800ff26:	2208      	movs	r2, #8
 800ff28:	0038      	movs	r0, r7
 800ff2a:	f002 ff24 	bl	8012d76 <memcpy>
 800ff2e:	2208      	movs	r2, #8
 800ff30:	9902      	ldr	r1, [sp, #8]
 800ff32:	0020      	movs	r0, r4
 800ff34:	f002 ff1f 	bl	8012d76 <memcpy>
 800ff38:	0038      	movs	r0, r7
 800ff3a:	f7fa fea3 	bl	800ac84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ff3e:	0020      	movs	r0, r4
 800ff40:	0029      	movs	r1, r5
 800ff42:	f7fa fec7 	bl	800acd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ff46:	2302      	movs	r3, #2
 800ff48:	5ee2      	ldrsh	r2, [r4, r3]
 800ff4a:	2300      	movs	r3, #0
 800ff4c:	5ee1      	ldrsh	r1, [r4, r3]
 800ff4e:	2004      	movs	r0, #4
 800ff50:	5e3b      	ldrsh	r3, [r7, r0]
 800ff52:	9801      	ldr	r0, [sp, #4]
 800ff54:	4353      	muls	r3, r2
 800ff56:	185b      	adds	r3, r3, r1
 800ff58:	18c3      	adds	r3, r0, r3
 800ff5a:	9301      	str	r3, [sp, #4]
 800ff5c:	883b      	ldrh	r3, [r7, #0]
 800ff5e:	185b      	adds	r3, r3, r1
 800ff60:	8023      	strh	r3, [r4, #0]
 800ff62:	887b      	ldrh	r3, [r7, #2]
 800ff64:	189b      	adds	r3, r3, r2
 800ff66:	8063      	strh	r3, [r4, #2]
 800ff68:	2204      	movs	r2, #4
 800ff6a:	5ea3      	ldrsh	r3, [r4, r2]
 800ff6c:	9302      	str	r3, [sp, #8]
 800ff6e:	2306      	movs	r3, #6
 800ff70:	5ee5      	ldrsh	r5, [r4, r3]
 800ff72:	4bb7      	ldr	r3, [pc, #732]	@ (8010250 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x34c>)
 800ff74:	6818      	ldr	r0, [r3, #0]
 800ff76:	6803      	ldr	r3, [r0, #0]
 800ff78:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ff7a:	4798      	blx	r3
 800ff7c:	4bb5      	ldr	r3, [pc, #724]	@ (8010254 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x350>)
 800ff7e:	881a      	ldrh	r2, [r3, #0]
 800ff80:	2102      	movs	r1, #2
 800ff82:	5e63      	ldrsh	r3, [r4, r1]
 800ff84:	4355      	muls	r5, r2
 800ff86:	4353      	muls	r3, r2
 800ff88:	2100      	movs	r1, #0
 800ff8a:	5e64      	ldrsh	r4, [r4, r1]
 800ff8c:	006d      	lsls	r5, r5, #1
 800ff8e:	191c      	adds	r4, r3, r4
 800ff90:	0064      	lsls	r4, r4, #1
 800ff92:	1904      	adds	r4, r0, r4
 800ff94:	1963      	adds	r3, r4, r5
 800ff96:	9304      	str	r3, [sp, #16]
 800ff98:	9b05      	ldr	r3, [sp, #20]
 800ff9a:	68f0      	ldr	r0, [r6, #12]
 800ff9c:	3304      	adds	r3, #4
 800ff9e:	9305      	str	r3, [sp, #20]
 800ffa0:	6803      	ldr	r3, [r0, #0]
 800ffa2:	9901      	ldr	r1, [sp, #4]
 800ffa4:	689b      	ldr	r3, [r3, #8]
 800ffa6:	4798      	blx	r3
 800ffa8:	2800      	cmp	r0, #0
 800ffaa:	d075      	beq.n	8010098 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>
 800ffac:	68f0      	ldr	r0, [r6, #12]
 800ffae:	9905      	ldr	r1, [sp, #20]
 800ffb0:	6803      	ldr	r3, [r0, #0]
 800ffb2:	689b      	ldr	r3, [r3, #8]
 800ffb4:	4798      	blx	r3
 800ffb6:	2800      	cmp	r0, #0
 800ffb8:	d06e      	beq.n	8010098 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>
 800ffba:	9b02      	ldr	r3, [sp, #8]
 800ffbc:	005b      	lsls	r3, r3, #1
 800ffbe:	9306      	str	r3, [sp, #24]
 800ffc0:	9b03      	ldr	r3, [sp, #12]
 800ffc2:	43db      	mvns	r3, r3
 800ffc4:	b2db      	uxtb	r3, r3
 800ffc6:	9307      	str	r3, [sp, #28]
 800ffc8:	9b03      	ldr	r3, [sp, #12]
 800ffca:	2bff      	cmp	r3, #255	@ 0xff
 800ffcc:	d052      	beq.n	8010074 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x170>
 800ffce:	2303      	movs	r3, #3
 800ffd0:	469c      	mov	ip, r3
 800ffd2:	9b04      	ldr	r3, [sp, #16]
 800ffd4:	42a3      	cmp	r3, r4
 800ffd6:	d800      	bhi.n	800ffda <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xd6>
 800ffd8:	e132      	b.n	8010240 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x33c>
 800ffda:	9b06      	ldr	r3, [sp, #24]
 800ffdc:	18e3      	adds	r3, r4, r3
 800ffde:	9308      	str	r3, [sp, #32]
 800ffe0:	9b08      	ldr	r3, [sp, #32]
 800ffe2:	42a3      	cmp	r3, r4
 800ffe4:	d800      	bhi.n	800ffe8 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xe4>
 800ffe6:	e08c      	b.n	8010102 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fe>
 800ffe8:	9b01      	ldr	r3, [sp, #4]
 800ffea:	9a05      	ldr	r2, [sp, #20]
 800ffec:	781b      	ldrb	r3, [r3, #0]
 800ffee:	2607      	movs	r6, #7
 800fff0:	005b      	lsls	r3, r3, #1
 800fff2:	5a9b      	ldrh	r3, [r3, r2]
 800fff4:	466a      	mov	r2, sp
 800fff6:	8825      	ldrh	r5, [r4, #0]
 800fff8:	8997      	ldrh	r7, [r2, #12]
 800fffa:	8b90      	ldrh	r0, [r2, #28]
 800fffc:	1219      	asrs	r1, r3, #8
 800fffe:	122a      	asrs	r2, r5, #8
 8010000:	43b1      	bics	r1, r6
 8010002:	43b2      	bics	r2, r6
 8010004:	4666      	mov	r6, ip
 8010006:	4342      	muls	r2, r0
 8010008:	4379      	muls	r1, r7
 801000a:	1889      	adds	r1, r1, r2
 801000c:	10da      	asrs	r2, r3, #3
 801000e:	43b2      	bics	r2, r6
 8010010:	b2d2      	uxtb	r2, r2
 8010012:	437a      	muls	r2, r7
 8010014:	9209      	str	r2, [sp, #36]	@ 0x24
 8010016:	4662      	mov	r2, ip
 8010018:	10ee      	asrs	r6, r5, #3
 801001a:	4396      	bics	r6, r2
 801001c:	00db      	lsls	r3, r3, #3
 801001e:	00ed      	lsls	r5, r5, #3
 8010020:	b2f6      	uxtb	r6, r6
 8010022:	b2db      	uxtb	r3, r3
 8010024:	b2ed      	uxtb	r5, r5
 8010026:	4346      	muls	r6, r0
 8010028:	437b      	muls	r3, r7
 801002a:	4368      	muls	r0, r5
 801002c:	b289      	uxth	r1, r1
 801002e:	181b      	adds	r3, r3, r0
 8010030:	1c48      	adds	r0, r1, #1
 8010032:	1209      	asrs	r1, r1, #8
 8010034:	1841      	adds	r1, r0, r1
 8010036:	20ff      	movs	r0, #255	@ 0xff
 8010038:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801003a:	b29b      	uxth	r3, r3
 801003c:	1992      	adds	r2, r2, r6
 801003e:	0200      	lsls	r0, r0, #8
 8010040:	1c5e      	adds	r6, r3, #1
 8010042:	121b      	asrs	r3, r3, #8
 8010044:	4001      	ands	r1, r0
 8010046:	18f3      	adds	r3, r6, r3
 8010048:	0ac9      	lsrs	r1, r1, #11
 801004a:	041b      	lsls	r3, r3, #16
 801004c:	b292      	uxth	r2, r2
 801004e:	0edb      	lsrs	r3, r3, #27
 8010050:	02c9      	lsls	r1, r1, #11
 8010052:	4319      	orrs	r1, r3
 8010054:	1c53      	adds	r3, r2, #1
 8010056:	1212      	asrs	r2, r2, #8
 8010058:	189a      	adds	r2, r3, r2
 801005a:	23ff      	movs	r3, #255	@ 0xff
 801005c:	0952      	lsrs	r2, r2, #5
 801005e:	00db      	lsls	r3, r3, #3
 8010060:	401a      	ands	r2, r3
 8010062:	3b18      	subs	r3, #24
 8010064:	401a      	ands	r2, r3
 8010066:	9b01      	ldr	r3, [sp, #4]
 8010068:	4311      	orrs	r1, r2
 801006a:	3301      	adds	r3, #1
 801006c:	8021      	strh	r1, [r4, #0]
 801006e:	9301      	str	r3, [sp, #4]
 8010070:	3402      	adds	r4, #2
 8010072:	e7b5      	b.n	800ffe0 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xdc>
 8010074:	003b      	movs	r3, r7
 8010076:	9a04      	ldr	r2, [sp, #16]
 8010078:	42a2      	cmp	r2, r4
 801007a:	d800      	bhi.n	801007e <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17a>
 801007c:	e0e0      	b.n	8010240 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x33c>
 801007e:	9a06      	ldr	r2, [sp, #24]
 8010080:	9e01      	ldr	r6, [sp, #4]
 8010082:	18a2      	adds	r2, r4, r2
 8010084:	42a2      	cmp	r2, r4
 8010086:	d94b      	bls.n	8010120 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x21c>
 8010088:	7831      	ldrb	r1, [r6, #0]
 801008a:	9805      	ldr	r0, [sp, #20]
 801008c:	0049      	lsls	r1, r1, #1
 801008e:	5a09      	ldrh	r1, [r1, r0]
 8010090:	3601      	adds	r6, #1
 8010092:	8021      	strh	r1, [r4, #0]
 8010094:	3402      	adds	r4, #2
 8010096:	e7f5      	b.n	8010084 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x180>
 8010098:	9b02      	ldr	r3, [sp, #8]
 801009a:	68f0      	ldr	r0, [r6, #12]
 801009c:	005b      	lsls	r3, r3, #1
 801009e:	9308      	str	r3, [sp, #32]
 80100a0:	9a03      	ldr	r2, [sp, #12]
 80100a2:	6803      	ldr	r3, [r0, #0]
 80100a4:	691b      	ldr	r3, [r3, #16]
 80100a6:	2aff      	cmp	r2, #255	@ 0xff
 80100a8:	d147      	bne.n	801013a <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x236>
 80100aa:	9a02      	ldr	r2, [sp, #8]
 80100ac:	9901      	ldr	r1, [sp, #4]
 80100ae:	4798      	blx	r3
 80100b0:	9b04      	ldr	r3, [sp, #16]
 80100b2:	42a3      	cmp	r3, r4
 80100b4:	d800      	bhi.n	80100b8 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>
 80100b6:	e0c3      	b.n	8010240 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x33c>
 80100b8:	68f0      	ldr	r0, [r6, #12]
 80100ba:	6803      	ldr	r3, [r0, #0]
 80100bc:	695b      	ldr	r3, [r3, #20]
 80100be:	4798      	blx	r3
 80100c0:	4b64      	ldr	r3, [pc, #400]	@ (8010254 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x350>)
 80100c2:	9a04      	ldr	r2, [sp, #16]
 80100c4:	881b      	ldrh	r3, [r3, #0]
 80100c6:	0005      	movs	r5, r0
 80100c8:	005b      	lsls	r3, r3, #1
 80100ca:	18e3      	adds	r3, r4, r3
 80100cc:	429a      	cmp	r2, r3
 80100ce:	d90b      	bls.n	80100e8 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e4>
 80100d0:	ab0c      	add	r3, sp, #48	@ 0x30
 80100d2:	2204      	movs	r2, #4
 80100d4:	5e9b      	ldrsh	r3, [r3, r2]
 80100d6:	9a01      	ldr	r2, [sp, #4]
 80100d8:	68f0      	ldr	r0, [r6, #12]
 80100da:	18d3      	adds	r3, r2, r3
 80100dc:	9301      	str	r3, [sp, #4]
 80100de:	6803      	ldr	r3, [r0, #0]
 80100e0:	9a02      	ldr	r2, [sp, #8]
 80100e2:	691b      	ldr	r3, [r3, #16]
 80100e4:	9901      	ldr	r1, [sp, #4]
 80100e6:	4798      	blx	r3
 80100e8:	9b08      	ldr	r3, [sp, #32]
 80100ea:	18e2      	adds	r2, r4, r3
 80100ec:	42a2      	cmp	r2, r4
 80100ee:	d800      	bhi.n	80100f2 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ee>
 80100f0:	e09f      	b.n	8010232 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x32e>
 80100f2:	782b      	ldrb	r3, [r5, #0]
 80100f4:	9905      	ldr	r1, [sp, #20]
 80100f6:	005b      	lsls	r3, r3, #1
 80100f8:	5a5b      	ldrh	r3, [r3, r1]
 80100fa:	3501      	adds	r5, #1
 80100fc:	8023      	strh	r3, [r4, #0]
 80100fe:	3402      	adds	r4, #2
 8010100:	e7f4      	b.n	80100ec <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e8>
 8010102:	4b54      	ldr	r3, [pc, #336]	@ (8010254 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x350>)
 8010104:	8818      	ldrh	r0, [r3, #0]
 8010106:	9b02      	ldr	r3, [sp, #8]
 8010108:	1ac0      	subs	r0, r0, r3
 801010a:	ab0c      	add	r3, sp, #48	@ 0x30
 801010c:	2204      	movs	r2, #4
 801010e:	5e9b      	ldrsh	r3, [r3, r2]
 8010110:	9a02      	ldr	r2, [sp, #8]
 8010112:	0040      	lsls	r0, r0, #1
 8010114:	1a9b      	subs	r3, r3, r2
 8010116:	9a01      	ldr	r2, [sp, #4]
 8010118:	1824      	adds	r4, r4, r0
 801011a:	18d3      	adds	r3, r2, r3
 801011c:	9301      	str	r3, [sp, #4]
 801011e:	e758      	b.n	800ffd2 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xce>
 8010120:	4a4c      	ldr	r2, [pc, #304]	@ (8010254 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x350>)
 8010122:	8810      	ldrh	r0, [r2, #0]
 8010124:	9a02      	ldr	r2, [sp, #8]
 8010126:	1a80      	subs	r0, r0, r2
 8010128:	2104      	movs	r1, #4
 801012a:	5e5a      	ldrsh	r2, [r3, r1]
 801012c:	9902      	ldr	r1, [sp, #8]
 801012e:	0040      	lsls	r0, r0, #1
 8010130:	1a52      	subs	r2, r2, r1
 8010132:	18b2      	adds	r2, r6, r2
 8010134:	1824      	adds	r4, r4, r0
 8010136:	9201      	str	r2, [sp, #4]
 8010138:	e79d      	b.n	8010076 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x172>
 801013a:	9a02      	ldr	r2, [sp, #8]
 801013c:	9901      	ldr	r1, [sp, #4]
 801013e:	4798      	blx	r3
 8010140:	9b03      	ldr	r3, [sp, #12]
 8010142:	43db      	mvns	r3, r3
 8010144:	b2db      	uxtb	r3, r3
 8010146:	9309      	str	r3, [sp, #36]	@ 0x24
 8010148:	9b04      	ldr	r3, [sp, #16]
 801014a:	42a3      	cmp	r3, r4
 801014c:	d978      	bls.n	8010240 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x33c>
 801014e:	68f0      	ldr	r0, [r6, #12]
 8010150:	6803      	ldr	r3, [r0, #0]
 8010152:	695b      	ldr	r3, [r3, #20]
 8010154:	4798      	blx	r3
 8010156:	4b3f      	ldr	r3, [pc, #252]	@ (8010254 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x350>)
 8010158:	9a04      	ldr	r2, [sp, #16]
 801015a:	881b      	ldrh	r3, [r3, #0]
 801015c:	9006      	str	r0, [sp, #24]
 801015e:	005b      	lsls	r3, r3, #1
 8010160:	18e3      	adds	r3, r4, r3
 8010162:	429a      	cmp	r2, r3
 8010164:	d90b      	bls.n	801017e <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x27a>
 8010166:	ab0c      	add	r3, sp, #48	@ 0x30
 8010168:	2204      	movs	r2, #4
 801016a:	5e9b      	ldrsh	r3, [r3, r2]
 801016c:	9a01      	ldr	r2, [sp, #4]
 801016e:	68f0      	ldr	r0, [r6, #12]
 8010170:	18d3      	adds	r3, r2, r3
 8010172:	9301      	str	r3, [sp, #4]
 8010174:	6803      	ldr	r3, [r0, #0]
 8010176:	9a02      	ldr	r2, [sp, #8]
 8010178:	691b      	ldr	r3, [r3, #16]
 801017a:	9901      	ldr	r1, [sp, #4]
 801017c:	4798      	blx	r3
 801017e:	9b08      	ldr	r3, [sp, #32]
 8010180:	18e3      	adds	r3, r4, r3
 8010182:	930a      	str	r3, [sp, #40]	@ 0x28
 8010184:	23ff      	movs	r3, #255	@ 0xff
 8010186:	00db      	lsls	r3, r3, #3
 8010188:	469c      	mov	ip, r3
 801018a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801018c:	42a3      	cmp	r3, r4
 801018e:	d949      	bls.n	8010224 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x320>
 8010190:	9b06      	ldr	r3, [sp, #24]
 8010192:	9a05      	ldr	r2, [sp, #20]
 8010194:	781b      	ldrb	r3, [r3, #0]
 8010196:	8825      	ldrh	r5, [r4, #0]
 8010198:	005b      	lsls	r3, r3, #1
 801019a:	5a9b      	ldrh	r3, [r3, r2]
 801019c:	2207      	movs	r2, #7
 801019e:	9307      	str	r3, [sp, #28]
 80101a0:	466b      	mov	r3, sp
 80101a2:	899f      	ldrh	r7, [r3, #12]
 80101a4:	8c98      	ldrh	r0, [r3, #36]	@ 0x24
 80101a6:	9b07      	ldr	r3, [sp, #28]
 80101a8:	1219      	asrs	r1, r3, #8
 80101aa:	0013      	movs	r3, r2
 80101ac:	4391      	bics	r1, r2
 80101ae:	122a      	asrs	r2, r5, #8
 80101b0:	439a      	bics	r2, r3
 80101b2:	4342      	muls	r2, r0
 80101b4:	4379      	muls	r1, r7
 80101b6:	9b07      	ldr	r3, [sp, #28]
 80101b8:	1889      	adds	r1, r1, r2
 80101ba:	10da      	asrs	r2, r3, #3
 80101bc:	2303      	movs	r3, #3
 80101be:	439a      	bics	r2, r3
 80101c0:	b2d2      	uxtb	r2, r2
 80101c2:	437a      	muls	r2, r7
 80101c4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80101c6:	10ea      	asrs	r2, r5, #3
 80101c8:	439a      	bics	r2, r3
 80101ca:	b2d3      	uxtb	r3, r2
 80101cc:	4343      	muls	r3, r0
 80101ce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80101d0:	00ed      	lsls	r5, r5, #3
 80101d2:	18d2      	adds	r2, r2, r3
 80101d4:	9b07      	ldr	r3, [sp, #28]
 80101d6:	b2ed      	uxtb	r5, r5
 80101d8:	00db      	lsls	r3, r3, #3
 80101da:	b2db      	uxtb	r3, r3
 80101dc:	4368      	muls	r0, r5
 80101de:	437b      	muls	r3, r7
 80101e0:	b289      	uxth	r1, r1
 80101e2:	181b      	adds	r3, r3, r0
 80101e4:	1c48      	adds	r0, r1, #1
 80101e6:	1209      	asrs	r1, r1, #8
 80101e8:	1841      	adds	r1, r0, r1
 80101ea:	20ff      	movs	r0, #255	@ 0xff
 80101ec:	b29b      	uxth	r3, r3
 80101ee:	0200      	lsls	r0, r0, #8
 80101f0:	4001      	ands	r1, r0
 80101f2:	1c58      	adds	r0, r3, #1
 80101f4:	121b      	asrs	r3, r3, #8
 80101f6:	18c3      	adds	r3, r0, r3
 80101f8:	0ac9      	lsrs	r1, r1, #11
 80101fa:	041b      	lsls	r3, r3, #16
 80101fc:	b292      	uxth	r2, r2
 80101fe:	0edb      	lsrs	r3, r3, #27
 8010200:	02c9      	lsls	r1, r1, #11
 8010202:	4319      	orrs	r1, r3
 8010204:	1c53      	adds	r3, r2, #1
 8010206:	1212      	asrs	r2, r2, #8
 8010208:	189a      	adds	r2, r3, r2
 801020a:	4663      	mov	r3, ip
 801020c:	0952      	lsrs	r2, r2, #5
 801020e:	401a      	ands	r2, r3
 8010210:	23fc      	movs	r3, #252	@ 0xfc
 8010212:	00db      	lsls	r3, r3, #3
 8010214:	401a      	ands	r2, r3
 8010216:	9b06      	ldr	r3, [sp, #24]
 8010218:	4311      	orrs	r1, r2
 801021a:	3301      	adds	r3, #1
 801021c:	8021      	strh	r1, [r4, #0]
 801021e:	9306      	str	r3, [sp, #24]
 8010220:	3402      	adds	r4, #2
 8010222:	e7b2      	b.n	801018a <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x286>
 8010224:	4b0b      	ldr	r3, [pc, #44]	@ (8010254 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x350>)
 8010226:	8818      	ldrh	r0, [r3, #0]
 8010228:	9b02      	ldr	r3, [sp, #8]
 801022a:	1ac0      	subs	r0, r0, r3
 801022c:	0040      	lsls	r0, r0, #1
 801022e:	1824      	adds	r4, r4, r0
 8010230:	e78a      	b.n	8010148 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x244>
 8010232:	4b08      	ldr	r3, [pc, #32]	@ (8010254 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x350>)
 8010234:	9a02      	ldr	r2, [sp, #8]
 8010236:	881b      	ldrh	r3, [r3, #0]
 8010238:	1a9b      	subs	r3, r3, r2
 801023a:	005b      	lsls	r3, r3, #1
 801023c:	18e4      	adds	r4, r4, r3
 801023e:	e737      	b.n	80100b0 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>
 8010240:	4b03      	ldr	r3, [pc, #12]	@ (8010250 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x34c>)
 8010242:	6818      	ldr	r0, [r3, #0]
 8010244:	6803      	ldr	r3, [r0, #0]
 8010246:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010248:	4798      	blx	r3
 801024a:	b011      	add	sp, #68	@ 0x44
 801024c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801024e:	46c0      	nop			@ (mov r8, r8)
 8010250:	20003578 	.word	0x20003578
 8010254:	20003572 	.word	0x20003572

08010258 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8010258:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801025a:	0004      	movs	r4, r0
 801025c:	a808      	add	r0, sp, #32
 801025e:	c820      	ldmia	r0!, {r5}
 8010260:	7817      	ldrb	r7, [r2, #0]
 8010262:	7806      	ldrb	r6, [r0, #0]
 8010264:	7850      	ldrb	r0, [r2, #1]
 8010266:	2f00      	cmp	r7, #0
 8010268:	d01c      	beq.n	80102a4 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x4c>
 801026a:	2f02      	cmp	r7, #2
 801026c:	d10a      	bne.n	8010284 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2c>
 801026e:	2803      	cmp	r0, #3
 8010270:	d808      	bhi.n	8010284 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2c>
 8010272:	f7ef ff59 	bl	8000128 <__gnu_thumb1_case_uqi>
 8010276:	0802      	.short	0x0802
 8010278:	1412      	.short	0x1412
 801027a:	9601      	str	r6, [sp, #4]
 801027c:	9500      	str	r5, [sp, #0]
 801027e:	0020      	movs	r0, r4
 8010280:	f7ff fe40 	bl	800ff04 <_ZN8touchgfx19LCD16bppSerialFlash17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8010284:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8010286:	3404      	adds	r4, #4
 8010288:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 801028a:	2800      	cmp	r0, #0
 801028c:	d0fa      	beq.n	8010284 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2c>
 801028e:	6804      	ldr	r4, [r0, #0]
 8010290:	9601      	str	r6, [sp, #4]
 8010292:	9500      	str	r5, [sp, #0]
 8010294:	68a4      	ldr	r4, [r4, #8]
 8010296:	47a0      	blx	r4
 8010298:	e7f4      	b.n	8010284 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2c>
 801029a:	3408      	adds	r4, #8
 801029c:	e7f4      	b.n	8010288 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 801029e:	3488      	adds	r4, #136	@ 0x88
 80102a0:	6820      	ldr	r0, [r4, #0]
 80102a2:	e7f2      	b.n	801028a <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x32>
 80102a4:	2803      	cmp	r0, #3
 80102a6:	d8ed      	bhi.n	8010284 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2c>
 80102a8:	f7ef ff3e 	bl	8000128 <__gnu_thumb1_case_uqi>
 80102ac:	13110802 	.word	0x13110802
 80102b0:	9601      	str	r6, [sp, #4]
 80102b2:	9500      	str	r5, [sp, #0]
 80102b4:	0020      	movs	r0, r4
 80102b6:	f7ff fc9f 	bl	800fbf8 <_ZN8touchgfx19LCD16bppSerialFlash19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80102ba:	e7e3      	b.n	8010284 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2c>
 80102bc:	3404      	adds	r4, #4
 80102be:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 80102c0:	2800      	cmp	r0, #0
 80102c2:	d0df      	beq.n	8010284 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2c>
 80102c4:	6804      	ldr	r4, [r0, #0]
 80102c6:	9601      	str	r6, [sp, #4]
 80102c8:	9500      	str	r5, [sp, #0]
 80102ca:	68e4      	ldr	r4, [r4, #12]
 80102cc:	e7e3      	b.n	8010296 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3e>
 80102ce:	3408      	adds	r4, #8
 80102d0:	e7f5      	b.n	80102be <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x66>
 80102d2:	3488      	adds	r4, #136	@ 0x88
 80102d4:	6820      	ldr	r0, [r4, #0]
 80102d6:	e7f3      	b.n	80102c0 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x68>

080102d8 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80102d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80102da:	b08d      	sub	sp, #52	@ 0x34
 80102dc:	9305      	str	r3, [sp, #20]
 80102de:	ab12      	add	r3, sp, #72	@ 0x48
 80102e0:	cb10      	ldmia	r3!, {r4}
 80102e2:	0005      	movs	r5, r0
 80102e4:	781b      	ldrb	r3, [r3, #0]
 80102e6:	9103      	str	r1, [sp, #12]
 80102e8:	9204      	str	r2, [sp, #16]
 80102ea:	9302      	str	r3, [sp, #8]
 80102ec:	2b00      	cmp	r3, #0
 80102ee:	d03f      	beq.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 80102f0:	0008      	movs	r0, r1
 80102f2:	f7fe f9d5 	bl	800e6a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80102f6:	0006      	movs	r6, r0
 80102f8:	9803      	ldr	r0, [sp, #12]
 80102fa:	f7fe fa09 	bl	800e710 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80102fe:	9b04      	ldr	r3, [sp, #16]
 8010300:	af06      	add	r7, sp, #24
 8010302:	803b      	strh	r3, [r7, #0]
 8010304:	9b05      	ldr	r3, [sp, #20]
 8010306:	80f8      	strh	r0, [r7, #6]
 8010308:	9803      	ldr	r0, [sp, #12]
 801030a:	80be      	strh	r6, [r7, #4]
 801030c:	807b      	strh	r3, [r7, #2]
 801030e:	f7fe fabf 	bl	800e890 <_ZNK8touchgfx6Bitmap7getDataEv>
 8010312:	0006      	movs	r6, r0
 8010314:	9803      	ldr	r0, [sp, #12]
 8010316:	f7fe fb43 	bl	800e9a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801031a:	2810      	cmp	r0, #16
 801031c:	d828      	bhi.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 801031e:	f7ef ff17 	bl	8000150 <__gnu_thumb1_case_uhi>
 8010322:	00c2      	.short	0x00c2
 8010324:	001100b9 	.word	0x001100b9
 8010328:	00270027 	.word	0x00270027
 801032c:	00270027 	.word	0x00270027
 8010330:	00270027 	.word	0x00270027
 8010334:	00270027 	.word	0x00270027
 8010338:	002700d0 	.word	0x002700d0
 801033c:	00eb0027 	.word	0x00eb0027
 8010340:	00dd0027 	.word	0x00dd0027
 8010344:	9b02      	ldr	r3, [sp, #8]
 8010346:	2bff      	cmp	r3, #255	@ 0xff
 8010348:	d007      	beq.n	801035a <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801034a:	9300      	str	r3, [sp, #0]
 801034c:	003a      	movs	r2, r7
 801034e:	0023      	movs	r3, r4
 8010350:	0031      	movs	r1, r6
 8010352:	0028      	movs	r0, r5
 8010354:	f7ff f874 	bl	800f440 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8010358:	e00a      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 801035a:	9803      	ldr	r0, [sp, #12]
 801035c:	f7fe fa60 	bl	800e820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8010360:	2800      	cmp	r0, #0
 8010362:	d107      	bne.n	8010374 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9c>
 8010364:	0023      	movs	r3, r4
 8010366:	003a      	movs	r2, r7
 8010368:	0031      	movs	r1, r6
 801036a:	0028      	movs	r0, r5
 801036c:	f7ff f9e0 	bl	800f730 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8010370:	b00d      	add	sp, #52	@ 0x34
 8010372:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010374:	af0a      	add	r7, sp, #40	@ 0x28
 8010376:	9903      	ldr	r1, [sp, #12]
 8010378:	0038      	movs	r0, r7
 801037a:	f7fe fa01 	bl	800e780 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801037e:	2208      	movs	r2, #8
 8010380:	0039      	movs	r1, r7
 8010382:	a808      	add	r0, sp, #32
 8010384:	f002 fcf7 	bl	8012d76 <memcpy>
 8010388:	a808      	add	r0, sp, #32
 801038a:	0021      	movs	r1, r4
 801038c:	f7f6 ff46 	bl	800721c <_ZN8touchgfx4RectaNERKS0_>
 8010390:	a808      	add	r0, sp, #32
 8010392:	f7f6 ff93 	bl	80072bc <_ZNK8touchgfx4Rect7isEmptyEv>
 8010396:	2800      	cmp	r0, #0
 8010398:	d004      	beq.n	80103a4 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xcc>
 801039a:	9b02      	ldr	r3, [sp, #8]
 801039c:	9300      	str	r3, [sp, #0]
 801039e:	0023      	movs	r3, r4
 80103a0:	aa06      	add	r2, sp, #24
 80103a2:	e7d5      	b.n	8010350 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x78>
 80103a4:	ab04      	add	r3, sp, #16
 80103a6:	2212      	movs	r2, #18
 80103a8:	5e9b      	ldrsh	r3, [r3, r2]
 80103aa:	2102      	movs	r1, #2
 80103ac:	5e62      	ldrsh	r2, [r4, r1]
 80103ae:	4293      	cmp	r3, r2
 80103b0:	dd12      	ble.n	80103d8 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 80103b2:	2100      	movs	r1, #0
 80103b4:	5e60      	ldrsh	r0, [r4, r1]
 80103b6:	1a9b      	subs	r3, r3, r2
 80103b8:	4684      	mov	ip, r0
 80103ba:	2004      	movs	r0, #4
 80103bc:	5e21      	ldrsh	r1, [r4, r0]
 80103be:	4660      	mov	r0, ip
 80103c0:	80fb      	strh	r3, [r7, #6]
 80103c2:	9b02      	ldr	r3, [sp, #8]
 80103c4:	8038      	strh	r0, [r7, #0]
 80103c6:	807a      	strh	r2, [r7, #2]
 80103c8:	80b9      	strh	r1, [r7, #4]
 80103ca:	aa06      	add	r2, sp, #24
 80103cc:	9300      	str	r3, [sp, #0]
 80103ce:	0031      	movs	r1, r6
 80103d0:	003b      	movs	r3, r7
 80103d2:	0028      	movs	r0, r5
 80103d4:	f7ff f834 	bl	800f440 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80103d8:	a908      	add	r1, sp, #32
 80103da:	2200      	movs	r2, #0
 80103dc:	5e8b      	ldrsh	r3, [r1, r2]
 80103de:	2000      	movs	r0, #0
 80103e0:	5e22      	ldrsh	r2, [r4, r0]
 80103e2:	469c      	mov	ip, r3
 80103e4:	4293      	cmp	r3, r2
 80103e6:	dd11      	ble.n	801040c <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x134>
 80103e8:	2302      	movs	r3, #2
 80103ea:	5ec8      	ldrsh	r0, [r1, r3]
 80103ec:	2306      	movs	r3, #6
 80103ee:	5ec9      	ldrsh	r1, [r1, r3]
 80103f0:	4663      	mov	r3, ip
 80103f2:	1a9b      	subs	r3, r3, r2
 80103f4:	80bb      	strh	r3, [r7, #4]
 80103f6:	23ff      	movs	r3, #255	@ 0xff
 80103f8:	803a      	strh	r2, [r7, #0]
 80103fa:	8078      	strh	r0, [r7, #2]
 80103fc:	80f9      	strh	r1, [r7, #6]
 80103fe:	aa06      	add	r2, sp, #24
 8010400:	9300      	str	r3, [sp, #0]
 8010402:	0031      	movs	r1, r6
 8010404:	003b      	movs	r3, r7
 8010406:	0028      	movs	r0, r5
 8010408:	f7ff f81a 	bl	800f440 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801040c:	af08      	add	r7, sp, #32
 801040e:	003b      	movs	r3, r7
 8010410:	aa06      	add	r2, sp, #24
 8010412:	0031      	movs	r1, r6
 8010414:	0028      	movs	r0, r5
 8010416:	f7ff f98b 	bl	800f730 <_ZN8touchgfx19LCD16bppSerialFlash21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801041a:	88a3      	ldrh	r3, [r4, #4]
 801041c:	8822      	ldrh	r2, [r4, #0]
 801041e:	8839      	ldrh	r1, [r7, #0]
 8010420:	18d2      	adds	r2, r2, r3
 8010422:	b293      	uxth	r3, r2
 8010424:	9302      	str	r3, [sp, #8]
 8010426:	88bb      	ldrh	r3, [r7, #4]
 8010428:	18c9      	adds	r1, r1, r3
 801042a:	9b02      	ldr	r3, [sp, #8]
 801042c:	b289      	uxth	r1, r1
 801042e:	b208      	sxth	r0, r1
 8010430:	b21b      	sxth	r3, r3
 8010432:	4283      	cmp	r3, r0
 8010434:	dd13      	ble.n	801045e <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x186>
 8010436:	2202      	movs	r2, #2
 8010438:	5ebb      	ldrsh	r3, [r7, r2]
 801043a:	9a02      	ldr	r2, [sp, #8]
 801043c:	469c      	mov	ip, r3
 801043e:	1a52      	subs	r2, r2, r1
 8010440:	2306      	movs	r3, #6
 8010442:	5eff      	ldrsh	r7, [r7, r3]
 8010444:	ab0a      	add	r3, sp, #40	@ 0x28
 8010446:	8018      	strh	r0, [r3, #0]
 8010448:	809a      	strh	r2, [r3, #4]
 801044a:	4660      	mov	r0, ip
 801044c:	22ff      	movs	r2, #255	@ 0xff
 801044e:	8058      	strh	r0, [r3, #2]
 8010450:	80df      	strh	r7, [r3, #6]
 8010452:	0031      	movs	r1, r6
 8010454:	9200      	str	r2, [sp, #0]
 8010456:	0028      	movs	r0, r5
 8010458:	aa06      	add	r2, sp, #24
 801045a:	f7fe fff1 	bl	800f440 <_ZN8touchgfx19LCD16bppSerialFlash16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801045e:	88e3      	ldrh	r3, [r4, #6]
 8010460:	8862      	ldrh	r2, [r4, #2]
 8010462:	18d2      	adds	r2, r2, r3
 8010464:	ab08      	add	r3, sp, #32
 8010466:	8859      	ldrh	r1, [r3, #2]
 8010468:	88db      	ldrh	r3, [r3, #6]
 801046a:	b292      	uxth	r2, r2
 801046c:	18c9      	adds	r1, r1, r3
 801046e:	b289      	uxth	r1, r1
 8010470:	b208      	sxth	r0, r1
 8010472:	b213      	sxth	r3, r2
 8010474:	4283      	cmp	r3, r0
 8010476:	dc00      	bgt.n	801047a <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a2>
 8010478:	e77a      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 801047a:	2300      	movs	r3, #0
 801047c:	5ee7      	ldrsh	r7, [r4, r3]
 801047e:	1a52      	subs	r2, r2, r1
 8010480:	2304      	movs	r3, #4
 8010482:	5ee4      	ldrsh	r4, [r4, r3]
 8010484:	ab0a      	add	r3, sp, #40	@ 0x28
 8010486:	80da      	strh	r2, [r3, #6]
 8010488:	22ff      	movs	r2, #255	@ 0xff
 801048a:	801f      	strh	r7, [r3, #0]
 801048c:	8058      	strh	r0, [r3, #2]
 801048e:	809c      	strh	r4, [r3, #4]
 8010490:	9200      	str	r2, [sp, #0]
 8010492:	e785      	b.n	80103a0 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 8010494:	9b02      	ldr	r3, [sp, #8]
 8010496:	003a      	movs	r2, r7
 8010498:	9300      	str	r3, [sp, #0]
 801049a:	0031      	movs	r1, r6
 801049c:	0023      	movs	r3, r4
 801049e:	0028      	movs	r0, r5
 80104a0:	f7ff fa04 	bl	800f8ac <_ZN8touchgfx19LCD16bppSerialFlash14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80104a4:	e764      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 80104a6:	2200      	movs	r2, #0
 80104a8:	682b      	ldr	r3, [r5, #0]
 80104aa:	9201      	str	r2, [sp, #4]
 80104ac:	9a02      	ldr	r2, [sp, #8]
 80104ae:	0031      	movs	r1, r6
 80104b0:	9200      	str	r2, [sp, #0]
 80104b2:	68db      	ldr	r3, [r3, #12]
 80104b4:	003a      	movs	r2, r7
 80104b6:	469c      	mov	ip, r3
 80104b8:	0028      	movs	r0, r5
 80104ba:	0023      	movs	r3, r4
 80104bc:	4664      	mov	r4, ip
 80104be:	47a0      	blx	r4
 80104c0:	e756      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 80104c2:	9803      	ldr	r0, [sp, #12]
 80104c4:	f7fe fa16 	bl	800e8f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80104c8:	9b02      	ldr	r3, [sp, #8]
 80104ca:	0002      	movs	r2, r0
 80104cc:	9301      	str	r3, [sp, #4]
 80104ce:	9400      	str	r4, [sp, #0]
 80104d0:	003b      	movs	r3, r7
 80104d2:	0031      	movs	r1, r6
 80104d4:	0028      	movs	r0, r5
 80104d6:	f7ff febf 	bl	8010258 <_ZN8touchgfx19LCD16bppSerialFlash10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80104da:	e749      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 80104dc:	358c      	adds	r5, #140	@ 0x8c
 80104de:	6828      	ldr	r0, [r5, #0]
 80104e0:	2800      	cmp	r0, #0
 80104e2:	d100      	bne.n	80104e6 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x20e>
 80104e4:	e744      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 80104e6:	9a02      	ldr	r2, [sp, #8]
 80104e8:	6803      	ldr	r3, [r0, #0]
 80104ea:	9200      	str	r2, [sp, #0]
 80104ec:	68dd      	ldr	r5, [r3, #12]
 80104ee:	0023      	movs	r3, r4
 80104f0:	003a      	movs	r2, r7
 80104f2:	0031      	movs	r1, r6
 80104f4:	47a8      	blx	r5
 80104f6:	e73b      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 80104f8:	358c      	adds	r5, #140	@ 0x8c
 80104fa:	6828      	ldr	r0, [r5, #0]
 80104fc:	2800      	cmp	r0, #0
 80104fe:	d100      	bne.n	8010502 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x22a>
 8010500:	e736      	b.n	8010370 <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x98>
 8010502:	9a02      	ldr	r2, [sp, #8]
 8010504:	6803      	ldr	r3, [r0, #0]
 8010506:	9200      	str	r2, [sp, #0]
 8010508:	689d      	ldr	r5, [r3, #8]
 801050a:	e7f0      	b.n	80104ee <_ZN8touchgfx19LCD16bppSerialFlash17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>

0801050c <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE>:
 801050c:	0003      	movs	r3, r0
 801050e:	b500      	push	{lr}
 8010510:	0008      	movs	r0, r1
 8010512:	2b00      	cmp	r3, #0
 8010514:	d012      	beq.n	801053c <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x30>
 8010516:	2300      	movs	r3, #0
 8010518:	2903      	cmp	r1, #3
 801051a:	d80d      	bhi.n	8010538 <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x2c>
 801051c:	f7ef fe04 	bl	8000128 <__gnu_thumb1_case_uqi>
 8010520:	16081402 	.word	0x16081402
 8010524:	4b0a      	ldr	r3, [pc, #40]	@ (8010550 <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x44>)
 8010526:	881b      	ldrh	r3, [r3, #0]
 8010528:	045b      	lsls	r3, r3, #17
 801052a:	0c5b      	lsrs	r3, r3, #17
 801052c:	425b      	negs	r3, r3
 801052e:	e003      	b.n	8010538 <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x2c>
 8010530:	4b07      	ldr	r3, [pc, #28]	@ (8010550 <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x44>)
 8010532:	881b      	ldrh	r3, [r3, #0]
 8010534:	045b      	lsls	r3, r3, #17
 8010536:	0c5b      	lsrs	r3, r3, #17
 8010538:	0018      	movs	r0, r3
 801053a:	bd00      	pop	{pc}
 801053c:	2903      	cmp	r1, #3
 801053e:	d8fb      	bhi.n	8010538 <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x2c>
 8010540:	f7ef fde8 	bl	8000114 <__gnu_thumb1_case_sqi>
 8010544:	f004f602 	.word	0xf004f602
 8010548:	2301      	movs	r3, #1
 801054a:	e7f5      	b.n	8010538 <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x2c>
 801054c:	2301      	movs	r3, #1
 801054e:	e7ed      	b.n	801052c <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE+0x20>
 8010550:	20003572 	.word	0x20003572

08010554 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE>:
 8010554:	0003      	movs	r3, r0
 8010556:	b500      	push	{lr}
 8010558:	0008      	movs	r0, r1
 801055a:	2b00      	cmp	r3, #0
 801055c:	d012      	beq.n	8010584 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x30>
 801055e:	2300      	movs	r3, #0
 8010560:	2903      	cmp	r1, #3
 8010562:	d807      	bhi.n	8010574 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x20>
 8010564:	f7ef fde0 	bl	8000128 <__gnu_thumb1_case_uqi>
 8010568:	08160214 	.word	0x08160214
 801056c:	4b0a      	ldr	r3, [pc, #40]	@ (8010598 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x44>)
 801056e:	881b      	ldrh	r3, [r3, #0]
 8010570:	045b      	lsls	r3, r3, #17
 8010572:	0c5b      	lsrs	r3, r3, #17
 8010574:	0018      	movs	r0, r3
 8010576:	bd00      	pop	{pc}
 8010578:	4b07      	ldr	r3, [pc, #28]	@ (8010598 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x44>)
 801057a:	881b      	ldrh	r3, [r3, #0]
 801057c:	045b      	lsls	r3, r3, #17
 801057e:	0c5b      	lsrs	r3, r3, #17
 8010580:	425b      	negs	r3, r3
 8010582:	e7f7      	b.n	8010574 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x20>
 8010584:	2903      	cmp	r1, #3
 8010586:	d8f5      	bhi.n	8010574 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x20>
 8010588:	f7ef fdc4 	bl	8000114 <__gnu_thumb1_case_sqi>
 801058c:	02f604f0 	.word	0x02f604f0
 8010590:	2301      	movs	r3, #1
 8010592:	e7ef      	b.n	8010574 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x20>
 8010594:	2301      	movs	r3, #1
 8010596:	e7f3      	b.n	8010580 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE+0x2c>
 8010598:	20003572 	.word	0x20003572

0801059c <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801059c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801059e:	b099      	sub	sp, #100	@ 0x64
 80105a0:	9315      	str	r3, [sp, #84]	@ 0x54
 80105a2:	ab1e      	add	r3, sp, #120	@ 0x78
 80105a4:	2600      	movs	r6, #0
 80105a6:	5f9e      	ldrsh	r6, [r3, r6]
 80105a8:	ab1f      	add	r3, sp, #124	@ 0x7c
 80105aa:	9214      	str	r2, [sp, #80]	@ 0x50
 80105ac:	2200      	movs	r2, #0
 80105ae:	5e9b      	ldrsh	r3, [r3, r2]
 80105b0:	aa14      	add	r2, sp, #80	@ 0x50
 80105b2:	9300      	str	r3, [sp, #0]
 80105b4:	ab20      	add	r3, sp, #128	@ 0x80
 80105b6:	881c      	ldrh	r4, [r3, #0]
 80105b8:	ab21      	add	r3, sp, #132	@ 0x84
 80105ba:	881b      	ldrh	r3, [r3, #0]
 80105bc:	9007      	str	r0, [sp, #28]
 80105be:	9305      	str	r3, [sp, #20]
 80105c0:	ab25      	add	r3, sp, #148	@ 0x94
 80105c2:	781b      	ldrb	r3, [r3, #0]
 80105c4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80105c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80105c8:	232d      	movs	r3, #45	@ 0x2d
 80105ca:	189b      	adds	r3, r3, r2
 80105cc:	7fdb      	ldrb	r3, [r3, #31]
 80105ce:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80105d0:	9301      	str	r3, [sp, #4]
 80105d2:	ab28      	add	r3, sp, #160	@ 0xa0
 80105d4:	781b      	ldrb	r3, [r3, #0]
 80105d6:	9f23      	ldr	r7, [sp, #140]	@ 0x8c
 80105d8:	9308      	str	r3, [sp, #32]
 80105da:	ab29      	add	r3, sp, #164	@ 0xa4
 80105dc:	781b      	ldrb	r3, [r3, #0]
 80105de:	9304      	str	r3, [sp, #16]
 80105e0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80105e2:	8852      	ldrh	r2, [r2, #2]
 80105e4:	2000      	movs	r0, #0
 80105e6:	5e18      	ldrsh	r0, [r3, r0]
 80105e8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80105ea:	7b7d      	ldrb	r5, [r7, #13]
 80105ec:	88db      	ldrh	r3, [r3, #6]
 80105ee:	b281      	uxth	r1, r0
 80105f0:	189b      	adds	r3, r3, r2
 80105f2:	b21b      	sxth	r3, r3
 80105f4:	469c      	mov	ip, r3
 80105f6:	2380      	movs	r3, #128	@ 0x80
 80105f8:	012a      	lsls	r2, r5, #4
 80105fa:	005b      	lsls	r3, r3, #1
 80105fc:	4013      	ands	r3, r2
 80105fe:	79fa      	ldrb	r2, [r7, #7]
 8010600:	431a      	orrs	r2, r3
 8010602:	9b05      	ldr	r3, [sp, #20]
 8010604:	1ad2      	subs	r2, r2, r3
 8010606:	2309      	movs	r3, #9
 8010608:	56fb      	ldrsb	r3, [r7, r3]
 801060a:	b292      	uxth	r2, r2
 801060c:	b29b      	uxth	r3, r3
 801060e:	2c00      	cmp	r4, #0
 8010610:	d100      	bne.n	8010614 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x78>
 8010612:	e130      	b.n	8010876 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2da>
 8010614:	1ae3      	subs	r3, r4, r3
 8010616:	b29c      	uxth	r4, r3
 8010618:	041b      	lsls	r3, r3, #16
 801061a:	d502      	bpl.n	8010622 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 801061c:	1b36      	subs	r6, r6, r4
 801061e:	2400      	movs	r4, #0
 8010620:	b236      	sxth	r6, r6
 8010622:	4286      	cmp	r6, r0
 8010624:	da03      	bge.n	801062e <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x92>
 8010626:	1864      	adds	r4, r4, r1
 8010628:	1ba4      	subs	r4, r4, r6
 801062a:	0006      	movs	r6, r0
 801062c:	b2a4      	uxth	r4, r4
 801062e:	4663      	mov	r3, ip
 8010630:	9800      	ldr	r0, [sp, #0]
 8010632:	1a1b      	subs	r3, r3, r0
 8010634:	9302      	str	r3, [sp, #8]
 8010636:	4293      	cmp	r3, r2
 8010638:	dd00      	ble.n	801063c <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xa0>
 801063a:	9202      	str	r2, [sp, #8]
 801063c:	9b02      	ldr	r3, [sp, #8]
 801063e:	2b00      	cmp	r3, #0
 8010640:	dc00      	bgt.n	8010644 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xa8>
 8010642:	e1f1      	b.n	8010a28 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x48c>
 8010644:	2080      	movs	r0, #128	@ 0x80
 8010646:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8010648:	0040      	lsls	r0, r0, #1
 801064a:	889b      	ldrh	r3, [r3, #4]
 801064c:	016d      	lsls	r5, r5, #5
 801064e:	4005      	ands	r5, r0
 8010650:	18cb      	adds	r3, r1, r3
 8010652:	79b8      	ldrb	r0, [r7, #6]
 8010654:	b21b      	sxth	r3, r3
 8010656:	1b32      	subs	r2, r6, r4
 8010658:	4305      	orrs	r5, r0
 801065a:	1a9b      	subs	r3, r3, r2
 801065c:	42ab      	cmp	r3, r5
 801065e:	dd00      	ble.n	8010662 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xc6>
 8010660:	002b      	movs	r3, r5
 8010662:	1b1b      	subs	r3, r3, r4
 8010664:	9303      	str	r3, [sp, #12]
 8010666:	2b00      	cmp	r3, #0
 8010668:	dc00      	bgt.n	801066c <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xd0>
 801066a:	e1dd      	b.n	8010a28 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x48c>
 801066c:	4be1      	ldr	r3, [pc, #900]	@ (80109f4 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x458>)
 801066e:	0031      	movs	r1, r6
 8010670:	781b      	ldrb	r3, [r3, #0]
 8010672:	a814      	add	r0, sp, #80	@ 0x50
 8010674:	3b01      	subs	r3, #1
 8010676:	425a      	negs	r2, r3
 8010678:	4153      	adcs	r3, r2
 801067a:	b2db      	uxtb	r3, r3
 801067c:	9306      	str	r3, [sp, #24]
 801067e:	9a00      	ldr	r2, [sp, #0]
 8010680:	9b04      	ldr	r3, [sp, #16]
 8010682:	f7fa f96b 	bl	800a95c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8010686:	af17      	add	r7, sp, #92	@ 0x5c
 8010688:	9a00      	ldr	r2, [sp, #0]
 801068a:	8038      	strh	r0, [r7, #0]
 801068c:	9b04      	ldr	r3, [sp, #16]
 801068e:	0031      	movs	r1, r6
 8010690:	a814      	add	r0, sp, #80	@ 0x50
 8010692:	f7fa f983 	bl	800a99c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8010696:	210e      	movs	r1, #14
 8010698:	ab14      	add	r3, sp, #80	@ 0x50
 801069a:	18c9      	adds	r1, r1, r3
 801069c:	8008      	strh	r0, [r1, #0]
 801069e:	0038      	movs	r0, r7
 80106a0:	f7fa faae 	bl	800ac00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80106a4:	2301      	movs	r3, #1
 80106a6:	9a01      	ldr	r2, [sp, #4]
 80106a8:	20ff      	movs	r0, #255	@ 0xff
 80106aa:	4093      	lsls	r3, r2
 80106ac:	3b01      	subs	r3, #1
 80106ae:	b2db      	uxtb	r3, r3
 80106b0:	0019      	movs	r1, r3
 80106b2:	930a      	str	r3, [sp, #40]	@ 0x28
 80106b4:	f7ef fde0 	bl	8000278 <__divsi3>
 80106b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80106ba:	900c      	str	r0, [sp, #48]	@ 0x30
 80106bc:	2b00      	cmp	r3, #0
 80106be:	d000      	beq.n	80106c2 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x126>
 80106c0:	e0dc      	b.n	801087c <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 80106c2:	b2ad      	uxth	r5, r5
 80106c4:	9e05      	ldr	r6, [sp, #20]
 80106c6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80106c8:	4326      	orrs	r6, r4
 80106ca:	9300      	str	r3, [sp, #0]
 80106cc:	d00a      	beq.n	80106e4 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x148>
 80106ce:	2607      	movs	r6, #7
 80106d0:	9b05      	ldr	r3, [sp, #20]
 80106d2:	436b      	muls	r3, r5
 80106d4:	191c      	adds	r4, r3, r4
 80106d6:	9b01      	ldr	r3, [sp, #4]
 80106d8:	435c      	muls	r4, r3
 80106da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80106dc:	4026      	ands	r6, r4
 80106de:	08e4      	lsrs	r4, r4, #3
 80106e0:	191b      	adds	r3, r3, r4
 80106e2:	9300      	str	r3, [sp, #0]
 80106e4:	9904      	ldr	r1, [sp, #16]
 80106e6:	9806      	ldr	r0, [sp, #24]
 80106e8:	f7ff ff10 	bl	801050c <_ZN8touchgfx19LCD16bppSerialFlash9nextPixelEbNS_12TextRotationE>
 80106ec:	9904      	ldr	r1, [sp, #16]
 80106ee:	0004      	movs	r4, r0
 80106f0:	9806      	ldr	r0, [sp, #24]
 80106f2:	f7ff ff2f 	bl	8010554 <_ZN8touchgfx19LCD16bppSerialFlash8nextLineEbNS_12TextRotationE>
 80106f6:	9b03      	ldr	r3, [sp, #12]
 80106f8:	9a01      	ldr	r2, [sp, #4]
 80106fa:	1aeb      	subs	r3, r5, r3
 80106fc:	435a      	muls	r2, r3
 80106fe:	0007      	movs	r7, r0
 8010700:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8010702:	9205      	str	r2, [sp, #20]
 8010704:	2800      	cmp	r0, #0
 8010706:	d104      	bne.n	8010712 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x176>
 8010708:	4bbb      	ldr	r3, [pc, #748]	@ (80109f8 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45c>)
 801070a:	6818      	ldr	r0, [r3, #0]
 801070c:	6803      	ldr	r3, [r0, #0]
 801070e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010710:	4798      	blx	r3
 8010712:	230e      	movs	r3, #14
 8010714:	aa14      	add	r2, sp, #80	@ 0x50
 8010716:	189b      	adds	r3, r3, r2
 8010718:	2200      	movs	r2, #0
 801071a:	5e9a      	ldrsh	r2, [r3, r2]
 801071c:	4bb7      	ldr	r3, [pc, #732]	@ (80109fc <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x460>)
 801071e:	881b      	ldrh	r3, [r3, #0]
 8010720:	4353      	muls	r3, r2
 8010722:	aa17      	add	r2, sp, #92	@ 0x5c
 8010724:	2100      	movs	r1, #0
 8010726:	5e52      	ldrsh	r2, [r2, r1]
 8010728:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801072a:	189b      	adds	r3, r3, r2
 801072c:	22fc      	movs	r2, #252	@ 0xfc
 801072e:	005b      	lsls	r3, r3, #1
 8010730:	18c3      	adds	r3, r0, r3
 8010732:	9304      	str	r3, [sp, #16]
 8010734:	9b03      	ldr	r3, [sp, #12]
 8010736:	00d2      	lsls	r2, r2, #3
 8010738:	4363      	muls	r3, r4
 801073a:	1aff      	subs	r7, r7, r3
 801073c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801073e:	007f      	lsls	r7, r7, #1
 8010740:	0c1b      	lsrs	r3, r3, #16
 8010742:	b2db      	uxtb	r3, r3
 8010744:	9311      	str	r3, [sp, #68]	@ 0x44
 8010746:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8010748:	0a1b      	lsrs	r3, r3, #8
 801074a:	b2db      	uxtb	r3, r3
 801074c:	9310      	str	r3, [sp, #64]	@ 0x40
 801074e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8010750:	b2db      	uxtb	r3, r3
 8010752:	930f      	str	r3, [sp, #60]	@ 0x3c
 8010754:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8010756:	095b      	lsrs	r3, r3, #5
 8010758:	4013      	ands	r3, r2
 801075a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801075c:	0cd2      	lsrs	r2, r2, #19
 801075e:	02d2      	lsls	r2, r2, #11
 8010760:	431a      	orrs	r2, r3
 8010762:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8010764:	061b      	lsls	r3, r3, #24
 8010766:	0edb      	lsrs	r3, r3, #27
 8010768:	4313      	orrs	r3, r2
 801076a:	b29b      	uxth	r3, r3
 801076c:	930e      	str	r3, [sp, #56]	@ 0x38
 801076e:	9b07      	ldr	r3, [sp, #28]
 8010770:	68d8      	ldr	r0, [r3, #12]
 8010772:	6803      	ldr	r3, [r0, #0]
 8010774:	689b      	ldr	r3, [r3, #8]
 8010776:	4798      	blx	r3
 8010778:	0063      	lsls	r3, r4, #1
 801077a:	9306      	str	r3, [sp, #24]
 801077c:	2800      	cmp	r0, #0
 801077e:	d100      	bne.n	8010782 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e6>
 8010780:	e09e      	b.n	80108c0 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x324>
 8010782:	9b00      	ldr	r3, [sp, #0]
 8010784:	9a06      	ldr	r2, [sp, #24]
 8010786:	781b      	ldrb	r3, [r3, #0]
 8010788:	9903      	ldr	r1, [sp, #12]
 801078a:	4133      	asrs	r3, r6
 801078c:	434a      	muls	r2, r1
 801078e:	19d2      	adds	r2, r2, r7
 8010790:	b2db      	uxtb	r3, r3
 8010792:	920d      	str	r2, [sp, #52]	@ 0x34
 8010794:	9a02      	ldr	r2, [sp, #8]
 8010796:	1e51      	subs	r1, r2, #1
 8010798:	9102      	str	r1, [sp, #8]
 801079a:	d200      	bcs.n	801079e <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 801079c:	e13c      	b.n	8010a18 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
 801079e:	9a03      	ldr	r2, [sp, #12]
 80107a0:	9f04      	ldr	r7, [sp, #16]
 80107a2:	9207      	str	r2, [sp, #28]
 80107a4:	9a07      	ldr	r2, [sp, #28]
 80107a6:	1e51      	subs	r1, r2, #1
 80107a8:	9107      	str	r1, [sp, #28]
 80107aa:	d374      	bcc.n	8010896 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fa>
 80107ac:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80107ae:	401d      	ands	r5, r3
 80107b0:	d051      	beq.n	8010856 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ba>
 80107b2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80107b4:	4355      	muls	r5, r2
 80107b6:	2dfe      	cmp	r5, #254	@ 0xfe
 80107b8:	dd03      	ble.n	80107c2 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 80107ba:	9908      	ldr	r1, [sp, #32]
 80107bc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80107be:	29ff      	cmp	r1, #255	@ 0xff
 80107c0:	d048      	beq.n	8010854 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b8>
 80107c2:	9a08      	ldr	r2, [sp, #32]
 80107c4:	2007      	movs	r0, #7
 80107c6:	4355      	muls	r5, r2
 80107c8:	b2a9      	uxth	r1, r5
 80107ca:	2503      	movs	r5, #3
 80107cc:	883c      	ldrh	r4, [r7, #0]
 80107ce:	1c4a      	adds	r2, r1, #1
 80107d0:	1209      	asrs	r1, r1, #8
 80107d2:	1852      	adds	r2, r2, r1
 80107d4:	1212      	asrs	r2, r2, #8
 80107d6:	1221      	asrs	r1, r4, #8
 80107d8:	4381      	bics	r1, r0
 80107da:	b2d2      	uxtb	r2, r2
 80107dc:	10e0      	asrs	r0, r4, #3
 80107de:	43a8      	bics	r0, r5
 80107e0:	40ac      	lsls	r4, r5
 80107e2:	b295      	uxth	r5, r2
 80107e4:	43d2      	mvns	r2, r2
 80107e6:	b2c0      	uxtb	r0, r0
 80107e8:	4684      	mov	ip, r0
 80107ea:	1148      	asrs	r0, r1, #5
 80107ec:	4308      	orrs	r0, r1
 80107ee:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80107f0:	b2d2      	uxtb	r2, r2
 80107f2:	4369      	muls	r1, r5
 80107f4:	4350      	muls	r0, r2
 80107f6:	1840      	adds	r0, r0, r1
 80107f8:	b281      	uxth	r1, r0
 80107fa:	9109      	str	r1, [sp, #36]	@ 0x24
 80107fc:	4661      	mov	r1, ip
 80107fe:	4660      	mov	r0, ip
 8010800:	1189      	asrs	r1, r1, #6
 8010802:	4301      	orrs	r1, r0
 8010804:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8010806:	b2e4      	uxtb	r4, r4
 8010808:	4368      	muls	r0, r5
 801080a:	4684      	mov	ip, r0
 801080c:	1160      	asrs	r0, r4, #5
 801080e:	4304      	orrs	r4, r0
 8010810:	4351      	muls	r1, r2
 8010812:	4354      	muls	r4, r2
 8010814:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8010816:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010818:	4355      	muls	r5, r2
 801081a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801081c:	1200      	asrs	r0, r0, #8
 801081e:	3201      	adds	r2, #1
 8010820:	1812      	adds	r2, r2, r0
 8010822:	20ff      	movs	r0, #255	@ 0xff
 8010824:	1964      	adds	r4, r4, r5
 8010826:	b2a4      	uxth	r4, r4
 8010828:	0200      	lsls	r0, r0, #8
 801082a:	4461      	add	r1, ip
 801082c:	b289      	uxth	r1, r1
 801082e:	4002      	ands	r2, r0
 8010830:	1c60      	adds	r0, r4, #1
 8010832:	1224      	asrs	r4, r4, #8
 8010834:	1904      	adds	r4, r0, r4
 8010836:	1c48      	adds	r0, r1, #1
 8010838:	1209      	asrs	r1, r1, #8
 801083a:	1841      	adds	r1, r0, r1
 801083c:	20ff      	movs	r0, #255	@ 0xff
 801083e:	0ad2      	lsrs	r2, r2, #11
 8010840:	00c0      	lsls	r0, r0, #3
 8010842:	0424      	lsls	r4, r4, #16
 8010844:	0949      	lsrs	r1, r1, #5
 8010846:	4001      	ands	r1, r0
 8010848:	02d2      	lsls	r2, r2, #11
 801084a:	0ee4      	lsrs	r4, r4, #27
 801084c:	3818      	subs	r0, #24
 801084e:	4322      	orrs	r2, r4
 8010850:	4001      	ands	r1, r0
 8010852:	430a      	orrs	r2, r1
 8010854:	803a      	strh	r2, [r7, #0]
 8010856:	9a01      	ldr	r2, [sp, #4]
 8010858:	4113      	asrs	r3, r2
 801085a:	18b6      	adds	r6, r6, r2
 801085c:	b2b6      	uxth	r6, r6
 801085e:	b2db      	uxtb	r3, r3
 8010860:	2e07      	cmp	r6, #7
 8010862:	d905      	bls.n	8010870 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d4>
 8010864:	2600      	movs	r6, #0
 8010866:	9b00      	ldr	r3, [sp, #0]
 8010868:	9a00      	ldr	r2, [sp, #0]
 801086a:	785b      	ldrb	r3, [r3, #1]
 801086c:	3201      	adds	r2, #1
 801086e:	9200      	str	r2, [sp, #0]
 8010870:	9a06      	ldr	r2, [sp, #24]
 8010872:	18bf      	adds	r7, r7, r2
 8010874:	e796      	b.n	80107a4 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8010876:	199e      	adds	r6, r3, r6
 8010878:	b236      	sxth	r6, r6
 801087a:	e6d2      	b.n	8010622 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 801087c:	9901      	ldr	r1, [sp, #4]
 801087e:	2008      	movs	r0, #8
 8010880:	f7ef fcfa 	bl	8000278 <__divsi3>
 8010884:	0006      	movs	r6, r0
 8010886:	3801      	subs	r0, #1
 8010888:	1940      	adds	r0, r0, r5
 801088a:	0031      	movs	r1, r6
 801088c:	f7ef fcf4 	bl	8000278 <__divsi3>
 8010890:	4346      	muls	r6, r0
 8010892:	b2b5      	uxth	r5, r6
 8010894:	e716      	b.n	80106c4 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x128>
 8010896:	9a05      	ldr	r2, [sp, #20]
 8010898:	2a00      	cmp	r2, #0
 801089a:	d00b      	beq.n	80108b4 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801089c:	18b6      	adds	r6, r6, r2
 801089e:	b2b6      	uxth	r6, r6
 80108a0:	9a00      	ldr	r2, [sp, #0]
 80108a2:	08f3      	lsrs	r3, r6, #3
 80108a4:	18d3      	adds	r3, r2, r3
 80108a6:	9300      	str	r3, [sp, #0]
 80108a8:	2307      	movs	r3, #7
 80108aa:	401e      	ands	r6, r3
 80108ac:	9b00      	ldr	r3, [sp, #0]
 80108ae:	781b      	ldrb	r3, [r3, #0]
 80108b0:	4133      	asrs	r3, r6
 80108b2:	b2db      	uxtb	r3, r3
 80108b4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80108b6:	9a04      	ldr	r2, [sp, #16]
 80108b8:	468c      	mov	ip, r1
 80108ba:	4462      	add	r2, ip
 80108bc:	9204      	str	r2, [sp, #16]
 80108be:	e769      	b.n	8010794 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
 80108c0:	9a01      	ldr	r2, [sp, #4]
 80108c2:	9b03      	ldr	r3, [sp, #12]
 80108c4:	9900      	ldr	r1, [sp, #0]
 80108c6:	4353      	muls	r3, r2
 80108c8:	930d      	str	r3, [sp, #52]	@ 0x34
 80108ca:	9b07      	ldr	r3, [sp, #28]
 80108cc:	68d8      	ldr	r0, [r3, #12]
 80108ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80108d0:	199a      	adds	r2, r3, r6
 80108d2:	6803      	ldr	r3, [r0, #0]
 80108d4:	3207      	adds	r2, #7
 80108d6:	10d2      	asrs	r2, r2, #3
 80108d8:	691b      	ldr	r3, [r3, #16]
 80108da:	4798      	blx	r3
 80108dc:	9b01      	ldr	r3, [sp, #4]
 80108de:	9a03      	ldr	r2, [sp, #12]
 80108e0:	436b      	muls	r3, r5
 80108e2:	9312      	str	r3, [sp, #72]	@ 0x48
 80108e4:	9b06      	ldr	r3, [sp, #24]
 80108e6:	4353      	muls	r3, r2
 80108e8:	19db      	adds	r3, r3, r7
 80108ea:	9313      	str	r3, [sp, #76]	@ 0x4c
 80108ec:	9b02      	ldr	r3, [sp, #8]
 80108ee:	1e5a      	subs	r2, r3, #1
 80108f0:	9202      	str	r2, [sp, #8]
 80108f2:	d200      	bcs.n	80108f6 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x35a>
 80108f4:	e090      	b.n	8010a18 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
 80108f6:	9b07      	ldr	r3, [sp, #28]
 80108f8:	68d8      	ldr	r0, [r3, #12]
 80108fa:	6803      	ldr	r3, [r0, #0]
 80108fc:	695b      	ldr	r3, [r3, #20]
 80108fe:	4798      	blx	r3
 8010900:	9b02      	ldr	r3, [sp, #8]
 8010902:	9009      	str	r0, [sp, #36]	@ 0x24
 8010904:	2b00      	cmp	r3, #0
 8010906:	d011      	beq.n	801092c <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8010908:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801090a:	9900      	ldr	r1, [sp, #0]
 801090c:	18f2      	adds	r2, r6, r3
 801090e:	10d3      	asrs	r3, r2, #3
 8010910:	18cb      	adds	r3, r1, r3
 8010912:	9300      	str	r3, [sp, #0]
 8010914:	9b07      	ldr	r3, [sp, #28]
 8010916:	9900      	ldr	r1, [sp, #0]
 8010918:	68d8      	ldr	r0, [r3, #12]
 801091a:	2307      	movs	r3, #7
 801091c:	401a      	ands	r2, r3
 801091e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010920:	18d2      	adds	r2, r2, r3
 8010922:	6803      	ldr	r3, [r0, #0]
 8010924:	3207      	adds	r2, #7
 8010926:	10d2      	asrs	r2, r2, #3
 8010928:	691b      	ldr	r3, [r3, #16]
 801092a:	4798      	blx	r3
 801092c:	9b03      	ldr	r3, [sp, #12]
 801092e:	9d04      	ldr	r5, [sp, #16]
 8010930:	469c      	mov	ip, r3
 8010932:	4663      	mov	r3, ip
 8010934:	3b01      	subs	r3, #1
 8010936:	469c      	mov	ip, r3
 8010938:	d362      	bcc.n	8010a00 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x464>
 801093a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801093c:	781c      	ldrb	r4, [r3, #0]
 801093e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8010940:	4134      	asrs	r4, r6
 8010942:	401c      	ands	r4, r3
 8010944:	d04a      	beq.n	80109dc <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x440>
 8010946:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010948:	435c      	muls	r4, r3
 801094a:	2cfe      	cmp	r4, #254	@ 0xfe
 801094c:	dd03      	ble.n	8010956 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 801094e:	9b08      	ldr	r3, [sp, #32]
 8010950:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8010952:	2bff      	cmp	r3, #255	@ 0xff
 8010954:	d041      	beq.n	80109da <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x43e>
 8010956:	2107      	movs	r1, #7
 8010958:	9b08      	ldr	r3, [sp, #32]
 801095a:	8828      	ldrh	r0, [r5, #0]
 801095c:	435c      	muls	r4, r3
 801095e:	b2a2      	uxth	r2, r4
 8010960:	1c53      	adds	r3, r2, #1
 8010962:	1212      	asrs	r2, r2, #8
 8010964:	189b      	adds	r3, r3, r2
 8010966:	121b      	asrs	r3, r3, #8
 8010968:	b2db      	uxtb	r3, r3
 801096a:	b29c      	uxth	r4, r3
 801096c:	43db      	mvns	r3, r3
 801096e:	1202      	asrs	r2, r0, #8
 8010970:	438a      	bics	r2, r1
 8010972:	3904      	subs	r1, #4
 8010974:	10c7      	asrs	r7, r0, #3
 8010976:	4088      	lsls	r0, r1
 8010978:	438f      	bics	r7, r1
 801097a:	1151      	asrs	r1, r2, #5
 801097c:	4311      	orrs	r1, r2
 801097e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8010980:	b2db      	uxtb	r3, r3
 8010982:	4362      	muls	r2, r4
 8010984:	4359      	muls	r1, r3
 8010986:	b2ff      	uxtb	r7, r7
 8010988:	1889      	adds	r1, r1, r2
 801098a:	11ba      	asrs	r2, r7, #6
 801098c:	433a      	orrs	r2, r7
 801098e:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8010990:	435a      	muls	r2, r3
 8010992:	4367      	muls	r7, r4
 8010994:	b2c0      	uxtb	r0, r0
 8010996:	19d2      	adds	r2, r2, r7
 8010998:	1147      	asrs	r7, r0, #5
 801099a:	4338      	orrs	r0, r7
 801099c:	4358      	muls	r0, r3
 801099e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80109a0:	b289      	uxth	r1, r1
 80109a2:	435c      	muls	r4, r3
 80109a4:	23ff      	movs	r3, #255	@ 0xff
 80109a6:	1c4f      	adds	r7, r1, #1
 80109a8:	1209      	asrs	r1, r1, #8
 80109aa:	b292      	uxth	r2, r2
 80109ac:	187f      	adds	r7, r7, r1
 80109ae:	021b      	lsls	r3, r3, #8
 80109b0:	401f      	ands	r7, r3
 80109b2:	1c53      	adds	r3, r2, #1
 80109b4:	1212      	asrs	r2, r2, #8
 80109b6:	189a      	adds	r2, r3, r2
 80109b8:	23ff      	movs	r3, #255	@ 0xff
 80109ba:	1900      	adds	r0, r0, r4
 80109bc:	b280      	uxth	r0, r0
 80109be:	1c41      	adds	r1, r0, #1
 80109c0:	1200      	asrs	r0, r0, #8
 80109c2:	1808      	adds	r0, r1, r0
 80109c4:	00db      	lsls	r3, r3, #3
 80109c6:	0aff      	lsrs	r7, r7, #11
 80109c8:	0400      	lsls	r0, r0, #16
 80109ca:	0952      	lsrs	r2, r2, #5
 80109cc:	401a      	ands	r2, r3
 80109ce:	02ff      	lsls	r7, r7, #11
 80109d0:	0ec0      	lsrs	r0, r0, #27
 80109d2:	3b18      	subs	r3, #24
 80109d4:	4307      	orrs	r7, r0
 80109d6:	401a      	ands	r2, r3
 80109d8:	4317      	orrs	r7, r2
 80109da:	802f      	strh	r7, [r5, #0]
 80109dc:	9b01      	ldr	r3, [sp, #4]
 80109de:	18f6      	adds	r6, r6, r3
 80109e0:	b2b6      	uxth	r6, r6
 80109e2:	2e07      	cmp	r6, #7
 80109e4:	d903      	bls.n	80109ee <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x452>
 80109e6:	2600      	movs	r6, #0
 80109e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80109ea:	3301      	adds	r3, #1
 80109ec:	9309      	str	r3, [sp, #36]	@ 0x24
 80109ee:	9b06      	ldr	r3, [sp, #24]
 80109f0:	18ed      	adds	r5, r5, r3
 80109f2:	e79e      	b.n	8010932 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80109f4:	20003570 	.word	0x20003570
 80109f8:	20003578 	.word	0x20003578
 80109fc:	20003572 	.word	0x20003572
 8010a00:	9b05      	ldr	r3, [sp, #20]
 8010a02:	2b00      	cmp	r3, #0
 8010a04:	d002      	beq.n	8010a0c <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x470>
 8010a06:	18f6      	adds	r6, r6, r3
 8010a08:	2307      	movs	r3, #7
 8010a0a:	401e      	ands	r6, r3
 8010a0c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010a0e:	9b04      	ldr	r3, [sp, #16]
 8010a10:	4694      	mov	ip, r2
 8010a12:	4463      	add	r3, ip
 8010a14:	9304      	str	r3, [sp, #16]
 8010a16:	e769      	b.n	80108ec <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8010a18:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8010a1a:	2b00      	cmp	r3, #0
 8010a1c:	d104      	bne.n	8010a28 <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x48c>
 8010a1e:	4b03      	ldr	r3, [pc, #12]	@ (8010a2c <_ZN8touchgfx19LCD16bppSerialFlash9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x490>)
 8010a20:	6818      	ldr	r0, [r3, #0]
 8010a22:	6803      	ldr	r3, [r0, #0]
 8010a24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010a26:	4798      	blx	r3
 8010a28:	b019      	add	sp, #100	@ 0x64
 8010a2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a2c:	20003578 	.word	0x20003578

08010a30 <CRC_Lock>:
 8010a30:	2201      	movs	r2, #1
 8010a32:	b570      	push	{r4, r5, r6, lr}
 8010a34:	4c28      	ldr	r4, [pc, #160]	@ (8010ad8 <CRC_Lock+0xa8>)
 8010a36:	4e29      	ldr	r6, [pc, #164]	@ (8010adc <CRC_Lock+0xac>)
 8010a38:	6823      	ldr	r3, [r4, #0]
 8010a3a:	4393      	bics	r3, r2
 8010a3c:	6023      	str	r3, [r4, #0]
 8010a3e:	4b28      	ldr	r3, [pc, #160]	@ (8010ae0 <CRC_Lock+0xb0>)
 8010a40:	4c28      	ldr	r4, [pc, #160]	@ (8010ae4 <CRC_Lock+0xb4>)
 8010a42:	681d      	ldr	r5, [r3, #0]
 8010a44:	4025      	ands	r5, r4
 8010a46:	42b5      	cmp	r5, r6
 8010a48:	d004      	beq.n	8010a54 <CRC_Lock+0x24>
 8010a4a:	681d      	ldr	r5, [r3, #0]
 8010a4c:	4e26      	ldr	r6, [pc, #152]	@ (8010ae8 <CRC_Lock+0xb8>)
 8010a4e:	4025      	ands	r5, r4
 8010a50:	42b5      	cmp	r5, r6
 8010a52:	d124      	bne.n	8010a9e <CRC_Lock+0x6e>
 8010a54:	4b25      	ldr	r3, [pc, #148]	@ (8010aec <CRC_Lock+0xbc>)
 8010a56:	681b      	ldr	r3, [r3, #0]
 8010a58:	2b00      	cmp	r3, #0
 8010a5a:	d135      	bne.n	8010ac8 <CRC_Lock+0x98>
 8010a5c:	248a      	movs	r4, #138	@ 0x8a
 8010a5e:	4a24      	ldr	r2, [pc, #144]	@ (8010af0 <CRC_Lock+0xc0>)
 8010a60:	00e4      	lsls	r4, r4, #3
 8010a62:	6813      	ldr	r3, [r2, #0]
 8010a64:	051b      	lsls	r3, r3, #20
 8010a66:	0d1b      	lsrs	r3, r3, #20
 8010a68:	42a3      	cmp	r3, r4
 8010a6a:	d00b      	beq.n	8010a84 <CRC_Lock+0x54>
 8010a6c:	6813      	ldr	r3, [r2, #0]
 8010a6e:	4c21      	ldr	r4, [pc, #132]	@ (8010af4 <CRC_Lock+0xc4>)
 8010a70:	051b      	lsls	r3, r3, #20
 8010a72:	0d1b      	lsrs	r3, r3, #20
 8010a74:	42a3      	cmp	r3, r4
 8010a76:	d005      	beq.n	8010a84 <CRC_Lock+0x54>
 8010a78:	6813      	ldr	r3, [r2, #0]
 8010a7a:	4a1f      	ldr	r2, [pc, #124]	@ (8010af8 <CRC_Lock+0xc8>)
 8010a7c:	051b      	lsls	r3, r3, #20
 8010a7e:	0d1b      	lsrs	r3, r3, #20
 8010a80:	4293      	cmp	r3, r2
 8010a82:	d121      	bne.n	8010ac8 <CRC_Lock+0x98>
 8010a84:	2201      	movs	r2, #1
 8010a86:	4b1d      	ldr	r3, [pc, #116]	@ (8010afc <CRC_Lock+0xcc>)
 8010a88:	601a      	str	r2, [r3, #0]
 8010a8a:	681a      	ldr	r2, [r3, #0]
 8010a8c:	2a00      	cmp	r2, #0
 8010a8e:	d1fc      	bne.n	8010a8a <CRC_Lock+0x5a>
 8010a90:	4b1b      	ldr	r3, [pc, #108]	@ (8010b00 <CRC_Lock+0xd0>)
 8010a92:	6018      	str	r0, [r3, #0]
 8010a94:	6818      	ldr	r0, [r3, #0]
 8010a96:	1a40      	subs	r0, r0, r1
 8010a98:	4241      	negs	r1, r0
 8010a9a:	4148      	adcs	r0, r1
 8010a9c:	e00c      	b.n	8010ab8 <CRC_Lock+0x88>
 8010a9e:	681b      	ldr	r3, [r3, #0]
 8010aa0:	4023      	ands	r3, r4
 8010aa2:	4c18      	ldr	r4, [pc, #96]	@ (8010b04 <CRC_Lock+0xd4>)
 8010aa4:	42a3      	cmp	r3, r4
 8010aa6:	d10f      	bne.n	8010ac8 <CRC_Lock+0x98>
 8010aa8:	4b17      	ldr	r3, [pc, #92]	@ (8010b08 <CRC_Lock+0xd8>)
 8010aaa:	4c18      	ldr	r4, [pc, #96]	@ (8010b0c <CRC_Lock+0xdc>)
 8010aac:	681b      	ldr	r3, [r3, #0]
 8010aae:	051b      	lsls	r3, r3, #20
 8010ab0:	0d1b      	lsrs	r3, r3, #20
 8010ab2:	42a3      	cmp	r3, r4
 8010ab4:	d001      	beq.n	8010aba <CRC_Lock+0x8a>
 8010ab6:	2000      	movs	r0, #0
 8010ab8:	bd70      	pop	{r4, r5, r6, pc}
 8010aba:	4b15      	ldr	r3, [pc, #84]	@ (8010b10 <CRC_Lock+0xe0>)
 8010abc:	601a      	str	r2, [r3, #0]
 8010abe:	681a      	ldr	r2, [r3, #0]
 8010ac0:	2a00      	cmp	r2, #0
 8010ac2:	d1fc      	bne.n	8010abe <CRC_Lock+0x8e>
 8010ac4:	4b13      	ldr	r3, [pc, #76]	@ (8010b14 <CRC_Lock+0xe4>)
 8010ac6:	e7e4      	b.n	8010a92 <CRC_Lock+0x62>
 8010ac8:	2201      	movs	r2, #1
 8010aca:	4b13      	ldr	r3, [pc, #76]	@ (8010b18 <CRC_Lock+0xe8>)
 8010acc:	601a      	str	r2, [r3, #0]
 8010ace:	681a      	ldr	r2, [r3, #0]
 8010ad0:	2a00      	cmp	r2, #0
 8010ad2:	d1fc      	bne.n	8010ace <CRC_Lock+0x9e>
 8010ad4:	4b11      	ldr	r3, [pc, #68]	@ (8010b1c <CRC_Lock+0xec>)
 8010ad6:	e7dc      	b.n	8010a92 <CRC_Lock+0x62>
 8010ad8:	e0002000 	.word	0xe0002000
 8010adc:	0000c240 	.word	0x0000c240
 8010ae0:	e000ed00 	.word	0xe000ed00
 8010ae4:	0000fff0 	.word	0x0000fff0
 8010ae8:	0000c270 	.word	0x0000c270
 8010aec:	e0042000 	.word	0xe0042000
 8010af0:	5c001000 	.word	0x5c001000
 8010af4:	00000483 	.word	0x00000483
 8010af8:	00000485 	.word	0x00000485
 8010afc:	58024c08 	.word	0x58024c08
 8010b00:	58024c00 	.word	0x58024c00
 8010b04:	0000d220 	.word	0x0000d220
 8010b08:	46008ff0 	.word	0x46008ff0
 8010b0c:	00000486 	.word	0x00000486
 8010b10:	46024c08 	.word	0x46024c08
 8010b14:	46024c00 	.word	0x46024c00
 8010b18:	40023008 	.word	0x40023008
 8010b1c:	40023000 	.word	0x40023000

08010b20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8010b20:	6101      	str	r1, [r0, #16]
 8010b22:	4770      	bx	lr

08010b24 <_ZN8touchgfx8Gestures4tickEv>:
 8010b24:	7b83      	ldrb	r3, [r0, #14]
 8010b26:	2b00      	cmp	r3, #0
 8010b28:	d009      	beq.n	8010b3e <_ZN8touchgfx8Gestures4tickEv+0x1a>
 8010b2a:	8903      	ldrh	r3, [r0, #8]
 8010b2c:	3301      	adds	r3, #1
 8010b2e:	b29b      	uxth	r3, r3
 8010b30:	8103      	strh	r3, [r0, #8]
 8010b32:	2b07      	cmp	r3, #7
 8010b34:	d903      	bls.n	8010b3e <_ZN8touchgfx8Gestures4tickEv+0x1a>
 8010b36:	2300      	movs	r3, #0
 8010b38:	8143      	strh	r3, [r0, #10]
 8010b3a:	8183      	strh	r3, [r0, #12]
 8010b3c:	7383      	strb	r3, [r0, #14]
 8010b3e:	4770      	bx	lr

08010b40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8010b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010b42:	b087      	sub	sp, #28
 8010b44:	9201      	str	r2, [sp, #4]
 8010b46:	4a1b      	ldr	r2, [pc, #108]	@ (8010bb4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>)
 8010b48:	001e      	movs	r6, r3
 8010b4a:	ab0c      	add	r3, sp, #48	@ 0x30
 8010b4c:	881d      	ldrh	r5, [r3, #0]
 8010b4e:	000f      	movs	r7, r1
 8010b50:	88c3      	ldrh	r3, [r0, #6]
 8010b52:	8881      	ldrh	r1, [r0, #4]
 8010b54:	9202      	str	r2, [sp, #8]
 8010b56:	2200      	movs	r2, #0
 8010b58:	4694      	mov	ip, r2
 8010b5a:	0004      	movs	r4, r0
 8010b5c:	4660      	mov	r0, ip
 8010b5e:	aa02      	add	r2, sp, #8
 8010b60:	80d1      	strh	r1, [r2, #6]
 8010b62:	1a71      	subs	r1, r6, r1
 8010b64:	b209      	sxth	r1, r1
 8010b66:	7110      	strb	r0, [r2, #4]
 8010b68:	17c8      	asrs	r0, r1, #31
 8010b6a:	8113      	strh	r3, [r2, #8]
 8010b6c:	8156      	strh	r6, [r2, #10]
 8010b6e:	8195      	strh	r5, [r2, #12]
 8010b70:	1809      	adds	r1, r1, r0
 8010b72:	4041      	eors	r1, r0
 8010b74:	8aa2      	ldrh	r2, [r4, #20]
 8010b76:	b209      	sxth	r1, r1
 8010b78:	4291      	cmp	r1, r2
 8010b7a:	dc08      	bgt.n	8010b8e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x4e>
 8010b7c:	1aeb      	subs	r3, r5, r3
 8010b7e:	b21b      	sxth	r3, r3
 8010b80:	17d9      	asrs	r1, r3, #31
 8010b82:	185b      	adds	r3, r3, r1
 8010b84:	404b      	eors	r3, r1
 8010b86:	b21b      	sxth	r3, r3
 8010b88:	4660      	mov	r0, ip
 8010b8a:	429a      	cmp	r2, r3
 8010b8c:	da0f      	bge.n	8010bae <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x6e>
 8010b8e:	6920      	ldr	r0, [r4, #16]
 8010b90:	a902      	add	r1, sp, #8
 8010b92:	6803      	ldr	r3, [r0, #0]
 8010b94:	1bf7      	subs	r7, r6, r7
 8010b96:	685b      	ldr	r3, [r3, #4]
 8010b98:	4798      	blx	r3
 8010b9a:	2300      	movs	r3, #0
 8010b9c:	2001      	movs	r0, #1
 8010b9e:	8123      	strh	r3, [r4, #8]
 8010ba0:	9b01      	ldr	r3, [sp, #4]
 8010ba2:	8167      	strh	r7, [r4, #10]
 8010ba4:	1aeb      	subs	r3, r5, r3
 8010ba6:	81a3      	strh	r3, [r4, #12]
 8010ba8:	80a6      	strh	r6, [r4, #4]
 8010baa:	80e5      	strh	r5, [r4, #6]
 8010bac:	73a0      	strb	r0, [r4, #14]
 8010bae:	b007      	add	sp, #28
 8010bb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010bb2:	46c0      	nop			@ (mov r8, r8)
 8010bb4:	08015b10 	.word	0x08015b10

08010bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8010bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bba:	b087      	sub	sp, #28
 8010bbc:	9301      	str	r3, [sp, #4]
 8010bbe:	1e4b      	subs	r3, r1, #1
 8010bc0:	0004      	movs	r4, r0
 8010bc2:	000d      	movs	r5, r1
 8010bc4:	9200      	str	r2, [sp, #0]
 8010bc6:	2b01      	cmp	r3, #1
 8010bc8:	d83b      	bhi.n	8010c42 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x8a>
 8010bca:	220a      	movs	r2, #10
 8010bcc:	5e83      	ldrsh	r3, [r0, r2]
 8010bce:	1cda      	adds	r2, r3, #3
 8010bd0:	b292      	uxth	r2, r2
 8010bd2:	2a06      	cmp	r2, #6
 8010bd4:	d90f      	bls.n	8010bf6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x3e>
 8010bd6:	4e20      	ldr	r6, [pc, #128]	@ (8010c58 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xa0>)
 8010bd8:	2204      	movs	r2, #4
 8010bda:	5ea7      	ldrsh	r7, [r4, r2]
 8010bdc:	9603      	str	r6, [sp, #12]
 8010bde:	2600      	movs	r6, #0
 8010be0:	2106      	movs	r1, #6
 8010be2:	5e62      	ldrsh	r2, [r4, r1]
 8010be4:	6900      	ldr	r0, [r0, #16]
 8010be6:	a903      	add	r1, sp, #12
 8010be8:	710e      	strb	r6, [r1, #4]
 8010bea:	80cb      	strh	r3, [r1, #6]
 8010bec:	810f      	strh	r7, [r1, #8]
 8010bee:	814a      	strh	r2, [r1, #10]
 8010bf0:	6803      	ldr	r3, [r0, #0]
 8010bf2:	689b      	ldr	r3, [r3, #8]
 8010bf4:	4798      	blx	r3
 8010bf6:	220c      	movs	r2, #12
 8010bf8:	5ea3      	ldrsh	r3, [r4, r2]
 8010bfa:	1cda      	adds	r2, r3, #3
 8010bfc:	b292      	uxth	r2, r2
 8010bfe:	2a06      	cmp	r2, #6
 8010c00:	d90f      	bls.n	8010c22 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x6a>
 8010c02:	4e15      	ldr	r6, [pc, #84]	@ (8010c58 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xa0>)
 8010c04:	2204      	movs	r2, #4
 8010c06:	5ea7      	ldrsh	r7, [r4, r2]
 8010c08:	9603      	str	r6, [sp, #12]
 8010c0a:	2601      	movs	r6, #1
 8010c0c:	2106      	movs	r1, #6
 8010c0e:	5e62      	ldrsh	r2, [r4, r1]
 8010c10:	6920      	ldr	r0, [r4, #16]
 8010c12:	a903      	add	r1, sp, #12
 8010c14:	710e      	strb	r6, [r1, #4]
 8010c16:	80cb      	strh	r3, [r1, #6]
 8010c18:	810f      	strh	r7, [r1, #8]
 8010c1a:	814a      	strh	r2, [r1, #10]
 8010c1c:	6803      	ldr	r3, [r0, #0]
 8010c1e:	689b      	ldr	r3, [r3, #8]
 8010c20:	4798      	blx	r3
 8010c22:	4b0e      	ldr	r3, [pc, #56]	@ (8010c5c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xa4>)
 8010c24:	a903      	add	r1, sp, #12
 8010c26:	9303      	str	r3, [sp, #12]
 8010c28:	9b00      	ldr	r3, [sp, #0]
 8010c2a:	6920      	ldr	r0, [r4, #16]
 8010c2c:	80cb      	strh	r3, [r1, #6]
 8010c2e:	9b01      	ldr	r3, [sp, #4]
 8010c30:	710d      	strb	r5, [r1, #4]
 8010c32:	810b      	strh	r3, [r1, #8]
 8010c34:	2300      	movs	r3, #0
 8010c36:	814b      	strh	r3, [r1, #10]
 8010c38:	6803      	ldr	r3, [r0, #0]
 8010c3a:	681b      	ldr	r3, [r3, #0]
 8010c3c:	4798      	blx	r3
 8010c3e:	b007      	add	sp, #28
 8010c40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c42:	2900      	cmp	r1, #0
 8010c44:	d1ed      	bne.n	8010c22 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x6a>
 8010c46:	9b00      	ldr	r3, [sp, #0]
 8010c48:	8083      	strh	r3, [r0, #4]
 8010c4a:	9b01      	ldr	r3, [sp, #4]
 8010c4c:	80c3      	strh	r3, [r0, #6]
 8010c4e:	60a1      	str	r1, [r4, #8]
 8010c50:	81a1      	strh	r1, [r4, #12]
 8010c52:	73a1      	strb	r1, [r4, #14]
 8010c54:	e7e5      	b.n	8010c22 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x6a>
 8010c56:	46c0      	nop			@ (mov r8, r8)
 8010c58:	08015b24 	.word	0x08015b24
 8010c5c:	08015afc 	.word	0x08015afc

08010c60 <appendBitsToBuffer>:
 8010c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c62:	3901      	subs	r1, #1
 8010c64:	2900      	cmp	r1, #0
 8010c66:	db12      	blt.n	8010c8e <appendBitsToBuffer+0x2e>
 8010c68:	681c      	ldr	r4, [r3, #0]
 8010c6a:	2601      	movs	r6, #1
 8010c6c:	10e5      	asrs	r5, r4, #3
 8010c6e:	0004      	movs	r4, r0
 8010c70:	40cc      	lsrs	r4, r1
 8010c72:	2707      	movs	r7, #7
 8010c74:	4034      	ands	r4, r6
 8010c76:	681e      	ldr	r6, [r3, #0]
 8010c78:	1955      	adds	r5, r2, r5
 8010c7a:	43b7      	bics	r7, r6
 8010c7c:	40bc      	lsls	r4, r7
 8010c7e:	782e      	ldrb	r6, [r5, #0]
 8010c80:	3901      	subs	r1, #1
 8010c82:	4334      	orrs	r4, r6
 8010c84:	702c      	strb	r4, [r5, #0]
 8010c86:	681c      	ldr	r4, [r3, #0]
 8010c88:	3401      	adds	r4, #1
 8010c8a:	601c      	str	r4, [r3, #0]
 8010c8c:	e7ea      	b.n	8010c64 <appendBitsToBuffer+0x4>
 8010c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010c90 <getNumRawDataModules>:
 8010c90:	b570      	push	{r4, r5, r6, lr}
 8010c92:	0004      	movs	r4, r0
 8010c94:	3408      	adds	r4, #8
 8010c96:	0124      	lsls	r4, r4, #4
 8010c98:	4344      	muls	r4, r0
 8010c9a:	0005      	movs	r5, r0
 8010c9c:	3440      	adds	r4, #64	@ 0x40
 8010c9e:	2801      	cmp	r0, #1
 8010ca0:	dd0c      	ble.n	8010cbc <getNumRawDataModules+0x2c>
 8010ca2:	2107      	movs	r1, #7
 8010ca4:	f7ef fae8 	bl	8000278 <__divsi3>
 8010ca8:	2319      	movs	r3, #25
 8010caa:	3002      	adds	r0, #2
 8010cac:	4343      	muls	r3, r0
 8010cae:	3b0a      	subs	r3, #10
 8010cb0:	4358      	muls	r0, r3
 8010cb2:	3837      	subs	r0, #55	@ 0x37
 8010cb4:	1a24      	subs	r4, r4, r0
 8010cb6:	2d06      	cmp	r5, #6
 8010cb8:	dd00      	ble.n	8010cbc <getNumRawDataModules+0x2c>
 8010cba:	3c24      	subs	r4, #36	@ 0x24
 8010cbc:	0020      	movs	r0, r4
 8010cbe:	bd70      	pop	{r4, r5, r6, pc}

08010cc0 <getNumDataCodewords>:
 8010cc0:	b570      	push	{r4, r5, r6, lr}
 8010cc2:	0004      	movs	r4, r0
 8010cc4:	000d      	movs	r5, r1
 8010cc6:	f7ff ffe3 	bl	8010c90 <getNumRawDataModules>
 8010cca:	2207      	movs	r2, #7
 8010ccc:	17c3      	asrs	r3, r0, #31
 8010cce:	4013      	ands	r3, r2
 8010cd0:	1818      	adds	r0, r3, r0
 8010cd2:	2329      	movs	r3, #41	@ 0x29
 8010cd4:	435d      	muls	r5, r3
 8010cd6:	4a05      	ldr	r2, [pc, #20]	@ (8010cec <getNumDataCodewords+0x2c>)
 8010cd8:	4b05      	ldr	r3, [pc, #20]	@ (8010cf0 <getNumDataCodewords+0x30>)
 8010cda:	10c0      	asrs	r0, r0, #3
 8010cdc:	195b      	adds	r3, r3, r5
 8010cde:	1955      	adds	r5, r2, r5
 8010ce0:	5719      	ldrsb	r1, [r3, r4]
 8010ce2:	572b      	ldrsb	r3, [r5, r4]
 8010ce4:	434b      	muls	r3, r1
 8010ce6:	1ac0      	subs	r0, r0, r3
 8010ce8:	bd70      	pop	{r4, r5, r6, pc}
 8010cea:	46c0      	nop			@ (mov r8, r8)
 8010cec:	08015c60 	.word	0x08015c60
 8010cf0:	08015bbc 	.word	0x08015bbc

08010cf4 <reedSolomonMultiply>:
 8010cf4:	b570      	push	{r4, r5, r6, lr}
 8010cf6:	2207      	movs	r2, #7
 8010cf8:	0004      	movs	r4, r0
 8010cfa:	261d      	movs	r6, #29
 8010cfc:	2000      	movs	r0, #0
 8010cfe:	2501      	movs	r5, #1
 8010d00:	11c3      	asrs	r3, r0, #7
 8010d02:	4373      	muls	r3, r6
 8010d04:	0040      	lsls	r0, r0, #1
 8010d06:	4043      	eors	r3, r0
 8010d08:	0008      	movs	r0, r1
 8010d0a:	4110      	asrs	r0, r2
 8010d0c:	4028      	ands	r0, r5
 8010d0e:	4360      	muls	r0, r4
 8010d10:	4058      	eors	r0, r3
 8010d12:	b2c0      	uxtb	r0, r0
 8010d14:	3a01      	subs	r2, #1
 8010d16:	d2f3      	bcs.n	8010d00 <reedSolomonMultiply+0xc>
 8010d18:	bd70      	pop	{r4, r5, r6, pc}

08010d1a <getModuleBounded>:
 8010d1a:	7803      	ldrb	r3, [r0, #0]
 8010d1c:	435a      	muls	r2, r3
 8010d1e:	1851      	adds	r1, r2, r1
 8010d20:	2207      	movs	r2, #7
 8010d22:	10cb      	asrs	r3, r1, #3
 8010d24:	18c0      	adds	r0, r0, r3
 8010d26:	7840      	ldrb	r0, [r0, #1]
 8010d28:	4011      	ands	r1, r2
 8010d2a:	4108      	asrs	r0, r1
 8010d2c:	2301      	movs	r3, #1
 8010d2e:	4018      	ands	r0, r3
 8010d30:	4770      	bx	lr

08010d32 <setModuleBounded>:
 8010d32:	b510      	push	{r4, lr}
 8010d34:	7804      	ldrb	r4, [r0, #0]
 8010d36:	4362      	muls	r2, r4
 8010d38:	1851      	adds	r1, r2, r1
 8010d3a:	10ca      	asrs	r2, r1, #3
 8010d3c:	3201      	adds	r2, #1
 8010d3e:	1880      	adds	r0, r0, r2
 8010d40:	2207      	movs	r2, #7
 8010d42:	4011      	ands	r1, r2
 8010d44:	3a06      	subs	r2, #6
 8010d46:	2400      	movs	r4, #0
 8010d48:	408a      	lsls	r2, r1
 8010d4a:	5704      	ldrsb	r4, [r0, r4]
 8010d4c:	b252      	sxtb	r2, r2
 8010d4e:	2b00      	cmp	r3, #0
 8010d50:	d002      	beq.n	8010d58 <setModuleBounded+0x26>
 8010d52:	4314      	orrs	r4, r2
 8010d54:	7004      	strb	r4, [r0, #0]
 8010d56:	bd10      	pop	{r4, pc}
 8010d58:	4394      	bics	r4, r2
 8010d5a:	e7fb      	b.n	8010d54 <setModuleBounded+0x22>

08010d5c <fillRectangle>:
 8010d5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010d5e:	0006      	movs	r6, r0
 8010d60:	000f      	movs	r7, r1
 8010d62:	000c      	movs	r4, r1
 8010d64:	9200      	str	r2, [sp, #0]
 8010d66:	9301      	str	r3, [sp, #4]
 8010d68:	9a01      	ldr	r2, [sp, #4]
 8010d6a:	1be3      	subs	r3, r4, r7
 8010d6c:	429a      	cmp	r2, r3
 8010d6e:	dd0e      	ble.n	8010d8e <fillRectangle+0x32>
 8010d70:	0035      	movs	r5, r6
 8010d72:	9a00      	ldr	r2, [sp, #0]
 8010d74:	1bab      	subs	r3, r5, r6
 8010d76:	429a      	cmp	r2, r3
 8010d78:	dd07      	ble.n	8010d8a <fillRectangle+0x2e>
 8010d7a:	0029      	movs	r1, r5
 8010d7c:	2301      	movs	r3, #1
 8010d7e:	0022      	movs	r2, r4
 8010d80:	9808      	ldr	r0, [sp, #32]
 8010d82:	f7ff ffd6 	bl	8010d32 <setModuleBounded>
 8010d86:	3501      	adds	r5, #1
 8010d88:	e7f3      	b.n	8010d72 <fillRectangle+0x16>
 8010d8a:	3401      	adds	r4, #1
 8010d8c:	e7ec      	b.n	8010d68 <fillRectangle+0xc>
 8010d8e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

08010d90 <applyMask>:
 8010d90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d92:	2500      	movs	r5, #0
 8010d94:	2601      	movs	r6, #1
 8010d96:	780b      	ldrb	r3, [r1, #0]
 8010d98:	b089      	sub	sp, #36	@ 0x24
 8010d9a:	9007      	str	r0, [sp, #28]
 8010d9c:	9103      	str	r1, [sp, #12]
 8010d9e:	9205      	str	r2, [sp, #20]
 8010da0:	9304      	str	r3, [sp, #16]
 8010da2:	9b04      	ldr	r3, [sp, #16]
 8010da4:	429d      	cmp	r5, r3
 8010da6:	da5e      	bge.n	8010e66 <applyMask+0xd6>
 8010da8:	106b      	asrs	r3, r5, #1
 8010daa:	9306      	str	r3, [sp, #24]
 8010dac:	2300      	movs	r3, #0
 8010dae:	002f      	movs	r7, r5
 8010db0:	9301      	str	r3, [sp, #4]
 8010db2:	1b7b      	subs	r3, r7, r5
 8010db4:	002a      	movs	r2, r5
 8010db6:	0019      	movs	r1, r3
 8010db8:	9807      	ldr	r0, [sp, #28]
 8010dba:	9302      	str	r3, [sp, #8]
 8010dbc:	f7ff ffad 	bl	8010d1a <getModuleBounded>
 8010dc0:	2800      	cmp	r0, #0
 8010dc2:	d117      	bne.n	8010df4 <applyMask+0x64>
 8010dc4:	9b05      	ldr	r3, [sp, #20]
 8010dc6:	2b07      	cmp	r3, #7
 8010dc8:	d84d      	bhi.n	8010e66 <applyMask+0xd6>
 8010dca:	0018      	movs	r0, r3
 8010dcc:	f7ef f9ac 	bl	8000128 <__gnu_thumb1_case_uqi>
 8010dd0:	271f1c04 	.word	0x271f1c04
 8010dd4:	453b332a 	.word	0x453b332a
 8010dd8:	0034      	movs	r4, r6
 8010dda:	43bc      	bics	r4, r7
 8010ddc:	002a      	movs	r2, r5
 8010dde:	9902      	ldr	r1, [sp, #8]
 8010de0:	9803      	ldr	r0, [sp, #12]
 8010de2:	f7ff ff9a 	bl	8010d1a <getModuleBounded>
 8010de6:	4044      	eors	r4, r0
 8010de8:	b2e3      	uxtb	r3, r4
 8010dea:	002a      	movs	r2, r5
 8010dec:	9902      	ldr	r1, [sp, #8]
 8010dee:	9803      	ldr	r0, [sp, #12]
 8010df0:	f7ff ff9f 	bl	8010d32 <setModuleBounded>
 8010df4:	9b01      	ldr	r3, [sp, #4]
 8010df6:	9a04      	ldr	r2, [sp, #16]
 8010df8:	195b      	adds	r3, r3, r5
 8010dfa:	3701      	adds	r7, #1
 8010dfc:	9301      	str	r3, [sp, #4]
 8010dfe:	1b7b      	subs	r3, r7, r5
 8010e00:	429a      	cmp	r2, r3
 8010e02:	dcd6      	bgt.n	8010db2 <applyMask+0x22>
 8010e04:	3501      	adds	r5, #1
 8010e06:	e7cc      	b.n	8010da2 <applyMask+0x12>
 8010e08:	0034      	movs	r4, r6
 8010e0a:	43ac      	bics	r4, r5
 8010e0c:	e7e6      	b.n	8010ddc <applyMask+0x4c>
 8010e0e:	2103      	movs	r1, #3
 8010e10:	9802      	ldr	r0, [sp, #8]
 8010e12:	f7ef fb17 	bl	8000444 <__aeabi_idivmod>
 8010e16:	424c      	negs	r4, r1
 8010e18:	414c      	adcs	r4, r1
 8010e1a:	b2e4      	uxtb	r4, r4
 8010e1c:	e7de      	b.n	8010ddc <applyMask+0x4c>
 8010e1e:	2103      	movs	r1, #3
 8010e20:	0038      	movs	r0, r7
 8010e22:	e7f6      	b.n	8010e12 <applyMask+0x82>
 8010e24:	2103      	movs	r1, #3
 8010e26:	9802      	ldr	r0, [sp, #8]
 8010e28:	f7ef fa26 	bl	8000278 <__divsi3>
 8010e2c:	0034      	movs	r4, r6
 8010e2e:	9b06      	ldr	r3, [sp, #24]
 8010e30:	18c0      	adds	r0, r0, r3
 8010e32:	4384      	bics	r4, r0
 8010e34:	e7d2      	b.n	8010ddc <applyMask+0x4c>
 8010e36:	2103      	movs	r1, #3
 8010e38:	9801      	ldr	r0, [sp, #4]
 8010e3a:	f7ef fb03 	bl	8000444 <__aeabi_idivmod>
 8010e3e:	9c01      	ldr	r4, [sp, #4]
 8010e40:	4034      	ands	r4, r6
 8010e42:	1861      	adds	r1, r4, r1
 8010e44:	e7e7      	b.n	8010e16 <applyMask+0x86>
 8010e46:	2103      	movs	r1, #3
 8010e48:	9801      	ldr	r0, [sp, #4]
 8010e4a:	f7ef fafb 	bl	8000444 <__aeabi_idivmod>
 8010e4e:	9b01      	ldr	r3, [sp, #4]
 8010e50:	0034      	movs	r4, r6
 8010e52:	4033      	ands	r3, r6
 8010e54:	1859      	adds	r1, r3, r1
 8010e56:	438c      	bics	r4, r1
 8010e58:	e7c0      	b.n	8010ddc <applyMask+0x4c>
 8010e5a:	2103      	movs	r1, #3
 8010e5c:	9801      	ldr	r0, [sp, #4]
 8010e5e:	f7ef faf1 	bl	8000444 <__aeabi_idivmod>
 8010e62:	003b      	movs	r3, r7
 8010e64:	e7f4      	b.n	8010e50 <applyMask+0xc0>
 8010e66:	b009      	add	sp, #36	@ 0x24
 8010e68:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010e6c <drawFormatBits>:
 8010e6c:	4b36      	ldr	r3, [pc, #216]	@ (8010f48 <drawFormatBits+0xdc>)
 8010e6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010e70:	0080      	lsls	r0, r0, #2
 8010e72:	58c5      	ldr	r5, [r0, r3]
 8010e74:	260a      	movs	r6, #10
 8010e76:	00ed      	lsls	r5, r5, #3
 8010e78:	4329      	orrs	r1, r5
 8010e7a:	000d      	movs	r5, r1
 8010e7c:	0014      	movs	r4, r2
 8010e7e:	4a33      	ldr	r2, [pc, #204]	@ (8010f4c <drawFormatBits+0xe0>)
 8010e80:	006b      	lsls	r3, r5, #1
 8010e82:	126d      	asrs	r5, r5, #9
 8010e84:	4355      	muls	r5, r2
 8010e86:	3e01      	subs	r6, #1
 8010e88:	405d      	eors	r5, r3
 8010e8a:	2e00      	cmp	r6, #0
 8010e8c:	d1f8      	bne.n	8010e80 <drawFormatBits+0x14>
 8010e8e:	2701      	movs	r7, #1
 8010e90:	0289      	lsls	r1, r1, #10
 8010e92:	4329      	orrs	r1, r5
 8010e94:	4d2e      	ldr	r5, [pc, #184]	@ (8010f50 <drawFormatBits+0xe4>)
 8010e96:	404d      	eors	r5, r1
 8010e98:	002b      	movs	r3, r5
 8010e9a:	4133      	asrs	r3, r6
 8010e9c:	0032      	movs	r2, r6
 8010e9e:	403b      	ands	r3, r7
 8010ea0:	2108      	movs	r1, #8
 8010ea2:	0020      	movs	r0, r4
 8010ea4:	3601      	adds	r6, #1
 8010ea6:	f7ff ff44 	bl	8010d32 <setModuleBounded>
 8010eaa:	2e06      	cmp	r6, #6
 8010eac:	d1f4      	bne.n	8010e98 <drawFormatBits+0x2c>
 8010eae:	11ab      	asrs	r3, r5, #6
 8010eb0:	403b      	ands	r3, r7
 8010eb2:	2207      	movs	r2, #7
 8010eb4:	2108      	movs	r1, #8
 8010eb6:	0020      	movs	r0, r4
 8010eb8:	f7ff ff3b 	bl	8010d32 <setModuleBounded>
 8010ebc:	2208      	movs	r2, #8
 8010ebe:	11eb      	asrs	r3, r5, #7
 8010ec0:	403b      	ands	r3, r7
 8010ec2:	0011      	movs	r1, r2
 8010ec4:	0020      	movs	r0, r4
 8010ec6:	f7ff ff34 	bl	8010d32 <setModuleBounded>
 8010eca:	122b      	asrs	r3, r5, #8
 8010ecc:	403b      	ands	r3, r7
 8010ece:	2208      	movs	r2, #8
 8010ed0:	2107      	movs	r1, #7
 8010ed2:	0020      	movs	r0, r4
 8010ed4:	f7ff ff2d 	bl	8010d32 <setModuleBounded>
 8010ed8:	2701      	movs	r7, #1
 8010eda:	3603      	adds	r6, #3
 8010edc:	002b      	movs	r3, r5
 8010ede:	220e      	movs	r2, #14
 8010ee0:	4133      	asrs	r3, r6
 8010ee2:	1b91      	subs	r1, r2, r6
 8010ee4:	403b      	ands	r3, r7
 8010ee6:	3a06      	subs	r2, #6
 8010ee8:	0020      	movs	r0, r4
 8010eea:	3601      	adds	r6, #1
 8010eec:	f7ff ff21 	bl	8010d32 <setModuleBounded>
 8010ef0:	2e0f      	cmp	r6, #15
 8010ef2:	d1f3      	bne.n	8010edc <drawFormatBits+0x70>
 8010ef4:	2700      	movs	r7, #0
 8010ef6:	7826      	ldrb	r6, [r4, #0]
 8010ef8:	002b      	movs	r3, r5
 8010efa:	2201      	movs	r2, #1
 8010efc:	413b      	asrs	r3, r7
 8010efe:	1e71      	subs	r1, r6, #1
 8010f00:	4013      	ands	r3, r2
 8010f02:	1bc9      	subs	r1, r1, r7
 8010f04:	3207      	adds	r2, #7
 8010f06:	0020      	movs	r0, r4
 8010f08:	3701      	adds	r7, #1
 8010f0a:	f7ff ff12 	bl	8010d32 <setModuleBounded>
 8010f0e:	2f08      	cmp	r7, #8
 8010f10:	d1f2      	bne.n	8010ef8 <drawFormatBits+0x8c>
 8010f12:	230f      	movs	r3, #15
 8010f14:	1b9b      	subs	r3, r3, r6
 8010f16:	1ff7      	subs	r7, r6, #7
 8010f18:	9301      	str	r3, [sp, #4]
 8010f1a:	002a      	movs	r2, r5
 8010f1c:	9b01      	ldr	r3, [sp, #4]
 8010f1e:	2108      	movs	r1, #8
 8010f20:	19db      	adds	r3, r3, r7
 8010f22:	411a      	asrs	r2, r3
 8010f24:	0013      	movs	r3, r2
 8010f26:	2201      	movs	r2, #1
 8010f28:	0020      	movs	r0, r4
 8010f2a:	4013      	ands	r3, r2
 8010f2c:	003a      	movs	r2, r7
 8010f2e:	3701      	adds	r7, #1
 8010f30:	f7ff feff 	bl	8010d32 <setModuleBounded>
 8010f34:	42be      	cmp	r6, r7
 8010f36:	d1f0      	bne.n	8010f1a <drawFormatBits+0xae>
 8010f38:	0032      	movs	r2, r6
 8010f3a:	2301      	movs	r3, #1
 8010f3c:	3a08      	subs	r2, #8
 8010f3e:	2108      	movs	r1, #8
 8010f40:	0020      	movs	r0, r4
 8010f42:	f7ff fef6 	bl	8010d32 <setModuleBounded>
 8010f46:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8010f48:	08015d04 	.word	0x08015d04
 8010f4c:	00000537 	.word	0x00000537
 8010f50:	00005412 	.word	0x00005412

08010f54 <calcSegmentBitLength>:
 8010f54:	b510      	push	{r4, lr}
 8010f56:	4c13      	ldr	r4, [pc, #76]	@ (8010fa4 <calcSegmentBitLength+0x50>)
 8010f58:	42a1      	cmp	r1, r4
 8010f5a:	d81f      	bhi.n	8010f9c <calcSegmentBitLength+0x48>
 8010f5c:	2801      	cmp	r0, #1
 8010f5e:	d108      	bne.n	8010f72 <calcSegmentBitLength+0x1e>
 8010f60:	3009      	adds	r0, #9
 8010f62:	4348      	muls	r0, r1
 8010f64:	2103      	movs	r1, #3
 8010f66:	3002      	adds	r0, #2
 8010f68:	f7ef f986 	bl	8000278 <__divsi3>
 8010f6c:	42a0      	cmp	r0, r4
 8010f6e:	dc15      	bgt.n	8010f9c <calcSegmentBitLength+0x48>
 8010f70:	bd10      	pop	{r4, pc}
 8010f72:	2802      	cmp	r0, #2
 8010f74:	d104      	bne.n	8010f80 <calcSegmentBitLength+0x2c>
 8010f76:	3009      	adds	r0, #9
 8010f78:	4348      	muls	r0, r1
 8010f7a:	3001      	adds	r0, #1
 8010f7c:	1040      	asrs	r0, r0, #1
 8010f7e:	e7f5      	b.n	8010f6c <calcSegmentBitLength+0x18>
 8010f80:	2804      	cmp	r0, #4
 8010f82:	d101      	bne.n	8010f88 <calcSegmentBitLength+0x34>
 8010f84:	00c8      	lsls	r0, r1, #3
 8010f86:	e7f1      	b.n	8010f6c <calcSegmentBitLength+0x18>
 8010f88:	2808      	cmp	r0, #8
 8010f8a:	d102      	bne.n	8010f92 <calcSegmentBitLength+0x3e>
 8010f8c:	3005      	adds	r0, #5
 8010f8e:	4348      	muls	r0, r1
 8010f90:	e7ec      	b.n	8010f6c <calcSegmentBitLength+0x18>
 8010f92:	2807      	cmp	r0, #7
 8010f94:	d102      	bne.n	8010f9c <calcSegmentBitLength+0x48>
 8010f96:	3011      	adds	r0, #17
 8010f98:	2900      	cmp	r1, #0
 8010f9a:	d0e9      	beq.n	8010f70 <calcSegmentBitLength+0x1c>
 8010f9c:	2001      	movs	r0, #1
 8010f9e:	4240      	negs	r0, r0
 8010fa0:	e7e6      	b.n	8010f70 <calcSegmentBitLength+0x1c>
 8010fa2:	46c0      	nop			@ (mov r8, r8)
 8010fa4:	00007fff 	.word	0x00007fff

08010fa8 <numCharCountBits>:
 8010fa8:	b510      	push	{r4, lr}
 8010faa:	0004      	movs	r4, r0
 8010fac:	1dc8      	adds	r0, r1, #7
 8010fae:	2111      	movs	r1, #17
 8010fb0:	f7ef f962 	bl	8000278 <__divsi3>
 8010fb4:	0003      	movs	r3, r0
 8010fb6:	1e60      	subs	r0, r4, #1
 8010fb8:	2807      	cmp	r0, #7
 8010fba:	d805      	bhi.n	8010fc8 <numCharCountBits+0x20>
 8010fbc:	f7ef f8b4 	bl	8000128 <__gnu_thumb1_case_uqi>
 8010fc0:	0e040b07 	.word	0x0e040b07
 8010fc4:	11140404 	.word	0x11140404
 8010fc8:	2001      	movs	r0, #1
 8010fca:	4240      	negs	r0, r0
 8010fcc:	bd10      	pop	{r4, pc}
 8010fce:	4a07      	ldr	r2, [pc, #28]	@ (8010fec <numCharCountBits+0x44>)
 8010fd0:	009b      	lsls	r3, r3, #2
 8010fd2:	5898      	ldr	r0, [r3, r2]
 8010fd4:	e7fa      	b.n	8010fcc <numCharCountBits+0x24>
 8010fd6:	009b      	lsls	r3, r3, #2
 8010fd8:	4a05      	ldr	r2, [pc, #20]	@ (8010ff0 <numCharCountBits+0x48>)
 8010fda:	e7fa      	b.n	8010fd2 <numCharCountBits+0x2a>
 8010fdc:	009b      	lsls	r3, r3, #2
 8010fde:	4a05      	ldr	r2, [pc, #20]	@ (8010ff4 <numCharCountBits+0x4c>)
 8010fe0:	e7f7      	b.n	8010fd2 <numCharCountBits+0x2a>
 8010fe2:	009b      	lsls	r3, r3, #2
 8010fe4:	4a04      	ldr	r2, [pc, #16]	@ (8010ff8 <numCharCountBits+0x50>)
 8010fe6:	e7f4      	b.n	8010fd2 <numCharCountBits+0x2a>
 8010fe8:	2000      	movs	r0, #0
 8010fea:	e7ef      	b.n	8010fcc <numCharCountBits+0x24>
 8010fec:	08015d14 	.word	0x08015d14
 8010ff0:	08015d20 	.word	0x08015d20
 8010ff4:	08015d2c 	.word	0x08015d2c
 8010ff8:	08015d38 	.word	0x08015d38

08010ffc <finderPenaltyAddHistory>:
 8010ffc:	b570      	push	{r4, r5, r6, lr}
 8010ffe:	680b      	ldr	r3, [r1, #0]
 8011000:	0005      	movs	r5, r0
 8011002:	000c      	movs	r4, r1
 8011004:	2b00      	cmp	r3, #0
 8011006:	d100      	bne.n	801100a <finderPenaltyAddHistory+0xe>
 8011008:	1885      	adds	r5, r0, r2
 801100a:	1d20      	adds	r0, r4, #4
 801100c:	2218      	movs	r2, #24
 801100e:	0021      	movs	r1, r4
 8011010:	f001 fdb2 	bl	8012b78 <memmove>
 8011014:	6025      	str	r5, [r4, #0]
 8011016:	bd70      	pop	{r4, r5, r6, pc}

08011018 <getAlignmentPatternPositions.part.0>:
 8011018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801101a:	000f      	movs	r7, r1
 801101c:	2107      	movs	r1, #7
 801101e:	0004      	movs	r4, r0
 8011020:	f7ef f92a 	bl	8000278 <__divsi3>
 8011024:	1c86      	adds	r6, r0, #2
 8011026:	1c45      	adds	r5, r0, #1
 8011028:	201a      	movs	r0, #26
 801102a:	2c20      	cmp	r4, #32
 801102c:	d007      	beq.n	801103e <getAlignmentPatternPositions.part.0+0x26>
 801102e:	0060      	lsls	r0, r4, #1
 8011030:	1980      	adds	r0, r0, r6
 8011032:	0040      	lsls	r0, r0, #1
 8011034:	3001      	adds	r0, #1
 8011036:	0069      	lsls	r1, r5, #1
 8011038:	f7ef f91e 	bl	8000278 <__divsi3>
 801103c:	0040      	lsls	r0, r0, #1
 801103e:	00a4      	lsls	r4, r4, #2
 8011040:	340a      	adds	r4, #10
 8011042:	2d00      	cmp	r5, #0
 8011044:	dd03      	ble.n	801104e <getAlignmentPatternPositions.part.0+0x36>
 8011046:	557c      	strb	r4, [r7, r5]
 8011048:	3d01      	subs	r5, #1
 801104a:	1a24      	subs	r4, r4, r0
 801104c:	e7f9      	b.n	8011042 <getAlignmentPatternPositions.part.0+0x2a>
 801104e:	2306      	movs	r3, #6
 8011050:	0030      	movs	r0, r6
 8011052:	703b      	strb	r3, [r7, #0]
 8011054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011056 <finderPenaltyCountPatterns.isra.1>:
 8011056:	b570      	push	{r4, r5, r6, lr}
 8011058:	6842      	ldr	r2, [r0, #4]
 801105a:	2a00      	cmp	r2, #0
 801105c:	dd21      	ble.n	80110a2 <finderPenaltyCountPatterns.isra.1+0x4c>
 801105e:	6883      	ldr	r3, [r0, #8]
 8011060:	429a      	cmp	r2, r3
 8011062:	d11e      	bne.n	80110a2 <finderPenaltyCountPatterns.isra.1+0x4c>
 8011064:	2303      	movs	r3, #3
 8011066:	4353      	muls	r3, r2
 8011068:	68c1      	ldr	r1, [r0, #12]
 801106a:	4299      	cmp	r1, r3
 801106c:	d119      	bne.n	80110a2 <finderPenaltyCountPatterns.isra.1+0x4c>
 801106e:	6903      	ldr	r3, [r0, #16]
 8011070:	429a      	cmp	r2, r3
 8011072:	d116      	bne.n	80110a2 <finderPenaltyCountPatterns.isra.1+0x4c>
 8011074:	6943      	ldr	r3, [r0, #20]
 8011076:	429a      	cmp	r2, r3
 8011078:	d113      	bne.n	80110a2 <finderPenaltyCountPatterns.isra.1+0x4c>
 801107a:	6801      	ldr	r1, [r0, #0]
 801107c:	6984      	ldr	r4, [r0, #24]
 801107e:	0095      	lsls	r5, r2, #2
 8011080:	2000      	movs	r0, #0
 8011082:	42a9      	cmp	r1, r5
 8011084:	db04      	blt.n	8011090 <finderPenaltyCountPatterns.isra.1+0x3a>
 8011086:	0fd3      	lsrs	r3, r2, #31
 8011088:	0018      	movs	r0, r3
 801108a:	17e6      	asrs	r6, r4, #31
 801108c:	4294      	cmp	r4, r2
 801108e:	4170      	adcs	r0, r6
 8011090:	2300      	movs	r3, #0
 8011092:	42a5      	cmp	r5, r4
 8011094:	dc03      	bgt.n	801109e <finderPenaltyCountPatterns.isra.1+0x48>
 8011096:	0fd3      	lsrs	r3, r2, #31
 8011098:	17cc      	asrs	r4, r1, #31
 801109a:	4291      	cmp	r1, r2
 801109c:	4163      	adcs	r3, r4
 801109e:	1818      	adds	r0, r3, r0
 80110a0:	bd70      	pop	{r4, r5, r6, pc}
 80110a2:	2000      	movs	r0, #0
 80110a4:	0003      	movs	r3, r0
 80110a6:	e7fa      	b.n	801109e <finderPenaltyCountPatterns.isra.1+0x48>

080110a8 <setModuleUnbounded.constprop.2>:
 80110a8:	7803      	ldrb	r3, [r0, #0]
 80110aa:	b510      	push	{r4, lr}
 80110ac:	428b      	cmp	r3, r1
 80110ae:	d904      	bls.n	80110ba <setModuleUnbounded.constprop.2+0x12>
 80110b0:	4293      	cmp	r3, r2
 80110b2:	d902      	bls.n	80110ba <setModuleUnbounded.constprop.2+0x12>
 80110b4:	2300      	movs	r3, #0
 80110b6:	f7ff fe3c 	bl	8010d32 <setModuleBounded>
 80110ba:	bd10      	pop	{r4, pc}

080110bc <initializeFunctionModules>:
 80110bc:	0083      	lsls	r3, r0, #2
 80110be:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110c0:	001d      	movs	r5, r3
 80110c2:	3511      	adds	r5, #17
 80110c4:	002a      	movs	r2, r5
 80110c6:	000c      	movs	r4, r1
 80110c8:	436a      	muls	r2, r5
 80110ca:	3207      	adds	r2, #7
 80110cc:	10d2      	asrs	r2, r2, #3
 80110ce:	b087      	sub	sp, #28
 80110d0:	0007      	movs	r7, r0
 80110d2:	3201      	adds	r2, #1
 80110d4:	2100      	movs	r1, #0
 80110d6:	0020      	movs	r0, r4
 80110d8:	9303      	str	r3, [sp, #12]
 80110da:	f001 fd60 	bl	8012b9e <memset>
 80110de:	002b      	movs	r3, r5
 80110e0:	7025      	strb	r5, [r4, #0]
 80110e2:	2201      	movs	r2, #1
 80110e4:	2100      	movs	r1, #0
 80110e6:	2006      	movs	r0, #6
 80110e8:	9400      	str	r4, [sp, #0]
 80110ea:	f7ff fe37 	bl	8010d5c <fillRectangle>
 80110ee:	002a      	movs	r2, r5
 80110f0:	2301      	movs	r3, #1
 80110f2:	2106      	movs	r1, #6
 80110f4:	2000      	movs	r0, #0
 80110f6:	9400      	str	r4, [sp, #0]
 80110f8:	f7ff fe30 	bl	8010d5c <fillRectangle>
 80110fc:	2309      	movs	r3, #9
 80110fe:	2100      	movs	r1, #0
 8011100:	00bd      	lsls	r5, r7, #2
 8011102:	001a      	movs	r2, r3
 8011104:	0008      	movs	r0, r1
 8011106:	3509      	adds	r5, #9
 8011108:	9400      	str	r4, [sp, #0]
 801110a:	f7ff fe27 	bl	8010d5c <fillRectangle>
 801110e:	2309      	movs	r3, #9
 8011110:	2208      	movs	r2, #8
 8011112:	2100      	movs	r1, #0
 8011114:	0028      	movs	r0, r5
 8011116:	9400      	str	r4, [sp, #0]
 8011118:	f7ff fe20 	bl	8010d5c <fillRectangle>
 801111c:	9400      	str	r4, [sp, #0]
 801111e:	2308      	movs	r3, #8
 8011120:	2209      	movs	r2, #9
 8011122:	0029      	movs	r1, r5
 8011124:	2000      	movs	r0, #0
 8011126:	f7ff fe19 	bl	8010d5c <fillRectangle>
 801112a:	2f01      	cmp	r7, #1
 801112c:	d039      	beq.n	80111a2 <initializeFunctionModules+0xe6>
 801112e:	a904      	add	r1, sp, #16
 8011130:	0038      	movs	r0, r7
 8011132:	f7ff ff71 	bl	8011018 <getAlignmentPatternPositions.part.0>
 8011136:	2500      	movs	r5, #0
 8011138:	9002      	str	r0, [sp, #8]
 801113a:	9b02      	ldr	r3, [sp, #8]
 801113c:	429d      	cmp	r5, r3
 801113e:	da1e      	bge.n	801117e <initializeFunctionModules+0xc2>
 8011140:	2600      	movs	r6, #0
 8011142:	9b02      	ldr	r3, [sp, #8]
 8011144:	429e      	cmp	r6, r3
 8011146:	d018      	beq.n	801117a <initializeFunctionModules+0xbe>
 8011148:	002b      	movs	r3, r5
 801114a:	4333      	orrs	r3, r6
 801114c:	d013      	beq.n	8011176 <initializeFunctionModules+0xba>
 801114e:	9b02      	ldr	r3, [sp, #8]
 8011150:	3b01      	subs	r3, #1
 8011152:	2d00      	cmp	r5, #0
 8011154:	d101      	bne.n	801115a <initializeFunctionModules+0x9e>
 8011156:	429e      	cmp	r6, r3
 8011158:	d00d      	beq.n	8011176 <initializeFunctionModules+0xba>
 801115a:	429d      	cmp	r5, r3
 801115c:	d101      	bne.n	8011162 <initializeFunctionModules+0xa6>
 801115e:	2e00      	cmp	r6, #0
 8011160:	d009      	beq.n	8011176 <initializeFunctionModules+0xba>
 8011162:	ab04      	add	r3, sp, #16
 8011164:	5cf1      	ldrb	r1, [r6, r3]
 8011166:	5ce8      	ldrb	r0, [r5, r3]
 8011168:	2305      	movs	r3, #5
 801116a:	3902      	subs	r1, #2
 801116c:	3802      	subs	r0, #2
 801116e:	9400      	str	r4, [sp, #0]
 8011170:	001a      	movs	r2, r3
 8011172:	f7ff fdf3 	bl	8010d5c <fillRectangle>
 8011176:	3601      	adds	r6, #1
 8011178:	e7e3      	b.n	8011142 <initializeFunctionModules+0x86>
 801117a:	3501      	adds	r5, #1
 801117c:	e7dd      	b.n	801113a <initializeFunctionModules+0x7e>
 801117e:	2f06      	cmp	r7, #6
 8011180:	dd0f      	ble.n	80111a2 <initializeFunctionModules+0xe6>
 8011182:	9d03      	ldr	r5, [sp, #12]
 8011184:	2306      	movs	r3, #6
 8011186:	3506      	adds	r5, #6
 8011188:	2203      	movs	r2, #3
 801118a:	2100      	movs	r1, #0
 801118c:	0028      	movs	r0, r5
 801118e:	9400      	str	r4, [sp, #0]
 8011190:	f7ff fde4 	bl	8010d5c <fillRectangle>
 8011194:	9400      	str	r4, [sp, #0]
 8011196:	2303      	movs	r3, #3
 8011198:	2206      	movs	r2, #6
 801119a:	0029      	movs	r1, r5
 801119c:	2000      	movs	r0, #0
 801119e:	f7ff fddd 	bl	8010d5c <fillRectangle>
 80111a2:	b007      	add	sp, #28
 80111a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080111a8 <qrcodegen_encodeSegmentsAdvanced>:
 80111a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111aa:	b099      	sub	sp, #100	@ 0x64
 80111ac:	9301      	str	r3, [sp, #4]
 80111ae:	ab1e      	add	r3, sp, #120	@ 0x78
 80111b0:	9202      	str	r2, [sp, #8]
 80111b2:	cb04      	ldmia	r3!, {r2}
 80111b4:	9004      	str	r0, [sp, #16]
 80111b6:	781b      	ldrb	r3, [r3, #0]
 80111b8:	9107      	str	r1, [sp, #28]
 80111ba:	b25b      	sxtb	r3, r3
 80111bc:	9306      	str	r3, [sp, #24]
 80111be:	ab20      	add	r3, sp, #128	@ 0x80
 80111c0:	781b      	ldrb	r3, [r3, #0]
 80111c2:	9208      	str	r2, [sp, #32]
 80111c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80111c6:	9902      	ldr	r1, [sp, #8]
 80111c8:	9801      	ldr	r0, [sp, #4]
 80111ca:	f7ff fd79 	bl	8010cc0 <getNumDataCodewords>
 80111ce:	2300      	movs	r3, #0
 80111d0:	9c04      	ldr	r4, [sp, #16]
 80111d2:	001d      	movs	r5, r3
 80111d4:	0026      	movs	r6, r4
 80111d6:	9005      	str	r0, [sp, #20]
 80111d8:	9303      	str	r3, [sp, #12]
 80111da:	9b07      	ldr	r3, [sp, #28]
 80111dc:	9a03      	ldr	r2, [sp, #12]
 80111de:	4293      	cmp	r3, r2
 80111e0:	d014      	beq.n	801120c <qrcodegen_encodeSegmentsAdvanced+0x64>
 80111e2:	7830      	ldrb	r0, [r6, #0]
 80111e4:	9901      	ldr	r1, [sp, #4]
 80111e6:	f7ff fedf 	bl	8010fa8 <numCharCountBits>
 80111ea:	2301      	movs	r3, #1
 80111ec:	6872      	ldr	r2, [r6, #4]
 80111ee:	68f7      	ldr	r7, [r6, #12]
 80111f0:	4083      	lsls	r3, r0
 80111f2:	429a      	cmp	r2, r3
 80111f4:	da10      	bge.n	8011218 <qrcodegen_encodeSegmentsAdvanced+0x70>
 80111f6:	3004      	adds	r0, #4
 80111f8:	19c7      	adds	r7, r0, r7
 80111fa:	4bc5      	ldr	r3, [pc, #788]	@ (8011510 <qrcodegen_encodeSegmentsAdvanced+0x368>)
 80111fc:	19ed      	adds	r5, r5, r7
 80111fe:	3610      	adds	r6, #16
 8011200:	429d      	cmp	r5, r3
 8011202:	dc09      	bgt.n	8011218 <qrcodegen_encodeSegmentsAdvanced+0x70>
 8011204:	9b03      	ldr	r3, [sp, #12]
 8011206:	3301      	adds	r3, #1
 8011208:	9303      	str	r3, [sp, #12]
 801120a:	e7e6      	b.n	80111da <qrcodegen_encodeSegmentsAdvanced+0x32>
 801120c:	1c6b      	adds	r3, r5, #1
 801120e:	d003      	beq.n	8011218 <qrcodegen_encodeSegmentsAdvanced+0x70>
 8011210:	9b05      	ldr	r3, [sp, #20]
 8011212:	00db      	lsls	r3, r3, #3
 8011214:	42ab      	cmp	r3, r5
 8011216:	da0c      	bge.n	8011232 <qrcodegen_encodeSegmentsAdvanced+0x8a>
 8011218:	9b01      	ldr	r3, [sp, #4]
 801121a:	9a08      	ldr	r2, [sp, #32]
 801121c:	4293      	cmp	r3, r2
 801121e:	db04      	blt.n	801122a <qrcodegen_encodeSegmentsAdvanced+0x82>
 8011220:	2000      	movs	r0, #0
 8011222:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8011224:	7018      	strb	r0, [r3, #0]
 8011226:	b019      	add	sp, #100	@ 0x64
 8011228:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801122a:	9b01      	ldr	r3, [sp, #4]
 801122c:	3301      	adds	r3, #1
 801122e:	9301      	str	r3, [sp, #4]
 8011230:	e7c9      	b.n	80111c6 <qrcodegen_encodeSegmentsAdvanced+0x1e>
 8011232:	2601      	movs	r6, #1
 8011234:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011236:	2b00      	cmp	r3, #0
 8011238:	d008      	beq.n	801124c <qrcodegen_encodeSegmentsAdvanced+0xa4>
 801123a:	b2f7      	uxtb	r7, r6
 801123c:	0039      	movs	r1, r7
 801123e:	9801      	ldr	r0, [sp, #4]
 8011240:	f7ff fd3e 	bl	8010cc0 <getNumDataCodewords>
 8011244:	00c0      	lsls	r0, r0, #3
 8011246:	42a8      	cmp	r0, r5
 8011248:	db00      	blt.n	801124c <qrcodegen_encodeSegmentsAdvanced+0xa4>
 801124a:	9702      	str	r7, [sp, #8]
 801124c:	3601      	adds	r6, #1
 801124e:	2e04      	cmp	r6, #4
 8011250:	d1f0      	bne.n	8011234 <qrcodegen_encodeSegmentsAdvanced+0x8c>
 8011252:	2500      	movs	r5, #0
 8011254:	2701      	movs	r7, #1
 8011256:	9b01      	ldr	r3, [sp, #4]
 8011258:	2100      	movs	r1, #0
 801125a:	009a      	lsls	r2, r3, #2
 801125c:	3211      	adds	r2, #17
 801125e:	4352      	muls	r2, r2
 8011260:	3207      	adds	r2, #7
 8011262:	10d2      	asrs	r2, r2, #3
 8011264:	3201      	adds	r2, #1
 8011266:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011268:	f001 fc99 	bl	8012b9e <memset>
 801126c:	950f      	str	r5, [sp, #60]	@ 0x3c
 801126e:	9b03      	ldr	r3, [sp, #12]
 8011270:	429d      	cmp	r5, r3
 8011272:	d024      	beq.n	80112be <qrcodegen_encodeSegmentsAdvanced+0x116>
 8011274:	ab0f      	add	r3, sp, #60	@ 0x3c
 8011276:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8011278:	7820      	ldrb	r0, [r4, #0]
 801127a:	2104      	movs	r1, #4
 801127c:	f7ff fcf0 	bl	8010c60 <appendBitsToBuffer>
 8011280:	9901      	ldr	r1, [sp, #4]
 8011282:	7820      	ldrb	r0, [r4, #0]
 8011284:	f7ff fe90 	bl	8010fa8 <numCharCountBits>
 8011288:	ab0f      	add	r3, sp, #60	@ 0x3c
 801128a:	0001      	movs	r1, r0
 801128c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801128e:	6860      	ldr	r0, [r4, #4]
 8011290:	f7ff fce6 	bl	8010c60 <appendBitsToBuffer>
 8011294:	2600      	movs	r6, #0
 8011296:	68e3      	ldr	r3, [r4, #12]
 8011298:	42b3      	cmp	r3, r6
 801129a:	dd0d      	ble.n	80112b8 <qrcodegen_encodeSegmentsAdvanced+0x110>
 801129c:	68a2      	ldr	r2, [r4, #8]
 801129e:	10f3      	asrs	r3, r6, #3
 80112a0:	5cd0      	ldrb	r0, [r2, r3]
 80112a2:	2307      	movs	r3, #7
 80112a4:	43b3      	bics	r3, r6
 80112a6:	4118      	asrs	r0, r3
 80112a8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80112aa:	4038      	ands	r0, r7
 80112ac:	ab0f      	add	r3, sp, #60	@ 0x3c
 80112ae:	2101      	movs	r1, #1
 80112b0:	f7ff fcd6 	bl	8010c60 <appendBitsToBuffer>
 80112b4:	3601      	adds	r6, #1
 80112b6:	e7ee      	b.n	8011296 <qrcodegen_encodeSegmentsAdvanced+0xee>
 80112b8:	3501      	adds	r5, #1
 80112ba:	3410      	adds	r4, #16
 80112bc:	e7d7      	b.n	801126e <qrcodegen_encodeSegmentsAdvanced+0xc6>
 80112be:	9902      	ldr	r1, [sp, #8]
 80112c0:	9801      	ldr	r0, [sp, #4]
 80112c2:	f7ff fcfd 	bl	8010cc0 <getNumDataCodewords>
 80112c6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80112c8:	00c5      	lsls	r5, r0, #3
 80112ca:	9007      	str	r0, [sp, #28]
 80112cc:	1ae9      	subs	r1, r5, r3
 80112ce:	2904      	cmp	r1, #4
 80112d0:	dd00      	ble.n	80112d4 <qrcodegen_encodeSegmentsAdvanced+0x12c>
 80112d2:	2104      	movs	r1, #4
 80112d4:	ab0f      	add	r3, sp, #60	@ 0x3c
 80112d6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80112d8:	2000      	movs	r0, #0
 80112da:	f7ff fcc1 	bl	8010c60 <appendBitsToBuffer>
 80112de:	498d      	ldr	r1, [pc, #564]	@ (8011514 <qrcodegen_encodeSegmentsAdvanced+0x36c>)
 80112e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80112e2:	4019      	ands	r1, r3
 80112e4:	d504      	bpl.n	80112f0 <qrcodegen_encodeSegmentsAdvanced+0x148>
 80112e6:	2308      	movs	r3, #8
 80112e8:	3901      	subs	r1, #1
 80112ea:	425b      	negs	r3, r3
 80112ec:	4319      	orrs	r1, r3
 80112ee:	3101      	adds	r1, #1
 80112f0:	2308      	movs	r3, #8
 80112f2:	1a59      	subs	r1, r3, r1
 80112f4:	3b01      	subs	r3, #1
 80112f6:	4019      	ands	r1, r3
 80112f8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80112fa:	ab0f      	add	r3, sp, #60	@ 0x3c
 80112fc:	2000      	movs	r0, #0
 80112fe:	2603      	movs	r6, #3
 8011300:	f7ff fcae 	bl	8010c60 <appendBitsToBuffer>
 8011304:	24ec      	movs	r4, #236	@ 0xec
 8011306:	4276      	negs	r6, r6
 8011308:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801130a:	42ab      	cmp	r3, r5
 801130c:	da08      	bge.n	8011320 <qrcodegen_encodeSegmentsAdvanced+0x178>
 801130e:	0020      	movs	r0, r4
 8011310:	ab0f      	add	r3, sp, #60	@ 0x3c
 8011312:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8011314:	2108      	movs	r1, #8
 8011316:	4074      	eors	r4, r6
 8011318:	f7ff fca2 	bl	8010c60 <appendBitsToBuffer>
 801131c:	b2e4      	uxtb	r4, r4
 801131e:	e7f3      	b.n	8011308 <qrcodegen_encodeSegmentsAdvanced+0x160>
 8011320:	2329      	movs	r3, #41	@ 0x29
 8011322:	9a02      	ldr	r2, [sp, #8]
 8011324:	9901      	ldr	r1, [sp, #4]
 8011326:	4353      	muls	r3, r2
 8011328:	4a7b      	ldr	r2, [pc, #492]	@ (8011518 <qrcodegen_encodeSegmentsAdvanced+0x370>)
 801132a:	0008      	movs	r0, r1
 801132c:	18d2      	adds	r2, r2, r3
 801132e:	5652      	ldrsb	r2, [r2, r1]
 8011330:	2601      	movs	r6, #1
 8011332:	9203      	str	r2, [sp, #12]
 8011334:	4a79      	ldr	r2, [pc, #484]	@ (801151c <qrcodegen_encodeSegmentsAdvanced+0x374>)
 8011336:	ac10      	add	r4, sp, #64	@ 0x40
 8011338:	18d3      	adds	r3, r2, r3
 801133a:	565f      	ldrsb	r7, [r3, r1]
 801133c:	f7ff fca8 	bl	8010c90 <getNumRawDataModules>
 8011340:	2207      	movs	r2, #7
 8011342:	17c3      	asrs	r3, r0, #31
 8011344:	4013      	ands	r3, r2
 8011346:	1818      	adds	r0, r3, r0
 8011348:	10c3      	asrs	r3, r0, #3
 801134a:	9903      	ldr	r1, [sp, #12]
 801134c:	0018      	movs	r0, r3
 801134e:	930a      	str	r3, [sp, #40]	@ 0x28
 8011350:	f7ef f878 	bl	8000444 <__aeabi_idivmod>
 8011354:	9b03      	ldr	r3, [sp, #12]
 8011356:	003a      	movs	r2, r7
 8011358:	1a5b      	subs	r3, r3, r1
 801135a:	9308      	str	r3, [sp, #32]
 801135c:	2100      	movs	r1, #0
 801135e:	1bc3      	subs	r3, r0, r7
 8011360:	0020      	movs	r0, r4
 8011362:	930b      	str	r3, [sp, #44]	@ 0x2c
 8011364:	f001 fc1b 	bl	8012b9e <memset>
 8011368:	1e7b      	subs	r3, r7, #1
 801136a:	930c      	str	r3, [sp, #48]	@ 0x30
 801136c:	54e6      	strb	r6, [r4, r3]
 801136e:	2300      	movs	r3, #0
 8011370:	9304      	str	r3, [sp, #16]
 8011372:	9b04      	ldr	r3, [sp, #16]
 8011374:	429f      	cmp	r7, r3
 8011376:	dd0e      	ble.n	8011396 <qrcodegen_encodeSegmentsAdvanced+0x1ee>
 8011378:	2500      	movs	r5, #0
 801137a:	5d28      	ldrb	r0, [r5, r4]
 801137c:	0031      	movs	r1, r6
 801137e:	f7ff fcb9 	bl	8010cf4 <reedSolomonMultiply>
 8011382:	5528      	strb	r0, [r5, r4]
 8011384:	3501      	adds	r5, #1
 8011386:	42af      	cmp	r7, r5
 8011388:	dc00      	bgt.n	801138c <qrcodegen_encodeSegmentsAdvanced+0x1e4>
 801138a:	e292      	b.n	80118b2 <qrcodegen_encodeSegmentsAdvanced+0x70a>
 801138c:	5d2a      	ldrb	r2, [r5, r4]
 801138e:	1e6b      	subs	r3, r5, #1
 8011390:	4050      	eors	r0, r2
 8011392:	54e0      	strb	r0, [r4, r3]
 8011394:	e7f1      	b.n	801137a <qrcodegen_encodeSegmentsAdvanced+0x1d2>
 8011396:	2600      	movs	r6, #0
 8011398:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801139a:	9304      	str	r3, [sp, #16]
 801139c:	9b03      	ldr	r3, [sp, #12]
 801139e:	42b3      	cmp	r3, r6
 80113a0:	dd5d      	ble.n	801145e <qrcodegen_encodeSegmentsAdvanced+0x2b6>
 80113a2:	9b08      	ldr	r3, [sp, #32]
 80113a4:	9908      	ldr	r1, [sp, #32]
 80113a6:	17f2      	asrs	r2, r6, #31
 80113a8:	0fdb      	lsrs	r3, r3, #31
 80113aa:	428e      	cmp	r6, r1
 80113ac:	4153      	adcs	r3, r2
 80113ae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80113b0:	2100      	movs	r1, #0
 80113b2:	189b      	adds	r3, r3, r2
 80113b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80113b6:	9a07      	ldr	r2, [sp, #28]
 80113b8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80113ba:	189c      	adds	r4, r3, r2
 80113bc:	0020      	movs	r0, r4
 80113be:	003a      	movs	r2, r7
 80113c0:	f001 fbed 	bl	8012b9e <memset>
 80113c4:	9b04      	ldr	r3, [sp, #16]
 80113c6:	9305      	str	r3, [sp, #20]
 80113c8:	9a04      	ldr	r2, [sp, #16]
 80113ca:	9b05      	ldr	r3, [sp, #20]
 80113cc:	1a9b      	subs	r3, r3, r2
 80113ce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80113d0:	4293      	cmp	r3, r2
 80113d2:	da1d      	bge.n	8011410 <qrcodegen_encodeSegmentsAdvanced+0x268>
 80113d4:	2500      	movs	r5, #0
 80113d6:	9b05      	ldr	r3, [sp, #20]
 80113d8:	1c61      	adds	r1, r4, #1
 80113da:	781a      	ldrb	r2, [r3, #0]
 80113dc:	7823      	ldrb	r3, [r4, #0]
 80113de:	0020      	movs	r0, r4
 80113e0:	405a      	eors	r2, r3
 80113e2:	920d      	str	r2, [sp, #52]	@ 0x34
 80113e4:	1e7a      	subs	r2, r7, #1
 80113e6:	f001 fbc7 	bl	8012b78 <memmove>
 80113ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80113ec:	54e5      	strb	r5, [r4, r3]
 80113ee:	42af      	cmp	r7, r5
 80113f0:	dd0b      	ble.n	801140a <qrcodegen_encodeSegmentsAdvanced+0x262>
 80113f2:	2208      	movs	r2, #8
 80113f4:	ab0e      	add	r3, sp, #56	@ 0x38
 80113f6:	189b      	adds	r3, r3, r2
 80113f8:	5d58      	ldrb	r0, [r3, r5]
 80113fa:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80113fc:	f7ff fc7a 	bl	8010cf4 <reedSolomonMultiply>
 8011400:	5d63      	ldrb	r3, [r4, r5]
 8011402:	4058      	eors	r0, r3
 8011404:	5560      	strb	r0, [r4, r5]
 8011406:	3501      	adds	r5, #1
 8011408:	e7f1      	b.n	80113ee <qrcodegen_encodeSegmentsAdvanced+0x246>
 801140a:	9b05      	ldr	r3, [sp, #20]
 801140c:	3301      	adds	r3, #1
 801140e:	e7da      	b.n	80113c6 <qrcodegen_encodeSegmentsAdvanced+0x21e>
 8011410:	0033      	movs	r3, r6
 8011412:	2200      	movs	r2, #0
 8011414:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8011416:	4291      	cmp	r1, r2
 8011418:	dd0c      	ble.n	8011434 <qrcodegen_encodeSegmentsAdvanced+0x28c>
 801141a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801141c:	4291      	cmp	r1, r2
 801141e:	d101      	bne.n	8011424 <qrcodegen_encodeSegmentsAdvanced+0x27c>
 8011420:	9908      	ldr	r1, [sp, #32]
 8011422:	1a5b      	subs	r3, r3, r1
 8011424:	9904      	ldr	r1, [sp, #16]
 8011426:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8011428:	5c89      	ldrb	r1, [r1, r2]
 801142a:	3201      	adds	r2, #1
 801142c:	54c1      	strb	r1, [r0, r3]
 801142e:	9903      	ldr	r1, [sp, #12]
 8011430:	185b      	adds	r3, r3, r1
 8011432:	e7ef      	b.n	8011414 <qrcodegen_encodeSegmentsAdvanced+0x26c>
 8011434:	9a07      	ldr	r2, [sp, #28]
 8011436:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8011438:	189b      	adds	r3, r3, r2
 801143a:	0022      	movs	r2, r4
 801143c:	199b      	adds	r3, r3, r6
 801143e:	1b11      	subs	r1, r2, r4
 8011440:	42b9      	cmp	r1, r7
 8011442:	da05      	bge.n	8011450 <qrcodegen_encodeSegmentsAdvanced+0x2a8>
 8011444:	7811      	ldrb	r1, [r2, #0]
 8011446:	3201      	adds	r2, #1
 8011448:	7019      	strb	r1, [r3, #0]
 801144a:	9903      	ldr	r1, [sp, #12]
 801144c:	185b      	adds	r3, r3, r1
 801144e:	e7f6      	b.n	801143e <qrcodegen_encodeSegmentsAdvanced+0x296>
 8011450:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011452:	9b04      	ldr	r3, [sp, #16]
 8011454:	4694      	mov	ip, r2
 8011456:	4463      	add	r3, ip
 8011458:	9304      	str	r3, [sp, #16]
 801145a:	3601      	adds	r6, #1
 801145c:	e79e      	b.n	801139c <qrcodegen_encodeSegmentsAdvanced+0x1f4>
 801145e:	2700      	movs	r7, #0
 8011460:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8011462:	9801      	ldr	r0, [sp, #4]
 8011464:	f7ff fe2a 	bl	80110bc <initializeFunctionModules>
 8011468:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801146a:	781b      	ldrb	r3, [r3, #0]
 801146c:	9304      	str	r3, [sp, #16]
 801146e:	3b01      	subs	r3, #1
 8011470:	9305      	str	r3, [sp, #20]
 8011472:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011474:	9c05      	ldr	r4, [sp, #20]
 8011476:	00db      	lsls	r3, r3, #3
 8011478:	9307      	str	r3, [sp, #28]
 801147a:	2c00      	cmp	r4, #0
 801147c:	dd31      	ble.n	80114e2 <qrcodegen_encodeSegmentsAdvanced+0x33a>
 801147e:	2c06      	cmp	r4, #6
 8011480:	d100      	bne.n	8011484 <qrcodegen_encodeSegmentsAdvanced+0x2dc>
 8011482:	3c01      	subs	r4, #1
 8011484:	9d05      	ldr	r5, [sp, #20]
 8011486:	9b04      	ldr	r3, [sp, #16]
 8011488:	3b01      	subs	r3, #1
 801148a:	1b5b      	subs	r3, r3, r5
 801148c:	1c6a      	adds	r2, r5, #1
 801148e:	d026      	beq.n	80114de <qrcodegen_encodeSegmentsAdvanced+0x336>
 8011490:	2102      	movs	r1, #2
 8011492:	1c62      	adds	r2, r4, #1
 8011494:	9503      	str	r5, [sp, #12]
 8011496:	420a      	tst	r2, r1
 8011498:	d000      	beq.n	801149c <qrcodegen_encodeSegmentsAdvanced+0x2f4>
 801149a:	9303      	str	r3, [sp, #12]
 801149c:	0026      	movs	r6, r4
 801149e:	1ea3      	subs	r3, r4, #2
 80114a0:	9308      	str	r3, [sp, #32]
 80114a2:	9a03      	ldr	r2, [sp, #12]
 80114a4:	0031      	movs	r1, r6
 80114a6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80114a8:	f7ff fc37 	bl	8010d1a <getModuleBounded>
 80114ac:	2800      	cmp	r0, #0
 80114ae:	d110      	bne.n	80114d2 <qrcodegen_encodeSegmentsAdvanced+0x32a>
 80114b0:	9b07      	ldr	r3, [sp, #28]
 80114b2:	42bb      	cmp	r3, r7
 80114b4:	dd0d      	ble.n	80114d2 <qrcodegen_encodeSegmentsAdvanced+0x32a>
 80114b6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80114b8:	10fb      	asrs	r3, r7, #3
 80114ba:	5cd3      	ldrb	r3, [r2, r3]
 80114bc:	2207      	movs	r2, #7
 80114be:	43ba      	bics	r2, r7
 80114c0:	4113      	asrs	r3, r2
 80114c2:	2201      	movs	r2, #1
 80114c4:	0031      	movs	r1, r6
 80114c6:	4013      	ands	r3, r2
 80114c8:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80114ca:	9a03      	ldr	r2, [sp, #12]
 80114cc:	f7ff fc31 	bl	8010d32 <setModuleBounded>
 80114d0:	3701      	adds	r7, #1
 80114d2:	9b08      	ldr	r3, [sp, #32]
 80114d4:	3e01      	subs	r6, #1
 80114d6:	42b3      	cmp	r3, r6
 80114d8:	d1e3      	bne.n	80114a2 <qrcodegen_encodeSegmentsAdvanced+0x2fa>
 80114da:	3d01      	subs	r5, #1
 80114dc:	e7d3      	b.n	8011486 <qrcodegen_encodeSegmentsAdvanced+0x2de>
 80114de:	3c02      	subs	r4, #2
 80114e0:	e7cb      	b.n	801147a <qrcodegen_encodeSegmentsAdvanced+0x2d2>
 80114e2:	2407      	movs	r4, #7
 80114e4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80114e6:	781b      	ldrb	r3, [r3, #0]
 80114e8:	9303      	str	r3, [sp, #12]
 80114ea:	9b03      	ldr	r3, [sp, #12]
 80114ec:	3b07      	subs	r3, #7
 80114ee:	42a3      	cmp	r3, r4
 80114f0:	dd16      	ble.n	8011520 <qrcodegen_encodeSegmentsAdvanced+0x378>
 80114f2:	0022      	movs	r2, r4
 80114f4:	2300      	movs	r3, #0
 80114f6:	2106      	movs	r1, #6
 80114f8:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80114fa:	f7ff fc1a 	bl	8010d32 <setModuleBounded>
 80114fe:	0021      	movs	r1, r4
 8011500:	2300      	movs	r3, #0
 8011502:	2206      	movs	r2, #6
 8011504:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011506:	f7ff fc14 	bl	8010d32 <setModuleBounded>
 801150a:	3402      	adds	r4, #2
 801150c:	e7ed      	b.n	80114ea <qrcodegen_encodeSegmentsAdvanced+0x342>
 801150e:	46c0      	nop			@ (mov r8, r8)
 8011510:	00007fff 	.word	0x00007fff
 8011514:	80000007 	.word	0x80000007
 8011518:	08015c60 	.word	0x08015c60
 801151c:	08015bbc 	.word	0x08015bbc
 8011520:	2408      	movs	r4, #8
 8011522:	2304      	movs	r3, #4
 8011524:	2504      	movs	r5, #4
 8011526:	1b1b      	subs	r3, r3, r4
 8011528:	17da      	asrs	r2, r3, #31
 801152a:	189b      	adds	r3, r3, r2
 801152c:	4053      	eors	r3, r2
 801152e:	426d      	negs	r5, r5
 8011530:	9304      	str	r3, [sp, #16]
 8011532:	17eb      	asrs	r3, r5, #31
 8011534:	18ea      	adds	r2, r5, r3
 8011536:	405a      	eors	r2, r3
 8011538:	9b04      	ldr	r3, [sp, #16]
 801153a:	4293      	cmp	r3, r2
 801153c:	da00      	bge.n	8011540 <qrcodegen_encodeSegmentsAdvanced+0x398>
 801153e:	0013      	movs	r3, r2
 8011540:	2202      	movs	r2, #2
 8011542:	3b02      	subs	r3, #2
 8011544:	4393      	bics	r3, r2
 8011546:	d114      	bne.n	8011572 <qrcodegen_encodeSegmentsAdvanced+0x3ca>
 8011548:	2707      	movs	r7, #7
 801154a:	1cee      	adds	r6, r5, #3
 801154c:	1b3f      	subs	r7, r7, r4
 801154e:	003a      	movs	r2, r7
 8011550:	0031      	movs	r1, r6
 8011552:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011554:	f7ff fda8 	bl	80110a8 <setModuleUnbounded.constprop.2>
 8011558:	9b03      	ldr	r3, [sp, #12]
 801155a:	003a      	movs	r2, r7
 801155c:	1f19      	subs	r1, r3, #4
 801155e:	1949      	adds	r1, r1, r5
 8011560:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011562:	f7ff fda1 	bl	80110a8 <setModuleUnbounded.constprop.2>
 8011566:	9b03      	ldr	r3, [sp, #12]
 8011568:	0031      	movs	r1, r6
 801156a:	1b1a      	subs	r2, r3, r4
 801156c:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801156e:	f7ff fd9b 	bl	80110a8 <setModuleUnbounded.constprop.2>
 8011572:	3501      	adds	r5, #1
 8011574:	2d05      	cmp	r5, #5
 8011576:	d1dc      	bne.n	8011532 <qrcodegen_encodeSegmentsAdvanced+0x38a>
 8011578:	3c01      	subs	r4, #1
 801157a:	d2d2      	bcs.n	8011522 <qrcodegen_encodeSegmentsAdvanced+0x37a>
 801157c:	9b01      	ldr	r3, [sp, #4]
 801157e:	2b01      	cmp	r3, #1
 8011580:	d153      	bne.n	801162a <qrcodegen_encodeSegmentsAdvanced+0x482>
 8011582:	9921      	ldr	r1, [sp, #132]	@ 0x84
 8011584:	9801      	ldr	r0, [sp, #4]
 8011586:	f7ff fd99 	bl	80110bc <initializeFunctionModules>
 801158a:	9b06      	ldr	r3, [sp, #24]
 801158c:	3301      	adds	r3, #1
 801158e:	d000      	beq.n	8011592 <qrcodegen_encodeSegmentsAdvanced+0x3ea>
 8011590:	e183      	b.n	801189a <qrcodegen_encodeSegmentsAdvanced+0x6f2>
 8011592:	2300      	movs	r3, #0
 8011594:	9304      	str	r3, [sp, #16]
 8011596:	4bcb      	ldr	r3, [pc, #812]	@ (80118c4 <qrcodegen_encodeSegmentsAdvanced+0x71c>)
 8011598:	9307      	str	r3, [sp, #28]
 801159a:	2500      	movs	r5, #0
 801159c:	466b      	mov	r3, sp
 801159e:	002f      	movs	r7, r5
 80115a0:	7c1b      	ldrb	r3, [r3, #16]
 80115a2:	9922      	ldr	r1, [sp, #136]	@ 0x88
 80115a4:	b25b      	sxtb	r3, r3
 80115a6:	001a      	movs	r2, r3
 80115a8:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80115aa:	9303      	str	r3, [sp, #12]
 80115ac:	f7ff fbf0 	bl	8010d90 <applyMask>
 80115b0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80115b2:	9903      	ldr	r1, [sp, #12]
 80115b4:	9802      	ldr	r0, [sp, #8]
 80115b6:	f7ff fc59 	bl	8010e6c <drawFormatBits>
 80115ba:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80115bc:	781b      	ldrb	r3, [r3, #0]
 80115be:	9301      	str	r3, [sp, #4]
 80115c0:	9b01      	ldr	r3, [sp, #4]
 80115c2:	42ab      	cmp	r3, r5
 80115c4:	dc00      	bgt.n	80115c8 <qrcodegen_encodeSegmentsAdvanced+0x420>
 80115c6:	e0b3      	b.n	8011730 <qrcodegen_encodeSegmentsAdvanced+0x588>
 80115c8:	2400      	movs	r4, #0
 80115ca:	0026      	movs	r6, r4
 80115cc:	221c      	movs	r2, #28
 80115ce:	2100      	movs	r1, #0
 80115d0:	a810      	add	r0, sp, #64	@ 0x40
 80115d2:	f001 fae4 	bl	8012b9e <memset>
 80115d6:	9405      	str	r4, [sp, #20]
 80115d8:	002a      	movs	r2, r5
 80115da:	0031      	movs	r1, r6
 80115dc:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80115de:	f7ff fb9c 	bl	8010d1a <getModuleBounded>
 80115e2:	9b05      	ldr	r3, [sp, #20]
 80115e4:	4298      	cmp	r0, r3
 80115e6:	d000      	beq.n	80115ea <qrcodegen_encodeSegmentsAdvanced+0x442>
 80115e8:	e08c      	b.n	8011704 <qrcodegen_encodeSegmentsAdvanced+0x55c>
 80115ea:	3401      	adds	r4, #1
 80115ec:	2c05      	cmp	r4, #5
 80115ee:	d000      	beq.n	80115f2 <qrcodegen_encodeSegmentsAdvanced+0x44a>
 80115f0:	e083      	b.n	80116fa <qrcodegen_encodeSegmentsAdvanced+0x552>
 80115f2:	3703      	adds	r7, #3
 80115f4:	9b01      	ldr	r3, [sp, #4]
 80115f6:	3601      	adds	r6, #1
 80115f8:	42b3      	cmp	r3, r6
 80115fa:	dced      	bgt.n	80115d8 <qrcodegen_encodeSegmentsAdvanced+0x430>
 80115fc:	9b05      	ldr	r3, [sp, #20]
 80115fe:	2b00      	cmp	r3, #0
 8011600:	d005      	beq.n	801160e <qrcodegen_encodeSegmentsAdvanced+0x466>
 8011602:	0020      	movs	r0, r4
 8011604:	9a01      	ldr	r2, [sp, #4]
 8011606:	a910      	add	r1, sp, #64	@ 0x40
 8011608:	f7ff fcf8 	bl	8010ffc <finderPenaltyAddHistory>
 801160c:	2400      	movs	r4, #0
 801160e:	9b01      	ldr	r3, [sp, #4]
 8011610:	a910      	add	r1, sp, #64	@ 0x40
 8011612:	1918      	adds	r0, r3, r4
 8011614:	001a      	movs	r2, r3
 8011616:	f7ff fcf1 	bl	8010ffc <finderPenaltyAddHistory>
 801161a:	a810      	add	r0, sp, #64	@ 0x40
 801161c:	f7ff fd1b 	bl	8011056 <finderPenaltyCountPatterns.isra.1>
 8011620:	2328      	movs	r3, #40	@ 0x28
 8011622:	4358      	muls	r0, r3
 8011624:	3501      	adds	r5, #1
 8011626:	183f      	adds	r7, r7, r0
 8011628:	e7ca      	b.n	80115c0 <qrcodegen_encodeSegmentsAdvanced+0x418>
 801162a:	a910      	add	r1, sp, #64	@ 0x40
 801162c:	9801      	ldr	r0, [sp, #4]
 801162e:	f7ff fcf3 	bl	8011018 <getAlignmentPatternPositions.part.0>
 8011632:	2500      	movs	r5, #0
 8011634:	ab10      	add	r3, sp, #64	@ 0x40
 8011636:	9004      	str	r0, [sp, #16]
 8011638:	9305      	str	r3, [sp, #20]
 801163a:	9b04      	ldr	r3, [sp, #16]
 801163c:	429d      	cmp	r5, r3
 801163e:	da30      	bge.n	80116a2 <qrcodegen_encodeSegmentsAdvanced+0x4fa>
 8011640:	2400      	movs	r4, #0
 8011642:	9b04      	ldr	r3, [sp, #16]
 8011644:	429c      	cmp	r4, r3
 8011646:	d027      	beq.n	8011698 <qrcodegen_encodeSegmentsAdvanced+0x4f0>
 8011648:	002b      	movs	r3, r5
 801164a:	4323      	orrs	r3, r4
 801164c:	d101      	bne.n	8011652 <qrcodegen_encodeSegmentsAdvanced+0x4aa>
 801164e:	3401      	adds	r4, #1
 8011650:	e7f7      	b.n	8011642 <qrcodegen_encodeSegmentsAdvanced+0x49a>
 8011652:	9b04      	ldr	r3, [sp, #16]
 8011654:	3b01      	subs	r3, #1
 8011656:	2d00      	cmp	r5, #0
 8011658:	d101      	bne.n	801165e <qrcodegen_encodeSegmentsAdvanced+0x4b6>
 801165a:	429c      	cmp	r4, r3
 801165c:	d0f7      	beq.n	801164e <qrcodegen_encodeSegmentsAdvanced+0x4a6>
 801165e:	429d      	cmp	r5, r3
 8011660:	d101      	bne.n	8011666 <qrcodegen_encodeSegmentsAdvanced+0x4be>
 8011662:	2c00      	cmp	r4, #0
 8011664:	d0f3      	beq.n	801164e <qrcodegen_encodeSegmentsAdvanced+0x4a6>
 8011666:	2601      	movs	r6, #1
 8011668:	4276      	negs	r6, r6
 801166a:	2701      	movs	r7, #1
 801166c:	427f      	negs	r7, r7
 801166e:	0033      	movs	r3, r6
 8011670:	433b      	orrs	r3, r7
 8011672:	425a      	negs	r2, r3
 8011674:	4153      	adcs	r3, r2
 8011676:	9905      	ldr	r1, [sp, #20]
 8011678:	aa10      	add	r2, sp, #64	@ 0x40
 801167a:	5ca2      	ldrb	r2, [r4, r2]
 801167c:	7809      	ldrb	r1, [r1, #0]
 801167e:	b2db      	uxtb	r3, r3
 8011680:	19c9      	adds	r1, r1, r7
 8011682:	1992      	adds	r2, r2, r6
 8011684:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011686:	3701      	adds	r7, #1
 8011688:	f7ff fb53 	bl	8010d32 <setModuleBounded>
 801168c:	2f02      	cmp	r7, #2
 801168e:	d1ee      	bne.n	801166e <qrcodegen_encodeSegmentsAdvanced+0x4c6>
 8011690:	3601      	adds	r6, #1
 8011692:	2e02      	cmp	r6, #2
 8011694:	d1e9      	bne.n	801166a <qrcodegen_encodeSegmentsAdvanced+0x4c2>
 8011696:	e7da      	b.n	801164e <qrcodegen_encodeSegmentsAdvanced+0x4a6>
 8011698:	9b05      	ldr	r3, [sp, #20]
 801169a:	3501      	adds	r5, #1
 801169c:	3301      	adds	r3, #1
 801169e:	9305      	str	r3, [sp, #20]
 80116a0:	e7cb      	b.n	801163a <qrcodegen_encodeSegmentsAdvanced+0x492>
 80116a2:	9b01      	ldr	r3, [sp, #4]
 80116a4:	2b06      	cmp	r3, #6
 80116a6:	dc00      	bgt.n	80116aa <qrcodegen_encodeSegmentsAdvanced+0x502>
 80116a8:	e76b      	b.n	8011582 <qrcodegen_encodeSegmentsAdvanced+0x3da>
 80116aa:	240c      	movs	r4, #12
 80116ac:	4986      	ldr	r1, [pc, #536]	@ (80118c8 <qrcodegen_encodeSegmentsAdvanced+0x720>)
 80116ae:	005a      	lsls	r2, r3, #1
 80116b0:	12db      	asrs	r3, r3, #11
 80116b2:	434b      	muls	r3, r1
 80116b4:	3c01      	subs	r4, #1
 80116b6:	4053      	eors	r3, r2
 80116b8:	2c00      	cmp	r4, #0
 80116ba:	d1f8      	bne.n	80116ae <qrcodegen_encodeSegmentsAdvanced+0x506>
 80116bc:	9a01      	ldr	r2, [sp, #4]
 80116be:	0317      	lsls	r7, r2, #12
 80116c0:	431f      	orrs	r7, r3
 80116c2:	9b03      	ldr	r3, [sp, #12]
 80116c4:	9d03      	ldr	r5, [sp, #12]
 80116c6:	3b08      	subs	r3, #8
 80116c8:	3d0b      	subs	r5, #11
 80116ca:	9304      	str	r3, [sp, #16]
 80116cc:	2601      	movs	r6, #1
 80116ce:	403e      	ands	r6, r7
 80116d0:	0029      	movs	r1, r5
 80116d2:	0033      	movs	r3, r6
 80116d4:	0022      	movs	r2, r4
 80116d6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80116d8:	f7ff fb2b 	bl	8010d32 <setModuleBounded>
 80116dc:	0033      	movs	r3, r6
 80116de:	002a      	movs	r2, r5
 80116e0:	0021      	movs	r1, r4
 80116e2:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80116e4:	f7ff fb25 	bl	8010d32 <setModuleBounded>
 80116e8:	9b04      	ldr	r3, [sp, #16]
 80116ea:	3501      	adds	r5, #1
 80116ec:	107f      	asrs	r7, r7, #1
 80116ee:	42ab      	cmp	r3, r5
 80116f0:	d1ec      	bne.n	80116cc <qrcodegen_encodeSegmentsAdvanced+0x524>
 80116f2:	3401      	adds	r4, #1
 80116f4:	2c06      	cmp	r4, #6
 80116f6:	d1e4      	bne.n	80116c2 <qrcodegen_encodeSegmentsAdvanced+0x51a>
 80116f8:	e743      	b.n	8011582 <qrcodegen_encodeSegmentsAdvanced+0x3da>
 80116fa:	2c05      	cmp	r4, #5
 80116fc:	dc00      	bgt.n	8011700 <qrcodegen_encodeSegmentsAdvanced+0x558>
 80116fe:	e779      	b.n	80115f4 <qrcodegen_encodeSegmentsAdvanced+0x44c>
 8011700:	3701      	adds	r7, #1
 8011702:	e777      	b.n	80115f4 <qrcodegen_encodeSegmentsAdvanced+0x44c>
 8011704:	9a01      	ldr	r2, [sp, #4]
 8011706:	a910      	add	r1, sp, #64	@ 0x40
 8011708:	0020      	movs	r0, r4
 801170a:	f7ff fc77 	bl	8010ffc <finderPenaltyAddHistory>
 801170e:	9b05      	ldr	r3, [sp, #20]
 8011710:	2b00      	cmp	r3, #0
 8011712:	d105      	bne.n	8011720 <qrcodegen_encodeSegmentsAdvanced+0x578>
 8011714:	a810      	add	r0, sp, #64	@ 0x40
 8011716:	f7ff fc9e 	bl	8011056 <finderPenaltyCountPatterns.isra.1>
 801171a:	2328      	movs	r3, #40	@ 0x28
 801171c:	4358      	muls	r0, r3
 801171e:	183f      	adds	r7, r7, r0
 8011720:	002a      	movs	r2, r5
 8011722:	0031      	movs	r1, r6
 8011724:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011726:	f7ff faf8 	bl	8010d1a <getModuleBounded>
 801172a:	2401      	movs	r4, #1
 801172c:	9005      	str	r0, [sp, #20]
 801172e:	e761      	b.n	80115f4 <qrcodegen_encodeSegmentsAdvanced+0x44c>
 8011730:	2600      	movs	r6, #0
 8011732:	9b01      	ldr	r3, [sp, #4]
 8011734:	42b3      	cmp	r3, r6
 8011736:	dd48      	ble.n	80117ca <qrcodegen_encodeSegmentsAdvanced+0x622>
 8011738:	2400      	movs	r4, #0
 801173a:	0025      	movs	r5, r4
 801173c:	221c      	movs	r2, #28
 801173e:	2100      	movs	r1, #0
 8011740:	a810      	add	r0, sp, #64	@ 0x40
 8011742:	f001 fa2c 	bl	8012b9e <memset>
 8011746:	9405      	str	r4, [sp, #20]
 8011748:	002a      	movs	r2, r5
 801174a:	0031      	movs	r1, r6
 801174c:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801174e:	f7ff fae4 	bl	8010d1a <getModuleBounded>
 8011752:	9b05      	ldr	r3, [sp, #20]
 8011754:	4298      	cmp	r0, r3
 8011756:	d122      	bne.n	801179e <qrcodegen_encodeSegmentsAdvanced+0x5f6>
 8011758:	3401      	adds	r4, #1
 801175a:	2c05      	cmp	r4, #5
 801175c:	d11b      	bne.n	8011796 <qrcodegen_encodeSegmentsAdvanced+0x5ee>
 801175e:	3703      	adds	r7, #3
 8011760:	9b01      	ldr	r3, [sp, #4]
 8011762:	3501      	adds	r5, #1
 8011764:	42ab      	cmp	r3, r5
 8011766:	dcef      	bgt.n	8011748 <qrcodegen_encodeSegmentsAdvanced+0x5a0>
 8011768:	9b05      	ldr	r3, [sp, #20]
 801176a:	2b00      	cmp	r3, #0
 801176c:	d005      	beq.n	801177a <qrcodegen_encodeSegmentsAdvanced+0x5d2>
 801176e:	0020      	movs	r0, r4
 8011770:	9a01      	ldr	r2, [sp, #4]
 8011772:	a910      	add	r1, sp, #64	@ 0x40
 8011774:	f7ff fc42 	bl	8010ffc <finderPenaltyAddHistory>
 8011778:	2400      	movs	r4, #0
 801177a:	9b01      	ldr	r3, [sp, #4]
 801177c:	a910      	add	r1, sp, #64	@ 0x40
 801177e:	1918      	adds	r0, r3, r4
 8011780:	001a      	movs	r2, r3
 8011782:	f7ff fc3b 	bl	8010ffc <finderPenaltyAddHistory>
 8011786:	a810      	add	r0, sp, #64	@ 0x40
 8011788:	f7ff fc65 	bl	8011056 <finderPenaltyCountPatterns.isra.1>
 801178c:	2328      	movs	r3, #40	@ 0x28
 801178e:	4358      	muls	r0, r3
 8011790:	3601      	adds	r6, #1
 8011792:	183f      	adds	r7, r7, r0
 8011794:	e7cd      	b.n	8011732 <qrcodegen_encodeSegmentsAdvanced+0x58a>
 8011796:	2c05      	cmp	r4, #5
 8011798:	dde2      	ble.n	8011760 <qrcodegen_encodeSegmentsAdvanced+0x5b8>
 801179a:	3701      	adds	r7, #1
 801179c:	e7e0      	b.n	8011760 <qrcodegen_encodeSegmentsAdvanced+0x5b8>
 801179e:	9a01      	ldr	r2, [sp, #4]
 80117a0:	a910      	add	r1, sp, #64	@ 0x40
 80117a2:	0020      	movs	r0, r4
 80117a4:	f7ff fc2a 	bl	8010ffc <finderPenaltyAddHistory>
 80117a8:	9b05      	ldr	r3, [sp, #20]
 80117aa:	2b00      	cmp	r3, #0
 80117ac:	d105      	bne.n	80117ba <qrcodegen_encodeSegmentsAdvanced+0x612>
 80117ae:	a810      	add	r0, sp, #64	@ 0x40
 80117b0:	f7ff fc51 	bl	8011056 <finderPenaltyCountPatterns.isra.1>
 80117b4:	2328      	movs	r3, #40	@ 0x28
 80117b6:	4358      	muls	r0, r3
 80117b8:	183f      	adds	r7, r7, r0
 80117ba:	002a      	movs	r2, r5
 80117bc:	0031      	movs	r1, r6
 80117be:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80117c0:	f7ff faab 	bl	8010d1a <getModuleBounded>
 80117c4:	2401      	movs	r4, #1
 80117c6:	9005      	str	r0, [sp, #20]
 80117c8:	e7ca      	b.n	8011760 <qrcodegen_encodeSegmentsAdvanced+0x5b8>
 80117ca:	2401      	movs	r4, #1
 80117cc:	9b01      	ldr	r3, [sp, #4]
 80117ce:	3b01      	subs	r3, #1
 80117d0:	9308      	str	r3, [sp, #32]
 80117d2:	1e63      	subs	r3, r4, #1
 80117d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80117d6:	9b08      	ldr	r3, [sp, #32]
 80117d8:	1e62      	subs	r2, r4, #1
 80117da:	2500      	movs	r5, #0
 80117dc:	4293      	cmp	r3, r2
 80117de:	dd25      	ble.n	801182c <qrcodegen_encodeSegmentsAdvanced+0x684>
 80117e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80117e2:	0029      	movs	r1, r5
 80117e4:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80117e6:	f7ff fa98 	bl	8010d1a <getModuleBounded>
 80117ea:	1c6e      	adds	r6, r5, #1
 80117ec:	9005      	str	r0, [sp, #20]
 80117ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80117f0:	0031      	movs	r1, r6
 80117f2:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80117f4:	f7ff fa91 	bl	8010d1a <getModuleBounded>
 80117f8:	9b05      	ldr	r3, [sp, #20]
 80117fa:	4283      	cmp	r3, r0
 80117fc:	d110      	bne.n	8011820 <qrcodegen_encodeSegmentsAdvanced+0x678>
 80117fe:	0022      	movs	r2, r4
 8011800:	0029      	movs	r1, r5
 8011802:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011804:	f7ff fa89 	bl	8010d1a <getModuleBounded>
 8011808:	9b05      	ldr	r3, [sp, #20]
 801180a:	4283      	cmp	r3, r0
 801180c:	d108      	bne.n	8011820 <qrcodegen_encodeSegmentsAdvanced+0x678>
 801180e:	0022      	movs	r2, r4
 8011810:	0031      	movs	r1, r6
 8011812:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8011814:	f7ff fa81 	bl	8010d1a <getModuleBounded>
 8011818:	9b05      	ldr	r3, [sp, #20]
 801181a:	4283      	cmp	r3, r0
 801181c:	d100      	bne.n	8011820 <qrcodegen_encodeSegmentsAdvanced+0x678>
 801181e:	3703      	adds	r7, #3
 8011820:	9b08      	ldr	r3, [sp, #32]
 8011822:	0035      	movs	r5, r6
 8011824:	42b3      	cmp	r3, r6
 8011826:	dcdb      	bgt.n	80117e0 <qrcodegen_encodeSegmentsAdvanced+0x638>
 8011828:	3401      	adds	r4, #1
 801182a:	e7d2      	b.n	80117d2 <qrcodegen_encodeSegmentsAdvanced+0x62a>
 801182c:	002c      	movs	r4, r5
 801182e:	9b01      	ldr	r3, [sp, #4]
 8011830:	42ab      	cmp	r3, r5
 8011832:	dd0e      	ble.n	8011852 <qrcodegen_encodeSegmentsAdvanced+0x6aa>
 8011834:	2600      	movs	r6, #0
 8011836:	0031      	movs	r1, r6
 8011838:	002a      	movs	r2, r5
 801183a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801183c:	f7ff fa6d 	bl	8010d1a <getModuleBounded>
 8011840:	1e43      	subs	r3, r0, #1
 8011842:	4198      	sbcs	r0, r3
 8011844:	9b01      	ldr	r3, [sp, #4]
 8011846:	3601      	adds	r6, #1
 8011848:	1824      	adds	r4, r4, r0
 801184a:	42b3      	cmp	r3, r6
 801184c:	dcf3      	bgt.n	8011836 <qrcodegen_encodeSegmentsAdvanced+0x68e>
 801184e:	3501      	adds	r5, #1
 8011850:	e7ed      	b.n	801182e <qrcodegen_encodeSegmentsAdvanced+0x686>
 8011852:	2014      	movs	r0, #20
 8011854:	4360      	muls	r0, r4
 8011856:	240a      	movs	r4, #10
 8011858:	9901      	ldr	r1, [sp, #4]
 801185a:	4264      	negs	r4, r4
 801185c:	4349      	muls	r1, r1
 801185e:	434c      	muls	r4, r1
 8011860:	1900      	adds	r0, r0, r4
 8011862:	17c3      	asrs	r3, r0, #31
 8011864:	18c0      	adds	r0, r0, r3
 8011866:	4058      	eors	r0, r3
 8011868:	1840      	adds	r0, r0, r1
 801186a:	3801      	subs	r0, #1
 801186c:	f7ee fd04 	bl	8000278 <__divsi3>
 8011870:	1e43      	subs	r3, r0, #1
 8011872:	200a      	movs	r0, #10
 8011874:	4358      	muls	r0, r3
 8011876:	9b07      	ldr	r3, [sp, #28]
 8011878:	19c0      	adds	r0, r0, r7
 801187a:	4298      	cmp	r0, r3
 801187c:	da02      	bge.n	8011884 <qrcodegen_encodeSegmentsAdvanced+0x6dc>
 801187e:	9b03      	ldr	r3, [sp, #12]
 8011880:	9007      	str	r0, [sp, #28]
 8011882:	9306      	str	r3, [sp, #24]
 8011884:	9a03      	ldr	r2, [sp, #12]
 8011886:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8011888:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801188a:	f7ff fa81 	bl	8010d90 <applyMask>
 801188e:	9b04      	ldr	r3, [sp, #16]
 8011890:	3301      	adds	r3, #1
 8011892:	9304      	str	r3, [sp, #16]
 8011894:	2b08      	cmp	r3, #8
 8011896:	d000      	beq.n	801189a <qrcodegen_encodeSegmentsAdvanced+0x6f2>
 8011898:	e67f      	b.n	801159a <qrcodegen_encodeSegmentsAdvanced+0x3f2>
 801189a:	9a06      	ldr	r2, [sp, #24]
 801189c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801189e:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80118a0:	f7ff fa76 	bl	8010d90 <applyMask>
 80118a4:	9802      	ldr	r0, [sp, #8]
 80118a6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80118a8:	9906      	ldr	r1, [sp, #24]
 80118aa:	f7ff fadf 	bl	8010e6c <drawFormatBits>
 80118ae:	2001      	movs	r0, #1
 80118b0:	e4b9      	b.n	8011226 <qrcodegen_encodeSegmentsAdvanced+0x7e>
 80118b2:	0030      	movs	r0, r6
 80118b4:	2102      	movs	r1, #2
 80118b6:	f7ff fa1d 	bl	8010cf4 <reedSolomonMultiply>
 80118ba:	9b04      	ldr	r3, [sp, #16]
 80118bc:	0006      	movs	r6, r0
 80118be:	3301      	adds	r3, #1
 80118c0:	e556      	b.n	8011370 <qrcodegen_encodeSegmentsAdvanced+0x1c8>
 80118c2:	46c0      	nop			@ (mov r8, r8)
 80118c4:	7fffffff 	.word	0x7fffffff
 80118c8:	00001f25 	.word	0x00001f25

080118cc <qrcodegen_isNumeric>:
 80118cc:	7803      	ldrb	r3, [r0, #0]
 80118ce:	2b00      	cmp	r3, #0
 80118d0:	d004      	beq.n	80118dc <qrcodegen_isNumeric+0x10>
 80118d2:	3b30      	subs	r3, #48	@ 0x30
 80118d4:	2b09      	cmp	r3, #9
 80118d6:	d803      	bhi.n	80118e0 <qrcodegen_isNumeric+0x14>
 80118d8:	3001      	adds	r0, #1
 80118da:	e7f7      	b.n	80118cc <qrcodegen_isNumeric>
 80118dc:	2001      	movs	r0, #1
 80118de:	4770      	bx	lr
 80118e0:	2000      	movs	r0, #0
 80118e2:	e7fc      	b.n	80118de <qrcodegen_isNumeric+0x12>

080118e4 <qrcodegen_isAlphanumeric>:
 80118e4:	b570      	push	{r4, r5, r6, lr}
 80118e6:	0004      	movs	r4, r0
 80118e8:	4d06      	ldr	r5, [pc, #24]	@ (8011904 <qrcodegen_isAlphanumeric+0x20>)
 80118ea:	7821      	ldrb	r1, [r4, #0]
 80118ec:	2900      	cmp	r1, #0
 80118ee:	d006      	beq.n	80118fe <qrcodegen_isAlphanumeric+0x1a>
 80118f0:	0028      	movs	r0, r5
 80118f2:	f001 f95c 	bl	8012bae <strchr>
 80118f6:	2800      	cmp	r0, #0
 80118f8:	d002      	beq.n	8011900 <qrcodegen_isAlphanumeric+0x1c>
 80118fa:	3401      	adds	r4, #1
 80118fc:	e7f5      	b.n	80118ea <qrcodegen_isAlphanumeric+0x6>
 80118fe:	2001      	movs	r0, #1
 8011900:	bd70      	pop	{r4, r5, r6, pc}
 8011902:	46c0      	nop			@ (mov r8, r8)
 8011904:	08015d44 	.word	0x08015d44

08011908 <qrcodegen_calcSegmentBufferSize>:
 8011908:	b510      	push	{r4, lr}
 801190a:	f7ff fb23 	bl	8010f54 <calcSegmentBitLength>
 801190e:	0003      	movs	r3, r0
 8011910:	1c42      	adds	r2, r0, #1
 8011912:	d001      	beq.n	8011918 <qrcodegen_calcSegmentBufferSize+0x10>
 8011914:	3007      	adds	r0, #7
 8011916:	08c3      	lsrs	r3, r0, #3
 8011918:	0018      	movs	r0, r3
 801191a:	bd10      	pop	{r4, pc}

0801191c <qrcodegen_makeNumeric>:
 801191c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801191e:	0004      	movs	r4, r0
 8011920:	0008      	movs	r0, r1
 8011922:	000e      	movs	r6, r1
 8011924:	0015      	movs	r5, r2
 8011926:	f7ee fbed 	bl	8000104 <strlen>
 801192a:	0007      	movs	r7, r0
 801192c:	2001      	movs	r0, #1
 801192e:	0039      	movs	r1, r7
 8011930:	7020      	strb	r0, [r4, #0]
 8011932:	f7ff fb0f 	bl	8010f54 <calcSegmentBitLength>
 8011936:	6067      	str	r7, [r4, #4]
 8011938:	2800      	cmp	r0, #0
 801193a:	dd05      	ble.n	8011948 <qrcodegen_makeNumeric+0x2c>
 801193c:	3007      	adds	r0, #7
 801193e:	08c2      	lsrs	r2, r0, #3
 8011940:	2100      	movs	r1, #0
 8011942:	0028      	movs	r0, r5
 8011944:	f001 f92b 	bl	8012b9e <memset>
 8011948:	2100      	movs	r1, #0
 801194a:	270a      	movs	r7, #10
 801194c:	0008      	movs	r0, r1
 801194e:	60e1      	str	r1, [r4, #12]
 8011950:	7833      	ldrb	r3, [r6, #0]
 8011952:	2b00      	cmp	r3, #0
 8011954:	d00f      	beq.n	8011976 <qrcodegen_makeNumeric+0x5a>
 8011956:	4378      	muls	r0, r7
 8011958:	3101      	adds	r1, #1
 801195a:	3830      	subs	r0, #48	@ 0x30
 801195c:	1818      	adds	r0, r3, r0
 801195e:	2903      	cmp	r1, #3
 8011960:	d107      	bne.n	8011972 <qrcodegen_makeNumeric+0x56>
 8011962:	0023      	movs	r3, r4
 8011964:	0039      	movs	r1, r7
 8011966:	330c      	adds	r3, #12
 8011968:	002a      	movs	r2, r5
 801196a:	f7ff f979 	bl	8010c60 <appendBitsToBuffer>
 801196e:	2000      	movs	r0, #0
 8011970:	0001      	movs	r1, r0
 8011972:	3601      	adds	r6, #1
 8011974:	e7ec      	b.n	8011950 <qrcodegen_makeNumeric+0x34>
 8011976:	2900      	cmp	r1, #0
 8011978:	d007      	beq.n	801198a <qrcodegen_makeNumeric+0x6e>
 801197a:	2303      	movs	r3, #3
 801197c:	4359      	muls	r1, r3
 801197e:	0023      	movs	r3, r4
 8011980:	3101      	adds	r1, #1
 8011982:	330c      	adds	r3, #12
 8011984:	002a      	movs	r2, r5
 8011986:	f7ff f96b 	bl	8010c60 <appendBitsToBuffer>
 801198a:	60a5      	str	r5, [r4, #8]
 801198c:	0020      	movs	r0, r4
 801198e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011990 <qrcodegen_makeAlphanumeric>:
 8011990:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011992:	0006      	movs	r6, r0
 8011994:	0008      	movs	r0, r1
 8011996:	9101      	str	r1, [sp, #4]
 8011998:	0017      	movs	r7, r2
 801199a:	f7ee fbb3 	bl	8000104 <strlen>
 801199e:	0004      	movs	r4, r0
 80119a0:	2002      	movs	r0, #2
 80119a2:	0021      	movs	r1, r4
 80119a4:	7030      	strb	r0, [r6, #0]
 80119a6:	f7ff fad5 	bl	8010f54 <calcSegmentBitLength>
 80119aa:	6074      	str	r4, [r6, #4]
 80119ac:	2800      	cmp	r0, #0
 80119ae:	dd05      	ble.n	80119bc <qrcodegen_makeAlphanumeric+0x2c>
 80119b0:	3007      	adds	r0, #7
 80119b2:	08c2      	lsrs	r2, r0, #3
 80119b4:	2100      	movs	r1, #0
 80119b6:	0038      	movs	r0, r7
 80119b8:	f001 f8f1 	bl	8012b9e <memset>
 80119bc:	2500      	movs	r5, #0
 80119be:	002c      	movs	r4, r5
 80119c0:	60f5      	str	r5, [r6, #12]
 80119c2:	9b01      	ldr	r3, [sp, #4]
 80119c4:	7819      	ldrb	r1, [r3, #0]
 80119c6:	2900      	cmp	r1, #0
 80119c8:	d018      	beq.n	80119fc <qrcodegen_makeAlphanumeric+0x6c>
 80119ca:	4812      	ldr	r0, [pc, #72]	@ (8011a14 <qrcodegen_makeAlphanumeric+0x84>)
 80119cc:	f001 f8ef 	bl	8012bae <strchr>
 80119d0:	232d      	movs	r3, #45	@ 0x2d
 80119d2:	435c      	muls	r4, r3
 80119d4:	4b0f      	ldr	r3, [pc, #60]	@ (8011a14 <qrcodegen_makeAlphanumeric+0x84>)
 80119d6:	1ae4      	subs	r4, r4, r3
 80119d8:	1904      	adds	r4, r0, r4
 80119da:	2d01      	cmp	r5, #1
 80119dc:	d10c      	bne.n	80119f8 <qrcodegen_makeAlphanumeric+0x68>
 80119de:	0033      	movs	r3, r6
 80119e0:	0020      	movs	r0, r4
 80119e2:	2400      	movs	r4, #0
 80119e4:	330c      	adds	r3, #12
 80119e6:	003a      	movs	r2, r7
 80119e8:	210b      	movs	r1, #11
 80119ea:	f7ff f939 	bl	8010c60 <appendBitsToBuffer>
 80119ee:	0025      	movs	r5, r4
 80119f0:	9b01      	ldr	r3, [sp, #4]
 80119f2:	3301      	adds	r3, #1
 80119f4:	9301      	str	r3, [sp, #4]
 80119f6:	e7e4      	b.n	80119c2 <qrcodegen_makeAlphanumeric+0x32>
 80119f8:	2501      	movs	r5, #1
 80119fa:	e7f9      	b.n	80119f0 <qrcodegen_makeAlphanumeric+0x60>
 80119fc:	2d01      	cmp	r5, #1
 80119fe:	d106      	bne.n	8011a0e <qrcodegen_makeAlphanumeric+0x7e>
 8011a00:	0033      	movs	r3, r6
 8011a02:	003a      	movs	r2, r7
 8011a04:	330c      	adds	r3, #12
 8011a06:	2106      	movs	r1, #6
 8011a08:	0020      	movs	r0, r4
 8011a0a:	f7ff f929 	bl	8010c60 <appendBitsToBuffer>
 8011a0e:	60b7      	str	r7, [r6, #8]
 8011a10:	0030      	movs	r0, r6
 8011a12:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8011a14:	08015d44 	.word	0x08015d44

08011a18 <qrcodegen_encodeText>:
 8011a18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a1a:	b093      	sub	sp, #76	@ 0x4c
 8011a1c:	9307      	str	r3, [sp, #28]
 8011a1e:	ab1a      	add	r3, sp, #104	@ 0x68
 8011a20:	781b      	ldrb	r3, [r3, #0]
 8011a22:	0005      	movs	r5, r0
 8011a24:	b25b      	sxtb	r3, r3
 8011a26:	9308      	str	r3, [sp, #32]
 8011a28:	ab1b      	add	r3, sp, #108	@ 0x6c
 8011a2a:	781b      	ldrb	r3, [r3, #0]
 8011a2c:	000e      	movs	r6, r1
 8011a2e:	9206      	str	r2, [sp, #24]
 8011a30:	9309      	str	r3, [sp, #36]	@ 0x24
 8011a32:	f7ee fb67 	bl	8000104 <strlen>
 8011a36:	1e04      	subs	r4, r0, #0
 8011a38:	d10f      	bne.n	8011a5a <qrcodegen_encodeText+0x42>
 8011a3a:	0001      	movs	r1, r0
 8011a3c:	9b06      	ldr	r3, [sp, #24]
 8011a3e:	9a07      	ldr	r2, [sp, #28]
 8011a40:	9304      	str	r3, [sp, #16]
 8011a42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011a44:	9603      	str	r6, [sp, #12]
 8011a46:	9302      	str	r3, [sp, #8]
 8011a48:	9b08      	ldr	r3, [sp, #32]
 8011a4a:	9301      	str	r3, [sp, #4]
 8011a4c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011a4e:	9300      	str	r3, [sp, #0]
 8011a50:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8011a52:	f7ff fba9 	bl	80111a8 <qrcodegen_encodeSegmentsAdvanced>
 8011a56:	b013      	add	sp, #76	@ 0x4c
 8011a58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a5a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011a5c:	0028      	movs	r0, r5
 8011a5e:	009f      	lsls	r7, r3, #2
 8011a60:	3711      	adds	r7, #17
 8011a62:	437f      	muls	r7, r7
 8011a64:	3707      	adds	r7, #7
 8011a66:	10ff      	asrs	r7, r7, #3
 8011a68:	3701      	adds	r7, #1
 8011a6a:	f7ff ff2f 	bl	80118cc <qrcodegen_isNumeric>
 8011a6e:	2800      	cmp	r0, #0
 8011a70:	d01f      	beq.n	8011ab2 <qrcodegen_encodeText+0x9a>
 8011a72:	0021      	movs	r1, r4
 8011a74:	2001      	movs	r0, #1
 8011a76:	f7ff ff47 	bl	8011908 <qrcodegen_calcSegmentBufferSize>
 8011a7a:	42b8      	cmp	r0, r7
 8011a7c:	d83f      	bhi.n	8011afe <qrcodegen_encodeText+0xe6>
 8011a7e:	ac0a      	add	r4, sp, #40	@ 0x28
 8011a80:	0032      	movs	r2, r6
 8011a82:	0029      	movs	r1, r5
 8011a84:	0020      	movs	r0, r4
 8011a86:	af0e      	add	r7, sp, #56	@ 0x38
 8011a88:	f7ff ff48 	bl	801191c <qrcodegen_makeNumeric>
 8011a8c:	003b      	movs	r3, r7
 8011a8e:	cc07      	ldmia	r4!, {r0, r1, r2}
 8011a90:	c307      	stmia	r3!, {r0, r1, r2}
 8011a92:	6822      	ldr	r2, [r4, #0]
 8011a94:	601a      	str	r2, [r3, #0]
 8011a96:	9b06      	ldr	r3, [sp, #24]
 8011a98:	9603      	str	r6, [sp, #12]
 8011a9a:	9304      	str	r3, [sp, #16]
 8011a9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011a9e:	9a07      	ldr	r2, [sp, #28]
 8011aa0:	9302      	str	r3, [sp, #8]
 8011aa2:	9b08      	ldr	r3, [sp, #32]
 8011aa4:	2101      	movs	r1, #1
 8011aa6:	9301      	str	r3, [sp, #4]
 8011aa8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011aaa:	a80e      	add	r0, sp, #56	@ 0x38
 8011aac:	9300      	str	r3, [sp, #0]
 8011aae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8011ab0:	e7cf      	b.n	8011a52 <qrcodegen_encodeText+0x3a>
 8011ab2:	0028      	movs	r0, r5
 8011ab4:	f7ff ff16 	bl	80118e4 <qrcodegen_isAlphanumeric>
 8011ab8:	2800      	cmp	r0, #0
 8011aba:	d00d      	beq.n	8011ad8 <qrcodegen_encodeText+0xc0>
 8011abc:	0021      	movs	r1, r4
 8011abe:	2002      	movs	r0, #2
 8011ac0:	f7ff ff22 	bl	8011908 <qrcodegen_calcSegmentBufferSize>
 8011ac4:	42b8      	cmp	r0, r7
 8011ac6:	d81a      	bhi.n	8011afe <qrcodegen_encodeText+0xe6>
 8011ac8:	ac0a      	add	r4, sp, #40	@ 0x28
 8011aca:	0032      	movs	r2, r6
 8011acc:	0029      	movs	r1, r5
 8011ace:	0020      	movs	r0, r4
 8011ad0:	af0e      	add	r7, sp, #56	@ 0x38
 8011ad2:	f7ff ff5d 	bl	8011990 <qrcodegen_makeAlphanumeric>
 8011ad6:	e7d9      	b.n	8011a8c <qrcodegen_encodeText+0x74>
 8011ad8:	42bc      	cmp	r4, r7
 8011ada:	d810      	bhi.n	8011afe <qrcodegen_encodeText+0xe6>
 8011adc:	5c2b      	ldrb	r3, [r5, r0]
 8011ade:	5433      	strb	r3, [r6, r0]
 8011ae0:	3001      	adds	r0, #1
 8011ae2:	4284      	cmp	r4, r0
 8011ae4:	d1fa      	bne.n	8011adc <qrcodegen_encodeText+0xc4>
 8011ae6:	2004      	movs	r0, #4
 8011ae8:	ad0e      	add	r5, sp, #56	@ 0x38
 8011aea:	0021      	movs	r1, r4
 8011aec:	7028      	strb	r0, [r5, #0]
 8011aee:	f7ff fa31 	bl	8010f54 <calcSegmentBitLength>
 8011af2:	60e8      	str	r0, [r5, #12]
 8011af4:	1c43      	adds	r3, r0, #1
 8011af6:	d002      	beq.n	8011afe <qrcodegen_encodeText+0xe6>
 8011af8:	606c      	str	r4, [r5, #4]
 8011afa:	60ae      	str	r6, [r5, #8]
 8011afc:	e7cb      	b.n	8011a96 <qrcodegen_encodeText+0x7e>
 8011afe:	2000      	movs	r0, #0
 8011b00:	9b06      	ldr	r3, [sp, #24]
 8011b02:	7018      	strb	r0, [r3, #0]
 8011b04:	e7a7      	b.n	8011a56 <qrcodegen_encodeText+0x3e>

08011b06 <_ZdlPvj>:
 8011b06:	b510      	push	{r4, lr}
 8011b08:	f000 f814 	bl	8011b34 <_ZdlPv>
 8011b0c:	bd10      	pop	{r4, pc}

08011b0e <__cxa_guard_acquire>:
 8011b0e:	2301      	movs	r3, #1
 8011b10:	6802      	ldr	r2, [r0, #0]
 8011b12:	421a      	tst	r2, r3
 8011b14:	d106      	bne.n	8011b24 <__cxa_guard_acquire+0x16>
 8011b16:	7842      	ldrb	r2, [r0, #1]
 8011b18:	2a00      	cmp	r2, #0
 8011b1a:	d000      	beq.n	8011b1e <__cxa_guard_acquire+0x10>
 8011b1c:	deff      	udf	#255	@ 0xff
 8011b1e:	7043      	strb	r3, [r0, #1]
 8011b20:	0018      	movs	r0, r3
 8011b22:	4770      	bx	lr
 8011b24:	2000      	movs	r0, #0
 8011b26:	e7fc      	b.n	8011b22 <__cxa_guard_acquire+0x14>

08011b28 <__cxa_guard_release>:
 8011b28:	2301      	movs	r3, #1
 8011b2a:	6003      	str	r3, [r0, #0]
 8011b2c:	4770      	bx	lr

08011b2e <__cxa_pure_virtual>:
 8011b2e:	b510      	push	{r4, lr}
 8011b30:	f000 f808 	bl	8011b44 <_ZSt9terminatev>

08011b34 <_ZdlPv>:
 8011b34:	b510      	push	{r4, lr}
 8011b36:	f000 fe43 	bl	80127c0 <free>
 8011b3a:	bd10      	pop	{r4, pc}

08011b3c <_ZN10__cxxabiv111__terminateEPFvvE>:
 8011b3c:	b510      	push	{r4, lr}
 8011b3e:	4780      	blx	r0
 8011b40:	f000 fe06 	bl	8012750 <abort>

08011b44 <_ZSt9terminatev>:
 8011b44:	4b02      	ldr	r3, [pc, #8]	@ (8011b50 <_ZSt9terminatev+0xc>)
 8011b46:	b510      	push	{r4, lr}
 8011b48:	6818      	ldr	r0, [r3, #0]
 8011b4a:	f7ff fff7 	bl	8011b3c <_ZN10__cxxabiv111__terminateEPFvvE>
 8011b4e:	46c0      	nop			@ (mov r8, r8)
 8011b50:	2000001c 	.word	0x2000001c

08011b54 <cosf>:
 8011b54:	b507      	push	{r0, r1, r2, lr}
 8011b56:	4a18      	ldr	r2, [pc, #96]	@ (8011bb8 <cosf+0x64>)
 8011b58:	0043      	lsls	r3, r0, #1
 8011b5a:	2100      	movs	r1, #0
 8011b5c:	085b      	lsrs	r3, r3, #1
 8011b5e:	4293      	cmp	r3, r2
 8011b60:	d914      	bls.n	8011b8c <cosf+0x38>
 8011b62:	22ff      	movs	r2, #255	@ 0xff
 8011b64:	05d2      	lsls	r2, r2, #23
 8011b66:	4293      	cmp	r3, r2
 8011b68:	d303      	bcc.n	8011b72 <cosf+0x1e>
 8011b6a:	1c01      	adds	r1, r0, #0
 8011b6c:	f7ef f958 	bl	8000e20 <__aeabi_fsub>
 8011b70:	bd0e      	pop	{r1, r2, r3, pc}
 8011b72:	4669      	mov	r1, sp
 8011b74:	f000 f94e 	bl	8011e14 <__ieee754_rem_pio2f>
 8011b78:	2203      	movs	r2, #3
 8011b7a:	4002      	ands	r2, r0
 8011b7c:	2a01      	cmp	r2, #1
 8011b7e:	d008      	beq.n	8011b92 <cosf+0x3e>
 8011b80:	2a02      	cmp	r2, #2
 8011b82:	d00e      	beq.n	8011ba2 <cosf+0x4e>
 8011b84:	2a00      	cmp	r2, #0
 8011b86:	d111      	bne.n	8011bac <cosf+0x58>
 8011b88:	9901      	ldr	r1, [sp, #4]
 8011b8a:	9800      	ldr	r0, [sp, #0]
 8011b8c:	f000 f84e 	bl	8011c2c <__kernel_cosf>
 8011b90:	e7ee      	b.n	8011b70 <cosf+0x1c>
 8011b92:	9901      	ldr	r1, [sp, #4]
 8011b94:	9800      	ldr	r0, [sp, #0]
 8011b96:	f000 f8c9 	bl	8011d2c <__kernel_sinf>
 8011b9a:	2380      	movs	r3, #128	@ 0x80
 8011b9c:	061b      	lsls	r3, r3, #24
 8011b9e:	18c0      	adds	r0, r0, r3
 8011ba0:	e7e6      	b.n	8011b70 <cosf+0x1c>
 8011ba2:	9901      	ldr	r1, [sp, #4]
 8011ba4:	9800      	ldr	r0, [sp, #0]
 8011ba6:	f000 f841 	bl	8011c2c <__kernel_cosf>
 8011baa:	e7f6      	b.n	8011b9a <cosf+0x46>
 8011bac:	2201      	movs	r2, #1
 8011bae:	9901      	ldr	r1, [sp, #4]
 8011bb0:	9800      	ldr	r0, [sp, #0]
 8011bb2:	f000 f8bb 	bl	8011d2c <__kernel_sinf>
 8011bb6:	e7db      	b.n	8011b70 <cosf+0x1c>
 8011bb8:	3f490fd8 	.word	0x3f490fd8

08011bbc <sinf>:
 8011bbc:	b507      	push	{r0, r1, r2, lr}
 8011bbe:	4a1a      	ldr	r2, [pc, #104]	@ (8011c28 <sinf+0x6c>)
 8011bc0:	0043      	lsls	r3, r0, #1
 8011bc2:	085b      	lsrs	r3, r3, #1
 8011bc4:	4293      	cmp	r3, r2
 8011bc6:	d804      	bhi.n	8011bd2 <sinf+0x16>
 8011bc8:	2200      	movs	r2, #0
 8011bca:	2100      	movs	r1, #0
 8011bcc:	f000 f8ae 	bl	8011d2c <__kernel_sinf>
 8011bd0:	e006      	b.n	8011be0 <sinf+0x24>
 8011bd2:	22ff      	movs	r2, #255	@ 0xff
 8011bd4:	05d2      	lsls	r2, r2, #23
 8011bd6:	4293      	cmp	r3, r2
 8011bd8:	d303      	bcc.n	8011be2 <sinf+0x26>
 8011bda:	1c01      	adds	r1, r0, #0
 8011bdc:	f7ef f920 	bl	8000e20 <__aeabi_fsub>
 8011be0:	bd0e      	pop	{r1, r2, r3, pc}
 8011be2:	4669      	mov	r1, sp
 8011be4:	f000 f916 	bl	8011e14 <__ieee754_rem_pio2f>
 8011be8:	2303      	movs	r3, #3
 8011bea:	4018      	ands	r0, r3
 8011bec:	2801      	cmp	r0, #1
 8011bee:	d007      	beq.n	8011c00 <sinf+0x44>
 8011bf0:	2802      	cmp	r0, #2
 8011bf2:	d00a      	beq.n	8011c0a <sinf+0x4e>
 8011bf4:	2800      	cmp	r0, #0
 8011bf6:	d111      	bne.n	8011c1c <sinf+0x60>
 8011bf8:	2201      	movs	r2, #1
 8011bfa:	9901      	ldr	r1, [sp, #4]
 8011bfc:	9800      	ldr	r0, [sp, #0]
 8011bfe:	e7e5      	b.n	8011bcc <sinf+0x10>
 8011c00:	9901      	ldr	r1, [sp, #4]
 8011c02:	9800      	ldr	r0, [sp, #0]
 8011c04:	f000 f812 	bl	8011c2c <__kernel_cosf>
 8011c08:	e7ea      	b.n	8011be0 <sinf+0x24>
 8011c0a:	2201      	movs	r2, #1
 8011c0c:	9901      	ldr	r1, [sp, #4]
 8011c0e:	9800      	ldr	r0, [sp, #0]
 8011c10:	f000 f88c 	bl	8011d2c <__kernel_sinf>
 8011c14:	2380      	movs	r3, #128	@ 0x80
 8011c16:	061b      	lsls	r3, r3, #24
 8011c18:	18c0      	adds	r0, r0, r3
 8011c1a:	e7e1      	b.n	8011be0 <sinf+0x24>
 8011c1c:	9901      	ldr	r1, [sp, #4]
 8011c1e:	9800      	ldr	r0, [sp, #0]
 8011c20:	f000 f804 	bl	8011c2c <__kernel_cosf>
 8011c24:	e7f6      	b.n	8011c14 <sinf+0x58>
 8011c26:	46c0      	nop			@ (mov r8, r8)
 8011c28:	3f490fd8 	.word	0x3f490fd8

08011c2c <__kernel_cosf>:
 8011c2c:	23c8      	movs	r3, #200	@ 0xc8
 8011c2e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011c30:	0044      	lsls	r4, r0, #1
 8011c32:	1c06      	adds	r6, r0, #0
 8011c34:	9101      	str	r1, [sp, #4]
 8011c36:	0864      	lsrs	r4, r4, #1
 8011c38:	059b      	lsls	r3, r3, #22
 8011c3a:	429c      	cmp	r4, r3
 8011c3c:	d203      	bcs.n	8011c46 <__kernel_cosf+0x1a>
 8011c3e:	f7ef fa93 	bl	8001168 <__aeabi_f2iz>
 8011c42:	2800      	cmp	r0, #0
 8011c44:	d05d      	beq.n	8011d02 <__kernel_cosf+0xd6>
 8011c46:	1c31      	adds	r1, r6, #0
 8011c48:	1c30      	adds	r0, r6, #0
 8011c4a:	f7ee ffab 	bl	8000ba4 <__aeabi_fmul>
 8011c4e:	21fc      	movs	r1, #252	@ 0xfc
 8011c50:	0589      	lsls	r1, r1, #22
 8011c52:	1c05      	adds	r5, r0, #0
 8011c54:	f7ee ffa6 	bl	8000ba4 <__aeabi_fmul>
 8011c58:	492b      	ldr	r1, [pc, #172]	@ (8011d08 <__kernel_cosf+0xdc>)
 8011c5a:	1c07      	adds	r7, r0, #0
 8011c5c:	1c28      	adds	r0, r5, #0
 8011c5e:	f7ee ffa1 	bl	8000ba4 <__aeabi_fmul>
 8011c62:	492a      	ldr	r1, [pc, #168]	@ (8011d0c <__kernel_cosf+0xe0>)
 8011c64:	f7ee fc2e 	bl	80004c4 <__aeabi_fadd>
 8011c68:	1c29      	adds	r1, r5, #0
 8011c6a:	f7ee ff9b 	bl	8000ba4 <__aeabi_fmul>
 8011c6e:	4928      	ldr	r1, [pc, #160]	@ (8011d10 <__kernel_cosf+0xe4>)
 8011c70:	f7ef f8d6 	bl	8000e20 <__aeabi_fsub>
 8011c74:	1c29      	adds	r1, r5, #0
 8011c76:	f7ee ff95 	bl	8000ba4 <__aeabi_fmul>
 8011c7a:	4926      	ldr	r1, [pc, #152]	@ (8011d14 <__kernel_cosf+0xe8>)
 8011c7c:	f7ee fc22 	bl	80004c4 <__aeabi_fadd>
 8011c80:	1c29      	adds	r1, r5, #0
 8011c82:	f7ee ff8f 	bl	8000ba4 <__aeabi_fmul>
 8011c86:	4924      	ldr	r1, [pc, #144]	@ (8011d18 <__kernel_cosf+0xec>)
 8011c88:	f7ef f8ca 	bl	8000e20 <__aeabi_fsub>
 8011c8c:	1c29      	adds	r1, r5, #0
 8011c8e:	f7ee ff89 	bl	8000ba4 <__aeabi_fmul>
 8011c92:	4922      	ldr	r1, [pc, #136]	@ (8011d1c <__kernel_cosf+0xf0>)
 8011c94:	f7ee fc16 	bl	80004c4 <__aeabi_fadd>
 8011c98:	1c29      	adds	r1, r5, #0
 8011c9a:	f7ee ff83 	bl	8000ba4 <__aeabi_fmul>
 8011c9e:	1c29      	adds	r1, r5, #0
 8011ca0:	f7ee ff80 	bl	8000ba4 <__aeabi_fmul>
 8011ca4:	9901      	ldr	r1, [sp, #4]
 8011ca6:	1c05      	adds	r5, r0, #0
 8011ca8:	1c30      	adds	r0, r6, #0
 8011caa:	f7ee ff7b 	bl	8000ba4 <__aeabi_fmul>
 8011cae:	1c01      	adds	r1, r0, #0
 8011cb0:	1c28      	adds	r0, r5, #0
 8011cb2:	f7ef f8b5 	bl	8000e20 <__aeabi_fsub>
 8011cb6:	4b1a      	ldr	r3, [pc, #104]	@ (8011d20 <__kernel_cosf+0xf4>)
 8011cb8:	1c05      	adds	r5, r0, #0
 8011cba:	429c      	cmp	r4, r3
 8011cbc:	d809      	bhi.n	8011cd2 <__kernel_cosf+0xa6>
 8011cbe:	1c01      	adds	r1, r0, #0
 8011cc0:	1c38      	adds	r0, r7, #0
 8011cc2:	f7ef f8ad 	bl	8000e20 <__aeabi_fsub>
 8011cc6:	1c01      	adds	r1, r0, #0
 8011cc8:	20fe      	movs	r0, #254	@ 0xfe
 8011cca:	0580      	lsls	r0, r0, #22
 8011ccc:	f7ef f8a8 	bl	8000e20 <__aeabi_fsub>
 8011cd0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8011cd2:	4b14      	ldr	r3, [pc, #80]	@ (8011d24 <__kernel_cosf+0xf8>)
 8011cd4:	429c      	cmp	r4, r3
 8011cd6:	d812      	bhi.n	8011cfe <__kernel_cosf+0xd2>
 8011cd8:	23ff      	movs	r3, #255	@ 0xff
 8011cda:	061b      	lsls	r3, r3, #24
 8011cdc:	18e4      	adds	r4, r4, r3
 8011cde:	20fe      	movs	r0, #254	@ 0xfe
 8011ce0:	1c21      	adds	r1, r4, #0
 8011ce2:	0580      	lsls	r0, r0, #22
 8011ce4:	f7ef f89c 	bl	8000e20 <__aeabi_fsub>
 8011ce8:	1c21      	adds	r1, r4, #0
 8011cea:	1c06      	adds	r6, r0, #0
 8011cec:	1c38      	adds	r0, r7, #0
 8011cee:	f7ef f897 	bl	8000e20 <__aeabi_fsub>
 8011cf2:	1c29      	adds	r1, r5, #0
 8011cf4:	f7ef f894 	bl	8000e20 <__aeabi_fsub>
 8011cf8:	1c01      	adds	r1, r0, #0
 8011cfa:	1c30      	adds	r0, r6, #0
 8011cfc:	e7e6      	b.n	8011ccc <__kernel_cosf+0xa0>
 8011cfe:	4c0a      	ldr	r4, [pc, #40]	@ (8011d28 <__kernel_cosf+0xfc>)
 8011d00:	e7ed      	b.n	8011cde <__kernel_cosf+0xb2>
 8011d02:	20fe      	movs	r0, #254	@ 0xfe
 8011d04:	0580      	lsls	r0, r0, #22
 8011d06:	e7e3      	b.n	8011cd0 <__kernel_cosf+0xa4>
 8011d08:	ad47d74e 	.word	0xad47d74e
 8011d0c:	310f74f6 	.word	0x310f74f6
 8011d10:	3493f27c 	.word	0x3493f27c
 8011d14:	37d00d01 	.word	0x37d00d01
 8011d18:	3ab60b61 	.word	0x3ab60b61
 8011d1c:	3d2aaaab 	.word	0x3d2aaaab
 8011d20:	3e999999 	.word	0x3e999999
 8011d24:	3f480000 	.word	0x3f480000
 8011d28:	3e900000 	.word	0x3e900000

08011d2c <__kernel_sinf>:
 8011d2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011d2e:	9201      	str	r2, [sp, #4]
 8011d30:	22c8      	movs	r2, #200	@ 0xc8
 8011d32:	0043      	lsls	r3, r0, #1
 8011d34:	1c04      	adds	r4, r0, #0
 8011d36:	9100      	str	r1, [sp, #0]
 8011d38:	085b      	lsrs	r3, r3, #1
 8011d3a:	0592      	lsls	r2, r2, #22
 8011d3c:	4293      	cmp	r3, r2
 8011d3e:	d203      	bcs.n	8011d48 <__kernel_sinf+0x1c>
 8011d40:	f7ef fa12 	bl	8001168 <__aeabi_f2iz>
 8011d44:	2800      	cmp	r0, #0
 8011d46:	d035      	beq.n	8011db4 <__kernel_sinf+0x88>
 8011d48:	1c21      	adds	r1, r4, #0
 8011d4a:	1c20      	adds	r0, r4, #0
 8011d4c:	f7ee ff2a 	bl	8000ba4 <__aeabi_fmul>
 8011d50:	1c05      	adds	r5, r0, #0
 8011d52:	1c01      	adds	r1, r0, #0
 8011d54:	1c20      	adds	r0, r4, #0
 8011d56:	f7ee ff25 	bl	8000ba4 <__aeabi_fmul>
 8011d5a:	4928      	ldr	r1, [pc, #160]	@ (8011dfc <__kernel_sinf+0xd0>)
 8011d5c:	1c06      	adds	r6, r0, #0
 8011d5e:	1c28      	adds	r0, r5, #0
 8011d60:	f7ee ff20 	bl	8000ba4 <__aeabi_fmul>
 8011d64:	4926      	ldr	r1, [pc, #152]	@ (8011e00 <__kernel_sinf+0xd4>)
 8011d66:	f7ef f85b 	bl	8000e20 <__aeabi_fsub>
 8011d6a:	1c29      	adds	r1, r5, #0
 8011d6c:	f7ee ff1a 	bl	8000ba4 <__aeabi_fmul>
 8011d70:	4924      	ldr	r1, [pc, #144]	@ (8011e04 <__kernel_sinf+0xd8>)
 8011d72:	f7ee fba7 	bl	80004c4 <__aeabi_fadd>
 8011d76:	1c29      	adds	r1, r5, #0
 8011d78:	f7ee ff14 	bl	8000ba4 <__aeabi_fmul>
 8011d7c:	4922      	ldr	r1, [pc, #136]	@ (8011e08 <__kernel_sinf+0xdc>)
 8011d7e:	f7ef f84f 	bl	8000e20 <__aeabi_fsub>
 8011d82:	1c29      	adds	r1, r5, #0
 8011d84:	f7ee ff0e 	bl	8000ba4 <__aeabi_fmul>
 8011d88:	4920      	ldr	r1, [pc, #128]	@ (8011e0c <__kernel_sinf+0xe0>)
 8011d8a:	f7ee fb9b 	bl	80004c4 <__aeabi_fadd>
 8011d8e:	9b01      	ldr	r3, [sp, #4]
 8011d90:	1c07      	adds	r7, r0, #0
 8011d92:	2b00      	cmp	r3, #0
 8011d94:	d110      	bne.n	8011db8 <__kernel_sinf+0x8c>
 8011d96:	1c01      	adds	r1, r0, #0
 8011d98:	1c28      	adds	r0, r5, #0
 8011d9a:	f7ee ff03 	bl	8000ba4 <__aeabi_fmul>
 8011d9e:	491c      	ldr	r1, [pc, #112]	@ (8011e10 <__kernel_sinf+0xe4>)
 8011da0:	f7ef f83e 	bl	8000e20 <__aeabi_fsub>
 8011da4:	1c31      	adds	r1, r6, #0
 8011da6:	f7ee fefd 	bl	8000ba4 <__aeabi_fmul>
 8011daa:	1c01      	adds	r1, r0, #0
 8011dac:	1c20      	adds	r0, r4, #0
 8011dae:	f7ee fb89 	bl	80004c4 <__aeabi_fadd>
 8011db2:	1c04      	adds	r4, r0, #0
 8011db4:	1c20      	adds	r0, r4, #0
 8011db6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8011db8:	21fc      	movs	r1, #252	@ 0xfc
 8011dba:	9800      	ldr	r0, [sp, #0]
 8011dbc:	0589      	lsls	r1, r1, #22
 8011dbe:	f7ee fef1 	bl	8000ba4 <__aeabi_fmul>
 8011dc2:	1c39      	adds	r1, r7, #0
 8011dc4:	9001      	str	r0, [sp, #4]
 8011dc6:	1c30      	adds	r0, r6, #0
 8011dc8:	f7ee feec 	bl	8000ba4 <__aeabi_fmul>
 8011dcc:	1c01      	adds	r1, r0, #0
 8011dce:	9801      	ldr	r0, [sp, #4]
 8011dd0:	f7ef f826 	bl	8000e20 <__aeabi_fsub>
 8011dd4:	1c29      	adds	r1, r5, #0
 8011dd6:	f7ee fee5 	bl	8000ba4 <__aeabi_fmul>
 8011dda:	9900      	ldr	r1, [sp, #0]
 8011ddc:	f7ef f820 	bl	8000e20 <__aeabi_fsub>
 8011de0:	490b      	ldr	r1, [pc, #44]	@ (8011e10 <__kernel_sinf+0xe4>)
 8011de2:	1c05      	adds	r5, r0, #0
 8011de4:	1c30      	adds	r0, r6, #0
 8011de6:	f7ee fedd 	bl	8000ba4 <__aeabi_fmul>
 8011dea:	1c01      	adds	r1, r0, #0
 8011dec:	1c28      	adds	r0, r5, #0
 8011dee:	f7ee fb69 	bl	80004c4 <__aeabi_fadd>
 8011df2:	1c01      	adds	r1, r0, #0
 8011df4:	1c20      	adds	r0, r4, #0
 8011df6:	f7ef f813 	bl	8000e20 <__aeabi_fsub>
 8011dfa:	e7da      	b.n	8011db2 <__kernel_sinf+0x86>
 8011dfc:	2f2ec9d3 	.word	0x2f2ec9d3
 8011e00:	32d72f34 	.word	0x32d72f34
 8011e04:	3638ef1b 	.word	0x3638ef1b
 8011e08:	39500d01 	.word	0x39500d01
 8011e0c:	3c088889 	.word	0x3c088889
 8011e10:	3e2aaaab 	.word	0x3e2aaaab

08011e14 <__ieee754_rem_pio2f>:
 8011e14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e16:	4ba1      	ldr	r3, [pc, #644]	@ (801209c <__ieee754_rem_pio2f+0x288>)
 8011e18:	b08d      	sub	sp, #52	@ 0x34
 8011e1a:	0045      	lsls	r5, r0, #1
 8011e1c:	000c      	movs	r4, r1
 8011e1e:	1c07      	adds	r7, r0, #0
 8011e20:	9006      	str	r0, [sp, #24]
 8011e22:	086d      	lsrs	r5, r5, #1
 8011e24:	429d      	cmp	r5, r3
 8011e26:	d804      	bhi.n	8011e32 <__ieee754_rem_pio2f+0x1e>
 8011e28:	2300      	movs	r3, #0
 8011e2a:	6008      	str	r0, [r1, #0]
 8011e2c:	604b      	str	r3, [r1, #4]
 8011e2e:	2600      	movs	r6, #0
 8011e30:	e01b      	b.n	8011e6a <__ieee754_rem_pio2f+0x56>
 8011e32:	4b9b      	ldr	r3, [pc, #620]	@ (80120a0 <__ieee754_rem_pio2f+0x28c>)
 8011e34:	429d      	cmp	r5, r3
 8011e36:	d84c      	bhi.n	8011ed2 <__ieee754_rem_pio2f+0xbe>
 8011e38:	4d9a      	ldr	r5, [pc, #616]	@ (80120a4 <__ieee754_rem_pio2f+0x290>)
 8011e3a:	4e9b      	ldr	r6, [pc, #620]	@ (80120a8 <__ieee754_rem_pio2f+0x294>)
 8011e3c:	499b      	ldr	r1, [pc, #620]	@ (80120ac <__ieee754_rem_pio2f+0x298>)
 8011e3e:	4005      	ands	r5, r0
 8011e40:	2800      	cmp	r0, #0
 8011e42:	dd23      	ble.n	8011e8c <__ieee754_rem_pio2f+0x78>
 8011e44:	f7ee ffec 	bl	8000e20 <__aeabi_fsub>
 8011e48:	1c07      	adds	r7, r0, #0
 8011e4a:	42b5      	cmp	r5, r6
 8011e4c:	d010      	beq.n	8011e70 <__ieee754_rem_pio2f+0x5c>
 8011e4e:	4998      	ldr	r1, [pc, #608]	@ (80120b0 <__ieee754_rem_pio2f+0x29c>)
 8011e50:	f7ee ffe6 	bl	8000e20 <__aeabi_fsub>
 8011e54:	1c01      	adds	r1, r0, #0
 8011e56:	1c05      	adds	r5, r0, #0
 8011e58:	1c38      	adds	r0, r7, #0
 8011e5a:	f7ee ffe1 	bl	8000e20 <__aeabi_fsub>
 8011e5e:	4994      	ldr	r1, [pc, #592]	@ (80120b0 <__ieee754_rem_pio2f+0x29c>)
 8011e60:	f7ee ffde 	bl	8000e20 <__aeabi_fsub>
 8011e64:	2601      	movs	r6, #1
 8011e66:	6025      	str	r5, [r4, #0]
 8011e68:	6060      	str	r0, [r4, #4]
 8011e6a:	0030      	movs	r0, r6
 8011e6c:	b00d      	add	sp, #52	@ 0x34
 8011e6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e70:	4990      	ldr	r1, [pc, #576]	@ (80120b4 <__ieee754_rem_pio2f+0x2a0>)
 8011e72:	f7ee ffd5 	bl	8000e20 <__aeabi_fsub>
 8011e76:	4990      	ldr	r1, [pc, #576]	@ (80120b8 <__ieee754_rem_pio2f+0x2a4>)
 8011e78:	1c06      	adds	r6, r0, #0
 8011e7a:	f7ee ffd1 	bl	8000e20 <__aeabi_fsub>
 8011e7e:	1c01      	adds	r1, r0, #0
 8011e80:	1c05      	adds	r5, r0, #0
 8011e82:	1c30      	adds	r0, r6, #0
 8011e84:	f7ee ffcc 	bl	8000e20 <__aeabi_fsub>
 8011e88:	498b      	ldr	r1, [pc, #556]	@ (80120b8 <__ieee754_rem_pio2f+0x2a4>)
 8011e8a:	e7e9      	b.n	8011e60 <__ieee754_rem_pio2f+0x4c>
 8011e8c:	f7ee fb1a 	bl	80004c4 <__aeabi_fadd>
 8011e90:	1c07      	adds	r7, r0, #0
 8011e92:	42b5      	cmp	r5, r6
 8011e94:	d00f      	beq.n	8011eb6 <__ieee754_rem_pio2f+0xa2>
 8011e96:	4986      	ldr	r1, [pc, #536]	@ (80120b0 <__ieee754_rem_pio2f+0x29c>)
 8011e98:	f7ee fb14 	bl	80004c4 <__aeabi_fadd>
 8011e9c:	1c01      	adds	r1, r0, #0
 8011e9e:	1c05      	adds	r5, r0, #0
 8011ea0:	1c38      	adds	r0, r7, #0
 8011ea2:	f7ee ffbd 	bl	8000e20 <__aeabi_fsub>
 8011ea6:	4982      	ldr	r1, [pc, #520]	@ (80120b0 <__ieee754_rem_pio2f+0x29c>)
 8011ea8:	f7ee fb0c 	bl	80004c4 <__aeabi_fadd>
 8011eac:	2601      	movs	r6, #1
 8011eae:	6025      	str	r5, [r4, #0]
 8011eb0:	6060      	str	r0, [r4, #4]
 8011eb2:	4276      	negs	r6, r6
 8011eb4:	e7d9      	b.n	8011e6a <__ieee754_rem_pio2f+0x56>
 8011eb6:	497f      	ldr	r1, [pc, #508]	@ (80120b4 <__ieee754_rem_pio2f+0x2a0>)
 8011eb8:	f7ee fb04 	bl	80004c4 <__aeabi_fadd>
 8011ebc:	497e      	ldr	r1, [pc, #504]	@ (80120b8 <__ieee754_rem_pio2f+0x2a4>)
 8011ebe:	1c06      	adds	r6, r0, #0
 8011ec0:	f7ee fb00 	bl	80004c4 <__aeabi_fadd>
 8011ec4:	1c01      	adds	r1, r0, #0
 8011ec6:	1c05      	adds	r5, r0, #0
 8011ec8:	1c30      	adds	r0, r6, #0
 8011eca:	f7ee ffa9 	bl	8000e20 <__aeabi_fsub>
 8011ece:	497a      	ldr	r1, [pc, #488]	@ (80120b8 <__ieee754_rem_pio2f+0x2a4>)
 8011ed0:	e7ea      	b.n	8011ea8 <__ieee754_rem_pio2f+0x94>
 8011ed2:	4b7a      	ldr	r3, [pc, #488]	@ (80120bc <__ieee754_rem_pio2f+0x2a8>)
 8011ed4:	429d      	cmp	r5, r3
 8011ed6:	d900      	bls.n	8011eda <__ieee754_rem_pio2f+0xc6>
 8011ed8:	e090      	b.n	8011ffc <__ieee754_rem_pio2f+0x1e8>
 8011eda:	f000 f8fd 	bl	80120d8 <fabsf>
 8011ede:	4978      	ldr	r1, [pc, #480]	@ (80120c0 <__ieee754_rem_pio2f+0x2ac>)
 8011ee0:	9003      	str	r0, [sp, #12]
 8011ee2:	f7ee fe5f 	bl	8000ba4 <__aeabi_fmul>
 8011ee6:	21fc      	movs	r1, #252	@ 0xfc
 8011ee8:	0589      	lsls	r1, r1, #22
 8011eea:	f7ee faeb 	bl	80004c4 <__aeabi_fadd>
 8011eee:	f7ef f93b 	bl	8001168 <__aeabi_f2iz>
 8011ef2:	0006      	movs	r6, r0
 8011ef4:	f7ef f958 	bl	80011a8 <__aeabi_i2f>
 8011ef8:	496c      	ldr	r1, [pc, #432]	@ (80120ac <__ieee754_rem_pio2f+0x298>)
 8011efa:	9005      	str	r0, [sp, #20]
 8011efc:	f7ee fe52 	bl	8000ba4 <__aeabi_fmul>
 8011f00:	1c01      	adds	r1, r0, #0
 8011f02:	9803      	ldr	r0, [sp, #12]
 8011f04:	f7ee ff8c 	bl	8000e20 <__aeabi_fsub>
 8011f08:	4969      	ldr	r1, [pc, #420]	@ (80120b0 <__ieee754_rem_pio2f+0x29c>)
 8011f0a:	9003      	str	r0, [sp, #12]
 8011f0c:	9805      	ldr	r0, [sp, #20]
 8011f0e:	f7ee fe49 	bl	8000ba4 <__aeabi_fmul>
 8011f12:	9004      	str	r0, [sp, #16]
 8011f14:	2e1f      	cmp	r6, #31
 8011f16:	dc0c      	bgt.n	8011f32 <__ieee754_rem_pio2f+0x11e>
 8011f18:	4a6a      	ldr	r2, [pc, #424]	@ (80120c4 <__ieee754_rem_pio2f+0x2b0>)
 8011f1a:	1e71      	subs	r1, r6, #1
 8011f1c:	0089      	lsls	r1, r1, #2
 8011f1e:	4b6a      	ldr	r3, [pc, #424]	@ (80120c8 <__ieee754_rem_pio2f+0x2b4>)
 8011f20:	588a      	ldr	r2, [r1, r2]
 8011f22:	403b      	ands	r3, r7
 8011f24:	4293      	cmp	r3, r2
 8011f26:	d004      	beq.n	8011f32 <__ieee754_rem_pio2f+0x11e>
 8011f28:	1c01      	adds	r1, r0, #0
 8011f2a:	9803      	ldr	r0, [sp, #12]
 8011f2c:	f7ee ff78 	bl	8000e20 <__aeabi_fsub>
 8011f30:	e00c      	b.n	8011f4c <__ieee754_rem_pio2f+0x138>
 8011f32:	9904      	ldr	r1, [sp, #16]
 8011f34:	9803      	ldr	r0, [sp, #12]
 8011f36:	f7ee ff73 	bl	8000e20 <__aeabi_fsub>
 8011f3a:	22ff      	movs	r2, #255	@ 0xff
 8011f3c:	15eb      	asrs	r3, r5, #23
 8011f3e:	9307      	str	r3, [sp, #28]
 8011f40:	0dc3      	lsrs	r3, r0, #23
 8011f42:	4013      	ands	r3, r2
 8011f44:	9a07      	ldr	r2, [sp, #28]
 8011f46:	1ad3      	subs	r3, r2, r3
 8011f48:	2b08      	cmp	r3, #8
 8011f4a:	dc01      	bgt.n	8011f50 <__ieee754_rem_pio2f+0x13c>
 8011f4c:	6020      	str	r0, [r4, #0]
 8011f4e:	e026      	b.n	8011f9e <__ieee754_rem_pio2f+0x18a>
 8011f50:	4958      	ldr	r1, [pc, #352]	@ (80120b4 <__ieee754_rem_pio2f+0x2a0>)
 8011f52:	9805      	ldr	r0, [sp, #20]
 8011f54:	f7ee fe26 	bl	8000ba4 <__aeabi_fmul>
 8011f58:	1c05      	adds	r5, r0, #0
 8011f5a:	1c01      	adds	r1, r0, #0
 8011f5c:	9803      	ldr	r0, [sp, #12]
 8011f5e:	f7ee ff5f 	bl	8000e20 <__aeabi_fsub>
 8011f62:	1c01      	adds	r1, r0, #0
 8011f64:	1c07      	adds	r7, r0, #0
 8011f66:	9803      	ldr	r0, [sp, #12]
 8011f68:	f7ee ff5a 	bl	8000e20 <__aeabi_fsub>
 8011f6c:	1c29      	adds	r1, r5, #0
 8011f6e:	f7ee ff57 	bl	8000e20 <__aeabi_fsub>
 8011f72:	4951      	ldr	r1, [pc, #324]	@ (80120b8 <__ieee754_rem_pio2f+0x2a4>)
 8011f74:	1c05      	adds	r5, r0, #0
 8011f76:	9805      	ldr	r0, [sp, #20]
 8011f78:	f7ee fe14 	bl	8000ba4 <__aeabi_fmul>
 8011f7c:	1c29      	adds	r1, r5, #0
 8011f7e:	f7ee ff4f 	bl	8000e20 <__aeabi_fsub>
 8011f82:	9004      	str	r0, [sp, #16]
 8011f84:	1c01      	adds	r1, r0, #0
 8011f86:	1c38      	adds	r0, r7, #0
 8011f88:	f7ee ff4a 	bl	8000e20 <__aeabi_fsub>
 8011f8c:	22ff      	movs	r2, #255	@ 0xff
 8011f8e:	0dc3      	lsrs	r3, r0, #23
 8011f90:	4013      	ands	r3, r2
 8011f92:	9a07      	ldr	r2, [sp, #28]
 8011f94:	1ad3      	subs	r3, r2, r3
 8011f96:	2b19      	cmp	r3, #25
 8011f98:	dc15      	bgt.n	8011fc6 <__ieee754_rem_pio2f+0x1b2>
 8011f9a:	6020      	str	r0, [r4, #0]
 8011f9c:	9703      	str	r7, [sp, #12]
 8011f9e:	6825      	ldr	r5, [r4, #0]
 8011fa0:	9803      	ldr	r0, [sp, #12]
 8011fa2:	1c29      	adds	r1, r5, #0
 8011fa4:	f7ee ff3c 	bl	8000e20 <__aeabi_fsub>
 8011fa8:	9904      	ldr	r1, [sp, #16]
 8011faa:	f7ee ff39 	bl	8000e20 <__aeabi_fsub>
 8011fae:	9b06      	ldr	r3, [sp, #24]
 8011fb0:	6060      	str	r0, [r4, #4]
 8011fb2:	2b00      	cmp	r3, #0
 8011fb4:	db00      	blt.n	8011fb8 <__ieee754_rem_pio2f+0x1a4>
 8011fb6:	e758      	b.n	8011e6a <__ieee754_rem_pio2f+0x56>
 8011fb8:	2380      	movs	r3, #128	@ 0x80
 8011fba:	061b      	lsls	r3, r3, #24
 8011fbc:	18ed      	adds	r5, r5, r3
 8011fbe:	18c0      	adds	r0, r0, r3
 8011fc0:	6025      	str	r5, [r4, #0]
 8011fc2:	6060      	str	r0, [r4, #4]
 8011fc4:	e775      	b.n	8011eb2 <__ieee754_rem_pio2f+0x9e>
 8011fc6:	4941      	ldr	r1, [pc, #260]	@ (80120cc <__ieee754_rem_pio2f+0x2b8>)
 8011fc8:	9805      	ldr	r0, [sp, #20]
 8011fca:	f7ee fdeb 	bl	8000ba4 <__aeabi_fmul>
 8011fce:	1c05      	adds	r5, r0, #0
 8011fd0:	1c01      	adds	r1, r0, #0
 8011fd2:	1c38      	adds	r0, r7, #0
 8011fd4:	f7ee ff24 	bl	8000e20 <__aeabi_fsub>
 8011fd8:	1c01      	adds	r1, r0, #0
 8011fda:	9003      	str	r0, [sp, #12]
 8011fdc:	1c38      	adds	r0, r7, #0
 8011fde:	f7ee ff1f 	bl	8000e20 <__aeabi_fsub>
 8011fe2:	1c29      	adds	r1, r5, #0
 8011fe4:	f7ee ff1c 	bl	8000e20 <__aeabi_fsub>
 8011fe8:	4939      	ldr	r1, [pc, #228]	@ (80120d0 <__ieee754_rem_pio2f+0x2bc>)
 8011fea:	1c05      	adds	r5, r0, #0
 8011fec:	9805      	ldr	r0, [sp, #20]
 8011fee:	f7ee fdd9 	bl	8000ba4 <__aeabi_fmul>
 8011ff2:	1c29      	adds	r1, r5, #0
 8011ff4:	f7ee ff14 	bl	8000e20 <__aeabi_fsub>
 8011ff8:	9004      	str	r0, [sp, #16]
 8011ffa:	e795      	b.n	8011f28 <__ieee754_rem_pio2f+0x114>
 8011ffc:	23ff      	movs	r3, #255	@ 0xff
 8011ffe:	05db      	lsls	r3, r3, #23
 8012000:	429d      	cmp	r5, r3
 8012002:	d305      	bcc.n	8012010 <__ieee754_rem_pio2f+0x1fc>
 8012004:	1c01      	adds	r1, r0, #0
 8012006:	f7ee ff0b 	bl	8000e20 <__aeabi_fsub>
 801200a:	6060      	str	r0, [r4, #4]
 801200c:	6020      	str	r0, [r4, #0]
 801200e:	e70e      	b.n	8011e2e <__ieee754_rem_pio2f+0x1a>
 8012010:	15ee      	asrs	r6, r5, #23
 8012012:	3e86      	subs	r6, #134	@ 0x86
 8012014:	05f3      	lsls	r3, r6, #23
 8012016:	1aed      	subs	r5, r5, r3
 8012018:	1c28      	adds	r0, r5, #0
 801201a:	f7ef f8a5 	bl	8001168 <__aeabi_f2iz>
 801201e:	f7ef f8c3 	bl	80011a8 <__aeabi_i2f>
 8012022:	1c01      	adds	r1, r0, #0
 8012024:	9009      	str	r0, [sp, #36]	@ 0x24
 8012026:	1c28      	adds	r0, r5, #0
 8012028:	f7ee fefa 	bl	8000e20 <__aeabi_fsub>
 801202c:	2187      	movs	r1, #135	@ 0x87
 801202e:	05c9      	lsls	r1, r1, #23
 8012030:	f7ee fdb8 	bl	8000ba4 <__aeabi_fmul>
 8012034:	1c07      	adds	r7, r0, #0
 8012036:	f7ef f897 	bl	8001168 <__aeabi_f2iz>
 801203a:	f7ef f8b5 	bl	80011a8 <__aeabi_i2f>
 801203e:	1c01      	adds	r1, r0, #0
 8012040:	900a      	str	r0, [sp, #40]	@ 0x28
 8012042:	1c05      	adds	r5, r0, #0
 8012044:	1c38      	adds	r0, r7, #0
 8012046:	f7ee feeb 	bl	8000e20 <__aeabi_fsub>
 801204a:	2187      	movs	r1, #135	@ 0x87
 801204c:	05c9      	lsls	r1, r1, #23
 801204e:	f7ee fda9 	bl	8000ba4 <__aeabi_fmul>
 8012052:	2100      	movs	r1, #0
 8012054:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012056:	f7ee fa07 	bl	8000468 <__aeabi_fcmpeq>
 801205a:	2303      	movs	r3, #3
 801205c:	2800      	cmp	r0, #0
 801205e:	d006      	beq.n	801206e <__ieee754_rem_pio2f+0x25a>
 8012060:	2100      	movs	r1, #0
 8012062:	1c28      	adds	r0, r5, #0
 8012064:	f7ee fa00 	bl	8000468 <__aeabi_fcmpeq>
 8012068:	4243      	negs	r3, r0
 801206a:	4143      	adcs	r3, r0
 801206c:	3301      	adds	r3, #1
 801206e:	4a19      	ldr	r2, [pc, #100]	@ (80120d4 <__ieee754_rem_pio2f+0x2c0>)
 8012070:	0021      	movs	r1, r4
 8012072:	9201      	str	r2, [sp, #4]
 8012074:	2202      	movs	r2, #2
 8012076:	a809      	add	r0, sp, #36	@ 0x24
 8012078:	9200      	str	r2, [sp, #0]
 801207a:	0032      	movs	r2, r6
 801207c:	f000 f886 	bl	801218c <__kernel_rem_pio2f>
 8012080:	9b06      	ldr	r3, [sp, #24]
 8012082:	0006      	movs	r6, r0
 8012084:	2b00      	cmp	r3, #0
 8012086:	db00      	blt.n	801208a <__ieee754_rem_pio2f+0x276>
 8012088:	e6ef      	b.n	8011e6a <__ieee754_rem_pio2f+0x56>
 801208a:	2280      	movs	r2, #128	@ 0x80
 801208c:	6823      	ldr	r3, [r4, #0]
 801208e:	0612      	lsls	r2, r2, #24
 8012090:	189b      	adds	r3, r3, r2
 8012092:	6023      	str	r3, [r4, #0]
 8012094:	6863      	ldr	r3, [r4, #4]
 8012096:	189b      	adds	r3, r3, r2
 8012098:	6063      	str	r3, [r4, #4]
 801209a:	e70a      	b.n	8011eb2 <__ieee754_rem_pio2f+0x9e>
 801209c:	3f490fd8 	.word	0x3f490fd8
 80120a0:	4016cbe3 	.word	0x4016cbe3
 80120a4:	7ffffff0 	.word	0x7ffffff0
 80120a8:	3fc90fd0 	.word	0x3fc90fd0
 80120ac:	3fc90f80 	.word	0x3fc90f80
 80120b0:	37354443 	.word	0x37354443
 80120b4:	37354400 	.word	0x37354400
 80120b8:	2e85a308 	.word	0x2e85a308
 80120bc:	43490f80 	.word	0x43490f80
 80120c0:	3f22f984 	.word	0x3f22f984
 80120c4:	08015d74 	.word	0x08015d74
 80120c8:	7fffff00 	.word	0x7fffff00
 80120cc:	2e85a300 	.word	0x2e85a300
 80120d0:	248d3132 	.word	0x248d3132
 80120d4:	08015df4 	.word	0x08015df4

080120d8 <fabsf>:
 80120d8:	0040      	lsls	r0, r0, #1
 80120da:	0840      	lsrs	r0, r0, #1
 80120dc:	4770      	bx	lr
	...

080120e0 <scalbnf>:
 80120e0:	0043      	lsls	r3, r0, #1
 80120e2:	b570      	push	{r4, r5, r6, lr}
 80120e4:	0002      	movs	r2, r0
 80120e6:	000c      	movs	r4, r1
 80120e8:	085d      	lsrs	r5, r3, #1
 80120ea:	2b00      	cmp	r3, #0
 80120ec:	d006      	beq.n	80120fc <scalbnf+0x1c>
 80120ee:	21ff      	movs	r1, #255	@ 0xff
 80120f0:	05c9      	lsls	r1, r1, #23
 80120f2:	428d      	cmp	r5, r1
 80120f4:	d303      	bcc.n	80120fe <scalbnf+0x1e>
 80120f6:	1c01      	adds	r1, r0, #0
 80120f8:	f7ee f9e4 	bl	80004c4 <__aeabi_fadd>
 80120fc:	bd70      	pop	{r4, r5, r6, pc}
 80120fe:	4208      	tst	r0, r1
 8012100:	d118      	bne.n	8012134 <scalbnf+0x54>
 8012102:	2198      	movs	r1, #152	@ 0x98
 8012104:	05c9      	lsls	r1, r1, #23
 8012106:	f7ee fd4d 	bl	8000ba4 <__aeabi_fmul>
 801210a:	4b19      	ldr	r3, [pc, #100]	@ (8012170 <scalbnf+0x90>)
 801210c:	429c      	cmp	r4, r3
 801210e:	db0d      	blt.n	801212c <scalbnf+0x4c>
 8012110:	0002      	movs	r2, r0
 8012112:	15c3      	asrs	r3, r0, #23
 8012114:	b2db      	uxtb	r3, r3
 8012116:	3b19      	subs	r3, #25
 8012118:	4916      	ldr	r1, [pc, #88]	@ (8012174 <scalbnf+0x94>)
 801211a:	428c      	cmp	r4, r1
 801211c:	dd0c      	ble.n	8012138 <scalbnf+0x58>
 801211e:	4b16      	ldr	r3, [pc, #88]	@ (8012178 <scalbnf+0x98>)
 8012120:	2800      	cmp	r0, #0
 8012122:	da00      	bge.n	8012126 <scalbnf+0x46>
 8012124:	4b15      	ldr	r3, [pc, #84]	@ (801217c <scalbnf+0x9c>)
 8012126:	4914      	ldr	r1, [pc, #80]	@ (8012178 <scalbnf+0x98>)
 8012128:	1c18      	adds	r0, r3, #0
 801212a:	e000      	b.n	801212e <scalbnf+0x4e>
 801212c:	4914      	ldr	r1, [pc, #80]	@ (8012180 <scalbnf+0xa0>)
 801212e:	f7ee fd39 	bl	8000ba4 <__aeabi_fmul>
 8012132:	e7e3      	b.n	80120fc <scalbnf+0x1c>
 8012134:	0e1b      	lsrs	r3, r3, #24
 8012136:	e7ef      	b.n	8012118 <scalbnf+0x38>
 8012138:	1919      	adds	r1, r3, r4
 801213a:	29fe      	cmp	r1, #254	@ 0xfe
 801213c:	dcef      	bgt.n	801211e <scalbnf+0x3e>
 801213e:	2900      	cmp	r1, #0
 8012140:	dd04      	ble.n	801214c <scalbnf+0x6c>
 8012142:	4810      	ldr	r0, [pc, #64]	@ (8012184 <scalbnf+0xa4>)
 8012144:	05c9      	lsls	r1, r1, #23
 8012146:	4010      	ands	r0, r2
 8012148:	4308      	orrs	r0, r1
 801214a:	e7d7      	b.n	80120fc <scalbnf+0x1c>
 801214c:	000b      	movs	r3, r1
 801214e:	3316      	adds	r3, #22
 8012150:	da05      	bge.n	801215e <scalbnf+0x7e>
 8012152:	4b0b      	ldr	r3, [pc, #44]	@ (8012180 <scalbnf+0xa0>)
 8012154:	2800      	cmp	r0, #0
 8012156:	da00      	bge.n	801215a <scalbnf+0x7a>
 8012158:	4b0b      	ldr	r3, [pc, #44]	@ (8012188 <scalbnf+0xa8>)
 801215a:	4909      	ldr	r1, [pc, #36]	@ (8012180 <scalbnf+0xa0>)
 801215c:	e7e4      	b.n	8012128 <scalbnf+0x48>
 801215e:	3119      	adds	r1, #25
 8012160:	05c8      	lsls	r0, r1, #23
 8012162:	21cc      	movs	r1, #204	@ 0xcc
 8012164:	4b07      	ldr	r3, [pc, #28]	@ (8012184 <scalbnf+0xa4>)
 8012166:	0589      	lsls	r1, r1, #22
 8012168:	401a      	ands	r2, r3
 801216a:	4310      	orrs	r0, r2
 801216c:	e7df      	b.n	801212e <scalbnf+0x4e>
 801216e:	46c0      	nop			@ (mov r8, r8)
 8012170:	ffff3cb0 	.word	0xffff3cb0
 8012174:	0000c350 	.word	0x0000c350
 8012178:	7149f2ca 	.word	0x7149f2ca
 801217c:	f149f2ca 	.word	0xf149f2ca
 8012180:	0da24260 	.word	0x0da24260
 8012184:	807fffff 	.word	0x807fffff
 8012188:	8da24260 	.word	0x8da24260

0801218c <__kernel_rem_pio2f>:
 801218c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801218e:	b0dd      	sub	sp, #372	@ 0x174
 8012190:	9206      	str	r2, [sp, #24]
 8012192:	9a62      	ldr	r2, [sp, #392]	@ 0x188
 8012194:	9307      	str	r3, [sp, #28]
 8012196:	4bc8      	ldr	r3, [pc, #800]	@ (80124b8 <__kernel_rem_pio2f+0x32c>)
 8012198:	0092      	lsls	r2, r2, #2
 801219a:	58d3      	ldr	r3, [r2, r3]
 801219c:	9009      	str	r0, [sp, #36]	@ 0x24
 801219e:	9304      	str	r3, [sp, #16]
 80121a0:	9b07      	ldr	r3, [sp, #28]
 80121a2:	9102      	str	r1, [sp, #8]
 80121a4:	3b01      	subs	r3, #1
 80121a6:	9305      	str	r3, [sp, #20]
 80121a8:	2300      	movs	r3, #0
 80121aa:	9301      	str	r3, [sp, #4]
 80121ac:	9b06      	ldr	r3, [sp, #24]
 80121ae:	3304      	adds	r3, #4
 80121b0:	db07      	blt.n	80121c2 <__kernel_rem_pio2f+0x36>
 80121b2:	2107      	movs	r1, #7
 80121b4:	9b06      	ldr	r3, [sp, #24]
 80121b6:	1eda      	subs	r2, r3, #3
 80121b8:	17d3      	asrs	r3, r2, #31
 80121ba:	400b      	ands	r3, r1
 80121bc:	189b      	adds	r3, r3, r2
 80121be:	10db      	asrs	r3, r3, #3
 80121c0:	9301      	str	r3, [sp, #4]
 80121c2:	9b01      	ldr	r3, [sp, #4]
 80121c4:	ae20      	add	r6, sp, #128	@ 0x80
 80121c6:	3301      	adds	r3, #1
 80121c8:	00db      	lsls	r3, r3, #3
 80121ca:	9308      	str	r3, [sp, #32]
 80121cc:	9a08      	ldr	r2, [sp, #32]
 80121ce:	9b06      	ldr	r3, [sp, #24]
 80121d0:	1a9b      	subs	r3, r3, r2
 80121d2:	9300      	str	r3, [sp, #0]
 80121d4:	9a05      	ldr	r2, [sp, #20]
 80121d6:	9b01      	ldr	r3, [sp, #4]
 80121d8:	1a9d      	subs	r5, r3, r2
 80121da:	002c      	movs	r4, r5
 80121dc:	9b04      	ldr	r3, [sp, #16]
 80121de:	189f      	adds	r7, r3, r2
 80121e0:	1b63      	subs	r3, r4, r5
 80121e2:	429f      	cmp	r7, r3
 80121e4:	da0d      	bge.n	8012202 <__kernel_rem_pio2f+0x76>
 80121e6:	9c07      	ldr	r4, [sp, #28]
 80121e8:	af48      	add	r7, sp, #288	@ 0x120
 80121ea:	9b07      	ldr	r3, [sp, #28]
 80121ec:	9a04      	ldr	r2, [sp, #16]
 80121ee:	1ae3      	subs	r3, r4, r3
 80121f0:	429a      	cmp	r2, r3
 80121f2:	db25      	blt.n	8012240 <__kernel_rem_pio2f+0xb4>
 80121f4:	00a3      	lsls	r3, r4, #2
 80121f6:	aa20      	add	r2, sp, #128	@ 0x80
 80121f8:	189e      	adds	r6, r3, r2
 80121fa:	2300      	movs	r3, #0
 80121fc:	2500      	movs	r5, #0
 80121fe:	9303      	str	r3, [sp, #12]
 8012200:	e016      	b.n	8012230 <__kernel_rem_pio2f+0xa4>
 8012202:	2000      	movs	r0, #0
 8012204:	2c00      	cmp	r4, #0
 8012206:	db04      	blt.n	8012212 <__kernel_rem_pio2f+0x86>
 8012208:	9a63      	ldr	r2, [sp, #396]	@ 0x18c
 801220a:	00a3      	lsls	r3, r4, #2
 801220c:	58d0      	ldr	r0, [r2, r3]
 801220e:	f7ee ffcb 	bl	80011a8 <__aeabi_i2f>
 8012212:	c601      	stmia	r6!, {r0}
 8012214:	3401      	adds	r4, #1
 8012216:	e7e3      	b.n	80121e0 <__kernel_rem_pio2f+0x54>
 8012218:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801221a:	00ab      	lsls	r3, r5, #2
 801221c:	6831      	ldr	r1, [r6, #0]
 801221e:	58d0      	ldr	r0, [r2, r3]
 8012220:	f7ee fcc0 	bl	8000ba4 <__aeabi_fmul>
 8012224:	1c01      	adds	r1, r0, #0
 8012226:	9803      	ldr	r0, [sp, #12]
 8012228:	f7ee f94c 	bl	80004c4 <__aeabi_fadd>
 801222c:	3501      	adds	r5, #1
 801222e:	9003      	str	r0, [sp, #12]
 8012230:	9b05      	ldr	r3, [sp, #20]
 8012232:	3e04      	subs	r6, #4
 8012234:	429d      	cmp	r5, r3
 8012236:	ddef      	ble.n	8012218 <__kernel_rem_pio2f+0x8c>
 8012238:	9b03      	ldr	r3, [sp, #12]
 801223a:	3401      	adds	r4, #1
 801223c:	c708      	stmia	r7!, {r3}
 801223e:	e7d4      	b.n	80121ea <__kernel_rem_pio2f+0x5e>
 8012240:	9b04      	ldr	r3, [sp, #16]
 8012242:	aa0c      	add	r2, sp, #48	@ 0x30
 8012244:	009b      	lsls	r3, r3, #2
 8012246:	189b      	adds	r3, r3, r2
 8012248:	930b      	str	r3, [sp, #44]	@ 0x2c
 801224a:	9b01      	ldr	r3, [sp, #4]
 801224c:	9a63      	ldr	r2, [sp, #396]	@ 0x18c
 801224e:	009b      	lsls	r3, r3, #2
 8012250:	18d3      	adds	r3, r2, r3
 8012252:	9f04      	ldr	r7, [sp, #16]
 8012254:	930a      	str	r3, [sp, #40]	@ 0x28
 8012256:	21f0      	movs	r1, #240	@ 0xf0
 8012258:	ae0c      	add	r6, sp, #48	@ 0x30
 801225a:	0034      	movs	r4, r6
 801225c:	003d      	movs	r5, r7
 801225e:	aa0c      	add	r2, sp, #48	@ 0x30
 8012260:	00bb      	lsls	r3, r7, #2
 8012262:	1852      	adds	r2, r2, r1
 8012264:	58d3      	ldr	r3, [r2, r3]
 8012266:	9301      	str	r3, [sp, #4]
 8012268:	2d00      	cmp	r5, #0
 801226a:	dc64      	bgt.n	8012336 <__kernel_rem_pio2f+0x1aa>
 801226c:	9900      	ldr	r1, [sp, #0]
 801226e:	9801      	ldr	r0, [sp, #4]
 8012270:	f7ff ff36 	bl	80120e0 <scalbnf>
 8012274:	21f8      	movs	r1, #248	@ 0xf8
 8012276:	0589      	lsls	r1, r1, #22
 8012278:	1c04      	adds	r4, r0, #0
 801227a:	f7ee fc93 	bl	8000ba4 <__aeabi_fmul>
 801227e:	f000 fa25 	bl	80126cc <floorf>
 8012282:	2182      	movs	r1, #130	@ 0x82
 8012284:	05c9      	lsls	r1, r1, #23
 8012286:	f7ee fc8d 	bl	8000ba4 <__aeabi_fmul>
 801228a:	1c01      	adds	r1, r0, #0
 801228c:	1c20      	adds	r0, r4, #0
 801228e:	f7ee fdc7 	bl	8000e20 <__aeabi_fsub>
 8012292:	1c04      	adds	r4, r0, #0
 8012294:	f7ee ff68 	bl	8001168 <__aeabi_f2iz>
 8012298:	9003      	str	r0, [sp, #12]
 801229a:	f7ee ff85 	bl	80011a8 <__aeabi_i2f>
 801229e:	1c01      	adds	r1, r0, #0
 80122a0:	1c20      	adds	r0, r4, #0
 80122a2:	f7ee fdbd 	bl	8000e20 <__aeabi_fsub>
 80122a6:	9b00      	ldr	r3, [sp, #0]
 80122a8:	1c04      	adds	r4, r0, #0
 80122aa:	2b00      	cmp	r3, #0
 80122ac:	dd63      	ble.n	8012376 <__kernel_rem_pio2f+0x1ea>
 80122ae:	2008      	movs	r0, #8
 80122b0:	1e7b      	subs	r3, r7, #1
 80122b2:	009b      	lsls	r3, r3, #2
 80122b4:	aa0c      	add	r2, sp, #48	@ 0x30
 80122b6:	589a      	ldr	r2, [r3, r2]
 80122b8:	9900      	ldr	r1, [sp, #0]
 80122ba:	9d03      	ldr	r5, [sp, #12]
 80122bc:	1a40      	subs	r0, r0, r1
 80122be:	0011      	movs	r1, r2
 80122c0:	4101      	asrs	r1, r0
 80122c2:	186d      	adds	r5, r5, r1
 80122c4:	4081      	lsls	r1, r0
 80122c6:	1a52      	subs	r2, r2, r1
 80122c8:	a90c      	add	r1, sp, #48	@ 0x30
 80122ca:	505a      	str	r2, [r3, r1]
 80122cc:	2307      	movs	r3, #7
 80122ce:	9900      	ldr	r1, [sp, #0]
 80122d0:	9503      	str	r5, [sp, #12]
 80122d2:	1a5b      	subs	r3, r3, r1
 80122d4:	411a      	asrs	r2, r3
 80122d6:	9201      	str	r2, [sp, #4]
 80122d8:	9b01      	ldr	r3, [sp, #4]
 80122da:	2b00      	cmp	r3, #0
 80122dc:	dd5c      	ble.n	8012398 <__kernel_rem_pio2f+0x20c>
 80122de:	9b03      	ldr	r3, [sp, #12]
 80122e0:	2200      	movs	r2, #0
 80122e2:	3301      	adds	r3, #1
 80122e4:	9303      	str	r3, [sp, #12]
 80122e6:	2380      	movs	r3, #128	@ 0x80
 80122e8:	005b      	lsls	r3, r3, #1
 80122ea:	0015      	movs	r5, r2
 80122ec:	21ff      	movs	r1, #255	@ 0xff
 80122ee:	2001      	movs	r0, #1
 80122f0:	469c      	mov	ip, r3
 80122f2:	4297      	cmp	r7, r2
 80122f4:	dd00      	ble.n	80122f8 <__kernel_rem_pio2f+0x16c>
 80122f6:	e082      	b.n	80123fe <__kernel_rem_pio2f+0x272>
 80122f8:	9b00      	ldr	r3, [sp, #0]
 80122fa:	2b00      	cmp	r3, #0
 80122fc:	dd05      	ble.n	801230a <__kernel_rem_pio2f+0x17e>
 80122fe:	2b01      	cmp	r3, #1
 8012300:	d100      	bne.n	8012304 <__kernel_rem_pio2f+0x178>
 8012302:	e08b      	b.n	801241c <__kernel_rem_pio2f+0x290>
 8012304:	2b02      	cmp	r3, #2
 8012306:	d100      	bne.n	801230a <__kernel_rem_pio2f+0x17e>
 8012308:	e091      	b.n	801242e <__kernel_rem_pio2f+0x2a2>
 801230a:	9b01      	ldr	r3, [sp, #4]
 801230c:	2b02      	cmp	r3, #2
 801230e:	d143      	bne.n	8012398 <__kernel_rem_pio2f+0x20c>
 8012310:	20fe      	movs	r0, #254	@ 0xfe
 8012312:	1c21      	adds	r1, r4, #0
 8012314:	0580      	lsls	r0, r0, #22
 8012316:	f7ee fd83 	bl	8000e20 <__aeabi_fsub>
 801231a:	1c04      	adds	r4, r0, #0
 801231c:	2d00      	cmp	r5, #0
 801231e:	d03b      	beq.n	8012398 <__kernel_rem_pio2f+0x20c>
 8012320:	20fe      	movs	r0, #254	@ 0xfe
 8012322:	9900      	ldr	r1, [sp, #0]
 8012324:	0580      	lsls	r0, r0, #22
 8012326:	f7ff fedb 	bl	80120e0 <scalbnf>
 801232a:	1c01      	adds	r1, r0, #0
 801232c:	1c20      	adds	r0, r4, #0
 801232e:	f7ee fd77 	bl	8000e20 <__aeabi_fsub>
 8012332:	1c04      	adds	r4, r0, #0
 8012334:	e030      	b.n	8012398 <__kernel_rem_pio2f+0x20c>
 8012336:	21ee      	movs	r1, #238	@ 0xee
 8012338:	9801      	ldr	r0, [sp, #4]
 801233a:	0589      	lsls	r1, r1, #22
 801233c:	f7ee fc32 	bl	8000ba4 <__aeabi_fmul>
 8012340:	f7ee ff12 	bl	8001168 <__aeabi_f2iz>
 8012344:	f7ee ff30 	bl	80011a8 <__aeabi_i2f>
 8012348:	2187      	movs	r1, #135	@ 0x87
 801234a:	05c9      	lsls	r1, r1, #23
 801234c:	9003      	str	r0, [sp, #12]
 801234e:	f7ee fc29 	bl	8000ba4 <__aeabi_fmul>
 8012352:	1c01      	adds	r1, r0, #0
 8012354:	9801      	ldr	r0, [sp, #4]
 8012356:	f7ee fd63 	bl	8000e20 <__aeabi_fsub>
 801235a:	f7ee ff05 	bl	8001168 <__aeabi_f2iz>
 801235e:	21f0      	movs	r1, #240	@ 0xf0
 8012360:	3d01      	subs	r5, #1
 8012362:	aa0c      	add	r2, sp, #48	@ 0x30
 8012364:	00ab      	lsls	r3, r5, #2
 8012366:	1852      	adds	r2, r2, r1
 8012368:	c401      	stmia	r4!, {r0}
 801236a:	58d1      	ldr	r1, [r2, r3]
 801236c:	9803      	ldr	r0, [sp, #12]
 801236e:	f7ee f8a9 	bl	80004c4 <__aeabi_fadd>
 8012372:	9001      	str	r0, [sp, #4]
 8012374:	e778      	b.n	8012268 <__kernel_rem_pio2f+0xdc>
 8012376:	9b00      	ldr	r3, [sp, #0]
 8012378:	2b00      	cmp	r3, #0
 801237a:	d106      	bne.n	801238a <__kernel_rem_pio2f+0x1fe>
 801237c:	1e7b      	subs	r3, r7, #1
 801237e:	009b      	lsls	r3, r3, #2
 8012380:	aa0c      	add	r2, sp, #48	@ 0x30
 8012382:	589b      	ldr	r3, [r3, r2]
 8012384:	11db      	asrs	r3, r3, #7
 8012386:	9301      	str	r3, [sp, #4]
 8012388:	e7a6      	b.n	80122d8 <__kernel_rem_pio2f+0x14c>
 801238a:	21fc      	movs	r1, #252	@ 0xfc
 801238c:	0589      	lsls	r1, r1, #22
 801238e:	f7ee f88f 	bl	80004b0 <__aeabi_fcmpge>
 8012392:	2800      	cmp	r0, #0
 8012394:	d130      	bne.n	80123f8 <__kernel_rem_pio2f+0x26c>
 8012396:	9001      	str	r0, [sp, #4]
 8012398:	2100      	movs	r1, #0
 801239a:	1c20      	adds	r0, r4, #0
 801239c:	f7ee f864 	bl	8000468 <__aeabi_fcmpeq>
 80123a0:	2800      	cmp	r0, #0
 80123a2:	d100      	bne.n	80123a6 <__kernel_rem_pio2f+0x21a>
 80123a4:	e08c      	b.n	80124c0 <__kernel_rem_pio2f+0x334>
 80123a6:	2200      	movs	r2, #0
 80123a8:	1e7b      	subs	r3, r7, #1
 80123aa:	9904      	ldr	r1, [sp, #16]
 80123ac:	428b      	cmp	r3, r1
 80123ae:	da44      	bge.n	801243a <__kernel_rem_pio2f+0x2ae>
 80123b0:	2a00      	cmp	r2, #0
 80123b2:	d05c      	beq.n	801246e <__kernel_rem_pio2f+0x2e2>
 80123b4:	9b00      	ldr	r3, [sp, #0]
 80123b6:	3f01      	subs	r7, #1
 80123b8:	3b08      	subs	r3, #8
 80123ba:	9300      	str	r3, [sp, #0]
 80123bc:	aa0c      	add	r2, sp, #48	@ 0x30
 80123be:	00bb      	lsls	r3, r7, #2
 80123c0:	589b      	ldr	r3, [r3, r2]
 80123c2:	2b00      	cmp	r3, #0
 80123c4:	d0f6      	beq.n	80123b4 <__kernel_rem_pio2f+0x228>
 80123c6:	20fe      	movs	r0, #254	@ 0xfe
 80123c8:	9900      	ldr	r1, [sp, #0]
 80123ca:	0580      	lsls	r0, r0, #22
 80123cc:	f7ff fe88 	bl	80120e0 <scalbnf>
 80123d0:	003d      	movs	r5, r7
 80123d2:	1c04      	adds	r4, r0, #0
 80123d4:	2d00      	cmp	r5, #0
 80123d6:	db00      	blt.n	80123da <__kernel_rem_pio2f+0x24e>
 80123d8:	e0a8      	b.n	801252c <__kernel_rem_pio2f+0x3a0>
 80123da:	003c      	movs	r4, r7
 80123dc:	4b37      	ldr	r3, [pc, #220]	@ (80124bc <__kernel_rem_pio2f+0x330>)
 80123de:	9306      	str	r3, [sp, #24]
 80123e0:	2c00      	cmp	r4, #0
 80123e2:	da00      	bge.n	80123e6 <__kernel_rem_pio2f+0x25a>
 80123e4:	e0d1      	b.n	801258a <__kernel_rem_pio2f+0x3fe>
 80123e6:	00a3      	lsls	r3, r4, #2
 80123e8:	aa48      	add	r2, sp, #288	@ 0x120
 80123ea:	189b      	adds	r3, r3, r2
 80123ec:	9305      	str	r3, [sp, #20]
 80123ee:	1b3b      	subs	r3, r7, r4
 80123f0:	2600      	movs	r6, #0
 80123f2:	2500      	movs	r5, #0
 80123f4:	9300      	str	r3, [sp, #0]
 80123f6:	e0ba      	b.n	801256e <__kernel_rem_pio2f+0x3e2>
 80123f8:	2302      	movs	r3, #2
 80123fa:	9301      	str	r3, [sp, #4]
 80123fc:	e76f      	b.n	80122de <__kernel_rem_pio2f+0x152>
 80123fe:	6833      	ldr	r3, [r6, #0]
 8012400:	2d00      	cmp	r5, #0
 8012402:	d109      	bne.n	8012418 <__kernel_rem_pio2f+0x28c>
 8012404:	2b00      	cmp	r3, #0
 8012406:	d003      	beq.n	8012410 <__kernel_rem_pio2f+0x284>
 8012408:	4665      	mov	r5, ip
 801240a:	1aeb      	subs	r3, r5, r3
 801240c:	6033      	str	r3, [r6, #0]
 801240e:	0003      	movs	r3, r0
 8012410:	001d      	movs	r5, r3
 8012412:	3201      	adds	r2, #1
 8012414:	3604      	adds	r6, #4
 8012416:	e76c      	b.n	80122f2 <__kernel_rem_pio2f+0x166>
 8012418:	1acb      	subs	r3, r1, r3
 801241a:	e7f7      	b.n	801240c <__kernel_rem_pio2f+0x280>
 801241c:	217f      	movs	r1, #127	@ 0x7f
 801241e:	1e7b      	subs	r3, r7, #1
 8012420:	009b      	lsls	r3, r3, #2
 8012422:	aa0c      	add	r2, sp, #48	@ 0x30
 8012424:	589a      	ldr	r2, [r3, r2]
 8012426:	400a      	ands	r2, r1
 8012428:	a90c      	add	r1, sp, #48	@ 0x30
 801242a:	505a      	str	r2, [r3, r1]
 801242c:	e76d      	b.n	801230a <__kernel_rem_pio2f+0x17e>
 801242e:	1e7b      	subs	r3, r7, #1
 8012430:	009b      	lsls	r3, r3, #2
 8012432:	aa0c      	add	r2, sp, #48	@ 0x30
 8012434:	213f      	movs	r1, #63	@ 0x3f
 8012436:	589a      	ldr	r2, [r3, r2]
 8012438:	e7f5      	b.n	8012426 <__kernel_rem_pio2f+0x29a>
 801243a:	0099      	lsls	r1, r3, #2
 801243c:	a80c      	add	r0, sp, #48	@ 0x30
 801243e:	5809      	ldr	r1, [r1, r0]
 8012440:	3b01      	subs	r3, #1
 8012442:	430a      	orrs	r2, r1
 8012444:	e7b1      	b.n	80123aa <__kernel_rem_pio2f+0x21e>
 8012446:	3301      	adds	r3, #1
 8012448:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801244a:	009a      	lsls	r2, r3, #2
 801244c:	4252      	negs	r2, r2
 801244e:	588a      	ldr	r2, [r1, r2]
 8012450:	2a00      	cmp	r2, #0
 8012452:	d0f8      	beq.n	8012446 <__kernel_rem_pio2f+0x2ba>
 8012454:	9a07      	ldr	r2, [sp, #28]
 8012456:	a920      	add	r1, sp, #128	@ 0x80
 8012458:	18ba      	adds	r2, r7, r2
 801245a:	0092      	lsls	r2, r2, #2
 801245c:	18fb      	adds	r3, r7, r3
 801245e:	1c7e      	adds	r6, r7, #1
 8012460:	188c      	adds	r4, r1, r2
 8012462:	9301      	str	r3, [sp, #4]
 8012464:	9b01      	ldr	r3, [sp, #4]
 8012466:	42b3      	cmp	r3, r6
 8012468:	da03      	bge.n	8012472 <__kernel_rem_pio2f+0x2e6>
 801246a:	001f      	movs	r7, r3
 801246c:	e6f3      	b.n	8012256 <__kernel_rem_pio2f+0xca>
 801246e:	2301      	movs	r3, #1
 8012470:	e7ea      	b.n	8012448 <__kernel_rem_pio2f+0x2bc>
 8012472:	00b3      	lsls	r3, r6, #2
 8012474:	9303      	str	r3, [sp, #12]
 8012476:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012478:	00b2      	lsls	r2, r6, #2
 801247a:	5898      	ldr	r0, [r3, r2]
 801247c:	f7ee fe94 	bl	80011a8 <__aeabi_i2f>
 8012480:	2700      	movs	r7, #0
 8012482:	2500      	movs	r5, #0
 8012484:	6020      	str	r0, [r4, #0]
 8012486:	9b05      	ldr	r3, [sp, #20]
 8012488:	429f      	cmp	r7, r3
 801248a:	dd07      	ble.n	801249c <__kernel_rem_pio2f+0x310>
 801248c:	21f0      	movs	r1, #240	@ 0xf0
 801248e:	9a03      	ldr	r2, [sp, #12]
 8012490:	ab0c      	add	r3, sp, #48	@ 0x30
 8012492:	185b      	adds	r3, r3, r1
 8012494:	509d      	str	r5, [r3, r2]
 8012496:	3601      	adds	r6, #1
 8012498:	3404      	adds	r4, #4
 801249a:	e7e3      	b.n	8012464 <__kernel_rem_pio2f+0x2d8>
 801249c:	00bb      	lsls	r3, r7, #2
 801249e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80124a0:	425a      	negs	r2, r3
 80124a2:	58c9      	ldr	r1, [r1, r3]
 80124a4:	58a0      	ldr	r0, [r4, r2]
 80124a6:	f7ee fb7d 	bl	8000ba4 <__aeabi_fmul>
 80124aa:	1c01      	adds	r1, r0, #0
 80124ac:	1c28      	adds	r0, r5, #0
 80124ae:	f7ee f809 	bl	80004c4 <__aeabi_fadd>
 80124b2:	3701      	adds	r7, #1
 80124b4:	1c05      	adds	r5, r0, #0
 80124b6:	e7e6      	b.n	8012486 <__kernel_rem_pio2f+0x2fa>
 80124b8:	08016138 	.word	0x08016138
 80124bc:	0801610c 	.word	0x0801610c
 80124c0:	9b08      	ldr	r3, [sp, #32]
 80124c2:	9a06      	ldr	r2, [sp, #24]
 80124c4:	1c20      	adds	r0, r4, #0
 80124c6:	1a99      	subs	r1, r3, r2
 80124c8:	f7ff fe0a 	bl	80120e0 <scalbnf>
 80124cc:	2187      	movs	r1, #135	@ 0x87
 80124ce:	05c9      	lsls	r1, r1, #23
 80124d0:	1c04      	adds	r4, r0, #0
 80124d2:	f7ed ffed 	bl	80004b0 <__aeabi_fcmpge>
 80124d6:	2800      	cmp	r0, #0
 80124d8:	d021      	beq.n	801251e <__kernel_rem_pio2f+0x392>
 80124da:	21ee      	movs	r1, #238	@ 0xee
 80124dc:	1c20      	adds	r0, r4, #0
 80124de:	0589      	lsls	r1, r1, #22
 80124e0:	f7ee fb60 	bl	8000ba4 <__aeabi_fmul>
 80124e4:	f7ee fe40 	bl	8001168 <__aeabi_f2iz>
 80124e8:	f7ee fe5e 	bl	80011a8 <__aeabi_i2f>
 80124ec:	2187      	movs	r1, #135	@ 0x87
 80124ee:	05c9      	lsls	r1, r1, #23
 80124f0:	1c05      	adds	r5, r0, #0
 80124f2:	f7ee fb57 	bl	8000ba4 <__aeabi_fmul>
 80124f6:	1c01      	adds	r1, r0, #0
 80124f8:	1c20      	adds	r0, r4, #0
 80124fa:	f7ee fc91 	bl	8000e20 <__aeabi_fsub>
 80124fe:	f7ee fe33 	bl	8001168 <__aeabi_f2iz>
 8012502:	00be      	lsls	r6, r7, #2
 8012504:	ab0c      	add	r3, sp, #48	@ 0x30
 8012506:	5198      	str	r0, [r3, r6]
 8012508:	9b00      	ldr	r3, [sp, #0]
 801250a:	1c28      	adds	r0, r5, #0
 801250c:	3308      	adds	r3, #8
 801250e:	9300      	str	r3, [sp, #0]
 8012510:	f7ee fe2a 	bl	8001168 <__aeabi_f2iz>
 8012514:	3701      	adds	r7, #1
 8012516:	00bc      	lsls	r4, r7, #2
 8012518:	ab0c      	add	r3, sp, #48	@ 0x30
 801251a:	5118      	str	r0, [r3, r4]
 801251c:	e753      	b.n	80123c6 <__kernel_rem_pio2f+0x23a>
 801251e:	1c20      	adds	r0, r4, #0
 8012520:	f7ee fe22 	bl	8001168 <__aeabi_f2iz>
 8012524:	00bd      	lsls	r5, r7, #2
 8012526:	ab0c      	add	r3, sp, #48	@ 0x30
 8012528:	5158      	str	r0, [r3, r5]
 801252a:	e74c      	b.n	80123c6 <__kernel_rem_pio2f+0x23a>
 801252c:	ab0c      	add	r3, sp, #48	@ 0x30
 801252e:	00ae      	lsls	r6, r5, #2
 8012530:	58f0      	ldr	r0, [r6, r3]
 8012532:	f7ee fe39 	bl	80011a8 <__aeabi_i2f>
 8012536:	1c21      	adds	r1, r4, #0
 8012538:	f7ee fb34 	bl	8000ba4 <__aeabi_fmul>
 801253c:	22f0      	movs	r2, #240	@ 0xf0
 801253e:	21ee      	movs	r1, #238	@ 0xee
 8012540:	ab0c      	add	r3, sp, #48	@ 0x30
 8012542:	189b      	adds	r3, r3, r2
 8012544:	5198      	str	r0, [r3, r6]
 8012546:	0589      	lsls	r1, r1, #22
 8012548:	1c20      	adds	r0, r4, #0
 801254a:	f7ee fb2b 	bl	8000ba4 <__aeabi_fmul>
 801254e:	3d01      	subs	r5, #1
 8012550:	1c04      	adds	r4, r0, #0
 8012552:	e73f      	b.n	80123d4 <__kernel_rem_pio2f+0x248>
 8012554:	9a05      	ldr	r2, [sp, #20]
 8012556:	00ab      	lsls	r3, r5, #2
 8012558:	58d1      	ldr	r1, [r2, r3]
 801255a:	9a06      	ldr	r2, [sp, #24]
 801255c:	3501      	adds	r5, #1
 801255e:	58d0      	ldr	r0, [r2, r3]
 8012560:	f7ee fb20 	bl	8000ba4 <__aeabi_fmul>
 8012564:	1c01      	adds	r1, r0, #0
 8012566:	1c30      	adds	r0, r6, #0
 8012568:	f7ed ffac 	bl	80004c4 <__aeabi_fadd>
 801256c:	1c06      	adds	r6, r0, #0
 801256e:	9b04      	ldr	r3, [sp, #16]
 8012570:	429d      	cmp	r5, r3
 8012572:	dc02      	bgt.n	801257a <__kernel_rem_pio2f+0x3ee>
 8012574:	9b00      	ldr	r3, [sp, #0]
 8012576:	42ab      	cmp	r3, r5
 8012578:	daec      	bge.n	8012554 <__kernel_rem_pio2f+0x3c8>
 801257a:	21a0      	movs	r1, #160	@ 0xa0
 801257c:	9b00      	ldr	r3, [sp, #0]
 801257e:	aa0c      	add	r2, sp, #48	@ 0x30
 8012580:	009b      	lsls	r3, r3, #2
 8012582:	1852      	adds	r2, r2, r1
 8012584:	50d6      	str	r6, [r2, r3]
 8012586:	3c01      	subs	r4, #1
 8012588:	e72a      	b.n	80123e0 <__kernel_rem_pio2f+0x254>
 801258a:	9b62      	ldr	r3, [sp, #392]	@ 0x188
 801258c:	2b02      	cmp	r3, #2
 801258e:	dc08      	bgt.n	80125a2 <__kernel_rem_pio2f+0x416>
 8012590:	2b00      	cmp	r3, #0
 8012592:	dc58      	bgt.n	8012646 <__kernel_rem_pio2f+0x4ba>
 8012594:	d033      	beq.n	80125fe <__kernel_rem_pio2f+0x472>
 8012596:	2007      	movs	r0, #7
 8012598:	9b03      	ldr	r3, [sp, #12]
 801259a:	4003      	ands	r3, r0
 801259c:	0018      	movs	r0, r3
 801259e:	b05d      	add	sp, #372	@ 0x174
 80125a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80125a2:	9b62      	ldr	r3, [sp, #392]	@ 0x188
 80125a4:	2b03      	cmp	r3, #3
 80125a6:	d1f6      	bne.n	8012596 <__kernel_rem_pio2f+0x40a>
 80125a8:	00bb      	lsls	r3, r7, #2
 80125aa:	aa34      	add	r2, sp, #208	@ 0xd0
 80125ac:	18d6      	adds	r6, r2, r3
 80125ae:	0034      	movs	r4, r6
 80125b0:	003d      	movs	r5, r7
 80125b2:	3c04      	subs	r4, #4
 80125b4:	2d00      	cmp	r5, #0
 80125b6:	dc50      	bgt.n	801265a <__kernel_rem_pio2f+0x4ce>
 80125b8:	003d      	movs	r5, r7
 80125ba:	3e04      	subs	r6, #4
 80125bc:	2d01      	cmp	r5, #1
 80125be:	dc61      	bgt.n	8012684 <__kernel_rem_pio2f+0x4f8>
 80125c0:	2000      	movs	r0, #0
 80125c2:	ac34      	add	r4, sp, #208	@ 0xd0
 80125c4:	2f01      	cmp	r7, #1
 80125c6:	dc71      	bgt.n	80126ac <__kernel_rem_pio2f+0x520>
 80125c8:	9901      	ldr	r1, [sp, #4]
 80125ca:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 80125cc:	6863      	ldr	r3, [r4, #4]
 80125ce:	2900      	cmp	r1, #0
 80125d0:	d172      	bne.n	80126b8 <__kernel_rem_pio2f+0x52c>
 80125d2:	9902      	ldr	r1, [sp, #8]
 80125d4:	604b      	str	r3, [r1, #4]
 80125d6:	000b      	movs	r3, r1
 80125d8:	600a      	str	r2, [r1, #0]
 80125da:	6098      	str	r0, [r3, #8]
 80125dc:	e7db      	b.n	8012596 <__kernel_rem_pio2f+0x40a>
 80125de:	00bb      	lsls	r3, r7, #2
 80125e0:	5919      	ldr	r1, [r3, r4]
 80125e2:	f7ed ff6f 	bl	80004c4 <__aeabi_fadd>
 80125e6:	3f01      	subs	r7, #1
 80125e8:	2f00      	cmp	r7, #0
 80125ea:	daf8      	bge.n	80125de <__kernel_rem_pio2f+0x452>
 80125ec:	9b01      	ldr	r3, [sp, #4]
 80125ee:	2b00      	cmp	r3, #0
 80125f0:	d002      	beq.n	80125f8 <__kernel_rem_pio2f+0x46c>
 80125f2:	2380      	movs	r3, #128	@ 0x80
 80125f4:	061b      	lsls	r3, r3, #24
 80125f6:	18c0      	adds	r0, r0, r3
 80125f8:	9b02      	ldr	r3, [sp, #8]
 80125fa:	6018      	str	r0, [r3, #0]
 80125fc:	e7cb      	b.n	8012596 <__kernel_rem_pio2f+0x40a>
 80125fe:	2000      	movs	r0, #0
 8012600:	ac34      	add	r4, sp, #208	@ 0xd0
 8012602:	e7f1      	b.n	80125e8 <__kernel_rem_pio2f+0x45c>
 8012604:	00a3      	lsls	r3, r4, #2
 8012606:	5959      	ldr	r1, [r3, r5]
 8012608:	f7ed ff5c 	bl	80004c4 <__aeabi_fadd>
 801260c:	3c01      	subs	r4, #1
 801260e:	2c00      	cmp	r4, #0
 8012610:	daf8      	bge.n	8012604 <__kernel_rem_pio2f+0x478>
 8012612:	9a01      	ldr	r2, [sp, #4]
 8012614:	1c03      	adds	r3, r0, #0
 8012616:	2a00      	cmp	r2, #0
 8012618:	d002      	beq.n	8012620 <__kernel_rem_pio2f+0x494>
 801261a:	2380      	movs	r3, #128	@ 0x80
 801261c:	061b      	lsls	r3, r3, #24
 801261e:	18c3      	adds	r3, r0, r3
 8012620:	9a02      	ldr	r2, [sp, #8]
 8012622:	1c01      	adds	r1, r0, #0
 8012624:	6013      	str	r3, [r2, #0]
 8012626:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8012628:	f7ee fbfa 	bl	8000e20 <__aeabi_fsub>
 801262c:	2401      	movs	r4, #1
 801262e:	ad34      	add	r5, sp, #208	@ 0xd0
 8012630:	42a7      	cmp	r7, r4
 8012632:	da0c      	bge.n	801264e <__kernel_rem_pio2f+0x4c2>
 8012634:	9b01      	ldr	r3, [sp, #4]
 8012636:	2b00      	cmp	r3, #0
 8012638:	d002      	beq.n	8012640 <__kernel_rem_pio2f+0x4b4>
 801263a:	2380      	movs	r3, #128	@ 0x80
 801263c:	061b      	lsls	r3, r3, #24
 801263e:	18c0      	adds	r0, r0, r3
 8012640:	9b02      	ldr	r3, [sp, #8]
 8012642:	6058      	str	r0, [r3, #4]
 8012644:	e7a7      	b.n	8012596 <__kernel_rem_pio2f+0x40a>
 8012646:	003c      	movs	r4, r7
 8012648:	2000      	movs	r0, #0
 801264a:	ad34      	add	r5, sp, #208	@ 0xd0
 801264c:	e7df      	b.n	801260e <__kernel_rem_pio2f+0x482>
 801264e:	00a3      	lsls	r3, r4, #2
 8012650:	5959      	ldr	r1, [r3, r5]
 8012652:	f7ed ff37 	bl	80004c4 <__aeabi_fadd>
 8012656:	3401      	adds	r4, #1
 8012658:	e7ea      	b.n	8012630 <__kernel_rem_pio2f+0x4a4>
 801265a:	6823      	ldr	r3, [r4, #0]
 801265c:	3d01      	subs	r5, #1
 801265e:	9300      	str	r3, [sp, #0]
 8012660:	6863      	ldr	r3, [r4, #4]
 8012662:	9800      	ldr	r0, [sp, #0]
 8012664:	1c19      	adds	r1, r3, #0
 8012666:	9304      	str	r3, [sp, #16]
 8012668:	f7ed ff2c 	bl	80004c4 <__aeabi_fadd>
 801266c:	1c01      	adds	r1, r0, #0
 801266e:	9005      	str	r0, [sp, #20]
 8012670:	9800      	ldr	r0, [sp, #0]
 8012672:	f7ee fbd5 	bl	8000e20 <__aeabi_fsub>
 8012676:	9904      	ldr	r1, [sp, #16]
 8012678:	f7ed ff24 	bl	80004c4 <__aeabi_fadd>
 801267c:	9b05      	ldr	r3, [sp, #20]
 801267e:	6060      	str	r0, [r4, #4]
 8012680:	6023      	str	r3, [r4, #0]
 8012682:	e796      	b.n	80125b2 <__kernel_rem_pio2f+0x426>
 8012684:	6833      	ldr	r3, [r6, #0]
 8012686:	3d01      	subs	r5, #1
 8012688:	9300      	str	r3, [sp, #0]
 801268a:	6873      	ldr	r3, [r6, #4]
 801268c:	9800      	ldr	r0, [sp, #0]
 801268e:	1c19      	adds	r1, r3, #0
 8012690:	9304      	str	r3, [sp, #16]
 8012692:	f7ed ff17 	bl	80004c4 <__aeabi_fadd>
 8012696:	1c01      	adds	r1, r0, #0
 8012698:	1c04      	adds	r4, r0, #0
 801269a:	9800      	ldr	r0, [sp, #0]
 801269c:	f7ee fbc0 	bl	8000e20 <__aeabi_fsub>
 80126a0:	9904      	ldr	r1, [sp, #16]
 80126a2:	f7ed ff0f 	bl	80004c4 <__aeabi_fadd>
 80126a6:	6034      	str	r4, [r6, #0]
 80126a8:	6070      	str	r0, [r6, #4]
 80126aa:	e786      	b.n	80125ba <__kernel_rem_pio2f+0x42e>
 80126ac:	00bb      	lsls	r3, r7, #2
 80126ae:	58e1      	ldr	r1, [r4, r3]
 80126b0:	f7ed ff08 	bl	80004c4 <__aeabi_fadd>
 80126b4:	3f01      	subs	r7, #1
 80126b6:	e785      	b.n	80125c4 <__kernel_rem_pio2f+0x438>
 80126b8:	2180      	movs	r1, #128	@ 0x80
 80126ba:	9c02      	ldr	r4, [sp, #8]
 80126bc:	0609      	lsls	r1, r1, #24
 80126be:	185b      	adds	r3, r3, r1
 80126c0:	1852      	adds	r2, r2, r1
 80126c2:	6063      	str	r3, [r4, #4]
 80126c4:	6022      	str	r2, [r4, #0]
 80126c6:	0023      	movs	r3, r4
 80126c8:	1840      	adds	r0, r0, r1
 80126ca:	e786      	b.n	80125da <__kernel_rem_pio2f+0x44e>

080126cc <floorf>:
 80126cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80126ce:	0045      	lsls	r5, r0, #1
 80126d0:	086e      	lsrs	r6, r5, #1
 80126d2:	0e2d      	lsrs	r5, r5, #24
 80126d4:	3d7f      	subs	r5, #127	@ 0x7f
 80126d6:	0007      	movs	r7, r0
 80126d8:	2d16      	cmp	r5, #22
 80126da:	dc2c      	bgt.n	8012736 <floorf+0x6a>
 80126dc:	0004      	movs	r4, r0
 80126de:	2d00      	cmp	r5, #0
 80126e0:	da15      	bge.n	801270e <floorf+0x42>
 80126e2:	4919      	ldr	r1, [pc, #100]	@ (8012748 <floorf+0x7c>)
 80126e4:	f7ed feee 	bl	80004c4 <__aeabi_fadd>
 80126e8:	2100      	movs	r1, #0
 80126ea:	f7ed fed7 	bl	800049c <__aeabi_fcmpgt>
 80126ee:	2800      	cmp	r0, #0
 80126f0:	d00b      	beq.n	801270a <floorf+0x3e>
 80126f2:	2400      	movs	r4, #0
 80126f4:	42a7      	cmp	r7, r4
 80126f6:	da08      	bge.n	801270a <floorf+0x3e>
 80126f8:	1e73      	subs	r3, r6, #1
 80126fa:	419e      	sbcs	r6, r3
 80126fc:	23fe      	movs	r3, #254	@ 0xfe
 80126fe:	4274      	negs	r4, r6
 8012700:	059b      	lsls	r3, r3, #22
 8012702:	401c      	ands	r4, r3
 8012704:	2380      	movs	r3, #128	@ 0x80
 8012706:	061b      	lsls	r3, r3, #24
 8012708:	18e4      	adds	r4, r4, r3
 801270a:	1c20      	adds	r0, r4, #0
 801270c:	e01a      	b.n	8012744 <floorf+0x78>
 801270e:	4e0f      	ldr	r6, [pc, #60]	@ (801274c <floorf+0x80>)
 8012710:	412e      	asrs	r6, r5
 8012712:	4206      	tst	r6, r0
 8012714:	d016      	beq.n	8012744 <floorf+0x78>
 8012716:	490c      	ldr	r1, [pc, #48]	@ (8012748 <floorf+0x7c>)
 8012718:	f7ed fed4 	bl	80004c4 <__aeabi_fadd>
 801271c:	2100      	movs	r1, #0
 801271e:	f7ed febd 	bl	800049c <__aeabi_fcmpgt>
 8012722:	2800      	cmp	r0, #0
 8012724:	d0f1      	beq.n	801270a <floorf+0x3e>
 8012726:	2f00      	cmp	r7, #0
 8012728:	da03      	bge.n	8012732 <floorf+0x66>
 801272a:	2380      	movs	r3, #128	@ 0x80
 801272c:	041b      	lsls	r3, r3, #16
 801272e:	412b      	asrs	r3, r5
 8012730:	18fc      	adds	r4, r7, r3
 8012732:	43b4      	bics	r4, r6
 8012734:	e7e9      	b.n	801270a <floorf+0x3e>
 8012736:	23ff      	movs	r3, #255	@ 0xff
 8012738:	05db      	lsls	r3, r3, #23
 801273a:	429e      	cmp	r6, r3
 801273c:	d302      	bcc.n	8012744 <floorf+0x78>
 801273e:	1c01      	adds	r1, r0, #0
 8012740:	f7ed fec0 	bl	80004c4 <__aeabi_fadd>
 8012744:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012746:	46c0      	nop			@ (mov r8, r8)
 8012748:	7149f2ca 	.word	0x7149f2ca
 801274c:	007fffff 	.word	0x007fffff

08012750 <abort>:
 8012750:	2006      	movs	r0, #6
 8012752:	b510      	push	{r4, lr}
 8012754:	f000 fa62 	bl	8012c1c <raise>
 8012758:	2001      	movs	r0, #1
 801275a:	f7ef fcef 	bl	800213c <_exit>
	...

08012760 <__assert_func>:
 8012760:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012762:	0014      	movs	r4, r2
 8012764:	001a      	movs	r2, r3
 8012766:	4b09      	ldr	r3, [pc, #36]	@ (801278c <__assert_func+0x2c>)
 8012768:	0005      	movs	r5, r0
 801276a:	681b      	ldr	r3, [r3, #0]
 801276c:	000e      	movs	r6, r1
 801276e:	68d8      	ldr	r0, [r3, #12]
 8012770:	4b07      	ldr	r3, [pc, #28]	@ (8012790 <__assert_func+0x30>)
 8012772:	2c00      	cmp	r4, #0
 8012774:	d101      	bne.n	801277a <__assert_func+0x1a>
 8012776:	4b07      	ldr	r3, [pc, #28]	@ (8012794 <__assert_func+0x34>)
 8012778:	001c      	movs	r4, r3
 801277a:	4907      	ldr	r1, [pc, #28]	@ (8012798 <__assert_func+0x38>)
 801277c:	9301      	str	r3, [sp, #4]
 801277e:	9402      	str	r4, [sp, #8]
 8012780:	002b      	movs	r3, r5
 8012782:	9600      	str	r6, [sp, #0]
 8012784:	f000 f980 	bl	8012a88 <fiprintf>
 8012788:	f7ff ffe2 	bl	8012750 <abort>
 801278c:	2000002c 	.word	0x2000002c
 8012790:	08016144 	.word	0x08016144
 8012794:	0801617f 	.word	0x0801617f
 8012798:	08016151 	.word	0x08016151

0801279c <atexit>:
 801279c:	2300      	movs	r3, #0
 801279e:	b510      	push	{r4, lr}
 80127a0:	0001      	movs	r1, r0
 80127a2:	001a      	movs	r2, r3
 80127a4:	0018      	movs	r0, r3
 80127a6:	f000 faef 	bl	8012d88 <__register_exitproc>
 80127aa:	bd10      	pop	{r4, pc}

080127ac <malloc>:
 80127ac:	b510      	push	{r4, lr}
 80127ae:	4b03      	ldr	r3, [pc, #12]	@ (80127bc <malloc+0x10>)
 80127b0:	0001      	movs	r1, r0
 80127b2:	6818      	ldr	r0, [r3, #0]
 80127b4:	f000 f830 	bl	8012818 <_malloc_r>
 80127b8:	bd10      	pop	{r4, pc}
 80127ba:	46c0      	nop			@ (mov r8, r8)
 80127bc:	2000002c 	.word	0x2000002c

080127c0 <free>:
 80127c0:	b510      	push	{r4, lr}
 80127c2:	4b03      	ldr	r3, [pc, #12]	@ (80127d0 <free+0x10>)
 80127c4:	0001      	movs	r1, r0
 80127c6:	6818      	ldr	r0, [r3, #0]
 80127c8:	f000 fb3e 	bl	8012e48 <_free_r>
 80127cc:	bd10      	pop	{r4, pc}
 80127ce:	46c0      	nop			@ (mov r8, r8)
 80127d0:	2000002c 	.word	0x2000002c

080127d4 <sbrk_aligned>:
 80127d4:	b570      	push	{r4, r5, r6, lr}
 80127d6:	4e0f      	ldr	r6, [pc, #60]	@ (8012814 <sbrk_aligned+0x40>)
 80127d8:	000d      	movs	r5, r1
 80127da:	6831      	ldr	r1, [r6, #0]
 80127dc:	0004      	movs	r4, r0
 80127de:	2900      	cmp	r1, #0
 80127e0:	d102      	bne.n	80127e8 <sbrk_aligned+0x14>
 80127e2:	f000 fa75 	bl	8012cd0 <_sbrk_r>
 80127e6:	6030      	str	r0, [r6, #0]
 80127e8:	0029      	movs	r1, r5
 80127ea:	0020      	movs	r0, r4
 80127ec:	f000 fa70 	bl	8012cd0 <_sbrk_r>
 80127f0:	1c43      	adds	r3, r0, #1
 80127f2:	d103      	bne.n	80127fc <sbrk_aligned+0x28>
 80127f4:	2501      	movs	r5, #1
 80127f6:	426d      	negs	r5, r5
 80127f8:	0028      	movs	r0, r5
 80127fa:	bd70      	pop	{r4, r5, r6, pc}
 80127fc:	2303      	movs	r3, #3
 80127fe:	1cc5      	adds	r5, r0, #3
 8012800:	439d      	bics	r5, r3
 8012802:	42a8      	cmp	r0, r5
 8012804:	d0f8      	beq.n	80127f8 <sbrk_aligned+0x24>
 8012806:	1a29      	subs	r1, r5, r0
 8012808:	0020      	movs	r0, r4
 801280a:	f000 fa61 	bl	8012cd0 <_sbrk_r>
 801280e:	3001      	adds	r0, #1
 8012810:	d1f2      	bne.n	80127f8 <sbrk_aligned+0x24>
 8012812:	e7ef      	b.n	80127f4 <sbrk_aligned+0x20>
 8012814:	20003604 	.word	0x20003604

08012818 <_malloc_r>:
 8012818:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801281a:	2203      	movs	r2, #3
 801281c:	1ccb      	adds	r3, r1, #3
 801281e:	4393      	bics	r3, r2
 8012820:	3308      	adds	r3, #8
 8012822:	0005      	movs	r5, r0
 8012824:	001f      	movs	r7, r3
 8012826:	2b0c      	cmp	r3, #12
 8012828:	d234      	bcs.n	8012894 <_malloc_r+0x7c>
 801282a:	270c      	movs	r7, #12
 801282c:	42b9      	cmp	r1, r7
 801282e:	d833      	bhi.n	8012898 <_malloc_r+0x80>
 8012830:	0028      	movs	r0, r5
 8012832:	f000 f871 	bl	8012918 <__malloc_lock>
 8012836:	4e37      	ldr	r6, [pc, #220]	@ (8012914 <_malloc_r+0xfc>)
 8012838:	6833      	ldr	r3, [r6, #0]
 801283a:	001c      	movs	r4, r3
 801283c:	2c00      	cmp	r4, #0
 801283e:	d12f      	bne.n	80128a0 <_malloc_r+0x88>
 8012840:	0039      	movs	r1, r7
 8012842:	0028      	movs	r0, r5
 8012844:	f7ff ffc6 	bl	80127d4 <sbrk_aligned>
 8012848:	0004      	movs	r4, r0
 801284a:	1c43      	adds	r3, r0, #1
 801284c:	d15f      	bne.n	801290e <_malloc_r+0xf6>
 801284e:	6834      	ldr	r4, [r6, #0]
 8012850:	9400      	str	r4, [sp, #0]
 8012852:	9b00      	ldr	r3, [sp, #0]
 8012854:	2b00      	cmp	r3, #0
 8012856:	d14a      	bne.n	80128ee <_malloc_r+0xd6>
 8012858:	2c00      	cmp	r4, #0
 801285a:	d052      	beq.n	8012902 <_malloc_r+0xea>
 801285c:	6823      	ldr	r3, [r4, #0]
 801285e:	0028      	movs	r0, r5
 8012860:	18e3      	adds	r3, r4, r3
 8012862:	9900      	ldr	r1, [sp, #0]
 8012864:	9301      	str	r3, [sp, #4]
 8012866:	f000 fa33 	bl	8012cd0 <_sbrk_r>
 801286a:	9b01      	ldr	r3, [sp, #4]
 801286c:	4283      	cmp	r3, r0
 801286e:	d148      	bne.n	8012902 <_malloc_r+0xea>
 8012870:	6823      	ldr	r3, [r4, #0]
 8012872:	0028      	movs	r0, r5
 8012874:	1aff      	subs	r7, r7, r3
 8012876:	0039      	movs	r1, r7
 8012878:	f7ff ffac 	bl	80127d4 <sbrk_aligned>
 801287c:	3001      	adds	r0, #1
 801287e:	d040      	beq.n	8012902 <_malloc_r+0xea>
 8012880:	6823      	ldr	r3, [r4, #0]
 8012882:	19db      	adds	r3, r3, r7
 8012884:	6023      	str	r3, [r4, #0]
 8012886:	6833      	ldr	r3, [r6, #0]
 8012888:	685a      	ldr	r2, [r3, #4]
 801288a:	2a00      	cmp	r2, #0
 801288c:	d133      	bne.n	80128f6 <_malloc_r+0xde>
 801288e:	9b00      	ldr	r3, [sp, #0]
 8012890:	6033      	str	r3, [r6, #0]
 8012892:	e019      	b.n	80128c8 <_malloc_r+0xb0>
 8012894:	2b00      	cmp	r3, #0
 8012896:	dac9      	bge.n	801282c <_malloc_r+0x14>
 8012898:	230c      	movs	r3, #12
 801289a:	602b      	str	r3, [r5, #0]
 801289c:	2000      	movs	r0, #0
 801289e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80128a0:	6821      	ldr	r1, [r4, #0]
 80128a2:	1bc9      	subs	r1, r1, r7
 80128a4:	d420      	bmi.n	80128e8 <_malloc_r+0xd0>
 80128a6:	290b      	cmp	r1, #11
 80128a8:	d90a      	bls.n	80128c0 <_malloc_r+0xa8>
 80128aa:	19e2      	adds	r2, r4, r7
 80128ac:	6027      	str	r7, [r4, #0]
 80128ae:	42a3      	cmp	r3, r4
 80128b0:	d104      	bne.n	80128bc <_malloc_r+0xa4>
 80128b2:	6032      	str	r2, [r6, #0]
 80128b4:	6863      	ldr	r3, [r4, #4]
 80128b6:	6011      	str	r1, [r2, #0]
 80128b8:	6053      	str	r3, [r2, #4]
 80128ba:	e005      	b.n	80128c8 <_malloc_r+0xb0>
 80128bc:	605a      	str	r2, [r3, #4]
 80128be:	e7f9      	b.n	80128b4 <_malloc_r+0x9c>
 80128c0:	6862      	ldr	r2, [r4, #4]
 80128c2:	42a3      	cmp	r3, r4
 80128c4:	d10e      	bne.n	80128e4 <_malloc_r+0xcc>
 80128c6:	6032      	str	r2, [r6, #0]
 80128c8:	0028      	movs	r0, r5
 80128ca:	f000 f82d 	bl	8012928 <__malloc_unlock>
 80128ce:	0020      	movs	r0, r4
 80128d0:	2207      	movs	r2, #7
 80128d2:	300b      	adds	r0, #11
 80128d4:	1d23      	adds	r3, r4, #4
 80128d6:	4390      	bics	r0, r2
 80128d8:	1ac2      	subs	r2, r0, r3
 80128da:	4298      	cmp	r0, r3
 80128dc:	d0df      	beq.n	801289e <_malloc_r+0x86>
 80128de:	1a1b      	subs	r3, r3, r0
 80128e0:	50a3      	str	r3, [r4, r2]
 80128e2:	e7dc      	b.n	801289e <_malloc_r+0x86>
 80128e4:	605a      	str	r2, [r3, #4]
 80128e6:	e7ef      	b.n	80128c8 <_malloc_r+0xb0>
 80128e8:	0023      	movs	r3, r4
 80128ea:	6864      	ldr	r4, [r4, #4]
 80128ec:	e7a6      	b.n	801283c <_malloc_r+0x24>
 80128ee:	9c00      	ldr	r4, [sp, #0]
 80128f0:	6863      	ldr	r3, [r4, #4]
 80128f2:	9300      	str	r3, [sp, #0]
 80128f4:	e7ad      	b.n	8012852 <_malloc_r+0x3a>
 80128f6:	001a      	movs	r2, r3
 80128f8:	685b      	ldr	r3, [r3, #4]
 80128fa:	42a3      	cmp	r3, r4
 80128fc:	d1fb      	bne.n	80128f6 <_malloc_r+0xde>
 80128fe:	2300      	movs	r3, #0
 8012900:	e7da      	b.n	80128b8 <_malloc_r+0xa0>
 8012902:	230c      	movs	r3, #12
 8012904:	0028      	movs	r0, r5
 8012906:	602b      	str	r3, [r5, #0]
 8012908:	f000 f80e 	bl	8012928 <__malloc_unlock>
 801290c:	e7c6      	b.n	801289c <_malloc_r+0x84>
 801290e:	6007      	str	r7, [r0, #0]
 8012910:	e7da      	b.n	80128c8 <_malloc_r+0xb0>
 8012912:	46c0      	nop			@ (mov r8, r8)
 8012914:	20003608 	.word	0x20003608

08012918 <__malloc_lock>:
 8012918:	b510      	push	{r4, lr}
 801291a:	4802      	ldr	r0, [pc, #8]	@ (8012924 <__malloc_lock+0xc>)
 801291c:	f000 fa29 	bl	8012d72 <__retarget_lock_acquire_recursive>
 8012920:	bd10      	pop	{r4, pc}
 8012922:	46c0      	nop			@ (mov r8, r8)
 8012924:	2000374c 	.word	0x2000374c

08012928 <__malloc_unlock>:
 8012928:	b510      	push	{r4, lr}
 801292a:	4802      	ldr	r0, [pc, #8]	@ (8012934 <__malloc_unlock+0xc>)
 801292c:	f000 fa22 	bl	8012d74 <__retarget_lock_release_recursive>
 8012930:	bd10      	pop	{r4, pc}
 8012932:	46c0      	nop			@ (mov r8, r8)
 8012934:	2000374c 	.word	0x2000374c

08012938 <std>:
 8012938:	2300      	movs	r3, #0
 801293a:	b510      	push	{r4, lr}
 801293c:	0004      	movs	r4, r0
 801293e:	6003      	str	r3, [r0, #0]
 8012940:	6043      	str	r3, [r0, #4]
 8012942:	6083      	str	r3, [r0, #8]
 8012944:	8181      	strh	r1, [r0, #12]
 8012946:	6643      	str	r3, [r0, #100]	@ 0x64
 8012948:	81c2      	strh	r2, [r0, #14]
 801294a:	6103      	str	r3, [r0, #16]
 801294c:	6143      	str	r3, [r0, #20]
 801294e:	6183      	str	r3, [r0, #24]
 8012950:	0019      	movs	r1, r3
 8012952:	2208      	movs	r2, #8
 8012954:	305c      	adds	r0, #92	@ 0x5c
 8012956:	f000 f922 	bl	8012b9e <memset>
 801295a:	4b0b      	ldr	r3, [pc, #44]	@ (8012988 <std+0x50>)
 801295c:	6224      	str	r4, [r4, #32]
 801295e:	6263      	str	r3, [r4, #36]	@ 0x24
 8012960:	4b0a      	ldr	r3, [pc, #40]	@ (801298c <std+0x54>)
 8012962:	62a3      	str	r3, [r4, #40]	@ 0x28
 8012964:	4b0a      	ldr	r3, [pc, #40]	@ (8012990 <std+0x58>)
 8012966:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8012968:	4b0a      	ldr	r3, [pc, #40]	@ (8012994 <std+0x5c>)
 801296a:	6323      	str	r3, [r4, #48]	@ 0x30
 801296c:	4b0a      	ldr	r3, [pc, #40]	@ (8012998 <std+0x60>)
 801296e:	429c      	cmp	r4, r3
 8012970:	d005      	beq.n	801297e <std+0x46>
 8012972:	4b0a      	ldr	r3, [pc, #40]	@ (801299c <std+0x64>)
 8012974:	429c      	cmp	r4, r3
 8012976:	d002      	beq.n	801297e <std+0x46>
 8012978:	4b09      	ldr	r3, [pc, #36]	@ (80129a0 <std+0x68>)
 801297a:	429c      	cmp	r4, r3
 801297c:	d103      	bne.n	8012986 <std+0x4e>
 801297e:	0020      	movs	r0, r4
 8012980:	3058      	adds	r0, #88	@ 0x58
 8012982:	f000 f9f5 	bl	8012d70 <__retarget_lock_init_recursive>
 8012986:	bd10      	pop	{r4, pc}
 8012988:	08012ae1 	.word	0x08012ae1
 801298c:	08012b09 	.word	0x08012b09
 8012990:	08012b41 	.word	0x08012b41
 8012994:	08012b6d 	.word	0x08012b6d
 8012998:	2000360c 	.word	0x2000360c
 801299c:	20003674 	.word	0x20003674
 80129a0:	200036dc 	.word	0x200036dc

080129a4 <stdio_exit_handler>:
 80129a4:	b510      	push	{r4, lr}
 80129a6:	4a03      	ldr	r2, [pc, #12]	@ (80129b4 <stdio_exit_handler+0x10>)
 80129a8:	4903      	ldr	r1, [pc, #12]	@ (80129b8 <stdio_exit_handler+0x14>)
 80129aa:	4804      	ldr	r0, [pc, #16]	@ (80129bc <stdio_exit_handler+0x18>)
 80129ac:	f000 f87c 	bl	8012aa8 <_fwalk_sglue>
 80129b0:	bd10      	pop	{r4, pc}
 80129b2:	46c0      	nop			@ (mov r8, r8)
 80129b4:	20000020 	.word	0x20000020
 80129b8:	0801356d 	.word	0x0801356d
 80129bc:	20000030 	.word	0x20000030

080129c0 <cleanup_stdio>:
 80129c0:	6841      	ldr	r1, [r0, #4]
 80129c2:	4b0b      	ldr	r3, [pc, #44]	@ (80129f0 <cleanup_stdio+0x30>)
 80129c4:	b510      	push	{r4, lr}
 80129c6:	0004      	movs	r4, r0
 80129c8:	4299      	cmp	r1, r3
 80129ca:	d001      	beq.n	80129d0 <cleanup_stdio+0x10>
 80129cc:	f000 fdce 	bl	801356c <_fflush_r>
 80129d0:	68a1      	ldr	r1, [r4, #8]
 80129d2:	4b08      	ldr	r3, [pc, #32]	@ (80129f4 <cleanup_stdio+0x34>)
 80129d4:	4299      	cmp	r1, r3
 80129d6:	d002      	beq.n	80129de <cleanup_stdio+0x1e>
 80129d8:	0020      	movs	r0, r4
 80129da:	f000 fdc7 	bl	801356c <_fflush_r>
 80129de:	68e1      	ldr	r1, [r4, #12]
 80129e0:	4b05      	ldr	r3, [pc, #20]	@ (80129f8 <cleanup_stdio+0x38>)
 80129e2:	4299      	cmp	r1, r3
 80129e4:	d002      	beq.n	80129ec <cleanup_stdio+0x2c>
 80129e6:	0020      	movs	r0, r4
 80129e8:	f000 fdc0 	bl	801356c <_fflush_r>
 80129ec:	bd10      	pop	{r4, pc}
 80129ee:	46c0      	nop			@ (mov r8, r8)
 80129f0:	2000360c 	.word	0x2000360c
 80129f4:	20003674 	.word	0x20003674
 80129f8:	200036dc 	.word	0x200036dc

080129fc <global_stdio_init.part.0>:
 80129fc:	b510      	push	{r4, lr}
 80129fe:	4b09      	ldr	r3, [pc, #36]	@ (8012a24 <global_stdio_init.part.0+0x28>)
 8012a00:	4a09      	ldr	r2, [pc, #36]	@ (8012a28 <global_stdio_init.part.0+0x2c>)
 8012a02:	2104      	movs	r1, #4
 8012a04:	601a      	str	r2, [r3, #0]
 8012a06:	4809      	ldr	r0, [pc, #36]	@ (8012a2c <global_stdio_init.part.0+0x30>)
 8012a08:	2200      	movs	r2, #0
 8012a0a:	f7ff ff95 	bl	8012938 <std>
 8012a0e:	2201      	movs	r2, #1
 8012a10:	2109      	movs	r1, #9
 8012a12:	4807      	ldr	r0, [pc, #28]	@ (8012a30 <global_stdio_init.part.0+0x34>)
 8012a14:	f7ff ff90 	bl	8012938 <std>
 8012a18:	2202      	movs	r2, #2
 8012a1a:	2112      	movs	r1, #18
 8012a1c:	4805      	ldr	r0, [pc, #20]	@ (8012a34 <global_stdio_init.part.0+0x38>)
 8012a1e:	f7ff ff8b 	bl	8012938 <std>
 8012a22:	bd10      	pop	{r4, pc}
 8012a24:	20003744 	.word	0x20003744
 8012a28:	080129a5 	.word	0x080129a5
 8012a2c:	2000360c 	.word	0x2000360c
 8012a30:	20003674 	.word	0x20003674
 8012a34:	200036dc 	.word	0x200036dc

08012a38 <__sfp_lock_acquire>:
 8012a38:	b510      	push	{r4, lr}
 8012a3a:	4802      	ldr	r0, [pc, #8]	@ (8012a44 <__sfp_lock_acquire+0xc>)
 8012a3c:	f000 f999 	bl	8012d72 <__retarget_lock_acquire_recursive>
 8012a40:	bd10      	pop	{r4, pc}
 8012a42:	46c0      	nop			@ (mov r8, r8)
 8012a44:	2000374e 	.word	0x2000374e

08012a48 <__sfp_lock_release>:
 8012a48:	b510      	push	{r4, lr}
 8012a4a:	4802      	ldr	r0, [pc, #8]	@ (8012a54 <__sfp_lock_release+0xc>)
 8012a4c:	f000 f992 	bl	8012d74 <__retarget_lock_release_recursive>
 8012a50:	bd10      	pop	{r4, pc}
 8012a52:	46c0      	nop			@ (mov r8, r8)
 8012a54:	2000374e 	.word	0x2000374e

08012a58 <__sinit>:
 8012a58:	b510      	push	{r4, lr}
 8012a5a:	0004      	movs	r4, r0
 8012a5c:	f7ff ffec 	bl	8012a38 <__sfp_lock_acquire>
 8012a60:	6a23      	ldr	r3, [r4, #32]
 8012a62:	2b00      	cmp	r3, #0
 8012a64:	d002      	beq.n	8012a6c <__sinit+0x14>
 8012a66:	f7ff ffef 	bl	8012a48 <__sfp_lock_release>
 8012a6a:	bd10      	pop	{r4, pc}
 8012a6c:	4b04      	ldr	r3, [pc, #16]	@ (8012a80 <__sinit+0x28>)
 8012a6e:	6223      	str	r3, [r4, #32]
 8012a70:	4b04      	ldr	r3, [pc, #16]	@ (8012a84 <__sinit+0x2c>)
 8012a72:	681b      	ldr	r3, [r3, #0]
 8012a74:	2b00      	cmp	r3, #0
 8012a76:	d1f6      	bne.n	8012a66 <__sinit+0xe>
 8012a78:	f7ff ffc0 	bl	80129fc <global_stdio_init.part.0>
 8012a7c:	e7f3      	b.n	8012a66 <__sinit+0xe>
 8012a7e:	46c0      	nop			@ (mov r8, r8)
 8012a80:	080129c1 	.word	0x080129c1
 8012a84:	20003744 	.word	0x20003744

08012a88 <fiprintf>:
 8012a88:	b40e      	push	{r1, r2, r3}
 8012a8a:	b517      	push	{r0, r1, r2, r4, lr}
 8012a8c:	4c05      	ldr	r4, [pc, #20]	@ (8012aa4 <fiprintf+0x1c>)
 8012a8e:	ab05      	add	r3, sp, #20
 8012a90:	cb04      	ldmia	r3!, {r2}
 8012a92:	0001      	movs	r1, r0
 8012a94:	6820      	ldr	r0, [r4, #0]
 8012a96:	9301      	str	r3, [sp, #4]
 8012a98:	f000 fa48 	bl	8012f2c <_vfiprintf_r>
 8012a9c:	bc1e      	pop	{r1, r2, r3, r4}
 8012a9e:	bc08      	pop	{r3}
 8012aa0:	b003      	add	sp, #12
 8012aa2:	4718      	bx	r3
 8012aa4:	2000002c 	.word	0x2000002c

08012aa8 <_fwalk_sglue>:
 8012aa8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012aaa:	0014      	movs	r4, r2
 8012aac:	2600      	movs	r6, #0
 8012aae:	9000      	str	r0, [sp, #0]
 8012ab0:	9101      	str	r1, [sp, #4]
 8012ab2:	68a5      	ldr	r5, [r4, #8]
 8012ab4:	6867      	ldr	r7, [r4, #4]
 8012ab6:	3f01      	subs	r7, #1
 8012ab8:	d504      	bpl.n	8012ac4 <_fwalk_sglue+0x1c>
 8012aba:	6824      	ldr	r4, [r4, #0]
 8012abc:	2c00      	cmp	r4, #0
 8012abe:	d1f8      	bne.n	8012ab2 <_fwalk_sglue+0xa>
 8012ac0:	0030      	movs	r0, r6
 8012ac2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8012ac4:	89ab      	ldrh	r3, [r5, #12]
 8012ac6:	2b01      	cmp	r3, #1
 8012ac8:	d908      	bls.n	8012adc <_fwalk_sglue+0x34>
 8012aca:	220e      	movs	r2, #14
 8012acc:	5eab      	ldrsh	r3, [r5, r2]
 8012ace:	3301      	adds	r3, #1
 8012ad0:	d004      	beq.n	8012adc <_fwalk_sglue+0x34>
 8012ad2:	0029      	movs	r1, r5
 8012ad4:	9800      	ldr	r0, [sp, #0]
 8012ad6:	9b01      	ldr	r3, [sp, #4]
 8012ad8:	4798      	blx	r3
 8012ada:	4306      	orrs	r6, r0
 8012adc:	3568      	adds	r5, #104	@ 0x68
 8012ade:	e7ea      	b.n	8012ab6 <_fwalk_sglue+0xe>

08012ae0 <__sread>:
 8012ae0:	b570      	push	{r4, r5, r6, lr}
 8012ae2:	000c      	movs	r4, r1
 8012ae4:	250e      	movs	r5, #14
 8012ae6:	5f49      	ldrsh	r1, [r1, r5]
 8012ae8:	f000 f8c8 	bl	8012c7c <_read_r>
 8012aec:	2800      	cmp	r0, #0
 8012aee:	db03      	blt.n	8012af8 <__sread+0x18>
 8012af0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8012af2:	181b      	adds	r3, r3, r0
 8012af4:	6563      	str	r3, [r4, #84]	@ 0x54
 8012af6:	bd70      	pop	{r4, r5, r6, pc}
 8012af8:	89a3      	ldrh	r3, [r4, #12]
 8012afa:	4a02      	ldr	r2, [pc, #8]	@ (8012b04 <__sread+0x24>)
 8012afc:	4013      	ands	r3, r2
 8012afe:	81a3      	strh	r3, [r4, #12]
 8012b00:	e7f9      	b.n	8012af6 <__sread+0x16>
 8012b02:	46c0      	nop			@ (mov r8, r8)
 8012b04:	ffffefff 	.word	0xffffefff

08012b08 <__swrite>:
 8012b08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012b0a:	001f      	movs	r7, r3
 8012b0c:	898b      	ldrh	r3, [r1, #12]
 8012b0e:	0005      	movs	r5, r0
 8012b10:	000c      	movs	r4, r1
 8012b12:	0016      	movs	r6, r2
 8012b14:	05db      	lsls	r3, r3, #23
 8012b16:	d505      	bpl.n	8012b24 <__swrite+0x1c>
 8012b18:	230e      	movs	r3, #14
 8012b1a:	5ec9      	ldrsh	r1, [r1, r3]
 8012b1c:	2200      	movs	r2, #0
 8012b1e:	2302      	movs	r3, #2
 8012b20:	f000 f898 	bl	8012c54 <_lseek_r>
 8012b24:	89a3      	ldrh	r3, [r4, #12]
 8012b26:	4a05      	ldr	r2, [pc, #20]	@ (8012b3c <__swrite+0x34>)
 8012b28:	0028      	movs	r0, r5
 8012b2a:	4013      	ands	r3, r2
 8012b2c:	81a3      	strh	r3, [r4, #12]
 8012b2e:	0032      	movs	r2, r6
 8012b30:	230e      	movs	r3, #14
 8012b32:	5ee1      	ldrsh	r1, [r4, r3]
 8012b34:	003b      	movs	r3, r7
 8012b36:	f000 f8dd 	bl	8012cf4 <_write_r>
 8012b3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012b3c:	ffffefff 	.word	0xffffefff

08012b40 <__sseek>:
 8012b40:	b570      	push	{r4, r5, r6, lr}
 8012b42:	000c      	movs	r4, r1
 8012b44:	250e      	movs	r5, #14
 8012b46:	5f49      	ldrsh	r1, [r1, r5]
 8012b48:	f000 f884 	bl	8012c54 <_lseek_r>
 8012b4c:	89a3      	ldrh	r3, [r4, #12]
 8012b4e:	1c42      	adds	r2, r0, #1
 8012b50:	d103      	bne.n	8012b5a <__sseek+0x1a>
 8012b52:	4a05      	ldr	r2, [pc, #20]	@ (8012b68 <__sseek+0x28>)
 8012b54:	4013      	ands	r3, r2
 8012b56:	81a3      	strh	r3, [r4, #12]
 8012b58:	bd70      	pop	{r4, r5, r6, pc}
 8012b5a:	2280      	movs	r2, #128	@ 0x80
 8012b5c:	0152      	lsls	r2, r2, #5
 8012b5e:	4313      	orrs	r3, r2
 8012b60:	81a3      	strh	r3, [r4, #12]
 8012b62:	6560      	str	r0, [r4, #84]	@ 0x54
 8012b64:	e7f8      	b.n	8012b58 <__sseek+0x18>
 8012b66:	46c0      	nop			@ (mov r8, r8)
 8012b68:	ffffefff 	.word	0xffffefff

08012b6c <__sclose>:
 8012b6c:	b510      	push	{r4, lr}
 8012b6e:	230e      	movs	r3, #14
 8012b70:	5ec9      	ldrsh	r1, [r1, r3]
 8012b72:	f000 f85d 	bl	8012c30 <_close_r>
 8012b76:	bd10      	pop	{r4, pc}

08012b78 <memmove>:
 8012b78:	b510      	push	{r4, lr}
 8012b7a:	4288      	cmp	r0, r1
 8012b7c:	d806      	bhi.n	8012b8c <memmove+0x14>
 8012b7e:	2300      	movs	r3, #0
 8012b80:	429a      	cmp	r2, r3
 8012b82:	d008      	beq.n	8012b96 <memmove+0x1e>
 8012b84:	5ccc      	ldrb	r4, [r1, r3]
 8012b86:	54c4      	strb	r4, [r0, r3]
 8012b88:	3301      	adds	r3, #1
 8012b8a:	e7f9      	b.n	8012b80 <memmove+0x8>
 8012b8c:	188b      	adds	r3, r1, r2
 8012b8e:	4298      	cmp	r0, r3
 8012b90:	d2f5      	bcs.n	8012b7e <memmove+0x6>
 8012b92:	3a01      	subs	r2, #1
 8012b94:	d200      	bcs.n	8012b98 <memmove+0x20>
 8012b96:	bd10      	pop	{r4, pc}
 8012b98:	5c8b      	ldrb	r3, [r1, r2]
 8012b9a:	5483      	strb	r3, [r0, r2]
 8012b9c:	e7f9      	b.n	8012b92 <memmove+0x1a>

08012b9e <memset>:
 8012b9e:	0003      	movs	r3, r0
 8012ba0:	1882      	adds	r2, r0, r2
 8012ba2:	4293      	cmp	r3, r2
 8012ba4:	d100      	bne.n	8012ba8 <memset+0xa>
 8012ba6:	4770      	bx	lr
 8012ba8:	7019      	strb	r1, [r3, #0]
 8012baa:	3301      	adds	r3, #1
 8012bac:	e7f9      	b.n	8012ba2 <memset+0x4>

08012bae <strchr>:
 8012bae:	b2c9      	uxtb	r1, r1
 8012bb0:	7803      	ldrb	r3, [r0, #0]
 8012bb2:	2b00      	cmp	r3, #0
 8012bb4:	d004      	beq.n	8012bc0 <strchr+0x12>
 8012bb6:	428b      	cmp	r3, r1
 8012bb8:	d100      	bne.n	8012bbc <strchr+0xe>
 8012bba:	4770      	bx	lr
 8012bbc:	3001      	adds	r0, #1
 8012bbe:	e7f7      	b.n	8012bb0 <strchr+0x2>
 8012bc0:	424b      	negs	r3, r1
 8012bc2:	4159      	adcs	r1, r3
 8012bc4:	4249      	negs	r1, r1
 8012bc6:	4008      	ands	r0, r1
 8012bc8:	e7f7      	b.n	8012bba <strchr+0xc>

08012bca <_raise_r>:
 8012bca:	b570      	push	{r4, r5, r6, lr}
 8012bcc:	0004      	movs	r4, r0
 8012bce:	000d      	movs	r5, r1
 8012bd0:	291f      	cmp	r1, #31
 8012bd2:	d904      	bls.n	8012bde <_raise_r+0x14>
 8012bd4:	2316      	movs	r3, #22
 8012bd6:	6003      	str	r3, [r0, #0]
 8012bd8:	2001      	movs	r0, #1
 8012bda:	4240      	negs	r0, r0
 8012bdc:	bd70      	pop	{r4, r5, r6, pc}
 8012bde:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012be0:	2b00      	cmp	r3, #0
 8012be2:	d004      	beq.n	8012bee <_raise_r+0x24>
 8012be4:	008a      	lsls	r2, r1, #2
 8012be6:	189b      	adds	r3, r3, r2
 8012be8:	681a      	ldr	r2, [r3, #0]
 8012bea:	2a00      	cmp	r2, #0
 8012bec:	d108      	bne.n	8012c00 <_raise_r+0x36>
 8012bee:	0020      	movs	r0, r4
 8012bf0:	f000 f86a 	bl	8012cc8 <_getpid_r>
 8012bf4:	002a      	movs	r2, r5
 8012bf6:	0001      	movs	r1, r0
 8012bf8:	0020      	movs	r0, r4
 8012bfa:	f000 f853 	bl	8012ca4 <_kill_r>
 8012bfe:	e7ed      	b.n	8012bdc <_raise_r+0x12>
 8012c00:	2a01      	cmp	r2, #1
 8012c02:	d009      	beq.n	8012c18 <_raise_r+0x4e>
 8012c04:	1c51      	adds	r1, r2, #1
 8012c06:	d103      	bne.n	8012c10 <_raise_r+0x46>
 8012c08:	2316      	movs	r3, #22
 8012c0a:	6003      	str	r3, [r0, #0]
 8012c0c:	2001      	movs	r0, #1
 8012c0e:	e7e5      	b.n	8012bdc <_raise_r+0x12>
 8012c10:	2100      	movs	r1, #0
 8012c12:	0028      	movs	r0, r5
 8012c14:	6019      	str	r1, [r3, #0]
 8012c16:	4790      	blx	r2
 8012c18:	2000      	movs	r0, #0
 8012c1a:	e7df      	b.n	8012bdc <_raise_r+0x12>

08012c1c <raise>:
 8012c1c:	b510      	push	{r4, lr}
 8012c1e:	4b03      	ldr	r3, [pc, #12]	@ (8012c2c <raise+0x10>)
 8012c20:	0001      	movs	r1, r0
 8012c22:	6818      	ldr	r0, [r3, #0]
 8012c24:	f7ff ffd1 	bl	8012bca <_raise_r>
 8012c28:	bd10      	pop	{r4, pc}
 8012c2a:	46c0      	nop			@ (mov r8, r8)
 8012c2c:	2000002c 	.word	0x2000002c

08012c30 <_close_r>:
 8012c30:	2300      	movs	r3, #0
 8012c32:	b570      	push	{r4, r5, r6, lr}
 8012c34:	4d06      	ldr	r5, [pc, #24]	@ (8012c50 <_close_r+0x20>)
 8012c36:	0004      	movs	r4, r0
 8012c38:	0008      	movs	r0, r1
 8012c3a:	602b      	str	r3, [r5, #0]
 8012c3c:	f7ef fa9e 	bl	800217c <_close>
 8012c40:	1c43      	adds	r3, r0, #1
 8012c42:	d103      	bne.n	8012c4c <_close_r+0x1c>
 8012c44:	682b      	ldr	r3, [r5, #0]
 8012c46:	2b00      	cmp	r3, #0
 8012c48:	d000      	beq.n	8012c4c <_close_r+0x1c>
 8012c4a:	6023      	str	r3, [r4, #0]
 8012c4c:	bd70      	pop	{r4, r5, r6, pc}
 8012c4e:	46c0      	nop			@ (mov r8, r8)
 8012c50:	20003748 	.word	0x20003748

08012c54 <_lseek_r>:
 8012c54:	b570      	push	{r4, r5, r6, lr}
 8012c56:	0004      	movs	r4, r0
 8012c58:	0008      	movs	r0, r1
 8012c5a:	0011      	movs	r1, r2
 8012c5c:	001a      	movs	r2, r3
 8012c5e:	2300      	movs	r3, #0
 8012c60:	4d05      	ldr	r5, [pc, #20]	@ (8012c78 <_lseek_r+0x24>)
 8012c62:	602b      	str	r3, [r5, #0]
 8012c64:	f7ef fa94 	bl	8002190 <_lseek>
 8012c68:	1c43      	adds	r3, r0, #1
 8012c6a:	d103      	bne.n	8012c74 <_lseek_r+0x20>
 8012c6c:	682b      	ldr	r3, [r5, #0]
 8012c6e:	2b00      	cmp	r3, #0
 8012c70:	d000      	beq.n	8012c74 <_lseek_r+0x20>
 8012c72:	6023      	str	r3, [r4, #0]
 8012c74:	bd70      	pop	{r4, r5, r6, pc}
 8012c76:	46c0      	nop			@ (mov r8, r8)
 8012c78:	20003748 	.word	0x20003748

08012c7c <_read_r>:
 8012c7c:	b570      	push	{r4, r5, r6, lr}
 8012c7e:	0004      	movs	r4, r0
 8012c80:	0008      	movs	r0, r1
 8012c82:	0011      	movs	r1, r2
 8012c84:	001a      	movs	r2, r3
 8012c86:	2300      	movs	r3, #0
 8012c88:	4d05      	ldr	r5, [pc, #20]	@ (8012ca0 <_read_r+0x24>)
 8012c8a:	602b      	str	r3, [r5, #0]
 8012c8c:	f7ef fa5c 	bl	8002148 <_read>
 8012c90:	1c43      	adds	r3, r0, #1
 8012c92:	d103      	bne.n	8012c9c <_read_r+0x20>
 8012c94:	682b      	ldr	r3, [r5, #0]
 8012c96:	2b00      	cmp	r3, #0
 8012c98:	d000      	beq.n	8012c9c <_read_r+0x20>
 8012c9a:	6023      	str	r3, [r4, #0]
 8012c9c:	bd70      	pop	{r4, r5, r6, pc}
 8012c9e:	46c0      	nop			@ (mov r8, r8)
 8012ca0:	20003748 	.word	0x20003748

08012ca4 <_kill_r>:
 8012ca4:	2300      	movs	r3, #0
 8012ca6:	b570      	push	{r4, r5, r6, lr}
 8012ca8:	4d06      	ldr	r5, [pc, #24]	@ (8012cc4 <_kill_r+0x20>)
 8012caa:	0004      	movs	r4, r0
 8012cac:	0008      	movs	r0, r1
 8012cae:	0011      	movs	r1, r2
 8012cb0:	602b      	str	r3, [r5, #0]
 8012cb2:	f7ef fa3b 	bl	800212c <_kill>
 8012cb6:	1c43      	adds	r3, r0, #1
 8012cb8:	d103      	bne.n	8012cc2 <_kill_r+0x1e>
 8012cba:	682b      	ldr	r3, [r5, #0]
 8012cbc:	2b00      	cmp	r3, #0
 8012cbe:	d000      	beq.n	8012cc2 <_kill_r+0x1e>
 8012cc0:	6023      	str	r3, [r4, #0]
 8012cc2:	bd70      	pop	{r4, r5, r6, pc}
 8012cc4:	20003748 	.word	0x20003748

08012cc8 <_getpid_r>:
 8012cc8:	b510      	push	{r4, lr}
 8012cca:	f7ef fa2d 	bl	8002128 <_getpid>
 8012cce:	bd10      	pop	{r4, pc}

08012cd0 <_sbrk_r>:
 8012cd0:	2300      	movs	r3, #0
 8012cd2:	b570      	push	{r4, r5, r6, lr}
 8012cd4:	4d06      	ldr	r5, [pc, #24]	@ (8012cf0 <_sbrk_r+0x20>)
 8012cd6:	0004      	movs	r4, r0
 8012cd8:	0008      	movs	r0, r1
 8012cda:	602b      	str	r3, [r5, #0]
 8012cdc:	f7ef fa5a 	bl	8002194 <_sbrk>
 8012ce0:	1c43      	adds	r3, r0, #1
 8012ce2:	d103      	bne.n	8012cec <_sbrk_r+0x1c>
 8012ce4:	682b      	ldr	r3, [r5, #0]
 8012ce6:	2b00      	cmp	r3, #0
 8012ce8:	d000      	beq.n	8012cec <_sbrk_r+0x1c>
 8012cea:	6023      	str	r3, [r4, #0]
 8012cec:	bd70      	pop	{r4, r5, r6, pc}
 8012cee:	46c0      	nop			@ (mov r8, r8)
 8012cf0:	20003748 	.word	0x20003748

08012cf4 <_write_r>:
 8012cf4:	b570      	push	{r4, r5, r6, lr}
 8012cf6:	0004      	movs	r4, r0
 8012cf8:	0008      	movs	r0, r1
 8012cfa:	0011      	movs	r1, r2
 8012cfc:	001a      	movs	r2, r3
 8012cfe:	2300      	movs	r3, #0
 8012d00:	4d05      	ldr	r5, [pc, #20]	@ (8012d18 <_write_r+0x24>)
 8012d02:	602b      	str	r3, [r5, #0]
 8012d04:	f7ef fa2d 	bl	8002162 <_write>
 8012d08:	1c43      	adds	r3, r0, #1
 8012d0a:	d103      	bne.n	8012d14 <_write_r+0x20>
 8012d0c:	682b      	ldr	r3, [r5, #0]
 8012d0e:	2b00      	cmp	r3, #0
 8012d10:	d000      	beq.n	8012d14 <_write_r+0x20>
 8012d12:	6023      	str	r3, [r4, #0]
 8012d14:	bd70      	pop	{r4, r5, r6, pc}
 8012d16:	46c0      	nop			@ (mov r8, r8)
 8012d18:	20003748 	.word	0x20003748

08012d1c <__errno>:
 8012d1c:	4b01      	ldr	r3, [pc, #4]	@ (8012d24 <__errno+0x8>)
 8012d1e:	6818      	ldr	r0, [r3, #0]
 8012d20:	4770      	bx	lr
 8012d22:	46c0      	nop			@ (mov r8, r8)
 8012d24:	2000002c 	.word	0x2000002c

08012d28 <__libc_init_array>:
 8012d28:	b570      	push	{r4, r5, r6, lr}
 8012d2a:	2600      	movs	r6, #0
 8012d2c:	4c0c      	ldr	r4, [pc, #48]	@ (8012d60 <__libc_init_array+0x38>)
 8012d2e:	4d0d      	ldr	r5, [pc, #52]	@ (8012d64 <__libc_init_array+0x3c>)
 8012d30:	1b64      	subs	r4, r4, r5
 8012d32:	10a4      	asrs	r4, r4, #2
 8012d34:	42a6      	cmp	r6, r4
 8012d36:	d109      	bne.n	8012d4c <__libc_init_array+0x24>
 8012d38:	2600      	movs	r6, #0
 8012d3a:	f000 fd7f 	bl	801383c <_init>
 8012d3e:	4c0a      	ldr	r4, [pc, #40]	@ (8012d68 <__libc_init_array+0x40>)
 8012d40:	4d0a      	ldr	r5, [pc, #40]	@ (8012d6c <__libc_init_array+0x44>)
 8012d42:	1b64      	subs	r4, r4, r5
 8012d44:	10a4      	asrs	r4, r4, #2
 8012d46:	42a6      	cmp	r6, r4
 8012d48:	d105      	bne.n	8012d56 <__libc_init_array+0x2e>
 8012d4a:	bd70      	pop	{r4, r5, r6, pc}
 8012d4c:	00b3      	lsls	r3, r6, #2
 8012d4e:	58eb      	ldr	r3, [r5, r3]
 8012d50:	4798      	blx	r3
 8012d52:	3601      	adds	r6, #1
 8012d54:	e7ee      	b.n	8012d34 <__libc_init_array+0xc>
 8012d56:	00b3      	lsls	r3, r6, #2
 8012d58:	58eb      	ldr	r3, [r5, r3]
 8012d5a:	4798      	blx	r3
 8012d5c:	3601      	adds	r6, #1
 8012d5e:	e7f2      	b.n	8012d46 <__libc_init_array+0x1e>
 8012d60:	080161e8 	.word	0x080161e8
 8012d64:	080161e8 	.word	0x080161e8
 8012d68:	08016204 	.word	0x08016204
 8012d6c:	080161e8 	.word	0x080161e8

08012d70 <__retarget_lock_init_recursive>:
 8012d70:	4770      	bx	lr

08012d72 <__retarget_lock_acquire_recursive>:
 8012d72:	4770      	bx	lr

08012d74 <__retarget_lock_release_recursive>:
 8012d74:	4770      	bx	lr

08012d76 <memcpy>:
 8012d76:	2300      	movs	r3, #0
 8012d78:	b510      	push	{r4, lr}
 8012d7a:	429a      	cmp	r2, r3
 8012d7c:	d100      	bne.n	8012d80 <memcpy+0xa>
 8012d7e:	bd10      	pop	{r4, pc}
 8012d80:	5ccc      	ldrb	r4, [r1, r3]
 8012d82:	54c4      	strb	r4, [r0, r3]
 8012d84:	3301      	adds	r3, #1
 8012d86:	e7f8      	b.n	8012d7a <memcpy+0x4>

08012d88 <__register_exitproc>:
 8012d88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012d8a:	4d2a      	ldr	r5, [pc, #168]	@ (8012e34 <__register_exitproc+0xac>)
 8012d8c:	b085      	sub	sp, #20
 8012d8e:	0006      	movs	r6, r0
 8012d90:	6828      	ldr	r0, [r5, #0]
 8012d92:	9303      	str	r3, [sp, #12]
 8012d94:	9101      	str	r1, [sp, #4]
 8012d96:	9202      	str	r2, [sp, #8]
 8012d98:	f7ff ffeb 	bl	8012d72 <__retarget_lock_acquire_recursive>
 8012d9c:	4b26      	ldr	r3, [pc, #152]	@ (8012e38 <__register_exitproc+0xb0>)
 8012d9e:	681c      	ldr	r4, [r3, #0]
 8012da0:	2c00      	cmp	r4, #0
 8012da2:	d108      	bne.n	8012db6 <__register_exitproc+0x2e>
 8012da4:	4c25      	ldr	r4, [pc, #148]	@ (8012e3c <__register_exitproc+0xb4>)
 8012da6:	601c      	str	r4, [r3, #0]
 8012da8:	4b25      	ldr	r3, [pc, #148]	@ (8012e40 <__register_exitproc+0xb8>)
 8012daa:	2b00      	cmp	r3, #0
 8012dac:	d003      	beq.n	8012db6 <__register_exitproc+0x2e>
 8012dae:	0022      	movs	r2, r4
 8012db0:	681b      	ldr	r3, [r3, #0]
 8012db2:	3288      	adds	r2, #136	@ 0x88
 8012db4:	6013      	str	r3, [r2, #0]
 8012db6:	6863      	ldr	r3, [r4, #4]
 8012db8:	2b1f      	cmp	r3, #31
 8012dba:	dd06      	ble.n	8012dca <__register_exitproc+0x42>
 8012dbc:	6828      	ldr	r0, [r5, #0]
 8012dbe:	f7ff ffd9 	bl	8012d74 <__retarget_lock_release_recursive>
 8012dc2:	2001      	movs	r0, #1
 8012dc4:	4240      	negs	r0, r0
 8012dc6:	b005      	add	sp, #20
 8012dc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012dca:	2e00      	cmp	r6, #0
 8012dcc:	d025      	beq.n	8012e1a <__register_exitproc+0x92>
 8012dce:	0027      	movs	r7, r4
 8012dd0:	3788      	adds	r7, #136	@ 0x88
 8012dd2:	6838      	ldr	r0, [r7, #0]
 8012dd4:	2800      	cmp	r0, #0
 8012dd6:	d10e      	bne.n	8012df6 <__register_exitproc+0x6e>
 8012dd8:	4b1a      	ldr	r3, [pc, #104]	@ (8012e44 <__register_exitproc+0xbc>)
 8012dda:	2b00      	cmp	r3, #0
 8012ddc:	d0ee      	beq.n	8012dbc <__register_exitproc+0x34>
 8012dde:	2084      	movs	r0, #132	@ 0x84
 8012de0:	0040      	lsls	r0, r0, #1
 8012de2:	f7ff fce3 	bl	80127ac <malloc>
 8012de6:	2800      	cmp	r0, #0
 8012de8:	d0e8      	beq.n	8012dbc <__register_exitproc+0x34>
 8012dea:	0003      	movs	r3, r0
 8012dec:	2200      	movs	r2, #0
 8012dee:	33fc      	adds	r3, #252	@ 0xfc
 8012df0:	605a      	str	r2, [r3, #4]
 8012df2:	609a      	str	r2, [r3, #8]
 8012df4:	6038      	str	r0, [r7, #0]
 8012df6:	6861      	ldr	r1, [r4, #4]
 8012df8:	9a02      	ldr	r2, [sp, #8]
 8012dfa:	008b      	lsls	r3, r1, #2
 8012dfc:	18c3      	adds	r3, r0, r3
 8012dfe:	c304      	stmia	r3!, {r2}
 8012e00:	2201      	movs	r2, #1
 8012e02:	408a      	lsls	r2, r1
 8012e04:	30fc      	adds	r0, #252	@ 0xfc
 8012e06:	6841      	ldr	r1, [r0, #4]
 8012e08:	4311      	orrs	r1, r2
 8012e0a:	6041      	str	r1, [r0, #4]
 8012e0c:	9903      	ldr	r1, [sp, #12]
 8012e0e:	67d9      	str	r1, [r3, #124]	@ 0x7c
 8012e10:	2e02      	cmp	r6, #2
 8012e12:	d102      	bne.n	8012e1a <__register_exitproc+0x92>
 8012e14:	6883      	ldr	r3, [r0, #8]
 8012e16:	4313      	orrs	r3, r2
 8012e18:	6083      	str	r3, [r0, #8]
 8012e1a:	6863      	ldr	r3, [r4, #4]
 8012e1c:	6828      	ldr	r0, [r5, #0]
 8012e1e:	1c5a      	adds	r2, r3, #1
 8012e20:	6062      	str	r2, [r4, #4]
 8012e22:	3302      	adds	r3, #2
 8012e24:	9a01      	ldr	r2, [sp, #4]
 8012e26:	009b      	lsls	r3, r3, #2
 8012e28:	511a      	str	r2, [r3, r4]
 8012e2a:	f7ff ffa3 	bl	8012d74 <__retarget_lock_release_recursive>
 8012e2e:	2000      	movs	r0, #0
 8012e30:	e7c9      	b.n	8012dc6 <__register_exitproc+0x3e>
 8012e32:	46c0      	nop			@ (mov r8, r8)
 8012e34:	2000007c 	.word	0x2000007c
 8012e38:	200037dc 	.word	0x200037dc
 8012e3c:	20003750 	.word	0x20003750
 8012e40:	08016180 	.word	0x08016180
 8012e44:	080127ad 	.word	0x080127ad

08012e48 <_free_r>:
 8012e48:	b570      	push	{r4, r5, r6, lr}
 8012e4a:	0005      	movs	r5, r0
 8012e4c:	1e0c      	subs	r4, r1, #0
 8012e4e:	d010      	beq.n	8012e72 <_free_r+0x2a>
 8012e50:	3c04      	subs	r4, #4
 8012e52:	6823      	ldr	r3, [r4, #0]
 8012e54:	2b00      	cmp	r3, #0
 8012e56:	da00      	bge.n	8012e5a <_free_r+0x12>
 8012e58:	18e4      	adds	r4, r4, r3
 8012e5a:	0028      	movs	r0, r5
 8012e5c:	f7ff fd5c 	bl	8012918 <__malloc_lock>
 8012e60:	4a1d      	ldr	r2, [pc, #116]	@ (8012ed8 <_free_r+0x90>)
 8012e62:	6813      	ldr	r3, [r2, #0]
 8012e64:	2b00      	cmp	r3, #0
 8012e66:	d105      	bne.n	8012e74 <_free_r+0x2c>
 8012e68:	6063      	str	r3, [r4, #4]
 8012e6a:	6014      	str	r4, [r2, #0]
 8012e6c:	0028      	movs	r0, r5
 8012e6e:	f7ff fd5b 	bl	8012928 <__malloc_unlock>
 8012e72:	bd70      	pop	{r4, r5, r6, pc}
 8012e74:	42a3      	cmp	r3, r4
 8012e76:	d908      	bls.n	8012e8a <_free_r+0x42>
 8012e78:	6820      	ldr	r0, [r4, #0]
 8012e7a:	1821      	adds	r1, r4, r0
 8012e7c:	428b      	cmp	r3, r1
 8012e7e:	d1f3      	bne.n	8012e68 <_free_r+0x20>
 8012e80:	6819      	ldr	r1, [r3, #0]
 8012e82:	685b      	ldr	r3, [r3, #4]
 8012e84:	1809      	adds	r1, r1, r0
 8012e86:	6021      	str	r1, [r4, #0]
 8012e88:	e7ee      	b.n	8012e68 <_free_r+0x20>
 8012e8a:	001a      	movs	r2, r3
 8012e8c:	685b      	ldr	r3, [r3, #4]
 8012e8e:	2b00      	cmp	r3, #0
 8012e90:	d001      	beq.n	8012e96 <_free_r+0x4e>
 8012e92:	42a3      	cmp	r3, r4
 8012e94:	d9f9      	bls.n	8012e8a <_free_r+0x42>
 8012e96:	6811      	ldr	r1, [r2, #0]
 8012e98:	1850      	adds	r0, r2, r1
 8012e9a:	42a0      	cmp	r0, r4
 8012e9c:	d10b      	bne.n	8012eb6 <_free_r+0x6e>
 8012e9e:	6820      	ldr	r0, [r4, #0]
 8012ea0:	1809      	adds	r1, r1, r0
 8012ea2:	1850      	adds	r0, r2, r1
 8012ea4:	6011      	str	r1, [r2, #0]
 8012ea6:	4283      	cmp	r3, r0
 8012ea8:	d1e0      	bne.n	8012e6c <_free_r+0x24>
 8012eaa:	6818      	ldr	r0, [r3, #0]
 8012eac:	685b      	ldr	r3, [r3, #4]
 8012eae:	1841      	adds	r1, r0, r1
 8012eb0:	6011      	str	r1, [r2, #0]
 8012eb2:	6053      	str	r3, [r2, #4]
 8012eb4:	e7da      	b.n	8012e6c <_free_r+0x24>
 8012eb6:	42a0      	cmp	r0, r4
 8012eb8:	d902      	bls.n	8012ec0 <_free_r+0x78>
 8012eba:	230c      	movs	r3, #12
 8012ebc:	602b      	str	r3, [r5, #0]
 8012ebe:	e7d5      	b.n	8012e6c <_free_r+0x24>
 8012ec0:	6820      	ldr	r0, [r4, #0]
 8012ec2:	1821      	adds	r1, r4, r0
 8012ec4:	428b      	cmp	r3, r1
 8012ec6:	d103      	bne.n	8012ed0 <_free_r+0x88>
 8012ec8:	6819      	ldr	r1, [r3, #0]
 8012eca:	685b      	ldr	r3, [r3, #4]
 8012ecc:	1809      	adds	r1, r1, r0
 8012ece:	6021      	str	r1, [r4, #0]
 8012ed0:	6063      	str	r3, [r4, #4]
 8012ed2:	6054      	str	r4, [r2, #4]
 8012ed4:	e7ca      	b.n	8012e6c <_free_r+0x24>
 8012ed6:	46c0      	nop			@ (mov r8, r8)
 8012ed8:	20003608 	.word	0x20003608

08012edc <__sfputc_r>:
 8012edc:	6893      	ldr	r3, [r2, #8]
 8012ede:	b510      	push	{r4, lr}
 8012ee0:	3b01      	subs	r3, #1
 8012ee2:	6093      	str	r3, [r2, #8]
 8012ee4:	2b00      	cmp	r3, #0
 8012ee6:	da04      	bge.n	8012ef2 <__sfputc_r+0x16>
 8012ee8:	6994      	ldr	r4, [r2, #24]
 8012eea:	42a3      	cmp	r3, r4
 8012eec:	db07      	blt.n	8012efe <__sfputc_r+0x22>
 8012eee:	290a      	cmp	r1, #10
 8012ef0:	d005      	beq.n	8012efe <__sfputc_r+0x22>
 8012ef2:	6813      	ldr	r3, [r2, #0]
 8012ef4:	1c58      	adds	r0, r3, #1
 8012ef6:	6010      	str	r0, [r2, #0]
 8012ef8:	7019      	strb	r1, [r3, #0]
 8012efa:	0008      	movs	r0, r1
 8012efc:	bd10      	pop	{r4, pc}
 8012efe:	f000 fb60 	bl	80135c2 <__swbuf_r>
 8012f02:	0001      	movs	r1, r0
 8012f04:	e7f9      	b.n	8012efa <__sfputc_r+0x1e>

08012f06 <__sfputs_r>:
 8012f06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012f08:	0006      	movs	r6, r0
 8012f0a:	000f      	movs	r7, r1
 8012f0c:	0014      	movs	r4, r2
 8012f0e:	18d5      	adds	r5, r2, r3
 8012f10:	42ac      	cmp	r4, r5
 8012f12:	d101      	bne.n	8012f18 <__sfputs_r+0x12>
 8012f14:	2000      	movs	r0, #0
 8012f16:	e007      	b.n	8012f28 <__sfputs_r+0x22>
 8012f18:	7821      	ldrb	r1, [r4, #0]
 8012f1a:	003a      	movs	r2, r7
 8012f1c:	0030      	movs	r0, r6
 8012f1e:	f7ff ffdd 	bl	8012edc <__sfputc_r>
 8012f22:	3401      	adds	r4, #1
 8012f24:	1c43      	adds	r3, r0, #1
 8012f26:	d1f3      	bne.n	8012f10 <__sfputs_r+0xa>
 8012f28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08012f2c <_vfiprintf_r>:
 8012f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f2e:	b0a1      	sub	sp, #132	@ 0x84
 8012f30:	000f      	movs	r7, r1
 8012f32:	0015      	movs	r5, r2
 8012f34:	001e      	movs	r6, r3
 8012f36:	9003      	str	r0, [sp, #12]
 8012f38:	2800      	cmp	r0, #0
 8012f3a:	d004      	beq.n	8012f46 <_vfiprintf_r+0x1a>
 8012f3c:	6a03      	ldr	r3, [r0, #32]
 8012f3e:	2b00      	cmp	r3, #0
 8012f40:	d101      	bne.n	8012f46 <_vfiprintf_r+0x1a>
 8012f42:	f7ff fd89 	bl	8012a58 <__sinit>
 8012f46:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8012f48:	07db      	lsls	r3, r3, #31
 8012f4a:	d405      	bmi.n	8012f58 <_vfiprintf_r+0x2c>
 8012f4c:	89bb      	ldrh	r3, [r7, #12]
 8012f4e:	059b      	lsls	r3, r3, #22
 8012f50:	d402      	bmi.n	8012f58 <_vfiprintf_r+0x2c>
 8012f52:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8012f54:	f7ff ff0d 	bl	8012d72 <__retarget_lock_acquire_recursive>
 8012f58:	89bb      	ldrh	r3, [r7, #12]
 8012f5a:	071b      	lsls	r3, r3, #28
 8012f5c:	d502      	bpl.n	8012f64 <_vfiprintf_r+0x38>
 8012f5e:	693b      	ldr	r3, [r7, #16]
 8012f60:	2b00      	cmp	r3, #0
 8012f62:	d113      	bne.n	8012f8c <_vfiprintf_r+0x60>
 8012f64:	0039      	movs	r1, r7
 8012f66:	9803      	ldr	r0, [sp, #12]
 8012f68:	f000 fb6e 	bl	8013648 <__swsetup_r>
 8012f6c:	2800      	cmp	r0, #0
 8012f6e:	d00d      	beq.n	8012f8c <_vfiprintf_r+0x60>
 8012f70:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8012f72:	07db      	lsls	r3, r3, #31
 8012f74:	d503      	bpl.n	8012f7e <_vfiprintf_r+0x52>
 8012f76:	2001      	movs	r0, #1
 8012f78:	4240      	negs	r0, r0
 8012f7a:	b021      	add	sp, #132	@ 0x84
 8012f7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f7e:	89bb      	ldrh	r3, [r7, #12]
 8012f80:	059b      	lsls	r3, r3, #22
 8012f82:	d4f8      	bmi.n	8012f76 <_vfiprintf_r+0x4a>
 8012f84:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8012f86:	f7ff fef5 	bl	8012d74 <__retarget_lock_release_recursive>
 8012f8a:	e7f4      	b.n	8012f76 <_vfiprintf_r+0x4a>
 8012f8c:	2300      	movs	r3, #0
 8012f8e:	ac08      	add	r4, sp, #32
 8012f90:	6163      	str	r3, [r4, #20]
 8012f92:	3320      	adds	r3, #32
 8012f94:	7663      	strb	r3, [r4, #25]
 8012f96:	3310      	adds	r3, #16
 8012f98:	76a3      	strb	r3, [r4, #26]
 8012f9a:	9607      	str	r6, [sp, #28]
 8012f9c:	002e      	movs	r6, r5
 8012f9e:	7833      	ldrb	r3, [r6, #0]
 8012fa0:	2b00      	cmp	r3, #0
 8012fa2:	d001      	beq.n	8012fa8 <_vfiprintf_r+0x7c>
 8012fa4:	2b25      	cmp	r3, #37	@ 0x25
 8012fa6:	d148      	bne.n	801303a <_vfiprintf_r+0x10e>
 8012fa8:	1b73      	subs	r3, r6, r5
 8012faa:	9305      	str	r3, [sp, #20]
 8012fac:	42ae      	cmp	r6, r5
 8012fae:	d00b      	beq.n	8012fc8 <_vfiprintf_r+0x9c>
 8012fb0:	002a      	movs	r2, r5
 8012fb2:	0039      	movs	r1, r7
 8012fb4:	9803      	ldr	r0, [sp, #12]
 8012fb6:	f7ff ffa6 	bl	8012f06 <__sfputs_r>
 8012fba:	3001      	adds	r0, #1
 8012fbc:	d100      	bne.n	8012fc0 <_vfiprintf_r+0x94>
 8012fbe:	e0ae      	b.n	801311e <_vfiprintf_r+0x1f2>
 8012fc0:	6963      	ldr	r3, [r4, #20]
 8012fc2:	9a05      	ldr	r2, [sp, #20]
 8012fc4:	189b      	adds	r3, r3, r2
 8012fc6:	6163      	str	r3, [r4, #20]
 8012fc8:	7833      	ldrb	r3, [r6, #0]
 8012fca:	2b00      	cmp	r3, #0
 8012fcc:	d100      	bne.n	8012fd0 <_vfiprintf_r+0xa4>
 8012fce:	e0a6      	b.n	801311e <_vfiprintf_r+0x1f2>
 8012fd0:	2201      	movs	r2, #1
 8012fd2:	2300      	movs	r3, #0
 8012fd4:	4252      	negs	r2, r2
 8012fd6:	6062      	str	r2, [r4, #4]
 8012fd8:	a904      	add	r1, sp, #16
 8012fda:	3254      	adds	r2, #84	@ 0x54
 8012fdc:	1852      	adds	r2, r2, r1
 8012fde:	1c75      	adds	r5, r6, #1
 8012fe0:	6023      	str	r3, [r4, #0]
 8012fe2:	60e3      	str	r3, [r4, #12]
 8012fe4:	60a3      	str	r3, [r4, #8]
 8012fe6:	7013      	strb	r3, [r2, #0]
 8012fe8:	65a3      	str	r3, [r4, #88]	@ 0x58
 8012fea:	4b59      	ldr	r3, [pc, #356]	@ (8013150 <_vfiprintf_r+0x224>)
 8012fec:	2205      	movs	r2, #5
 8012fee:	0018      	movs	r0, r3
 8012ff0:	7829      	ldrb	r1, [r5, #0]
 8012ff2:	9305      	str	r3, [sp, #20]
 8012ff4:	f000 fb86 	bl	8013704 <memchr>
 8012ff8:	1c6e      	adds	r6, r5, #1
 8012ffa:	2800      	cmp	r0, #0
 8012ffc:	d11f      	bne.n	801303e <_vfiprintf_r+0x112>
 8012ffe:	6822      	ldr	r2, [r4, #0]
 8013000:	06d3      	lsls	r3, r2, #27
 8013002:	d504      	bpl.n	801300e <_vfiprintf_r+0xe2>
 8013004:	2353      	movs	r3, #83	@ 0x53
 8013006:	a904      	add	r1, sp, #16
 8013008:	185b      	adds	r3, r3, r1
 801300a:	2120      	movs	r1, #32
 801300c:	7019      	strb	r1, [r3, #0]
 801300e:	0713      	lsls	r3, r2, #28
 8013010:	d504      	bpl.n	801301c <_vfiprintf_r+0xf0>
 8013012:	2353      	movs	r3, #83	@ 0x53
 8013014:	a904      	add	r1, sp, #16
 8013016:	185b      	adds	r3, r3, r1
 8013018:	212b      	movs	r1, #43	@ 0x2b
 801301a:	7019      	strb	r1, [r3, #0]
 801301c:	782b      	ldrb	r3, [r5, #0]
 801301e:	2b2a      	cmp	r3, #42	@ 0x2a
 8013020:	d016      	beq.n	8013050 <_vfiprintf_r+0x124>
 8013022:	002e      	movs	r6, r5
 8013024:	2100      	movs	r1, #0
 8013026:	200a      	movs	r0, #10
 8013028:	68e3      	ldr	r3, [r4, #12]
 801302a:	7832      	ldrb	r2, [r6, #0]
 801302c:	1c75      	adds	r5, r6, #1
 801302e:	3a30      	subs	r2, #48	@ 0x30
 8013030:	2a09      	cmp	r2, #9
 8013032:	d950      	bls.n	80130d6 <_vfiprintf_r+0x1aa>
 8013034:	2900      	cmp	r1, #0
 8013036:	d111      	bne.n	801305c <_vfiprintf_r+0x130>
 8013038:	e017      	b.n	801306a <_vfiprintf_r+0x13e>
 801303a:	3601      	adds	r6, #1
 801303c:	e7af      	b.n	8012f9e <_vfiprintf_r+0x72>
 801303e:	9b05      	ldr	r3, [sp, #20]
 8013040:	6822      	ldr	r2, [r4, #0]
 8013042:	1ac0      	subs	r0, r0, r3
 8013044:	2301      	movs	r3, #1
 8013046:	4083      	lsls	r3, r0
 8013048:	4313      	orrs	r3, r2
 801304a:	0035      	movs	r5, r6
 801304c:	6023      	str	r3, [r4, #0]
 801304e:	e7cc      	b.n	8012fea <_vfiprintf_r+0xbe>
 8013050:	9b07      	ldr	r3, [sp, #28]
 8013052:	1d19      	adds	r1, r3, #4
 8013054:	681b      	ldr	r3, [r3, #0]
 8013056:	9107      	str	r1, [sp, #28]
 8013058:	2b00      	cmp	r3, #0
 801305a:	db01      	blt.n	8013060 <_vfiprintf_r+0x134>
 801305c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801305e:	e004      	b.n	801306a <_vfiprintf_r+0x13e>
 8013060:	425b      	negs	r3, r3
 8013062:	60e3      	str	r3, [r4, #12]
 8013064:	2302      	movs	r3, #2
 8013066:	4313      	orrs	r3, r2
 8013068:	6023      	str	r3, [r4, #0]
 801306a:	7833      	ldrb	r3, [r6, #0]
 801306c:	2b2e      	cmp	r3, #46	@ 0x2e
 801306e:	d10c      	bne.n	801308a <_vfiprintf_r+0x15e>
 8013070:	7873      	ldrb	r3, [r6, #1]
 8013072:	2b2a      	cmp	r3, #42	@ 0x2a
 8013074:	d134      	bne.n	80130e0 <_vfiprintf_r+0x1b4>
 8013076:	9b07      	ldr	r3, [sp, #28]
 8013078:	3602      	adds	r6, #2
 801307a:	1d1a      	adds	r2, r3, #4
 801307c:	681b      	ldr	r3, [r3, #0]
 801307e:	9207      	str	r2, [sp, #28]
 8013080:	2b00      	cmp	r3, #0
 8013082:	da01      	bge.n	8013088 <_vfiprintf_r+0x15c>
 8013084:	2301      	movs	r3, #1
 8013086:	425b      	negs	r3, r3
 8013088:	9309      	str	r3, [sp, #36]	@ 0x24
 801308a:	4d32      	ldr	r5, [pc, #200]	@ (8013154 <_vfiprintf_r+0x228>)
 801308c:	2203      	movs	r2, #3
 801308e:	0028      	movs	r0, r5
 8013090:	7831      	ldrb	r1, [r6, #0]
 8013092:	f000 fb37 	bl	8013704 <memchr>
 8013096:	2800      	cmp	r0, #0
 8013098:	d006      	beq.n	80130a8 <_vfiprintf_r+0x17c>
 801309a:	2340      	movs	r3, #64	@ 0x40
 801309c:	1b40      	subs	r0, r0, r5
 801309e:	4083      	lsls	r3, r0
 80130a0:	6822      	ldr	r2, [r4, #0]
 80130a2:	3601      	adds	r6, #1
 80130a4:	4313      	orrs	r3, r2
 80130a6:	6023      	str	r3, [r4, #0]
 80130a8:	7831      	ldrb	r1, [r6, #0]
 80130aa:	2206      	movs	r2, #6
 80130ac:	482a      	ldr	r0, [pc, #168]	@ (8013158 <_vfiprintf_r+0x22c>)
 80130ae:	1c75      	adds	r5, r6, #1
 80130b0:	7621      	strb	r1, [r4, #24]
 80130b2:	f000 fb27 	bl	8013704 <memchr>
 80130b6:	2800      	cmp	r0, #0
 80130b8:	d040      	beq.n	801313c <_vfiprintf_r+0x210>
 80130ba:	4b28      	ldr	r3, [pc, #160]	@ (801315c <_vfiprintf_r+0x230>)
 80130bc:	2b00      	cmp	r3, #0
 80130be:	d122      	bne.n	8013106 <_vfiprintf_r+0x1da>
 80130c0:	2207      	movs	r2, #7
 80130c2:	9b07      	ldr	r3, [sp, #28]
 80130c4:	3307      	adds	r3, #7
 80130c6:	4393      	bics	r3, r2
 80130c8:	3308      	adds	r3, #8
 80130ca:	9307      	str	r3, [sp, #28]
 80130cc:	6963      	ldr	r3, [r4, #20]
 80130ce:	9a04      	ldr	r2, [sp, #16]
 80130d0:	189b      	adds	r3, r3, r2
 80130d2:	6163      	str	r3, [r4, #20]
 80130d4:	e762      	b.n	8012f9c <_vfiprintf_r+0x70>
 80130d6:	4343      	muls	r3, r0
 80130d8:	002e      	movs	r6, r5
 80130da:	2101      	movs	r1, #1
 80130dc:	189b      	adds	r3, r3, r2
 80130de:	e7a4      	b.n	801302a <_vfiprintf_r+0xfe>
 80130e0:	2300      	movs	r3, #0
 80130e2:	200a      	movs	r0, #10
 80130e4:	0019      	movs	r1, r3
 80130e6:	3601      	adds	r6, #1
 80130e8:	6063      	str	r3, [r4, #4]
 80130ea:	7832      	ldrb	r2, [r6, #0]
 80130ec:	1c75      	adds	r5, r6, #1
 80130ee:	3a30      	subs	r2, #48	@ 0x30
 80130f0:	2a09      	cmp	r2, #9
 80130f2:	d903      	bls.n	80130fc <_vfiprintf_r+0x1d0>
 80130f4:	2b00      	cmp	r3, #0
 80130f6:	d0c8      	beq.n	801308a <_vfiprintf_r+0x15e>
 80130f8:	9109      	str	r1, [sp, #36]	@ 0x24
 80130fa:	e7c6      	b.n	801308a <_vfiprintf_r+0x15e>
 80130fc:	4341      	muls	r1, r0
 80130fe:	002e      	movs	r6, r5
 8013100:	2301      	movs	r3, #1
 8013102:	1889      	adds	r1, r1, r2
 8013104:	e7f1      	b.n	80130ea <_vfiprintf_r+0x1be>
 8013106:	aa07      	add	r2, sp, #28
 8013108:	9200      	str	r2, [sp, #0]
 801310a:	0021      	movs	r1, r4
 801310c:	003a      	movs	r2, r7
 801310e:	4b14      	ldr	r3, [pc, #80]	@ (8013160 <_vfiprintf_r+0x234>)
 8013110:	9803      	ldr	r0, [sp, #12]
 8013112:	e000      	b.n	8013116 <_vfiprintf_r+0x1ea>
 8013114:	bf00      	nop
 8013116:	9004      	str	r0, [sp, #16]
 8013118:	9b04      	ldr	r3, [sp, #16]
 801311a:	3301      	adds	r3, #1
 801311c:	d1d6      	bne.n	80130cc <_vfiprintf_r+0x1a0>
 801311e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8013120:	07db      	lsls	r3, r3, #31
 8013122:	d405      	bmi.n	8013130 <_vfiprintf_r+0x204>
 8013124:	89bb      	ldrh	r3, [r7, #12]
 8013126:	059b      	lsls	r3, r3, #22
 8013128:	d402      	bmi.n	8013130 <_vfiprintf_r+0x204>
 801312a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801312c:	f7ff fe22 	bl	8012d74 <__retarget_lock_release_recursive>
 8013130:	89bb      	ldrh	r3, [r7, #12]
 8013132:	065b      	lsls	r3, r3, #25
 8013134:	d500      	bpl.n	8013138 <_vfiprintf_r+0x20c>
 8013136:	e71e      	b.n	8012f76 <_vfiprintf_r+0x4a>
 8013138:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801313a:	e71e      	b.n	8012f7a <_vfiprintf_r+0x4e>
 801313c:	aa07      	add	r2, sp, #28
 801313e:	9200      	str	r2, [sp, #0]
 8013140:	0021      	movs	r1, r4
 8013142:	003a      	movs	r2, r7
 8013144:	4b06      	ldr	r3, [pc, #24]	@ (8013160 <_vfiprintf_r+0x234>)
 8013146:	9803      	ldr	r0, [sp, #12]
 8013148:	f000 f87c 	bl	8013244 <_printf_i>
 801314c:	e7e3      	b.n	8013116 <_vfiprintf_r+0x1ea>
 801314e:	46c0      	nop			@ (mov r8, r8)
 8013150:	08016184 	.word	0x08016184
 8013154:	0801618a 	.word	0x0801618a
 8013158:	0801618e 	.word	0x0801618e
 801315c:	00000000 	.word	0x00000000
 8013160:	08012f07 	.word	0x08012f07

08013164 <_printf_common>:
 8013164:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013166:	0016      	movs	r6, r2
 8013168:	9301      	str	r3, [sp, #4]
 801316a:	688a      	ldr	r2, [r1, #8]
 801316c:	690b      	ldr	r3, [r1, #16]
 801316e:	000c      	movs	r4, r1
 8013170:	9000      	str	r0, [sp, #0]
 8013172:	4293      	cmp	r3, r2
 8013174:	da00      	bge.n	8013178 <_printf_common+0x14>
 8013176:	0013      	movs	r3, r2
 8013178:	0022      	movs	r2, r4
 801317a:	6033      	str	r3, [r6, #0]
 801317c:	3243      	adds	r2, #67	@ 0x43
 801317e:	7812      	ldrb	r2, [r2, #0]
 8013180:	2a00      	cmp	r2, #0
 8013182:	d001      	beq.n	8013188 <_printf_common+0x24>
 8013184:	3301      	adds	r3, #1
 8013186:	6033      	str	r3, [r6, #0]
 8013188:	6823      	ldr	r3, [r4, #0]
 801318a:	069b      	lsls	r3, r3, #26
 801318c:	d502      	bpl.n	8013194 <_printf_common+0x30>
 801318e:	6833      	ldr	r3, [r6, #0]
 8013190:	3302      	adds	r3, #2
 8013192:	6033      	str	r3, [r6, #0]
 8013194:	6822      	ldr	r2, [r4, #0]
 8013196:	2306      	movs	r3, #6
 8013198:	0015      	movs	r5, r2
 801319a:	401d      	ands	r5, r3
 801319c:	421a      	tst	r2, r3
 801319e:	d027      	beq.n	80131f0 <_printf_common+0x8c>
 80131a0:	0023      	movs	r3, r4
 80131a2:	3343      	adds	r3, #67	@ 0x43
 80131a4:	781b      	ldrb	r3, [r3, #0]
 80131a6:	1e5a      	subs	r2, r3, #1
 80131a8:	4193      	sbcs	r3, r2
 80131aa:	6822      	ldr	r2, [r4, #0]
 80131ac:	0692      	lsls	r2, r2, #26
 80131ae:	d430      	bmi.n	8013212 <_printf_common+0xae>
 80131b0:	0022      	movs	r2, r4
 80131b2:	9901      	ldr	r1, [sp, #4]
 80131b4:	9800      	ldr	r0, [sp, #0]
 80131b6:	9d08      	ldr	r5, [sp, #32]
 80131b8:	3243      	adds	r2, #67	@ 0x43
 80131ba:	47a8      	blx	r5
 80131bc:	3001      	adds	r0, #1
 80131be:	d025      	beq.n	801320c <_printf_common+0xa8>
 80131c0:	2206      	movs	r2, #6
 80131c2:	6823      	ldr	r3, [r4, #0]
 80131c4:	2500      	movs	r5, #0
 80131c6:	4013      	ands	r3, r2
 80131c8:	2b04      	cmp	r3, #4
 80131ca:	d105      	bne.n	80131d8 <_printf_common+0x74>
 80131cc:	6833      	ldr	r3, [r6, #0]
 80131ce:	68e5      	ldr	r5, [r4, #12]
 80131d0:	1aed      	subs	r5, r5, r3
 80131d2:	43eb      	mvns	r3, r5
 80131d4:	17db      	asrs	r3, r3, #31
 80131d6:	401d      	ands	r5, r3
 80131d8:	68a3      	ldr	r3, [r4, #8]
 80131da:	6922      	ldr	r2, [r4, #16]
 80131dc:	4293      	cmp	r3, r2
 80131de:	dd01      	ble.n	80131e4 <_printf_common+0x80>
 80131e0:	1a9b      	subs	r3, r3, r2
 80131e2:	18ed      	adds	r5, r5, r3
 80131e4:	2600      	movs	r6, #0
 80131e6:	42b5      	cmp	r5, r6
 80131e8:	d120      	bne.n	801322c <_printf_common+0xc8>
 80131ea:	2000      	movs	r0, #0
 80131ec:	e010      	b.n	8013210 <_printf_common+0xac>
 80131ee:	3501      	adds	r5, #1
 80131f0:	68e3      	ldr	r3, [r4, #12]
 80131f2:	6832      	ldr	r2, [r6, #0]
 80131f4:	1a9b      	subs	r3, r3, r2
 80131f6:	42ab      	cmp	r3, r5
 80131f8:	ddd2      	ble.n	80131a0 <_printf_common+0x3c>
 80131fa:	0022      	movs	r2, r4
 80131fc:	2301      	movs	r3, #1
 80131fe:	9901      	ldr	r1, [sp, #4]
 8013200:	9800      	ldr	r0, [sp, #0]
 8013202:	9f08      	ldr	r7, [sp, #32]
 8013204:	3219      	adds	r2, #25
 8013206:	47b8      	blx	r7
 8013208:	3001      	adds	r0, #1
 801320a:	d1f0      	bne.n	80131ee <_printf_common+0x8a>
 801320c:	2001      	movs	r0, #1
 801320e:	4240      	negs	r0, r0
 8013210:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8013212:	2030      	movs	r0, #48	@ 0x30
 8013214:	18e1      	adds	r1, r4, r3
 8013216:	3143      	adds	r1, #67	@ 0x43
 8013218:	7008      	strb	r0, [r1, #0]
 801321a:	0021      	movs	r1, r4
 801321c:	1c5a      	adds	r2, r3, #1
 801321e:	3145      	adds	r1, #69	@ 0x45
 8013220:	7809      	ldrb	r1, [r1, #0]
 8013222:	18a2      	adds	r2, r4, r2
 8013224:	3243      	adds	r2, #67	@ 0x43
 8013226:	3302      	adds	r3, #2
 8013228:	7011      	strb	r1, [r2, #0]
 801322a:	e7c1      	b.n	80131b0 <_printf_common+0x4c>
 801322c:	0022      	movs	r2, r4
 801322e:	2301      	movs	r3, #1
 8013230:	9901      	ldr	r1, [sp, #4]
 8013232:	9800      	ldr	r0, [sp, #0]
 8013234:	9f08      	ldr	r7, [sp, #32]
 8013236:	321a      	adds	r2, #26
 8013238:	47b8      	blx	r7
 801323a:	3001      	adds	r0, #1
 801323c:	d0e6      	beq.n	801320c <_printf_common+0xa8>
 801323e:	3601      	adds	r6, #1
 8013240:	e7d1      	b.n	80131e6 <_printf_common+0x82>
	...

08013244 <_printf_i>:
 8013244:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013246:	b08b      	sub	sp, #44	@ 0x2c
 8013248:	9206      	str	r2, [sp, #24]
 801324a:	000a      	movs	r2, r1
 801324c:	3243      	adds	r2, #67	@ 0x43
 801324e:	9307      	str	r3, [sp, #28]
 8013250:	9005      	str	r0, [sp, #20]
 8013252:	9203      	str	r2, [sp, #12]
 8013254:	7e0a      	ldrb	r2, [r1, #24]
 8013256:	000c      	movs	r4, r1
 8013258:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801325a:	2a78      	cmp	r2, #120	@ 0x78
 801325c:	d809      	bhi.n	8013272 <_printf_i+0x2e>
 801325e:	2a62      	cmp	r2, #98	@ 0x62
 8013260:	d80b      	bhi.n	801327a <_printf_i+0x36>
 8013262:	2a00      	cmp	r2, #0
 8013264:	d100      	bne.n	8013268 <_printf_i+0x24>
 8013266:	e0bc      	b.n	80133e2 <_printf_i+0x19e>
 8013268:	497b      	ldr	r1, [pc, #492]	@ (8013458 <_printf_i+0x214>)
 801326a:	9104      	str	r1, [sp, #16]
 801326c:	2a58      	cmp	r2, #88	@ 0x58
 801326e:	d100      	bne.n	8013272 <_printf_i+0x2e>
 8013270:	e090      	b.n	8013394 <_printf_i+0x150>
 8013272:	0025      	movs	r5, r4
 8013274:	3542      	adds	r5, #66	@ 0x42
 8013276:	702a      	strb	r2, [r5, #0]
 8013278:	e022      	b.n	80132c0 <_printf_i+0x7c>
 801327a:	0010      	movs	r0, r2
 801327c:	3863      	subs	r0, #99	@ 0x63
 801327e:	2815      	cmp	r0, #21
 8013280:	d8f7      	bhi.n	8013272 <_printf_i+0x2e>
 8013282:	f7ec ff5b 	bl	800013c <__gnu_thumb1_case_shi>
 8013286:	0016      	.short	0x0016
 8013288:	fff6001f 	.word	0xfff6001f
 801328c:	fff6fff6 	.word	0xfff6fff6
 8013290:	001ffff6 	.word	0x001ffff6
 8013294:	fff6fff6 	.word	0xfff6fff6
 8013298:	fff6fff6 	.word	0xfff6fff6
 801329c:	003600a1 	.word	0x003600a1
 80132a0:	fff60080 	.word	0xfff60080
 80132a4:	00b2fff6 	.word	0x00b2fff6
 80132a8:	0036fff6 	.word	0x0036fff6
 80132ac:	fff6fff6 	.word	0xfff6fff6
 80132b0:	0084      	.short	0x0084
 80132b2:	0025      	movs	r5, r4
 80132b4:	681a      	ldr	r2, [r3, #0]
 80132b6:	3542      	adds	r5, #66	@ 0x42
 80132b8:	1d11      	adds	r1, r2, #4
 80132ba:	6019      	str	r1, [r3, #0]
 80132bc:	6813      	ldr	r3, [r2, #0]
 80132be:	702b      	strb	r3, [r5, #0]
 80132c0:	2301      	movs	r3, #1
 80132c2:	e0a0      	b.n	8013406 <_printf_i+0x1c2>
 80132c4:	6818      	ldr	r0, [r3, #0]
 80132c6:	6809      	ldr	r1, [r1, #0]
 80132c8:	1d02      	adds	r2, r0, #4
 80132ca:	060d      	lsls	r5, r1, #24
 80132cc:	d50b      	bpl.n	80132e6 <_printf_i+0xa2>
 80132ce:	6806      	ldr	r6, [r0, #0]
 80132d0:	601a      	str	r2, [r3, #0]
 80132d2:	2e00      	cmp	r6, #0
 80132d4:	da03      	bge.n	80132de <_printf_i+0x9a>
 80132d6:	232d      	movs	r3, #45	@ 0x2d
 80132d8:	9a03      	ldr	r2, [sp, #12]
 80132da:	4276      	negs	r6, r6
 80132dc:	7013      	strb	r3, [r2, #0]
 80132de:	4b5e      	ldr	r3, [pc, #376]	@ (8013458 <_printf_i+0x214>)
 80132e0:	270a      	movs	r7, #10
 80132e2:	9304      	str	r3, [sp, #16]
 80132e4:	e018      	b.n	8013318 <_printf_i+0xd4>
 80132e6:	6806      	ldr	r6, [r0, #0]
 80132e8:	601a      	str	r2, [r3, #0]
 80132ea:	0649      	lsls	r1, r1, #25
 80132ec:	d5f1      	bpl.n	80132d2 <_printf_i+0x8e>
 80132ee:	b236      	sxth	r6, r6
 80132f0:	e7ef      	b.n	80132d2 <_printf_i+0x8e>
 80132f2:	6808      	ldr	r0, [r1, #0]
 80132f4:	6819      	ldr	r1, [r3, #0]
 80132f6:	c940      	ldmia	r1!, {r6}
 80132f8:	0605      	lsls	r5, r0, #24
 80132fa:	d402      	bmi.n	8013302 <_printf_i+0xbe>
 80132fc:	0640      	lsls	r0, r0, #25
 80132fe:	d500      	bpl.n	8013302 <_printf_i+0xbe>
 8013300:	b2b6      	uxth	r6, r6
 8013302:	6019      	str	r1, [r3, #0]
 8013304:	4b54      	ldr	r3, [pc, #336]	@ (8013458 <_printf_i+0x214>)
 8013306:	270a      	movs	r7, #10
 8013308:	9304      	str	r3, [sp, #16]
 801330a:	2a6f      	cmp	r2, #111	@ 0x6f
 801330c:	d100      	bne.n	8013310 <_printf_i+0xcc>
 801330e:	3f02      	subs	r7, #2
 8013310:	0023      	movs	r3, r4
 8013312:	2200      	movs	r2, #0
 8013314:	3343      	adds	r3, #67	@ 0x43
 8013316:	701a      	strb	r2, [r3, #0]
 8013318:	6863      	ldr	r3, [r4, #4]
 801331a:	60a3      	str	r3, [r4, #8]
 801331c:	2b00      	cmp	r3, #0
 801331e:	db03      	blt.n	8013328 <_printf_i+0xe4>
 8013320:	2104      	movs	r1, #4
 8013322:	6822      	ldr	r2, [r4, #0]
 8013324:	438a      	bics	r2, r1
 8013326:	6022      	str	r2, [r4, #0]
 8013328:	2e00      	cmp	r6, #0
 801332a:	d102      	bne.n	8013332 <_printf_i+0xee>
 801332c:	9d03      	ldr	r5, [sp, #12]
 801332e:	2b00      	cmp	r3, #0
 8013330:	d00c      	beq.n	801334c <_printf_i+0x108>
 8013332:	9d03      	ldr	r5, [sp, #12]
 8013334:	0030      	movs	r0, r6
 8013336:	0039      	movs	r1, r7
 8013338:	f7ec ff9a 	bl	8000270 <__aeabi_uidivmod>
 801333c:	9b04      	ldr	r3, [sp, #16]
 801333e:	3d01      	subs	r5, #1
 8013340:	5c5b      	ldrb	r3, [r3, r1]
 8013342:	702b      	strb	r3, [r5, #0]
 8013344:	0033      	movs	r3, r6
 8013346:	0006      	movs	r6, r0
 8013348:	429f      	cmp	r7, r3
 801334a:	d9f3      	bls.n	8013334 <_printf_i+0xf0>
 801334c:	2f08      	cmp	r7, #8
 801334e:	d109      	bne.n	8013364 <_printf_i+0x120>
 8013350:	6823      	ldr	r3, [r4, #0]
 8013352:	07db      	lsls	r3, r3, #31
 8013354:	d506      	bpl.n	8013364 <_printf_i+0x120>
 8013356:	6862      	ldr	r2, [r4, #4]
 8013358:	6923      	ldr	r3, [r4, #16]
 801335a:	429a      	cmp	r2, r3
 801335c:	dc02      	bgt.n	8013364 <_printf_i+0x120>
 801335e:	2330      	movs	r3, #48	@ 0x30
 8013360:	3d01      	subs	r5, #1
 8013362:	702b      	strb	r3, [r5, #0]
 8013364:	9b03      	ldr	r3, [sp, #12]
 8013366:	1b5b      	subs	r3, r3, r5
 8013368:	6123      	str	r3, [r4, #16]
 801336a:	9b07      	ldr	r3, [sp, #28]
 801336c:	0021      	movs	r1, r4
 801336e:	9300      	str	r3, [sp, #0]
 8013370:	9805      	ldr	r0, [sp, #20]
 8013372:	9b06      	ldr	r3, [sp, #24]
 8013374:	aa09      	add	r2, sp, #36	@ 0x24
 8013376:	f7ff fef5 	bl	8013164 <_printf_common>
 801337a:	3001      	adds	r0, #1
 801337c:	d148      	bne.n	8013410 <_printf_i+0x1cc>
 801337e:	2001      	movs	r0, #1
 8013380:	4240      	negs	r0, r0
 8013382:	b00b      	add	sp, #44	@ 0x2c
 8013384:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013386:	2220      	movs	r2, #32
 8013388:	6809      	ldr	r1, [r1, #0]
 801338a:	430a      	orrs	r2, r1
 801338c:	6022      	str	r2, [r4, #0]
 801338e:	2278      	movs	r2, #120	@ 0x78
 8013390:	4932      	ldr	r1, [pc, #200]	@ (801345c <_printf_i+0x218>)
 8013392:	9104      	str	r1, [sp, #16]
 8013394:	0021      	movs	r1, r4
 8013396:	3145      	adds	r1, #69	@ 0x45
 8013398:	700a      	strb	r2, [r1, #0]
 801339a:	6819      	ldr	r1, [r3, #0]
 801339c:	6822      	ldr	r2, [r4, #0]
 801339e:	c940      	ldmia	r1!, {r6}
 80133a0:	0610      	lsls	r0, r2, #24
 80133a2:	d402      	bmi.n	80133aa <_printf_i+0x166>
 80133a4:	0650      	lsls	r0, r2, #25
 80133a6:	d500      	bpl.n	80133aa <_printf_i+0x166>
 80133a8:	b2b6      	uxth	r6, r6
 80133aa:	6019      	str	r1, [r3, #0]
 80133ac:	07d3      	lsls	r3, r2, #31
 80133ae:	d502      	bpl.n	80133b6 <_printf_i+0x172>
 80133b0:	2320      	movs	r3, #32
 80133b2:	4313      	orrs	r3, r2
 80133b4:	6023      	str	r3, [r4, #0]
 80133b6:	2e00      	cmp	r6, #0
 80133b8:	d001      	beq.n	80133be <_printf_i+0x17a>
 80133ba:	2710      	movs	r7, #16
 80133bc:	e7a8      	b.n	8013310 <_printf_i+0xcc>
 80133be:	2220      	movs	r2, #32
 80133c0:	6823      	ldr	r3, [r4, #0]
 80133c2:	4393      	bics	r3, r2
 80133c4:	6023      	str	r3, [r4, #0]
 80133c6:	e7f8      	b.n	80133ba <_printf_i+0x176>
 80133c8:	681a      	ldr	r2, [r3, #0]
 80133ca:	680d      	ldr	r5, [r1, #0]
 80133cc:	1d10      	adds	r0, r2, #4
 80133ce:	6949      	ldr	r1, [r1, #20]
 80133d0:	6018      	str	r0, [r3, #0]
 80133d2:	6813      	ldr	r3, [r2, #0]
 80133d4:	062e      	lsls	r6, r5, #24
 80133d6:	d501      	bpl.n	80133dc <_printf_i+0x198>
 80133d8:	6019      	str	r1, [r3, #0]
 80133da:	e002      	b.n	80133e2 <_printf_i+0x19e>
 80133dc:	066d      	lsls	r5, r5, #25
 80133de:	d5fb      	bpl.n	80133d8 <_printf_i+0x194>
 80133e0:	8019      	strh	r1, [r3, #0]
 80133e2:	2300      	movs	r3, #0
 80133e4:	9d03      	ldr	r5, [sp, #12]
 80133e6:	6123      	str	r3, [r4, #16]
 80133e8:	e7bf      	b.n	801336a <_printf_i+0x126>
 80133ea:	681a      	ldr	r2, [r3, #0]
 80133ec:	1d11      	adds	r1, r2, #4
 80133ee:	6019      	str	r1, [r3, #0]
 80133f0:	6815      	ldr	r5, [r2, #0]
 80133f2:	2100      	movs	r1, #0
 80133f4:	0028      	movs	r0, r5
 80133f6:	6862      	ldr	r2, [r4, #4]
 80133f8:	f000 f984 	bl	8013704 <memchr>
 80133fc:	2800      	cmp	r0, #0
 80133fe:	d001      	beq.n	8013404 <_printf_i+0x1c0>
 8013400:	1b40      	subs	r0, r0, r5
 8013402:	6060      	str	r0, [r4, #4]
 8013404:	6863      	ldr	r3, [r4, #4]
 8013406:	6123      	str	r3, [r4, #16]
 8013408:	2300      	movs	r3, #0
 801340a:	9a03      	ldr	r2, [sp, #12]
 801340c:	7013      	strb	r3, [r2, #0]
 801340e:	e7ac      	b.n	801336a <_printf_i+0x126>
 8013410:	002a      	movs	r2, r5
 8013412:	6923      	ldr	r3, [r4, #16]
 8013414:	9906      	ldr	r1, [sp, #24]
 8013416:	9805      	ldr	r0, [sp, #20]
 8013418:	9d07      	ldr	r5, [sp, #28]
 801341a:	47a8      	blx	r5
 801341c:	3001      	adds	r0, #1
 801341e:	d0ae      	beq.n	801337e <_printf_i+0x13a>
 8013420:	6823      	ldr	r3, [r4, #0]
 8013422:	079b      	lsls	r3, r3, #30
 8013424:	d415      	bmi.n	8013452 <_printf_i+0x20e>
 8013426:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013428:	68e0      	ldr	r0, [r4, #12]
 801342a:	4298      	cmp	r0, r3
 801342c:	daa9      	bge.n	8013382 <_printf_i+0x13e>
 801342e:	0018      	movs	r0, r3
 8013430:	e7a7      	b.n	8013382 <_printf_i+0x13e>
 8013432:	0022      	movs	r2, r4
 8013434:	2301      	movs	r3, #1
 8013436:	9906      	ldr	r1, [sp, #24]
 8013438:	9805      	ldr	r0, [sp, #20]
 801343a:	9e07      	ldr	r6, [sp, #28]
 801343c:	3219      	adds	r2, #25
 801343e:	47b0      	blx	r6
 8013440:	3001      	adds	r0, #1
 8013442:	d09c      	beq.n	801337e <_printf_i+0x13a>
 8013444:	3501      	adds	r5, #1
 8013446:	68e3      	ldr	r3, [r4, #12]
 8013448:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801344a:	1a9b      	subs	r3, r3, r2
 801344c:	42ab      	cmp	r3, r5
 801344e:	dcf0      	bgt.n	8013432 <_printf_i+0x1ee>
 8013450:	e7e9      	b.n	8013426 <_printf_i+0x1e2>
 8013452:	2500      	movs	r5, #0
 8013454:	e7f7      	b.n	8013446 <_printf_i+0x202>
 8013456:	46c0      	nop			@ (mov r8, r8)
 8013458:	08016195 	.word	0x08016195
 801345c:	080161a6 	.word	0x080161a6

08013460 <__sflush_r>:
 8013460:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013462:	220c      	movs	r2, #12
 8013464:	5e8b      	ldrsh	r3, [r1, r2]
 8013466:	0005      	movs	r5, r0
 8013468:	000c      	movs	r4, r1
 801346a:	071a      	lsls	r2, r3, #28
 801346c:	d456      	bmi.n	801351c <__sflush_r+0xbc>
 801346e:	684a      	ldr	r2, [r1, #4]
 8013470:	2a00      	cmp	r2, #0
 8013472:	dc02      	bgt.n	801347a <__sflush_r+0x1a>
 8013474:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8013476:	2a00      	cmp	r2, #0
 8013478:	dd4e      	ble.n	8013518 <__sflush_r+0xb8>
 801347a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 801347c:	2f00      	cmp	r7, #0
 801347e:	d04b      	beq.n	8013518 <__sflush_r+0xb8>
 8013480:	2200      	movs	r2, #0
 8013482:	2080      	movs	r0, #128	@ 0x80
 8013484:	682e      	ldr	r6, [r5, #0]
 8013486:	602a      	str	r2, [r5, #0]
 8013488:	001a      	movs	r2, r3
 801348a:	0140      	lsls	r0, r0, #5
 801348c:	6a21      	ldr	r1, [r4, #32]
 801348e:	4002      	ands	r2, r0
 8013490:	4203      	tst	r3, r0
 8013492:	d033      	beq.n	80134fc <__sflush_r+0x9c>
 8013494:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8013496:	89a3      	ldrh	r3, [r4, #12]
 8013498:	075b      	lsls	r3, r3, #29
 801349a:	d506      	bpl.n	80134aa <__sflush_r+0x4a>
 801349c:	6863      	ldr	r3, [r4, #4]
 801349e:	1ad2      	subs	r2, r2, r3
 80134a0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80134a2:	2b00      	cmp	r3, #0
 80134a4:	d001      	beq.n	80134aa <__sflush_r+0x4a>
 80134a6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80134a8:	1ad2      	subs	r2, r2, r3
 80134aa:	2300      	movs	r3, #0
 80134ac:	0028      	movs	r0, r5
 80134ae:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80134b0:	6a21      	ldr	r1, [r4, #32]
 80134b2:	47b8      	blx	r7
 80134b4:	89a2      	ldrh	r2, [r4, #12]
 80134b6:	1c43      	adds	r3, r0, #1
 80134b8:	d106      	bne.n	80134c8 <__sflush_r+0x68>
 80134ba:	6829      	ldr	r1, [r5, #0]
 80134bc:	291d      	cmp	r1, #29
 80134be:	d846      	bhi.n	801354e <__sflush_r+0xee>
 80134c0:	4b29      	ldr	r3, [pc, #164]	@ (8013568 <__sflush_r+0x108>)
 80134c2:	410b      	asrs	r3, r1
 80134c4:	07db      	lsls	r3, r3, #31
 80134c6:	d442      	bmi.n	801354e <__sflush_r+0xee>
 80134c8:	2300      	movs	r3, #0
 80134ca:	6063      	str	r3, [r4, #4]
 80134cc:	6923      	ldr	r3, [r4, #16]
 80134ce:	6023      	str	r3, [r4, #0]
 80134d0:	04d2      	lsls	r2, r2, #19
 80134d2:	d505      	bpl.n	80134e0 <__sflush_r+0x80>
 80134d4:	1c43      	adds	r3, r0, #1
 80134d6:	d102      	bne.n	80134de <__sflush_r+0x7e>
 80134d8:	682b      	ldr	r3, [r5, #0]
 80134da:	2b00      	cmp	r3, #0
 80134dc:	d100      	bne.n	80134e0 <__sflush_r+0x80>
 80134de:	6560      	str	r0, [r4, #84]	@ 0x54
 80134e0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80134e2:	602e      	str	r6, [r5, #0]
 80134e4:	2900      	cmp	r1, #0
 80134e6:	d017      	beq.n	8013518 <__sflush_r+0xb8>
 80134e8:	0023      	movs	r3, r4
 80134ea:	3344      	adds	r3, #68	@ 0x44
 80134ec:	4299      	cmp	r1, r3
 80134ee:	d002      	beq.n	80134f6 <__sflush_r+0x96>
 80134f0:	0028      	movs	r0, r5
 80134f2:	f7ff fca9 	bl	8012e48 <_free_r>
 80134f6:	2300      	movs	r3, #0
 80134f8:	6363      	str	r3, [r4, #52]	@ 0x34
 80134fa:	e00d      	b.n	8013518 <__sflush_r+0xb8>
 80134fc:	2301      	movs	r3, #1
 80134fe:	0028      	movs	r0, r5
 8013500:	47b8      	blx	r7
 8013502:	0002      	movs	r2, r0
 8013504:	1c43      	adds	r3, r0, #1
 8013506:	d1c6      	bne.n	8013496 <__sflush_r+0x36>
 8013508:	682b      	ldr	r3, [r5, #0]
 801350a:	2b00      	cmp	r3, #0
 801350c:	d0c3      	beq.n	8013496 <__sflush_r+0x36>
 801350e:	2b1d      	cmp	r3, #29
 8013510:	d001      	beq.n	8013516 <__sflush_r+0xb6>
 8013512:	2b16      	cmp	r3, #22
 8013514:	d11a      	bne.n	801354c <__sflush_r+0xec>
 8013516:	602e      	str	r6, [r5, #0]
 8013518:	2000      	movs	r0, #0
 801351a:	e01e      	b.n	801355a <__sflush_r+0xfa>
 801351c:	690e      	ldr	r6, [r1, #16]
 801351e:	2e00      	cmp	r6, #0
 8013520:	d0fa      	beq.n	8013518 <__sflush_r+0xb8>
 8013522:	680f      	ldr	r7, [r1, #0]
 8013524:	600e      	str	r6, [r1, #0]
 8013526:	1bba      	subs	r2, r7, r6
 8013528:	9201      	str	r2, [sp, #4]
 801352a:	2200      	movs	r2, #0
 801352c:	079b      	lsls	r3, r3, #30
 801352e:	d100      	bne.n	8013532 <__sflush_r+0xd2>
 8013530:	694a      	ldr	r2, [r1, #20]
 8013532:	60a2      	str	r2, [r4, #8]
 8013534:	9b01      	ldr	r3, [sp, #4]
 8013536:	2b00      	cmp	r3, #0
 8013538:	ddee      	ble.n	8013518 <__sflush_r+0xb8>
 801353a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 801353c:	0032      	movs	r2, r6
 801353e:	001f      	movs	r7, r3
 8013540:	0028      	movs	r0, r5
 8013542:	9b01      	ldr	r3, [sp, #4]
 8013544:	6a21      	ldr	r1, [r4, #32]
 8013546:	47b8      	blx	r7
 8013548:	2800      	cmp	r0, #0
 801354a:	dc07      	bgt.n	801355c <__sflush_r+0xfc>
 801354c:	89a2      	ldrh	r2, [r4, #12]
 801354e:	2340      	movs	r3, #64	@ 0x40
 8013550:	2001      	movs	r0, #1
 8013552:	4313      	orrs	r3, r2
 8013554:	b21b      	sxth	r3, r3
 8013556:	81a3      	strh	r3, [r4, #12]
 8013558:	4240      	negs	r0, r0
 801355a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 801355c:	9b01      	ldr	r3, [sp, #4]
 801355e:	1836      	adds	r6, r6, r0
 8013560:	1a1b      	subs	r3, r3, r0
 8013562:	9301      	str	r3, [sp, #4]
 8013564:	e7e6      	b.n	8013534 <__sflush_r+0xd4>
 8013566:	46c0      	nop			@ (mov r8, r8)
 8013568:	dfbffffe 	.word	0xdfbffffe

0801356c <_fflush_r>:
 801356c:	690b      	ldr	r3, [r1, #16]
 801356e:	b570      	push	{r4, r5, r6, lr}
 8013570:	0005      	movs	r5, r0
 8013572:	000c      	movs	r4, r1
 8013574:	2b00      	cmp	r3, #0
 8013576:	d102      	bne.n	801357e <_fflush_r+0x12>
 8013578:	2500      	movs	r5, #0
 801357a:	0028      	movs	r0, r5
 801357c:	bd70      	pop	{r4, r5, r6, pc}
 801357e:	2800      	cmp	r0, #0
 8013580:	d004      	beq.n	801358c <_fflush_r+0x20>
 8013582:	6a03      	ldr	r3, [r0, #32]
 8013584:	2b00      	cmp	r3, #0
 8013586:	d101      	bne.n	801358c <_fflush_r+0x20>
 8013588:	f7ff fa66 	bl	8012a58 <__sinit>
 801358c:	220c      	movs	r2, #12
 801358e:	5ea3      	ldrsh	r3, [r4, r2]
 8013590:	2b00      	cmp	r3, #0
 8013592:	d0f1      	beq.n	8013578 <_fflush_r+0xc>
 8013594:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8013596:	07d2      	lsls	r2, r2, #31
 8013598:	d404      	bmi.n	80135a4 <_fflush_r+0x38>
 801359a:	059b      	lsls	r3, r3, #22
 801359c:	d402      	bmi.n	80135a4 <_fflush_r+0x38>
 801359e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80135a0:	f7ff fbe7 	bl	8012d72 <__retarget_lock_acquire_recursive>
 80135a4:	0028      	movs	r0, r5
 80135a6:	0021      	movs	r1, r4
 80135a8:	f7ff ff5a 	bl	8013460 <__sflush_r>
 80135ac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80135ae:	0005      	movs	r5, r0
 80135b0:	07db      	lsls	r3, r3, #31
 80135b2:	d4e2      	bmi.n	801357a <_fflush_r+0xe>
 80135b4:	89a3      	ldrh	r3, [r4, #12]
 80135b6:	059b      	lsls	r3, r3, #22
 80135b8:	d4df      	bmi.n	801357a <_fflush_r+0xe>
 80135ba:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80135bc:	f7ff fbda 	bl	8012d74 <__retarget_lock_release_recursive>
 80135c0:	e7db      	b.n	801357a <_fflush_r+0xe>

080135c2 <__swbuf_r>:
 80135c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80135c4:	0006      	movs	r6, r0
 80135c6:	000d      	movs	r5, r1
 80135c8:	0014      	movs	r4, r2
 80135ca:	2800      	cmp	r0, #0
 80135cc:	d004      	beq.n	80135d8 <__swbuf_r+0x16>
 80135ce:	6a03      	ldr	r3, [r0, #32]
 80135d0:	2b00      	cmp	r3, #0
 80135d2:	d101      	bne.n	80135d8 <__swbuf_r+0x16>
 80135d4:	f7ff fa40 	bl	8012a58 <__sinit>
 80135d8:	69a3      	ldr	r3, [r4, #24]
 80135da:	60a3      	str	r3, [r4, #8]
 80135dc:	89a3      	ldrh	r3, [r4, #12]
 80135de:	071b      	lsls	r3, r3, #28
 80135e0:	d502      	bpl.n	80135e8 <__swbuf_r+0x26>
 80135e2:	6923      	ldr	r3, [r4, #16]
 80135e4:	2b00      	cmp	r3, #0
 80135e6:	d109      	bne.n	80135fc <__swbuf_r+0x3a>
 80135e8:	0021      	movs	r1, r4
 80135ea:	0030      	movs	r0, r6
 80135ec:	f000 f82c 	bl	8013648 <__swsetup_r>
 80135f0:	2800      	cmp	r0, #0
 80135f2:	d003      	beq.n	80135fc <__swbuf_r+0x3a>
 80135f4:	2501      	movs	r5, #1
 80135f6:	426d      	negs	r5, r5
 80135f8:	0028      	movs	r0, r5
 80135fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80135fc:	6923      	ldr	r3, [r4, #16]
 80135fe:	6820      	ldr	r0, [r4, #0]
 8013600:	b2ef      	uxtb	r7, r5
 8013602:	1ac0      	subs	r0, r0, r3
 8013604:	6963      	ldr	r3, [r4, #20]
 8013606:	b2ed      	uxtb	r5, r5
 8013608:	4283      	cmp	r3, r0
 801360a:	dc05      	bgt.n	8013618 <__swbuf_r+0x56>
 801360c:	0021      	movs	r1, r4
 801360e:	0030      	movs	r0, r6
 8013610:	f7ff ffac 	bl	801356c <_fflush_r>
 8013614:	2800      	cmp	r0, #0
 8013616:	d1ed      	bne.n	80135f4 <__swbuf_r+0x32>
 8013618:	68a3      	ldr	r3, [r4, #8]
 801361a:	3001      	adds	r0, #1
 801361c:	3b01      	subs	r3, #1
 801361e:	60a3      	str	r3, [r4, #8]
 8013620:	6823      	ldr	r3, [r4, #0]
 8013622:	1c5a      	adds	r2, r3, #1
 8013624:	6022      	str	r2, [r4, #0]
 8013626:	701f      	strb	r7, [r3, #0]
 8013628:	6963      	ldr	r3, [r4, #20]
 801362a:	4283      	cmp	r3, r0
 801362c:	d004      	beq.n	8013638 <__swbuf_r+0x76>
 801362e:	89a3      	ldrh	r3, [r4, #12]
 8013630:	07db      	lsls	r3, r3, #31
 8013632:	d5e1      	bpl.n	80135f8 <__swbuf_r+0x36>
 8013634:	2d0a      	cmp	r5, #10
 8013636:	d1df      	bne.n	80135f8 <__swbuf_r+0x36>
 8013638:	0021      	movs	r1, r4
 801363a:	0030      	movs	r0, r6
 801363c:	f7ff ff96 	bl	801356c <_fflush_r>
 8013640:	2800      	cmp	r0, #0
 8013642:	d0d9      	beq.n	80135f8 <__swbuf_r+0x36>
 8013644:	e7d6      	b.n	80135f4 <__swbuf_r+0x32>
	...

08013648 <__swsetup_r>:
 8013648:	4b2d      	ldr	r3, [pc, #180]	@ (8013700 <__swsetup_r+0xb8>)
 801364a:	b570      	push	{r4, r5, r6, lr}
 801364c:	0005      	movs	r5, r0
 801364e:	6818      	ldr	r0, [r3, #0]
 8013650:	000c      	movs	r4, r1
 8013652:	2800      	cmp	r0, #0
 8013654:	d004      	beq.n	8013660 <__swsetup_r+0x18>
 8013656:	6a03      	ldr	r3, [r0, #32]
 8013658:	2b00      	cmp	r3, #0
 801365a:	d101      	bne.n	8013660 <__swsetup_r+0x18>
 801365c:	f7ff f9fc 	bl	8012a58 <__sinit>
 8013660:	230c      	movs	r3, #12
 8013662:	5ee2      	ldrsh	r2, [r4, r3]
 8013664:	0713      	lsls	r3, r2, #28
 8013666:	d423      	bmi.n	80136b0 <__swsetup_r+0x68>
 8013668:	06d3      	lsls	r3, r2, #27
 801366a:	d407      	bmi.n	801367c <__swsetup_r+0x34>
 801366c:	2309      	movs	r3, #9
 801366e:	602b      	str	r3, [r5, #0]
 8013670:	2340      	movs	r3, #64	@ 0x40
 8013672:	2001      	movs	r0, #1
 8013674:	4313      	orrs	r3, r2
 8013676:	81a3      	strh	r3, [r4, #12]
 8013678:	4240      	negs	r0, r0
 801367a:	e03a      	b.n	80136f2 <__swsetup_r+0xaa>
 801367c:	0752      	lsls	r2, r2, #29
 801367e:	d513      	bpl.n	80136a8 <__swsetup_r+0x60>
 8013680:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8013682:	2900      	cmp	r1, #0
 8013684:	d008      	beq.n	8013698 <__swsetup_r+0x50>
 8013686:	0023      	movs	r3, r4
 8013688:	3344      	adds	r3, #68	@ 0x44
 801368a:	4299      	cmp	r1, r3
 801368c:	d002      	beq.n	8013694 <__swsetup_r+0x4c>
 801368e:	0028      	movs	r0, r5
 8013690:	f7ff fbda 	bl	8012e48 <_free_r>
 8013694:	2300      	movs	r3, #0
 8013696:	6363      	str	r3, [r4, #52]	@ 0x34
 8013698:	2224      	movs	r2, #36	@ 0x24
 801369a:	89a3      	ldrh	r3, [r4, #12]
 801369c:	4393      	bics	r3, r2
 801369e:	81a3      	strh	r3, [r4, #12]
 80136a0:	2300      	movs	r3, #0
 80136a2:	6063      	str	r3, [r4, #4]
 80136a4:	6923      	ldr	r3, [r4, #16]
 80136a6:	6023      	str	r3, [r4, #0]
 80136a8:	2308      	movs	r3, #8
 80136aa:	89a2      	ldrh	r2, [r4, #12]
 80136ac:	4313      	orrs	r3, r2
 80136ae:	81a3      	strh	r3, [r4, #12]
 80136b0:	6923      	ldr	r3, [r4, #16]
 80136b2:	2b00      	cmp	r3, #0
 80136b4:	d10b      	bne.n	80136ce <__swsetup_r+0x86>
 80136b6:	21a0      	movs	r1, #160	@ 0xa0
 80136b8:	2280      	movs	r2, #128	@ 0x80
 80136ba:	89a3      	ldrh	r3, [r4, #12]
 80136bc:	0089      	lsls	r1, r1, #2
 80136be:	0092      	lsls	r2, r2, #2
 80136c0:	400b      	ands	r3, r1
 80136c2:	4293      	cmp	r3, r2
 80136c4:	d003      	beq.n	80136ce <__swsetup_r+0x86>
 80136c6:	0021      	movs	r1, r4
 80136c8:	0028      	movs	r0, r5
 80136ca:	f000 f851 	bl	8013770 <__smakebuf_r>
 80136ce:	230c      	movs	r3, #12
 80136d0:	5ee2      	ldrsh	r2, [r4, r3]
 80136d2:	2101      	movs	r1, #1
 80136d4:	0013      	movs	r3, r2
 80136d6:	400b      	ands	r3, r1
 80136d8:	420a      	tst	r2, r1
 80136da:	d00b      	beq.n	80136f4 <__swsetup_r+0xac>
 80136dc:	2300      	movs	r3, #0
 80136de:	60a3      	str	r3, [r4, #8]
 80136e0:	6963      	ldr	r3, [r4, #20]
 80136e2:	425b      	negs	r3, r3
 80136e4:	61a3      	str	r3, [r4, #24]
 80136e6:	2000      	movs	r0, #0
 80136e8:	6923      	ldr	r3, [r4, #16]
 80136ea:	4283      	cmp	r3, r0
 80136ec:	d101      	bne.n	80136f2 <__swsetup_r+0xaa>
 80136ee:	0613      	lsls	r3, r2, #24
 80136f0:	d4be      	bmi.n	8013670 <__swsetup_r+0x28>
 80136f2:	bd70      	pop	{r4, r5, r6, pc}
 80136f4:	0791      	lsls	r1, r2, #30
 80136f6:	d400      	bmi.n	80136fa <__swsetup_r+0xb2>
 80136f8:	6963      	ldr	r3, [r4, #20]
 80136fa:	60a3      	str	r3, [r4, #8]
 80136fc:	e7f3      	b.n	80136e6 <__swsetup_r+0x9e>
 80136fe:	46c0      	nop			@ (mov r8, r8)
 8013700:	2000002c 	.word	0x2000002c

08013704 <memchr>:
 8013704:	b2c9      	uxtb	r1, r1
 8013706:	1882      	adds	r2, r0, r2
 8013708:	4290      	cmp	r0, r2
 801370a:	d101      	bne.n	8013710 <memchr+0xc>
 801370c:	2000      	movs	r0, #0
 801370e:	4770      	bx	lr
 8013710:	7803      	ldrb	r3, [r0, #0]
 8013712:	428b      	cmp	r3, r1
 8013714:	d0fb      	beq.n	801370e <memchr+0xa>
 8013716:	3001      	adds	r0, #1
 8013718:	e7f6      	b.n	8013708 <memchr+0x4>
	...

0801371c <__swhatbuf_r>:
 801371c:	b570      	push	{r4, r5, r6, lr}
 801371e:	000e      	movs	r6, r1
 8013720:	001d      	movs	r5, r3
 8013722:	230e      	movs	r3, #14
 8013724:	5ec9      	ldrsh	r1, [r1, r3]
 8013726:	0014      	movs	r4, r2
 8013728:	b096      	sub	sp, #88	@ 0x58
 801372a:	2900      	cmp	r1, #0
 801372c:	da0c      	bge.n	8013748 <__swhatbuf_r+0x2c>
 801372e:	89b2      	ldrh	r2, [r6, #12]
 8013730:	2380      	movs	r3, #128	@ 0x80
 8013732:	0011      	movs	r1, r2
 8013734:	4019      	ands	r1, r3
 8013736:	421a      	tst	r2, r3
 8013738:	d114      	bne.n	8013764 <__swhatbuf_r+0x48>
 801373a:	2380      	movs	r3, #128	@ 0x80
 801373c:	00db      	lsls	r3, r3, #3
 801373e:	2000      	movs	r0, #0
 8013740:	6029      	str	r1, [r5, #0]
 8013742:	6023      	str	r3, [r4, #0]
 8013744:	b016      	add	sp, #88	@ 0x58
 8013746:	bd70      	pop	{r4, r5, r6, pc}
 8013748:	466a      	mov	r2, sp
 801374a:	f000 f853 	bl	80137f4 <_fstat_r>
 801374e:	2800      	cmp	r0, #0
 8013750:	dbed      	blt.n	801372e <__swhatbuf_r+0x12>
 8013752:	23f0      	movs	r3, #240	@ 0xf0
 8013754:	9901      	ldr	r1, [sp, #4]
 8013756:	021b      	lsls	r3, r3, #8
 8013758:	4019      	ands	r1, r3
 801375a:	4b04      	ldr	r3, [pc, #16]	@ (801376c <__swhatbuf_r+0x50>)
 801375c:	18c9      	adds	r1, r1, r3
 801375e:	424b      	negs	r3, r1
 8013760:	4159      	adcs	r1, r3
 8013762:	e7ea      	b.n	801373a <__swhatbuf_r+0x1e>
 8013764:	2100      	movs	r1, #0
 8013766:	2340      	movs	r3, #64	@ 0x40
 8013768:	e7e9      	b.n	801373e <__swhatbuf_r+0x22>
 801376a:	46c0      	nop			@ (mov r8, r8)
 801376c:	ffffe000 	.word	0xffffe000

08013770 <__smakebuf_r>:
 8013770:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013772:	2602      	movs	r6, #2
 8013774:	898b      	ldrh	r3, [r1, #12]
 8013776:	0005      	movs	r5, r0
 8013778:	000c      	movs	r4, r1
 801377a:	b085      	sub	sp, #20
 801377c:	4233      	tst	r3, r6
 801377e:	d007      	beq.n	8013790 <__smakebuf_r+0x20>
 8013780:	0023      	movs	r3, r4
 8013782:	3347      	adds	r3, #71	@ 0x47
 8013784:	6023      	str	r3, [r4, #0]
 8013786:	6123      	str	r3, [r4, #16]
 8013788:	2301      	movs	r3, #1
 801378a:	6163      	str	r3, [r4, #20]
 801378c:	b005      	add	sp, #20
 801378e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013790:	ab03      	add	r3, sp, #12
 8013792:	aa02      	add	r2, sp, #8
 8013794:	f7ff ffc2 	bl	801371c <__swhatbuf_r>
 8013798:	9f02      	ldr	r7, [sp, #8]
 801379a:	9001      	str	r0, [sp, #4]
 801379c:	0039      	movs	r1, r7
 801379e:	0028      	movs	r0, r5
 80137a0:	f7ff f83a 	bl	8012818 <_malloc_r>
 80137a4:	2800      	cmp	r0, #0
 80137a6:	d108      	bne.n	80137ba <__smakebuf_r+0x4a>
 80137a8:	220c      	movs	r2, #12
 80137aa:	5ea3      	ldrsh	r3, [r4, r2]
 80137ac:	059a      	lsls	r2, r3, #22
 80137ae:	d4ed      	bmi.n	801378c <__smakebuf_r+0x1c>
 80137b0:	2203      	movs	r2, #3
 80137b2:	4393      	bics	r3, r2
 80137b4:	431e      	orrs	r6, r3
 80137b6:	81a6      	strh	r6, [r4, #12]
 80137b8:	e7e2      	b.n	8013780 <__smakebuf_r+0x10>
 80137ba:	2380      	movs	r3, #128	@ 0x80
 80137bc:	89a2      	ldrh	r2, [r4, #12]
 80137be:	6020      	str	r0, [r4, #0]
 80137c0:	4313      	orrs	r3, r2
 80137c2:	81a3      	strh	r3, [r4, #12]
 80137c4:	9b03      	ldr	r3, [sp, #12]
 80137c6:	6120      	str	r0, [r4, #16]
 80137c8:	6167      	str	r7, [r4, #20]
 80137ca:	2b00      	cmp	r3, #0
 80137cc:	d00c      	beq.n	80137e8 <__smakebuf_r+0x78>
 80137ce:	0028      	movs	r0, r5
 80137d0:	230e      	movs	r3, #14
 80137d2:	5ee1      	ldrsh	r1, [r4, r3]
 80137d4:	f000 f820 	bl	8013818 <_isatty_r>
 80137d8:	2800      	cmp	r0, #0
 80137da:	d005      	beq.n	80137e8 <__smakebuf_r+0x78>
 80137dc:	2303      	movs	r3, #3
 80137de:	89a2      	ldrh	r2, [r4, #12]
 80137e0:	439a      	bics	r2, r3
 80137e2:	3b02      	subs	r3, #2
 80137e4:	4313      	orrs	r3, r2
 80137e6:	81a3      	strh	r3, [r4, #12]
 80137e8:	89a3      	ldrh	r3, [r4, #12]
 80137ea:	9a01      	ldr	r2, [sp, #4]
 80137ec:	4313      	orrs	r3, r2
 80137ee:	81a3      	strh	r3, [r4, #12]
 80137f0:	e7cc      	b.n	801378c <__smakebuf_r+0x1c>
	...

080137f4 <_fstat_r>:
 80137f4:	2300      	movs	r3, #0
 80137f6:	b570      	push	{r4, r5, r6, lr}
 80137f8:	4d06      	ldr	r5, [pc, #24]	@ (8013814 <_fstat_r+0x20>)
 80137fa:	0004      	movs	r4, r0
 80137fc:	0008      	movs	r0, r1
 80137fe:	0011      	movs	r1, r2
 8013800:	602b      	str	r3, [r5, #0]
 8013802:	f7ee fcbe 	bl	8002182 <_fstat>
 8013806:	1c43      	adds	r3, r0, #1
 8013808:	d103      	bne.n	8013812 <_fstat_r+0x1e>
 801380a:	682b      	ldr	r3, [r5, #0]
 801380c:	2b00      	cmp	r3, #0
 801380e:	d000      	beq.n	8013812 <_fstat_r+0x1e>
 8013810:	6023      	str	r3, [r4, #0]
 8013812:	bd70      	pop	{r4, r5, r6, pc}
 8013814:	20003748 	.word	0x20003748

08013818 <_isatty_r>:
 8013818:	2300      	movs	r3, #0
 801381a:	b570      	push	{r4, r5, r6, lr}
 801381c:	4d06      	ldr	r5, [pc, #24]	@ (8013838 <_isatty_r+0x20>)
 801381e:	0004      	movs	r4, r0
 8013820:	0008      	movs	r0, r1
 8013822:	602b      	str	r3, [r5, #0]
 8013824:	f7ee fcb2 	bl	800218c <_isatty>
 8013828:	1c43      	adds	r3, r0, #1
 801382a:	d103      	bne.n	8013834 <_isatty_r+0x1c>
 801382c:	682b      	ldr	r3, [r5, #0]
 801382e:	2b00      	cmp	r3, #0
 8013830:	d000      	beq.n	8013834 <_isatty_r+0x1c>
 8013832:	6023      	str	r3, [r4, #0]
 8013834:	bd70      	pop	{r4, r5, r6, pc}
 8013836:	46c0      	nop			@ (mov r8, r8)
 8013838:	20003748 	.word	0x20003748

0801383c <_init>:
 801383c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801383e:	46c0      	nop			@ (mov r8, r8)
 8013840:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8013842:	bc08      	pop	{r3}
 8013844:	469e      	mov	lr, r3
 8013846:	4770      	bx	lr

08013848 <_fini>:
 8013848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801384a:	46c0      	nop			@ (mov r8, r8)
 801384c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801384e:	bc08      	pop	{r3}
 8013850:	469e      	mov	lr, r3
 8013852:	4770      	bx	lr
