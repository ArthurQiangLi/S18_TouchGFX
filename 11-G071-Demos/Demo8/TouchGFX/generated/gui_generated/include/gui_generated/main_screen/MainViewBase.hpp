/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/NumberAnimator.hpp>
#include <gui/containers/QRCodeAnimator.hpp>
#include <gui/containers/ImageAnimator.hpp>
#include <gui/containers/CircleAnimator.hpp>
#include <touchgfx/widgets/Image.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void selectActionHandler()
    {
        // Override and implement this function in Main
    }
    virtual void nextActionHandler()
    {
        // Override and implement this function in Main
    }
    virtual void updateDemoName()
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box circleCenter;
    NumberAnimator numberAnimator0;
    NumberAnimator numberAnimator1;
    QRCodeAnimator qrCodeAnimator;
    ImageAnimator imageAnimator;
    CircleAnimator circleAnimator;
    touchgfx::Image circleTop;
    touchgfx::Image circleBottom;
    touchgfx::Image circleLeft;
    touchgfx::Image circleRight;
    touchgfx::Image backgroundTop;
    touchgfx::Image backgroundBottom;
    touchgfx::Image selectText;
    touchgfx::Image nextIcon;
    touchgfx::Image demoNameText;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase> imageAnimatorImageIsOutCallback;

    /*
     * Callback Handler Declarations
     */
    void imageAnimatorImageIsOutCallbackHandler();

};

#endif // MAINVIEWBASE_HPP
