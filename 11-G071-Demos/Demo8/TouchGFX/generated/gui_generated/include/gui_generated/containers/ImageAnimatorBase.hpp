/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef IMAGEANIMATORBASE_HPP
#define IMAGEANIMATORBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>

class ImageAnimatorBase : public touchgfx::Container
{
public:
    ImageAnimatorBase();
    virtual ~ImageAnimatorBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setImageIsOutCallback(touchgfx::GenericCallback<>& callback)
    {
        this->imageIsOutCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitImageIsOutCallback()
    {
        if (imageIsOutCallback && imageIsOutCallback->isValid())
        {
            this->imageIsOutCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::FadeAnimator< touchgfx::MoveAnimator< touchgfx::Image > > image1;
    touchgfx::FadeAnimator< touchgfx::MoveAnimator< touchgfx::Image > > image3;
    touchgfx::FadeAnimator< touchgfx::MoveAnimator< touchgfx::Image > > image4;
    touchgfx::FadeAnimator< touchgfx::MoveAnimator< touchgfx::Image > > image2;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* imageIsOutCallback;

};

#endif // IMAGEANIMATORBASE_HPP
